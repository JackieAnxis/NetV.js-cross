(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./benchmarks/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./benchmarks/TestCase.js":
/*!********************************!*\
  !*** ./benchmarks/TestCase.js ***!
  \********************************/
/*! exports provided: TestCase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TestCase", function() { return TestCase; });
/* harmony import */ var _lib_stats_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/stats.module */ "./benchmarks/lib/stats.module.js");
/* harmony import */ var _lib_d3_v5_min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/d3.v5.min.js */ "./benchmarks/lib/d3.v5.min.js");
/* harmony import */ var _lib_d3_v5_min_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_d3_v5_min_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/utils */ "./benchmarks/lib/utils.js");
/* harmony import */ var _lib_linechart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/linechart */ "./benchmarks/lib/linechart.js");
/* harmony import */ var _lib_graphGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/graphGenerator */ "./benchmarks/lib/graphGenerator.js");
/**
 * @author Jiacheng Pan <panjiacheng@zju.edu.cn>
 * @description
 */







const STEP = 'step'

function sleep(time) {
    return new Promise((resolve) => {
        setTimeout(resolve, time)
    })
}

class TestCase {
    constructor({ width = 500, height = 500, numbersOfNodes, numbersOfLinks, name }) {
        // does it need to clear local storage?
        Object(_lib_utils__WEBPACK_IMPORTED_MODULE_2__["initPage"])()

        // fps stats panel
        this.stats = Object(_lib_stats_module__WEBPACK_IMPORTED_MODULE_0__["default"])()
        this.stats.showPanel(0)
        this.stats.dom.setAttribute('class', 'status')
        document.body.appendChild(this.stats.dom)

        // step means the index of numbersOfNodes
        this.step = localStorage.getItem(STEP)
        if (this.step === undefined || this.step === null) {
            this.step = 0
        } else {
            this.step = Number(this.step)
        }

        this.width = width
        this.height = height

        this.NsoNodes = numbersOfNodes
        this.NsoLinks = numbersOfLinks
        this.NoNodes = this.NsoNodes[this.step]
        this.NoLinks = this.NsoLinks[this.step]

        this.data = Object(_lib_graphGenerator__WEBPACK_IMPORTED_MODULE_4__["generateRandomGraph"])({
            nodeNum: this.NoNodes,
            linkNum: this.NoLinks,
            width,
            height
        })

        this.name = name

        this.container = document.createElement('div')
        this.container.setAttribute('style', `display: inline-block;`)
        document.body.appendChild(this.container)

        this.reportDiv = document.createElement('div')
        this.reportDiv.setAttribute('style', `display: inline-block; vertical-align: top;`)
        document.body.appendChild(this.reportDiv)

        this.title = document.createElement('h3')
        this.title.textContent = `${name}, #nodes: ${this.NoNodes}, #edge: ${this.NoLinks}`
        this.reportDiv.appendChild(this.title)

        this.localStorageName = this.name + '_benchmark_result'
        this.testResult = localStorage.getItem(this.localStorageName)
    }

    async run(update, duration) {
        console.log(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_2__["getFrameRate"])())
        const refresh = () => {
            this.stats.begin()
            update()
            this.stats.end()
            requestAnimationFrame(refresh)
        }
        refresh(update)
        await sleep(duration)
        const FPSHistory = this.stats.getFPSHistory()
        this.FPS = _lib_d3_v5_min_js__WEBPACK_IMPORTED_MODULE_1__["mean"](FPSHistory)
        this.storeFPSResult()
        return this.FPS
    }

    storeFPSResult() {
        if (!this.testResult) {
            this.testResult = []
        } else {
            this.testResult = JSON.parse(this.testResult)
        }
        this.testResult.push({
            size: this.NoNodes, // + this.NoLinks,
            value: this.FPS
        })
        localStorage.setItem(this.localStorageName, JSON.stringify(this.testResult))
        console.log(this.testResult)
    }

    finish() {
        localStorage.setItem(STEP, (this.step + 1).toString())

        const canvas = this.container.querySelector('canvas')
        if (canvas)
            canvas
                .getContext('webgl2')
                .getExtension('WEBGL_lose_context')
                .loseContext()
        Array.from(this.container.children).forEach((child) =>
            this.container.removeChild.bind(this.container)(child)
        )

        if (this.step + 1 < this.NsoNodes.length) {
            Object(_lib_utils__WEBPACK_IMPORTED_MODULE_2__["reloadPage"])()
        } else {
            Object(_lib_linechart__WEBPACK_IMPORTED_MODULE_3__["drawLineChart"])(this.reportDiv, this.testResult)
            localStorage.clear()
        }
    }
}


/***/ }),

/***/ "./benchmarks/index.js":
/*!*****************************!*\
  !*** ./benchmarks/index.js ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _build_NetV__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../build/NetV */ "./build/NetV.js");
/* harmony import */ var _build_NetV__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_build_NetV__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/utils */ "./benchmarks/lib/utils.js");
/* harmony import */ var _TestCase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TestCase */ "./benchmarks/TestCase.js");
/**
 * @author Xiaodong Zhao<zhaoxiaodong@zju.edu.cn> and Jiacheng Pan <panjiacheng@zju.edu.cn>
 * @description benchmark, FPS of NetV.js
 */




const numbersOfNodes = [1e2, 5e2, 1e3].reverse() // , 2e3, 4e3, 8e3
const density = 20

if (Object(_lib_utils__WEBPACK_IMPORTED_MODULE_1__["isFirstTime"])()) {
    Object(_lib_utils__WEBPACK_IMPORTED_MODULE_1__["initPage"])() // to get the frame rate (fps)
} else {
    const testCase = new _TestCase__WEBPACK_IMPORTED_MODULE_2__["TestCase"]({
        numbersOfNodes,
        numbersOfLinks: numbersOfNodes.map((n) => n * density),
        name: 'NetV'
    })
    test(testCase)
}

async function test(testCase) {
    const netv = new _build_NetV__WEBPACK_IMPORTED_MODULE_0__["NetV"]({
        container: testCase.container,
        width: testCase.width,
        height: testCase.height,
        nodeLimit: testCase.data.nodes.length,
        linkLimit: testCase.data.links.length
    })

    netv.data(testCase.data)

    await testCase.run(() => {
        netv.nodes().forEach((n) => {
            n.position({
                x: Math.random() * testCase.width,
                y: Math.random() * testCase.height
            })
        })
        netv.draw()
    }, 10000)

    testCase.finish()
}


/***/ }),

/***/ "./benchmarks/lib/d3.v5.min.js":
/*!*************************************!*\
  !*** ./benchmarks/lib/d3.v5.min.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://d3js.org v5.16.0 Copyright 2020 Mike Bostock
!function(t,n){ true?n(exports):undefined}(this,function(t){"use strict";function n(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function e(t){var e;return 1===t.length&&(e=t,t=function(t,r){return n(e(t),r)}),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}}var r=e(n),i=r.right,o=r.left;function a(t,n){return[t,n]}function u(t){return null===t?NaN:+t}function c(t,n){var e,r,i=t.length,o=0,a=-1,c=0,f=0;if(null==n)for(;++a<i;)isNaN(e=u(t[a]))||(f+=(r=e-c)*(e-(c+=r/++o)));else for(;++a<i;)isNaN(e=u(n(t[a],a,t)))||(f+=(r=e-c)*(e-(c+=r/++o)));if(o>1)return f/(o-1)}function f(t,n){var e=c(t,n);return e?Math.sqrt(e):e}function s(t,n){var e,r,i,o=t.length,a=-1;if(null==n){for(;++a<o;)if(null!=(e=t[a])&&e>=e)for(r=i=e;++a<o;)null!=(e=t[a])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++a<o;)if(null!=(e=n(t[a],a,t))&&e>=e)for(r=i=e;++a<o;)null!=(e=n(t[a],a,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]}var l=Array.prototype,h=l.slice,d=l.map;function p(t){return function(){return t}}function v(t){return t}function g(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o}var y=Math.sqrt(50),_=Math.sqrt(10),b=Math.sqrt(2);function m(t,n,e){var r,i,o,a,u=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(a=x(t,n,e))||!isFinite(a))return[];if(a>0)for(t=Math.ceil(t/a),n=Math.floor(n/a),o=new Array(i=Math.ceil(n-t+1));++u<i;)o[u]=(t+u)*a;else for(t=Math.floor(t*a),n=Math.ceil(n*a),o=new Array(i=Math.ceil(t-n+1));++u<i;)o[u]=(t-u)/a;return r&&o.reverse(),o}function x(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=y?10:o>=_?5:o>=b?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=y?10:o>=_?5:o>=b?2:1)}function w(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=y?i*=10:o>=_?i*=5:o>=b&&(i*=2),n<t?-i:i}function M(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1}function N(t,n,e){if(null==e&&(e=u),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,o=Math.floor(i),a=+e(t[o],o,t);return a+(+e(t[o+1],o+1,t)-a)*(i-o)}}function T(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&e>r&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&e>r&&(r=e);return r}function A(t){for(var n,e,r,i=t.length,o=-1,a=0;++o<i;)a+=t[o].length;for(e=new Array(a);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--a]=r[n];return e}function S(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&r>e&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&r>e&&(r=e);return r}function k(t){if(!(i=t.length))return[];for(var n=-1,e=S(t,E),r=new Array(e);++n<e;)for(var i,o=-1,a=r[n]=new Array(i);++o<i;)a[o]=t[o][n];return r}function E(t){return t.length}var C=Array.prototype.slice;function P(t){return t}var z=1,R=2,D=3,q=4,L=1e-6;function U(t){return"translate("+(t+.5)+",0)"}function O(t){return"translate(0,"+(t+.5)+")"}function B(){return!this.__axis}function F(t,n){var e=[],r=null,i=null,o=6,a=6,u=3,c=t===z||t===q?-1:1,f=t===q||t===R?"x":"y",s=t===z||t===D?U:O;function l(l){var h=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,d=null==i?n.tickFormat?n.tickFormat.apply(n,e):P:i,p=Math.max(o,0)+u,v=n.range(),g=+v[0]+.5,y=+v[v.length-1]+.5,_=(n.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(n.copy()),b=l.selection?l.selection():l,m=b.selectAll(".domain").data([null]),x=b.selectAll(".tick").data(h,n).order(),w=x.exit(),M=x.enter().append("g").attr("class","tick"),N=x.select("line"),T=x.select("text");m=m.merge(m.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),x=x.merge(M),N=N.merge(M.append("line").attr("stroke","currentColor").attr(f+"2",c*o)),T=T.merge(M.append("text").attr("fill","currentColor").attr(f,c*p).attr("dy",t===z?"0em":t===D?"0.71em":"0.32em")),l!==b&&(m=m.transition(l),x=x.transition(l),N=N.transition(l),T=T.transition(l),w=w.transition(l).attr("opacity",L).attr("transform",function(t){return isFinite(t=_(t))?s(t):this.getAttribute("transform")}),M.attr("opacity",L).attr("transform",function(t){var n=this.parentNode.__axis;return s(n&&isFinite(n=n(t))?n:_(t))})),w.remove(),m.attr("d",t===q||t==R?a?"M"+c*a+","+g+"H0.5V"+y+"H"+c*a:"M0.5,"+g+"V"+y:a?"M"+g+","+c*a+"V0.5H"+y+"V"+c*a:"M"+g+",0.5H"+y),x.attr("opacity",1).attr("transform",function(t){return s(_(t))}),N.attr(f+"2",c*o),T.attr(f,c*p).text(d),b.filter(B).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===R?"start":t===q?"end":"middle"),b.each(function(){this.__axis=_})}return l.scale=function(t){return arguments.length?(n=t,l):n},l.ticks=function(){return e=C.call(arguments),l},l.tickArguments=function(t){return arguments.length?(e=null==t?[]:C.call(t),l):e.slice()},l.tickValues=function(t){return arguments.length?(r=null==t?null:C.call(t),l):r&&r.slice()},l.tickFormat=function(t){return arguments.length?(i=t,l):i},l.tickSize=function(t){return arguments.length?(o=a=+t,l):o},l.tickSizeInner=function(t){return arguments.length?(o=+t,l):o},l.tickSizeOuter=function(t){return arguments.length?(a=+t,l):a},l.tickPadding=function(t){return arguments.length?(u=+t,l):u},l}var Y={value:function(){}};function I(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new H(r)}function H(t){this._=t}function j(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}function X(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function V(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=Y,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}H.prototype=I.prototype={constructor:H,on:function(t,n){var e,r=this._,i=j(t+"",r),o=-1,a=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<a;)if(e=(t=i[o]).type)r[e]=V(r[e],t.name,n);else if(null==n)for(e in r)r[e]=V(r[e],t.name,null);return this}for(;++o<a;)if((e=(t=i[o]).type)&&(e=X(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new H(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var G="http://www.w3.org/1999/xhtml",$={svg:"http://www.w3.org/2000/svg",xhtml:G,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function W(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),$.hasOwnProperty(n)?{space:$[n],local:t}:t}function Z(t){var n=W(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===G&&n.documentElement.namespaceURI===G?n.createElement(t):n.createElementNS(e,t)}})(n)}function Q(){}function K(t){return null==t?Q:function(){return this.querySelector(t)}}function J(){return[]}function tt(t){return null==t?J:function(){return this.querySelectorAll(t)}}function nt(t){return function(){return this.matches(t)}}function et(t){return new Array(t.length)}function rt(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}rt.prototype={constructor:rt,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var it="$";function ot(t,n,e,r,i,o){for(var a,u=0,c=n.length,f=o.length;u<f;++u)(a=n[u])?(a.__data__=o[u],r[u]=a):e[u]=new rt(t,o[u]);for(;u<c;++u)(a=n[u])&&(i[u]=a)}function at(t,n,e,r,i,o,a){var u,c,f,s={},l=n.length,h=o.length,d=new Array(l);for(u=0;u<l;++u)(c=n[u])&&(d[u]=f=it+a.call(c,c.__data__,u,n),f in s?i[u]=c:s[f]=c);for(u=0;u<h;++u)(c=s[f=it+a.call(t,o[u],u,o)])?(r[u]=c,c.__data__=o[u],s[f]=null):e[u]=new rt(t,o[u]);for(u=0;u<l;++u)(c=n[u])&&s[d[u]]===c&&(i[u]=c)}function ut(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function ct(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function ft(t,n){return t.style.getPropertyValue(n)||ct(t).getComputedStyle(t,null).getPropertyValue(n)}function st(t){return t.trim().split(/^|\s+/)}function lt(t){return t.classList||new ht(t)}function ht(t){this._node=t,this._names=st(t.getAttribute("class")||"")}function dt(t,n){for(var e=lt(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function pt(t,n){for(var e=lt(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function vt(){this.textContent=""}function gt(){this.innerHTML=""}function yt(){this.nextSibling&&this.parentNode.appendChild(this)}function _t(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function bt(){return null}function mt(){var t=this.parentNode;t&&t.removeChild(this)}function xt(){var t=this.cloneNode(!1),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function wt(){var t=this.cloneNode(!0),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}ht.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var Mt={};(t.event=null,"undefined"!=typeof document)&&("onmouseenter"in document.documentElement||(Mt={mouseenter:"mouseover",mouseleave:"mouseout"}));function Nt(t,n,e){return t=Tt(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function Tt(n,e,r){return function(i){var o=t.event;t.event=i;try{n.call(this,this.__data__,e,r)}finally{t.event=o}}}function At(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function St(t,n,e){var r=Mt.hasOwnProperty(t.type)?Nt:Tt;return function(i,o,a){var u,c=this.__on,f=r(n,o,a);if(c)for(var s=0,l=c.length;s<l;++s)if((u=c[s]).type===t.type&&u.name===t.name)return this.removeEventListener(u.type,u.listener,u.capture),this.addEventListener(u.type,u.listener=f,u.capture=e),void(u.value=n);this.addEventListener(t.type,f,e),u={type:t.type,name:t.name,value:n,listener:f,capture:e},c?c.push(u):this.__on=[u]}}function kt(n,e,r,i){var o=t.event;n.sourceEvent=t.event,t.event=n;try{return e.apply(r,i)}finally{t.event=o}}function Et(t,n,e){var r=ct(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var Ct=[null];function Pt(t,n){this._groups=t,this._parents=n}function zt(){return new Pt([[document.documentElement]],Ct)}function Rt(t){return"string"==typeof t?new Pt([[document.querySelector(t)]],[document.documentElement]):new Pt([[t]],Ct)}Pt.prototype=zt.prototype={constructor:Pt,select:function(t){"function"!=typeof t&&(t=K(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a,u=n[i],c=u.length,f=r[i]=new Array(c),s=0;s<c;++s)(o=u[s])&&(a=t.call(o,o.__data__,s,u))&&("__data__"in o&&(a.__data__=o.__data__),f[s]=a);return new Pt(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=tt(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var a,u=n[o],c=u.length,f=0;f<c;++f)(a=u[f])&&(r.push(t.call(a,a.__data__,f,u)),i.push(a));return new Pt(r,i)},filter:function(t){"function"!=typeof t&&(t=nt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,c=r[i]=[],f=0;f<u;++f)(o=a[f])&&t.call(o,o.__data__,f,a)&&c.push(o);return new Pt(r,this._parents)},data:function(t,n){if(!t)return d=new Array(this.size()),f=-1,this.each(function(t){d[++f]=t}),d;var e=n?at:ot,r=this._parents,i=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var o=i.length,a=new Array(o),u=new Array(o),c=new Array(o),f=0;f<o;++f){var s=r[f],l=i[f],h=l.length,d=t.call(s,s&&s.__data__,f,r),p=d.length,v=u[f]=new Array(p),g=a[f]=new Array(p);e(s,l,v,g,c[f]=new Array(h),d,n);for(var y,_,b=0,m=0;b<p;++b)if(y=v[b]){for(b>=m&&(m=b+1);!(_=g[m])&&++m<p;);y._next=_||null}}return(a=new Pt(a,r))._enter=u,a._exit=c,a},enter:function(){return new Pt(this._enter||this._groups.map(et),this._parents)},exit:function(){return new Pt(this._exit||this._groups.map(et),this._parents)},join:function(t,n,e){var r=this.enter(),i=this,o=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=n&&(i=n(i)),null==e?o.remove():e(o),r&&i?r.merge(i).order():i},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var c,f=n[u],s=e[u],l=f.length,h=a[u]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;u<r;++u)a[u]=n[u];return new Pt(a,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,a=i[o];--o>=0;)(r=i[o])&&(a&&4^r.compareDocumentPosition(a)&&a.parentNode.insertBefore(r,a),a=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=ut);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var a,u=e[o],c=u.length,f=i[o]=new Array(c),s=0;s<c;++s)(a=u[s])&&(f[s]=a);f.sort(n)}return new Pt(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var a=r[i];if(a)return a}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],a=0,u=o.length;a<u;++a)(i=o[a])&&t.call(i,i.__data__,a,o);return this},attr:function(t,n){var e=W(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):ft(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=st(t+"");if(arguments.length<2){for(var r=lt(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?dt:pt)(this,t)}}:n?function(t){return function(){dt(this,t)}}:function(t){return function(){pt(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?vt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?gt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(yt)},lower:function(){return this.each(_t)},append:function(t){var n="function"==typeof t?t:Z(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:Z(t),r=null==n?bt:"function"==typeof n?n:K(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(mt)},clone:function(t){return this.select(t?wt:xt)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),a=o.length;if(!(arguments.length<2)){for(u=n?St:At,null==e&&(e=!1),r=0;r<a;++r)this.each(u(o[r],n,e));return this}var u=this.node().__on;if(u)for(var c,f=0,s=u.length;f<s;++f)for(r=0,c=u[f];r<a;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return Et(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return Et(this,t,n)}})(t,n))}};var Dt=0;function qt(){return new Lt}function Lt(){this._="@"+(++Dt).toString(36)}function Ut(){for(var n,e=t.event;n=e.sourceEvent;)e=n;return e}function Ot(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]}function Bt(t){var n=Ut();return n.changedTouches&&(n=n.changedTouches[0]),Ot(t,n)}function Ft(t,n,e){arguments.length<3&&(e=n,n=Ut().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===e)return Ot(t,r);return null}function Yt(){t.event.stopImmediatePropagation()}function It(){t.event.preventDefault(),t.event.stopImmediatePropagation()}function Ht(t){var n=t.document.documentElement,e=Rt(t).on("dragstart.drag",It,!0);"onselectstart"in n?e.on("selectstart.drag",It,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")}function jt(t,n){var e=t.document.documentElement,r=Rt(t).on("dragstart.drag",null);n&&(r.on("click.drag",It,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}function Xt(t){return function(){return t}}function Vt(t,n,e,r,i,o,a,u,c,f){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=o,this.y=a,this.dx=u,this.dy=c,this._=f}function Gt(){return!t.event.ctrlKey&&!t.event.button}function $t(){return this.parentNode}function Wt(n){return null==n?{x:t.event.x,y:t.event.y}:n}function Zt(){return navigator.maxTouchPoints||"ontouchstart"in this}function Qt(t,n,e){t.prototype=n.prototype=e,e.constructor=t}function Kt(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Jt(){}Lt.prototype=qt.prototype={constructor:Lt,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}},Vt.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var tn="\\s*([+-]?\\d+)\\s*",nn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",en="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",rn=/^#([0-9a-f]{3,8})$/,on=new RegExp("^rgb\\("+[tn,tn,tn]+"\\)$"),an=new RegExp("^rgb\\("+[en,en,en]+"\\)$"),un=new RegExp("^rgba\\("+[tn,tn,tn,nn]+"\\)$"),cn=new RegExp("^rgba\\("+[en,en,en,nn]+"\\)$"),fn=new RegExp("^hsl\\("+[nn,en,en]+"\\)$"),sn=new RegExp("^hsla\\("+[nn,en,en,nn]+"\\)$"),ln={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function hn(){return this.rgb().formatHex()}function dn(){return this.rgb().formatRgb()}function pn(t){var n,e;return t=(t+"").trim().toLowerCase(),(n=rn.exec(t))?(e=n[1].length,n=parseInt(n[1],16),6===e?vn(n):3===e?new bn(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):8===e?gn(n>>24&255,n>>16&255,n>>8&255,(255&n)/255):4===e?gn(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|240&n,((15&n)<<4|15&n)/255):null):(n=on.exec(t))?new bn(n[1],n[2],n[3],1):(n=an.exec(t))?new bn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=un.exec(t))?gn(n[1],n[2],n[3],n[4]):(n=cn.exec(t))?gn(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=fn.exec(t))?Mn(n[1],n[2]/100,n[3]/100,1):(n=sn.exec(t))?Mn(n[1],n[2]/100,n[3]/100,n[4]):ln.hasOwnProperty(t)?vn(ln[t]):"transparent"===t?new bn(NaN,NaN,NaN,0):null}function vn(t){return new bn(t>>16&255,t>>8&255,255&t,1)}function gn(t,n,e,r){return r<=0&&(t=n=e=NaN),new bn(t,n,e,r)}function yn(t){return t instanceof Jt||(t=pn(t)),t?new bn((t=t.rgb()).r,t.g,t.b,t.opacity):new bn}function _n(t,n,e,r){return 1===arguments.length?yn(t):new bn(t,n,e,null==r?1:r)}function bn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function mn(){return"#"+wn(this.r)+wn(this.g)+wn(this.b)}function xn(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function wn(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Mn(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new An(t,n,e,r)}function Nn(t){if(t instanceof An)return new An(t.h,t.s,t.l,t.opacity);if(t instanceof Jt||(t=pn(t)),!t)return new An;if(t instanceof An)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),a=NaN,u=o-i,c=(o+i)/2;return u?(a=n===o?(e-r)/u+6*(e<r):e===o?(r-n)/u+2:(n-e)/u+4,u/=c<.5?o+i:2-o-i,a*=60):u=c>0&&c<1?0:a,new An(a,u,c,t.opacity)}function Tn(t,n,e,r){return 1===arguments.length?Nn(t):new An(t,n,e,null==r?1:r)}function An(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Sn(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Qt(Jt,pn,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:hn,formatHex:hn,formatHsl:function(){return Nn(this).formatHsl()},formatRgb:dn,toString:dn}),Qt(bn,_n,Kt(Jt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new bn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new bn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:mn,formatHex:mn,formatRgb:xn,toString:xn})),Qt(An,Tn,Kt(Jt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new An(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new An(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new bn(Sn(t>=240?t-240:t+120,i,r),Sn(t,i,r),Sn(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}));var kn=Math.PI/180,En=180/Math.PI,Cn=.96422,Pn=1,zn=.82521,Rn=4/29,Dn=6/29,qn=3*Dn*Dn,Ln=Dn*Dn*Dn;function Un(t){if(t instanceof Bn)return new Bn(t.l,t.a,t.b,t.opacity);if(t instanceof Vn)return Gn(t);t instanceof bn||(t=yn(t));var n,e,r=Hn(t.r),i=Hn(t.g),o=Hn(t.b),a=Fn((.2225045*r+.7168786*i+.0606169*o)/Pn);return r===i&&i===o?n=e=a:(n=Fn((.4360747*r+.3850649*i+.1430804*o)/Cn),e=Fn((.0139322*r+.0971045*i+.7141733*o)/zn)),new Bn(116*a-16,500*(n-a),200*(a-e),t.opacity)}function On(t,n,e,r){return 1===arguments.length?Un(t):new Bn(t,n,e,null==r?1:r)}function Bn(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function Fn(t){return t>Ln?Math.pow(t,1/3):t/qn+Rn}function Yn(t){return t>Dn?t*t*t:qn*(t-Rn)}function In(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function Hn(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function jn(t){if(t instanceof Vn)return new Vn(t.h,t.c,t.l,t.opacity);if(t instanceof Bn||(t=Un(t)),0===t.a&&0===t.b)return new Vn(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*En;return new Vn(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function Xn(t,n,e,r){return 1===arguments.length?jn(t):new Vn(t,n,e,null==r?1:r)}function Vn(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}function Gn(t){if(isNaN(t.h))return new Bn(t.l,0,0,t.opacity);var n=t.h*kn;return new Bn(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}Qt(Bn,On,Kt(Jt,{brighter:function(t){return new Bn(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new Bn(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new bn(In(3.1338561*(n=Cn*Yn(n))-1.6168667*(t=Pn*Yn(t))-.4906146*(e=zn*Yn(e))),In(-.9787684*n+1.9161415*t+.033454*e),In(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Qt(Vn,Xn,Kt(Jt,{brighter:function(t){return new Vn(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new Vn(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return Gn(this).rgb()}}));var $n=-.14861,Wn=1.78277,Zn=-.29227,Qn=-.90649,Kn=1.97294,Jn=Kn*Qn,te=Kn*Wn,ne=Wn*Zn-Qn*$n;function ee(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof re)return new re(t.h,t.s,t.l,t.opacity);t instanceof bn||(t=yn(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(ne*r+Jn*n-te*e)/(ne+Jn-te),o=r-i,a=(Kn*(e-i)-Zn*o)/Qn,u=Math.sqrt(a*a+o*o)/(Kn*i*(1-i)),c=u?Math.atan2(a,o)*En-120:NaN;return new re(c<0?c+360:c,u,i,t.opacity)}(t):new re(t,n,e,null==r?1:r)}function re(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function ie(t,n,e,r,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*n+(4-6*o+3*a)*e+(1+3*t+3*o-3*a)*r+a*i)/6}function oe(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],a=r>0?t[r-1]:2*i-o,u=r<n-1?t[r+2]:2*o-i;return ie((e-r/n)*n,a,i,o,u)}}function ae(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],a=t[(r+1)%n],u=t[(r+2)%n];return ie((e-r/n)*n,i,o,a,u)}}function ue(t){return function(){return t}}function ce(t,n){return function(e){return t+e*n}}function fe(t,n){var e=n-t;return e?ce(t,e>180||e<-180?e-360*Math.round(e/360):e):ue(isNaN(t)?n:t)}function se(t){return 1==(t=+t)?le:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):ue(isNaN(n)?e:n)}}function le(t,n){var e=n-t;return e?ce(t,e):ue(isNaN(t)?n:t)}Qt(re,ee,Kt(Jt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new re(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new re(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*kn,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new bn(255*(n+e*($n*r+Wn*i)),255*(n+e*(Zn*r+Qn*i)),255*(n+e*(Kn*r)),this.opacity)}}));var he=function t(n){var e=se(n);function r(t,n){var r=e((t=_n(t)).r,(n=_n(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),a=le(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=a(n),t+""}}return r.gamma=t,r}(1);function de(t){return function(n){var e,r,i=n.length,o=new Array(i),a=new Array(i),u=new Array(i);for(e=0;e<i;++e)r=_n(n[e]),o[e]=r.r||0,a[e]=r.g||0,u[e]=r.b||0;return o=t(o),a=t(a),u=t(u),r.opacity=1,function(t){return r.r=o(t),r.g=a(t),r.b=u(t),r+""}}}var pe=de(oe),ve=de(ae);function ge(t,n){n||(n=[]);var e,r=t?Math.min(n.length,t.length):0,i=n.slice();return function(o){for(e=0;e<r;++e)i[e]=t[e]*(1-o)+n[e]*o;return i}}function ye(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function _e(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),a=new Array(r);for(e=0;e<i;++e)o[e]=Te(t[e],n[e]);for(;e<r;++e)a[e]=n[e];return function(t){for(e=0;e<i;++e)a[e]=o[e](t);return a}}function be(t,n){var e=new Date;return t=+t,n=+n,function(r){return e.setTime(t*(1-r)+n*r),e}}function me(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}}function xe(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=Te(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}var we=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Me=new RegExp(we.source,"g");function Ne(t,n){var e,r,i,o=we.lastIndex=Me.lastIndex=0,a=-1,u=[],c=[];for(t+="",n+="";(e=we.exec(t))&&(r=Me.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),u[a]?u[a]+=i:u[++a]=i),(e=e[0])===(r=r[0])?u[a]?u[a]+=r:u[++a]=r:(u[++a]=null,c.push({i:a,x:me(e,r)})),o=Me.lastIndex;return o<n.length&&(i=n.slice(o),u[a]?u[a]+=i:u[++a]=i),u.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)u[(e=c[r]).i]=e.x(t);return u.join("")})}function Te(t,n){var e,r=typeof n;return null==n||"boolean"===r?ue(n):("number"===r?me:"string"===r?(e=pn(n))?(n=e,he):Ne:n instanceof pn?he:n instanceof Date?be:ye(n)?ge:Array.isArray(n)?_e:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?xe:me)(t,n)}function Ae(t,n){return t=+t,n=+n,function(e){return Math.round(t*(1-e)+n*e)}}var Se,ke,Ee,Ce,Pe=180/Math.PI,ze={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Re(t,n,e,r,i,o){var a,u,c;return(a=Math.sqrt(t*t+n*n))&&(t/=a,n/=a),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(u=Math.sqrt(e*e+r*r))&&(e/=u,r/=u,c/=u),t*r<n*e&&(t=-t,n=-n,c=-c,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*Pe,skewX:Math.atan(c)*Pe,scaleX:a,scaleY:u}}function De(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,a){var u=[],c=[];return o=t(o),a=t(a),function(t,r,i,o,a,u){if(t!==i||r!==o){var c=a.push("translate(",null,n,null,e);u.push({i:c-4,x:me(t,i)},{i:c-2,x:me(r,o)})}else(i||o)&&a.push("translate("+i+n+o+e)}(o.translateX,o.translateY,a.translateX,a.translateY,u,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:me(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,a.rotate,u,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:me(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,a.skewX,u,c),function(t,n,e,r,o,a){if(t!==e||n!==r){var u=o.push(i(o)+"scale(",null,",",null,")");a.push({i:u-4,x:me(t,e)},{i:u-2,x:me(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,a.scaleX,a.scaleY,u,c),o=a=null,function(t){for(var n,e=-1,r=c.length;++e<r;)u[(n=c[e]).i]=n.x(t);return u.join("")}}}var qe=De(function(t){return"none"===t?ze:(Se||(Se=document.createElement("DIV"),ke=document.documentElement,Ee=document.defaultView),Se.style.transform=t,t=Ee.getComputedStyle(ke.appendChild(Se),null).getPropertyValue("transform"),ke.removeChild(Se),Re(+(t=t.slice(7,-1).split(","))[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),Le=De(function(t){return null==t?ze:(Ce||(Ce=document.createElementNS("http://www.w3.org/2000/svg","g")),Ce.setAttribute("transform",t),(t=Ce.transform.baseVal.consolidate())?Re((t=t.matrix).a,t.b,t.c,t.d,t.e,t.f):ze)},", ",")",")"),Ue=Math.SQRT2,Oe=2,Be=4,Fe=1e-12;function Ye(t){return((t=Math.exp(t))+1/t)/2}function Ie(t,n){var e,r,i=t[0],o=t[1],a=t[2],u=n[0],c=n[1],f=n[2],s=u-i,l=c-o,h=s*s+l*l;if(h<Fe)r=Math.log(f/a)/Ue,e=function(t){return[i+t*s,o+t*l,a*Math.exp(Ue*t*r)]};else{var d=Math.sqrt(h),p=(f*f-a*a+Be*h)/(2*a*Oe*d),v=(f*f-a*a-Be*h)/(2*f*Oe*d),g=Math.log(Math.sqrt(p*p+1)-p),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-g)/Ue,e=function(t){var n=t*r,e=Ye(g),u=a/(Oe*d)*(e*function(t){return((t=Math.exp(2*t))-1)/(t+1)}(Ue*n+g)-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[i+u*s,o+u*l,a*e/Ye(Ue*n+g)]}}return e.duration=1e3*r,e}function He(t){return function(n,e){var r=t((n=Tn(n)).h,(e=Tn(e)).h),i=le(n.s,e.s),o=le(n.l,e.l),a=le(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=a(t),n+""}}}var je=He(fe),Xe=He(le);function Ve(t){return function(n,e){var r=t((n=Xn(n)).h,(e=Xn(e)).h),i=le(n.c,e.c),o=le(n.l,e.l),a=le(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=a(t),n+""}}}var Ge=Ve(fe),$e=Ve(le);function We(t){return function n(e){function r(n,r){var i=t((n=ee(n)).h,(r=ee(r)).h),o=le(n.s,r.s),a=le(n.l,r.l),u=le(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=a(Math.pow(t,e)),n.opacity=u(t),n+""}}return e=+e,r.gamma=n,r}(1)}var Ze=We(fe),Qe=We(le);var Ke,Je,tr=0,nr=0,er=0,rr=1e3,ir=0,or=0,ar=0,ur="object"==typeof performance&&performance.now?performance:Date,cr="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function fr(){return or||(cr(sr),or=ur.now()+ar)}function sr(){or=0}function lr(){this._call=this._time=this._next=null}function hr(t,n,e){var r=new lr;return r.restart(t,n,e),r}function dr(){fr(),++tr;for(var t,n=Ke;n;)(t=or-n._time)>=0&&n._call.call(null,t),n=n._next;--tr}function pr(){or=(ir=ur.now())+ar,tr=nr=0;try{dr()}finally{tr=0,function(){var t,n,e=Ke,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Ke=n);Je=t,gr(r)}(),or=0}}function vr(){var t=ur.now(),n=t-ir;n>rr&&(ar-=n,ir=t)}function gr(t){tr||(nr&&(nr=clearTimeout(nr)),t-or>24?(t<1/0&&(nr=setTimeout(pr,t-ur.now()-ar)),er&&(er=clearInterval(er))):(er||(ir=ur.now(),er=setInterval(vr,rr)),tr=1,cr(pr)))}function yr(t,n,e){var r=new lr;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r}lr.prototype=hr.prototype={constructor:lr,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?fr():+e)+(null==n?0:+n),this._next||Je===this||(Je?Je._next=this:Ke=this,Je=this),this._call=t,this._time=e,gr()},stop:function(){this._call&&(this._call=null,this._time=1/0,gr())}};var _r=I("start","end","cancel","interrupt"),br=[],mr=0,xr=1,wr=2,Mr=3,Nr=4,Tr=5,Ar=6;function Sr(t,n,e,r,i,o){var a=t.__transition;if(a){if(e in a)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(c){var f,s,l,h;if(e.state!==xr)return u();for(f in i)if((h=i[f]).name===e.name){if(h.state===Mr)return yr(o);h.state===Nr?(h.state=Ar,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[f]):+f<n&&(h.state=Ar,h.timer.stop(),h.on.call("cancel",t,t.__data__,h.index,h.group),delete i[f])}if(yr(function(){e.state===Mr&&(e.state=Nr,e.timer.restart(a,e.delay,e.time),a(c))}),e.state=wr,e.on.call("start",t,t.__data__,e.index,e.group),e.state===wr){for(e.state=Mr,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function a(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(u),e.state=Tr,1),o=-1,a=r.length;++o<a;)r[o].call(t,i);e.state===Tr&&(e.on.call("end",t,t.__data__,e.index,e.group),u())}function u(){for(var r in e.state=Ar,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=hr(function(t){e.state=xr,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:_r,tween:br,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:mr})}function kr(t,n){var e=Cr(t,n);if(e.state>mr)throw new Error("too late; already scheduled");return e}function Er(t,n){var e=Cr(t,n);if(e.state>Mr)throw new Error("too late; already running");return e}function Cr(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}function Pr(t,n){var e,r,i,o=t.__transition,a=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>wr&&e.state<Tr,e.state=Ar,e.timer.stop(),e.on.call(r?"interrupt":"cancel",t,t.__data__,e.index,e.group),delete o[i]):a=!1;a&&delete t.__transition}}function zr(t,n,e){var r=t._id;return t.each(function(){var t=Er(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return Cr(t,r).value[n]}}function Rr(t,n){var e;return("number"==typeof n?me:n instanceof pn?he:(e=pn(n))?(n=e,he):Ne)(t,n)}var Dr=zt.prototype.constructor;function qr(t){return function(){this.style.removeProperty(t)}}var Lr=0;function Ur(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function Or(t){return zt().transition(t)}function Br(){return++Lr}var Fr=zt.prototype;function Yr(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function Ir(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}Ur.prototype=Or.prototype={constructor:Ur,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=K(t));for(var r=this._groups,i=r.length,o=new Array(i),a=0;a<i;++a)for(var u,c,f=r[a],s=f.length,l=o[a]=new Array(s),h=0;h<s;++h)(u=f[h])&&(c=t.call(u,u.__data__,h,f))&&("__data__"in u&&(c.__data__=u.__data__),l[h]=c,Sr(l[h],n,e,h,l,Cr(u,e)));return new Ur(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=tt(t));for(var r=this._groups,i=r.length,o=[],a=[],u=0;u<i;++u)for(var c,f=r[u],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=t.call(c,c.__data__,l,f),p=Cr(c,e),v=0,g=d.length;v<g;++v)(h=d[v])&&Sr(h,n,e,v,d,p);o.push(d),a.push(c)}return new Ur(o,a,n,e)},filter:function(t){"function"!=typeof t&&(t=nt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,c=r[i]=[],f=0;f<u;++f)(o=a[f])&&t.call(o,o.__data__,f,a)&&c.push(o);return new Ur(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var c,f=n[u],s=e[u],l=f.length,h=a[u]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;u<r;++u)a[u]=n[u];return new Ur(a,this._parents,this._name,this._id)},selection:function(){return new Dr(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=Br(),r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],c=u.length,f=0;f<c;++f)if(a=u[f]){var s=Cr(a,n);Sr(a,t,e,f,u,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new Ur(r,this._parents,t,e)},call:Fr.call,nodes:Fr.nodes,node:Fr.node,size:Fr.size,empty:Fr.empty,each:Fr.each,on:function(t,n){var e=this._id;return arguments.length<2?Cr(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?kr:Er;return function(){var a=o(this,t),u=a.on;u!==r&&(i=(r=u).copy()).on(n,e),a.on=i}}(e,t,n))},attr:function(t,n){var e=W(t),r="transform"===e?Le:Rr;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,o;return function(){var a,u,c=e(this);if(null!=c)return(a=this.getAttributeNS(t.space,t.local))===(u=c+"")?null:a===r&&u===i?o:(i=u,o=n(r=a,c));this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var a,u,c=e(this);if(null!=c)return(a=this.getAttribute(t))===(u=c+"")?null:a===r&&u===i?o:(i=u,o=n(r=a,c));this.removeAttribute(t)}})(e,r,zr(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i,o=e+"";return function(){var a=this.getAttributeNS(t.space,t.local);return a===o?null:a===r?i:i=n(r=a,e)}}:function(t,n,e){var r,i,o=e+"";return function(){var a=this.getAttribute(t);return a===o?null:a===r?i:i=n(r=a,e)}})(e,r,n))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=W(t);return this.tween(e,(r.local?function(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttributeNS(t.space,t.local,n.call(this,e))}}(t,i)),e}return i._value=n,i}:function(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttribute(t,n.call(this,e))}}(t,i)),e}return i._value=n,i})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?qe:Rr;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=ft(this,t),a=(this.style.removeProperty(t),ft(this,t));return o===a?null:o===e&&a===r?i:i=n(e=o,r=a)}}(t,r)).on("end.style."+t,qr(t)):"function"==typeof n?this.styleTween(t,function(t,n,e){var r,i,o;return function(){var a=ft(this,t),u=e(this),c=u+"";return null==u&&(this.style.removeProperty(t),c=u=ft(this,t)),a===c?null:a===r&&c===i?o:(i=c,o=n(r=a,u))}}(t,r,zr(this,"style."+t,n))).each(function(t,n){var e,r,i,o,a="style."+n,u="end."+a;return function(){var c=Er(this,t),f=c.on,s=null==c.value[a]?o||(o=qr(n)):void 0;f===e&&i===s||(r=(e=f).copy()).on(u,i=s),c.on=r}}(this._id,t)):this.styleTween(t,function(t,n,e){var r,i,o=e+"";return function(){var a=ft(this,t);return a===o?null:a===r?i:i=n(r=a,e)}}(t,r,n),e).on("end.style."+t,null)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){var r,i;function o(){var o=n.apply(this,arguments);return o!==i&&(r=(i=o)&&function(t,n,e){return function(r){this.style.setProperty(t,n.call(this,r),e)}}(t,o,e)),r}return o._value=n,o}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(zr(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},textTween:function(t){var n="text";if(arguments.length<1)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;return this.tween(n,function(t){var n,e;function r(){var r=t.apply(this,arguments);return r!==e&&(n=(e=r)&&function(t){return function(n){this.textContent=t.call(this,n)}}(r)),n}return r._value=t,r}(t))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=Cr(this.node(),e).tween,o=0,a=i.length;o<a;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=Er(this,t),o=i.tween;if(o!==e)for(var a=0,u=(r=e=o).length;a<u;++a)if(r[a].name===n){(r=r.slice()).splice(a,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=Er(this,t),a=o.tween;if(a!==r){i=(r=a).slice();for(var u={name:n,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===n){i[c]=u;break}c===f&&i.push(u)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){kr(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){kr(this,t).delay=n}})(n,t)):Cr(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Er(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Er(this,t).duration=n}})(n,t)):Cr(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){Er(this,t).ease=n}}(n,t)):Cr(this.node(),n).ease},end:function(){var t,n,e=this,r=e._id,i=e.size();return new Promise(function(o,a){var u={value:a},c={value:function(){0==--i&&o()}};e.each(function(){var e=Er(this,r),i=e.on;i!==t&&((n=(t=i).copy())._.cancel.push(u),n._.interrupt.push(u),n._.end.push(c)),e.on=n})})}};var Hr=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),jr=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),Xr=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),Vr=Math.PI,Gr=Vr/2;function $r(t){return(1-Math.cos(Vr*t))/2}function Wr(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function Zr(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var Qr=4/11,Kr=6/11,Jr=8/11,ti=.75,ni=9/11,ei=10/11,ri=.9375,ii=21/22,oi=63/64,ai=1/Qr/Qr;function ui(t){return(t=+t)<Qr?ai*t*t:t<Jr?ai*(t-=Kr)*t+ti:t<ei?ai*(t-=ni)*t+ri:ai*(t-=ii)*t+oi}var ci=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),fi=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),si=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),li=2*Math.PI,hi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=li);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*li)},i.period=function(e){return t(n,e)},i}(1,.3),di=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=li);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*li)},i.period=function(e){return t(n,e)},i}(1,.3),pi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=li);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*li)},i.period=function(e){return t(n,e)},i}(1,.3),vi={time:null,delay:0,duration:250,ease:Ir};function gi(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return vi.time=fr(),vi;return e}zt.prototype.interrupt=function(t){return this.each(function(){Pr(this,t)})},zt.prototype.transition=function(t){var n,e;t instanceof Ur?(n=t._id,t=t._name):(n=Br(),(e=vi).time=fr(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],c=u.length,f=0;f<c;++f)(a=u[f])&&Sr(a,t,n,f,u,e||gi(a,n));return new Ur(r,this._parents,t,n)};var yi=[null];function _i(t){return function(){return t}}function bi(t,n,e){this.target=t,this.type=n,this.selection=e}function mi(){t.event.stopImmediatePropagation()}function xi(){t.event.preventDefault(),t.event.stopImmediatePropagation()}var wi={name:"drag"},Mi={name:"space"},Ni={name:"handle"},Ti={name:"center"};function Ai(t){return[+t[0],+t[1]]}function Si(t){return[Ai(t[0]),Ai(t[1])]}var ki={name:"x",handles:["w","e"].map(Li),input:function(t,n){return null==t?null:[[+t[0],n[0][1]],[+t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Ei={name:"y",handles:["n","s"].map(Li),input:function(t,n){return null==t?null:[[n[0][0],+t[0]],[n[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},Ci={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(Li),input:function(t){return null==t?null:Si(t)},output:function(t){return t}},Pi={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},zi={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},Ri={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},Di={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},qi={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function Li(t){return{type:t}}function Ui(){return!t.event.ctrlKey&&!t.event.button}function Oi(){var t=this.ownerSVGElement||this;return t.hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function Bi(){return navigator.maxTouchPoints||"ontouchstart"in this}function Fi(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function Yi(n){var e,r=Oi,i=Ui,o=Bi,a=!0,u=I("start","brush","end"),c=6;function f(t){var e=t.property("__brush",g).selectAll(".overlay").data([Li("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",Pi.overlay).merge(e).each(function(){var t=Fi(this).extent;Rt(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),t.selectAll(".selection").data([Li("selection")]).enter().append("rect").attr("class","selection").attr("cursor",Pi.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=t.selectAll(".handle").data(n.handles,function(t){return t.type});r.exit().remove(),r.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return Pi[t.type]}),t.each(s).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",d).filter(o).on("touchstart.brush",d).on("touchmove.brush",p).on("touchend.brush touchcancel.brush",v).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function s(){var t=Rt(this),n=Fi(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-c/2:n[0][0]-c/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-c/2:n[0][1]-c/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+c:c}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+c:c})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function l(t,n,e){return!e&&t.__brush.emitter||new h(t,n)}function h(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function d(){if((!e||t.event.touches)&&i.apply(this,arguments)){var r,o,u,c,f,h,d,p,v,g,y,_,b=this,m=t.event.target.__data__.type,x="selection"===(a&&t.event.metaKey?m="overlay":m)?wi:a&&t.event.altKey?Ti:Ni,w=n===Ei?null:Di[m],M=n===ki?null:qi[m],N=Fi(b),T=N.extent,A=N.selection,S=T[0][0],k=T[0][1],E=T[1][0],C=T[1][1],P=0,z=0,R=w&&M&&a&&t.event.shiftKey,D=t.event.touches?(_=t.event.changedTouches[0].identifier,function(n){return Ft(n,t.event.touches,_)}):Bt,q=D(b),L=q,U=l(b,arguments,!0).beforestart();"overlay"===m?(A&&(v=!0),N.selection=A=[[r=n===Ei?S:q[0],u=n===ki?k:q[1]],[f=n===Ei?E:r,d=n===ki?C:u]]):(r=A[0][0],u=A[0][1],f=A[1][0],d=A[1][1]),o=r,c=u,h=f,p=d;var O=Rt(b).attr("pointer-events","none"),B=O.selectAll(".overlay").attr("cursor",Pi[m]);if(t.event.touches)U.moved=Y,U.ended=H;else{var F=Rt(t.event.view).on("mousemove.brush",Y,!0).on("mouseup.brush",H,!0);a&&F.on("keydown.brush",function(){switch(t.event.keyCode){case 16:R=w&&M;break;case 18:x===Ni&&(w&&(f=h-P*w,r=o+P*w),M&&(d=p-z*M,u=c+z*M),x=Ti,I());break;case 32:x!==Ni&&x!==Ti||(w<0?f=h-P:w>0&&(r=o-P),M<0?d=p-z:M>0&&(u=c-z),x=Mi,B.attr("cursor",Pi.selection),I());break;default:return}xi()},!0).on("keyup.brush",function(){switch(t.event.keyCode){case 16:R&&(g=y=R=!1,I());break;case 18:x===Ti&&(w<0?f=h:w>0&&(r=o),M<0?d=p:M>0&&(u=c),x=Ni,I());break;case 32:x===Mi&&(t.event.altKey?(w&&(f=h-P*w,r=o+P*w),M&&(d=p-z*M,u=c+z*M),x=Ti):(w<0?f=h:w>0&&(r=o),M<0?d=p:M>0&&(u=c),x=Ni),B.attr("cursor",Pi[m]),I());break;default:return}xi()},!0),Ht(t.event.view)}mi(),Pr(b),s.call(b),U.start()}function Y(){var t=D(b);!R||g||y||(Math.abs(t[0]-L[0])>Math.abs(t[1]-L[1])?y=!0:g=!0),L=t,v=!0,xi(),I()}function I(){var t;switch(P=L[0]-q[0],z=L[1]-q[1],x){case Mi:case wi:w&&(P=Math.max(S-r,Math.min(E-f,P)),o=r+P,h=f+P),M&&(z=Math.max(k-u,Math.min(C-d,z)),c=u+z,p=d+z);break;case Ni:w<0?(P=Math.max(S-r,Math.min(E-r,P)),o=r+P,h=f):w>0&&(P=Math.max(S-f,Math.min(E-f,P)),o=r,h=f+P),M<0?(z=Math.max(k-u,Math.min(C-u,z)),c=u+z,p=d):M>0&&(z=Math.max(k-d,Math.min(C-d,z)),c=u,p=d+z);break;case Ti:w&&(o=Math.max(S,Math.min(E,r-P*w)),h=Math.max(S,Math.min(E,f+P*w))),M&&(c=Math.max(k,Math.min(C,u-z*M)),p=Math.max(k,Math.min(C,d+z*M)))}h<o&&(w*=-1,t=r,r=f,f=t,t=o,o=h,h=t,m in zi&&B.attr("cursor",Pi[m=zi[m]])),p<c&&(M*=-1,t=u,u=d,d=t,t=c,c=p,p=t,m in Ri&&B.attr("cursor",Pi[m=Ri[m]])),N.selection&&(A=N.selection),g&&(o=A[0][0],h=A[1][0]),y&&(c=A[0][1],p=A[1][1]),A[0][0]===o&&A[0][1]===c&&A[1][0]===h&&A[1][1]===p||(N.selection=[[o,c],[h,p]],s.call(b),U.brush())}function H(){if(mi(),t.event.touches){if(t.event.touches.length)return;e&&clearTimeout(e),e=setTimeout(function(){e=null},500)}else jt(t.event.view,v),F.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);O.attr("pointer-events","all"),B.attr("cursor",Pi.overlay),N.selection&&(A=N.selection),function(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}(A)&&(N.selection=null,s.call(b)),U.end()}}function p(){l(this,arguments).moved()}function v(){l(this,arguments).ended()}function g(){var t=this.__brush||{selection:null};return t.extent=Si(r.apply(this,arguments)),t.dim=n,t}return f.move=function(t,e){t.selection?t.on("start.brush",function(){l(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){l(this,arguments).end()}).tween("brush",function(){var t=this,r=t.__brush,i=l(t,arguments),o=r.selection,a=n.input("function"==typeof e?e.apply(this,arguments):e,r.extent),u=Te(o,a);function c(n){r.selection=1===n&&null===a?null:u(n),s.call(t),i.brush()}return null!==o&&null!==a?c:c(1)}):t.each(function(){var t=this,r=arguments,i=t.__brush,o=n.input("function"==typeof e?e.apply(t,r):e,i.extent),a=l(t,r).beforestart();Pr(t),i.selection=null===o?null:o,s.call(t),a.start().brush().end()})},f.clear=function(t){f.move(t,null)},h.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting?(this.starting=!1,this.emit("start")):this.emit("brush"),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(t){kt(new bi(f,t,n.output(this.state.selection)),u.apply,u,[t,this.that,this.args])}},f.extent=function(t){return arguments.length?(r="function"==typeof t?t:_i(Si(t)),f):r},f.filter=function(t){return arguments.length?(i="function"==typeof t?t:_i(!!t),f):i},f.touchable=function(t){return arguments.length?(o="function"==typeof t?t:_i(!!t),f):o},f.handleSize=function(t){return arguments.length?(c=+t,f):c},f.keyModifiers=function(t){return arguments.length?(a=!!t,f):a},f.on=function(){var t=u.on.apply(u,arguments);return t===u?f:t},f}var Ii=Math.cos,Hi=Math.sin,ji=Math.PI,Xi=ji/2,Vi=2*ji,Gi=Math.max;function $i(t){return function(n,e){return t(n.source.value+n.target.value,e.source.value+e.target.value)}}var Wi=Array.prototype.slice;function Zi(t){return function(){return t}}var Qi=Math.PI,Ki=2*Qi,Ji=Ki-1e-6;function to(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function no(){return new to}function eo(t){return t.source}function ro(t){return t.target}function io(t){return t.radius}function oo(t){return t.startAngle}function ao(t){return t.endAngle}to.prototype=no.prototype={constructor:to,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,o){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+o)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var o=this._x1,a=this._y1,u=e-t,c=r-n,f=o-t,s=a-n,l=f*f+s*s;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(s*u-c*f)>1e-6&&i){var h=e-o,d=r-a,p=u*u+c*c,v=h*h+d*d,g=Math.sqrt(p),y=Math.sqrt(l),_=i*Math.tan((Qi-Math.acos((p+l-v)/(2*g*y)))/2),b=_/y,m=_/g;Math.abs(b-1)>1e-6&&(this._+="L"+(t+b*f)+","+(n+b*s)),this._+="A"+i+","+i+",0,0,"+ +(s*h>f*d)+","+(this._x1=t+m*u)+","+(this._y1=n+m*c)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,r,i,o){t=+t,n=+n,o=!!o;var a=(e=+e)*Math.cos(r),u=e*Math.sin(r),c=t+a,f=n+u,s=1^o,l=o?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+c+","+f:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+c+","+f),e&&(l<0&&(l=l%Ki+Ki),l>Ji?this._+="A"+e+","+e+",0,1,"+s+","+(t-a)+","+(n-u)+"A"+e+","+e+",0,1,"+s+","+(this._x1=c)+","+(this._y1=f):l>1e-6&&(this._+="A"+e+","+e+",0,"+ +(l>=Qi)+","+s+","+(this._x1=t+e*Math.cos(i))+","+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}};function uo(){}function co(t,n){var e=new uo;if(t instanceof uo)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var a in t)e.set(a,t[a]);return e}function fo(){return{}}function so(t,n,e){t[n]=e}function lo(){return co()}function ho(t,n,e){t.set(n,e)}function po(){}uo.prototype=co.prototype={constructor:uo,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var vo=co.prototype;function go(t,n){var e=new po;if(t instanceof po)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}po.prototype=go.prototype={constructor:po,has:vo.has,add:function(t){return this["$"+(t+="")]=t,this},remove:vo.remove,clear:vo.clear,values:vo.keys,size:vo.size,empty:vo.empty,each:vo.each};var yo=Array.prototype.slice;function _o(t,n){return t-n}function bo(t){return function(){return t}}function mo(t,n){for(var e,r=-1,i=n.length;++r<i;)if(e=xo(t,n[r]))return e;return 0}function xo(t,n){for(var e=n[0],r=n[1],i=-1,o=0,a=t.length,u=a-1;o<a;u=o++){var c=t[o],f=c[0],s=c[1],l=t[u],h=l[0],d=l[1];if(wo(c,l,n))return 0;s>r!=d>r&&e<(h-f)*(r-s)/(d-s)+f&&(i=-i)}return i}function wo(t,n,e){var r,i,o,a;return function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])==(e[0]-t[0])*(n[1]-t[1])}(t,n,e)&&(i=t[r=+(t[0]===n[0])],o=e[r],a=n[r],i<=o&&o<=a||a<=o&&o<=i)}function Mo(){}var No=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function To(){var t=1,n=1,e=M,r=u;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(_o);else{var r=s(t),i=r[0],a=r[1];n=w(i,a,n),n=g(Math.floor(i/n)*n,Math.floor(a/n)*n,n)}return n.map(function(n){return o(t,n)})}function o(e,i){var o=[],u=[];return function(e,r,i){var o,u,c,f,s,l,h=new Array,d=new Array;o=u=-1,f=e[0]>=r,No[f<<1].forEach(p);for(;++o<t-1;)c=f,f=e[o+1]>=r,No[c|f<<1].forEach(p);No[f<<0].forEach(p);for(;++u<n-1;){for(o=-1,f=e[u*t+t]>=r,s=e[u*t]>=r,No[f<<1|s<<2].forEach(p);++o<t-1;)c=f,f=e[u*t+t+o+1]>=r,l=s,s=e[u*t+o+1]>=r,No[c|f<<1|s<<2|l<<3].forEach(p);No[f|s<<3].forEach(p)}o=-1,s=e[u*t]>=r,No[s<<2].forEach(p);for(;++o<t-1;)l=s,s=e[u*t+o+1]>=r,No[s<<2|l<<3].forEach(p);function p(t){var n,e,r=[t[0][0]+o,t[0][1]+u],c=[t[1][0]+o,t[1][1]+u],f=a(r),s=a(c);(n=d[f])?(e=h[s])?(delete d[n.end],delete h[e.start],n===e?(n.ring.push(c),i(n.ring)):h[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(c),d[n.end=s]=n):(n=h[s])?(e=d[f])?(delete h[n.start],delete d[e.end],n===e?(n.ring.push(c),i(n.ring)):h[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete h[n.start],n.ring.unshift(r),h[n.start=f]=n):h[f]=d[s]={start:f,end:s,ring:[r,c]}}No[s<<3].forEach(p)}(e,i,function(t){r(t,e,i),function(t){for(var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++n<e;)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r}(t)>0?o.push([t]):u.push(t)}),u.forEach(function(t){for(var n,e=0,r=o.length;e<r;++e)if(-1!==mo((n=o[e])[0],t))return void n.push(t)}),{type:"MultiPolygon",value:i,coordinates:o}}function a(n){return 2*n[0]+n[1]*(t+1)*4}function u(e,r,i){e.forEach(function(e){var o,a=e[0],u=e[1],c=0|a,f=0|u,s=r[f*t+c];a>0&&a<t&&c===a&&(o=r[f*t+c-1],e[0]=a+(i-o)/(s-o)-.5),u>0&&u<n&&f===u&&(o=r[(f-1)*t+c],e[1]=u+(i-o)/(s-o)-.5)})}return i.contour=o,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.ceil(e[0]),o=Math.ceil(e[1]);if(!(r>0&&o>0))throw new Error("invalid size");return t=r,n=o,i},i.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?bo(yo.call(t)):bo(t),i):e},i.smooth=function(t){return arguments.length?(r=t?u:Mo,i):r===u},i}function Ao(t,n,e){for(var r=t.width,i=t.height,o=1+(e<<1),a=0;a<i;++a)for(var u=0,c=0;u<r+e;++u)u<r&&(c+=t.data[u+a*r]),u>=e&&(u>=o&&(c-=t.data[u-o+a*r]),n.data[u-e+a*r]=c/Math.min(u+1,r-1+o-u,o))}function So(t,n,e){for(var r=t.width,i=t.height,o=1+(e<<1),a=0;a<r;++a)for(var u=0,c=0;u<i+e;++u)u<i&&(c+=t.data[a+u*r]),u>=e&&(u>=o&&(c-=t.data[a+(u-o)*r]),n.data[a+(u-e)*r]=c/Math.min(u+1,i-1+o-u,o))}function ko(t){return t[0]}function Eo(t){return t[1]}function Co(){return 1}var Po={},zo={},Ro=34,Do=10,qo=13;function Lo(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+'] || ""'}).join(",")+"}")}function Uo(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}function Oo(t,n){var e=t+"",r=e.length;return r<n?new Array(n-r+1).join(0)+e:e}function Bo(t){var n=t.getUTCHours(),e=t.getUTCMinutes(),r=t.getUTCSeconds(),i=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":function(t){return t<0?"-"+Oo(-t,6):t>9999?"+"+Oo(t,6):Oo(t,4)}(t.getUTCFullYear())+"-"+Oo(t.getUTCMonth()+1,2)+"-"+Oo(t.getUTCDate(),2)+(i?"T"+Oo(n,2)+":"+Oo(e,2)+":"+Oo(r,2)+"."+Oo(i,3)+"Z":r?"T"+Oo(n,2)+":"+Oo(e,2)+":"+Oo(r,2)+"Z":e||n?"T"+Oo(n,2)+":"+Oo(e,2)+"Z":"")}function Fo(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function r(t,n){var r,i=[],o=t.length,a=0,u=0,c=o<=0,f=!1;function s(){if(c)return zo;if(f)return f=!1,Po;var n,r,i=a;if(t.charCodeAt(i)===Ro){for(;a++<o&&t.charCodeAt(a)!==Ro||t.charCodeAt(++a)===Ro;);return(n=a)>=o?c=!0:(r=t.charCodeAt(a++))===Do?f=!0:r===qo&&(f=!0,t.charCodeAt(a)===Do&&++a),t.slice(i+1,n-1).replace(/""/g,'"')}for(;a<o;){if((r=t.charCodeAt(n=a++))===Do)f=!0;else if(r===qo)f=!0,t.charCodeAt(a)===Do&&++a;else if(r!==e)continue;return t.slice(i,n)}return c=!0,t.slice(i,o)}for(t.charCodeAt(o-1)===Do&&--o,t.charCodeAt(o-1)===qo&&--o;(r=s())!==zo;){for(var l=[];r!==Po&&r!==zo;)l.push(r),r=s();n&&null==(l=n(l,u++))||i.push(l)}return i}function i(n,e){return n.map(function(n){return e.map(function(t){return a(n[t])}).join(t)})}function o(n){return n.map(a).join(t)}function a(t){return null==t?"":t instanceof Date?Bo(t):n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,o=r(t,function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=Lo(t);return function(r,i){return n(e(r),i,t)}}(t,n):Lo(t)});return o.columns=i||[],o},parseRows:r,format:function(n,e){return null==e&&(e=Uo(n)),[e.map(a).join(t)].concat(i(n,e)).join("\n")},formatBody:function(t,n){return null==n&&(n=Uo(t)),i(t,n).join("\n")},formatRows:function(t){return t.map(o).join("\n")},formatRow:o,formatValue:a}}var Yo=Fo(","),Io=Yo.parse,Ho=Yo.parseRows,jo=Yo.format,Xo=Yo.formatBody,Vo=Yo.formatRows,Go=Yo.formatRow,$o=Yo.formatValue,Wo=Fo("\t"),Zo=Wo.parse,Qo=Wo.parseRows,Ko=Wo.format,Jo=Wo.formatBody,ta=Wo.formatRows,na=Wo.formatRow,ea=Wo.formatValue;var ra=new Date("2019-01-01T00:00").getHours()||new Date("2019-07-01T00:00").getHours();function ia(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}function oa(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}function aa(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}function ua(t,n){return fetch(t,n).then(aa)}function ca(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),ua(n,e).then(function(n){return t(n,r)})}}var fa=ca(Io),sa=ca(Zo);function la(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}function ha(t){return function(n,e){return ua(n,e).then(function(n){return(new DOMParser).parseFromString(n,t)})}}var da=ha("application/xml"),pa=ha("text/html"),va=ha("image/svg+xml");function ga(t){return function(){return t}}function ya(){return 1e-6*(Math.random()-.5)}function _a(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,o,a,u,c,f,s,l,h,d=t._root,p={data:r},v=t._x0,g=t._y0,y=t._x1,_=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((f=n>=(o=(v+y)/2))?v=o:y=o,(s=e>=(a=(g+_)/2))?g=a:_=a,i=d,!(d=d[l=s<<1|f]))return i[l]=p,t;if(u=+t._x.call(null,d.data),c=+t._y.call(null,d.data),n===u&&e===c)return p.next=d,i?i[l]=p:t._root=p,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(f=n>=(o=(v+y)/2))?v=o:y=o,(s=e>=(a=(g+_)/2))?g=a:_=a}while((l=s<<1|f)==(h=(c>=a)<<1|u>=o));return i[h]=d,i[l]=p,t}function ba(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i}function ma(t){return t[0]}function xa(t){return t[1]}function wa(t,n,e){var r=new Ma(null==n?ma:n,null==e?xa:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function Ma(t,n,e,r,i,o){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=o,this._root=void 0}function Na(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var Ta=wa.prototype=Ma.prototype;function Aa(t){return t.x+t.vx}function Sa(t){return t.y+t.vy}function ka(t){return t.index}function Ea(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}function Ca(t){return t.x}function Pa(t){return t.y}Ta.copy=function(){var t,n,e=new Ma(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=Na(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=Na(n));return e},Ta.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return _a(this.cover(n,e),n,e,t)},Ta.addAll=function(t){var n,e,r,i,o=t.length,a=new Array(o),u=new Array(o),c=1/0,f=1/0,s=-1/0,l=-1/0;for(e=0;e<o;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(a[e]=r,u[e]=i,r<c&&(c=r),r>s&&(s=r),i<f&&(f=i),i>l&&(l=i));if(c>s||f>l)return this;for(this.cover(c,f).cover(s,l),e=0;e<o;++e)_a(this,a[e],u[e],t[e]);return this},Ta.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,o=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,o=(r=Math.floor(n))+1;else{for(var a,u,c=i-e,f=this._root;e>t||t>=i||r>n||n>=o;)switch(u=(n<r)<<1|t<e,(a=new Array(4))[u]=f,f=a,c*=2,u){case 0:i=e+c,o=r+c;break;case 1:e=i-c,o=r+c;break;case 2:i=e+c,r=o-c;break;case 3:e=i-c,r=o-c}this._root&&this._root.length&&(this._root=f)}return this._x0=e,this._y0=r,this._x1=i,this._y1=o,this},Ta.data=function(){var t=[];return this.visit(function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)}),t},Ta.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},Ta.find=function(t,n,e){var r,i,o,a,u,c,f,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],v=this._root;for(v&&p.push(new ba(v,s,l,h,d)),null==e?e=1/0:(s=t-e,l=n-e,h=t+e,d=n+e,e*=e);c=p.pop();)if(!(!(v=c.node)||(i=c.x0)>h||(o=c.y0)>d||(a=c.x1)<s||(u=c.y1)<l))if(v.length){var g=(i+a)/2,y=(o+u)/2;p.push(new ba(v[3],g,y,a,u),new ba(v[2],i,y,g,u),new ba(v[1],g,o,a,y),new ba(v[0],i,o,g,y)),(f=(n>=y)<<1|t>=g)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-f],p[p.length-1-f]=c)}else{var _=t-+this._x.call(null,v.data),b=n-+this._y.call(null,v.data),m=_*_+b*b;if(m<e){var x=Math.sqrt(e=m);s=t-x,l=n-x,h=t+x,d=n+x,r=v.data}}return r},Ta.remove=function(t){if(isNaN(o=+this._x.call(null,t))||isNaN(a=+this._y.call(null,t)))return this;var n,e,r,i,o,a,u,c,f,s,l,h,d=this._root,p=this._x0,v=this._y0,g=this._x1,y=this._y1;if(!d)return this;if(d.length)for(;;){if((f=o>=(u=(p+g)/2))?p=u:g=u,(s=a>=(c=(v+y)/2))?v=c:y=c,n=d,!(d=d[l=s<<1|f]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},Ta.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},Ta.root=function(){return this._root},Ta.size=function(){var t=0;return this.visit(function(n){if(!n.length)do{++t}while(n=n.next)}),t},Ta.visit=function(t){var n,e,r,i,o,a,u=[],c=this._root;for(c&&u.push(new ba(c,this._x0,this._y0,this._x1,this._y1));n=u.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,o=n.x1,a=n.y1)&&c.length){var f=(r+o)/2,s=(i+a)/2;(e=c[3])&&u.push(new ba(e,f,s,o,a)),(e=c[2])&&u.push(new ba(e,r,s,f,a)),(e=c[1])&&u.push(new ba(e,f,i,o,s)),(e=c[0])&&u.push(new ba(e,r,i,f,s))}return this},Ta.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new ba(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,a=n.x0,u=n.y0,c=n.x1,f=n.y1,s=(a+c)/2,l=(u+f)/2;(o=i[0])&&e.push(new ba(o,a,u,s,l)),(o=i[1])&&e.push(new ba(o,s,u,c,l)),(o=i[2])&&e.push(new ba(o,a,l,s,f)),(o=i[3])&&e.push(new ba(o,s,l,c,f))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},Ta.x=function(t){return arguments.length?(this._x=t,this):this._x},Ta.y=function(t){return arguments.length?(this._y=t,this):this._y};var za=10,Ra=Math.PI*(3-Math.sqrt(5));function Da(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]}function qa(t){return(t=Da(Math.abs(t)))?t[1]:NaN}var La,Ua=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Oa(t){if(!(n=Ua.exec(t)))throw new Error("invalid format: "+t);var n;return new Ba({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}function Ba(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}function Fa(t,n){var e=Da(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")}Oa.prototype=Ba.prototype,Ba.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Ya={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Fa(100*t,n)},r:Fa,s:function(t,n){var e=Da(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(La=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,a=r.length;return o===a?r:o>a?r+new Array(o-a+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+Da(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}};function Ia(t){return t}var Ha,ja=Array.prototype.map,Xa=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function Va(t){var n,e,r=void 0===t.grouping||void 0===t.thousands?Ia:(n=ja.call(t.grouping,Number),e=t.thousands+"",function(t,r){for(var i=t.length,o=[],a=0,u=n[0],c=0;i>0&&u>0&&(c+u+1>r&&(u=Math.max(1,r-c)),o.push(t.substring(i-=u,i+u)),!((c+=u+1)>r));)u=n[a=(a+1)%n.length];return o.reverse().join(e)}),i=void 0===t.currency?"":t.currency[0]+"",o=void 0===t.currency?"":t.currency[1]+"",a=void 0===t.decimal?".":t.decimal+"",u=void 0===t.numerals?Ia:function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(ja.call(t.numerals,String)),c=void 0===t.percent?"%":t.percent+"",f=void 0===t.minus?"-":t.minus+"",s=void 0===t.nan?"NaN":t.nan+"";function l(t){var n=(t=Oa(t)).fill,e=t.align,l=t.sign,h=t.symbol,d=t.zero,p=t.width,v=t.comma,g=t.precision,y=t.trim,_=t.type;"n"===_?(v=!0,_="g"):Ya[_]||(void 0===g&&(g=12),y=!0,_="g"),(d||"0"===n&&"="===e)&&(d=!0,n="0",e="=");var b="$"===h?i:"#"===h&&/[boxX]/.test(_)?"0"+_.toLowerCase():"",m="$"===h?o:/[%p]/.test(_)?c:"",x=Ya[_],w=/[defgprs%]/.test(_);function M(t){var i,o,c,h=b,M=m;if("c"===_)M=x(t)+M,t="";else{var N=(t=+t)<0||1/t<0;if(t=isNaN(t)?s:x(Math.abs(t),g),y&&(t=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(!+t[r])break t;i>0&&(i=0)}return i>0?t.slice(0,i)+t.slice(n+1):t}(t)),N&&0==+t&&"+"!==l&&(N=!1),h=(N?"("===l?l:f:"-"===l||"("===l?"":l)+h,M=("s"===_?Xa[8+La/3]:"")+M+(N&&"("===l?")":""),w)for(i=-1,o=t.length;++i<o;)if(48>(c=t.charCodeAt(i))||c>57){M=(46===c?a+t.slice(i+1):t.slice(i))+M,t=t.slice(0,i);break}}v&&!d&&(t=r(t,1/0));var T=h.length+t.length+M.length,A=T<p?new Array(p-T+1).join(n):"";switch(v&&d&&(t=r(A+t,A.length?p-M.length:1/0),A=""),e){case"<":t=h+t+M+A;break;case"=":t=h+A+t+M;break;case"^":t=A.slice(0,T=A.length>>1)+h+t+M+A.slice(T);break;default:t=A+h+t+M}return u(t)}return g=void 0===g?6:/[gprs]/.test(_)?Math.max(1,Math.min(21,g)):Math.max(0,Math.min(20,g)),M.toString=function(){return t+""},M}return{format:l,formatPrefix:function(t,n){var e=l(((t=Oa(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(qa(n)/3))),i=Math.pow(10,-r),o=Xa[8+r/3];return function(t){return e(i*t)+o}}}}function Ga(n){return Ha=Va(n),t.format=Ha.format,t.formatPrefix=Ha.formatPrefix,Ha}function $a(t){return Math.max(0,-qa(Math.abs(t)))}function Wa(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(qa(n)/3)))-qa(Math.abs(t)))}function Za(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,qa(n)-qa(t))+1}function Qa(){return new Ka}function Ka(){this.reset()}Ga({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"}),Ka.prototype={constructor:Ka,reset:function(){this.s=this.t=0},add:function(t){tu(Ja,t,this.t),tu(this,Ja.s,this.s),this.s?this.t+=Ja.t:this.s=Ja.t},valueOf:function(){return this.s}};var Ja=new Ka;function tu(t,n,e){var r=t.s=n+e,i=r-n,o=r-i;t.t=n-o+(e-i)}var nu=1e-6,eu=1e-12,ru=Math.PI,iu=ru/2,ou=ru/4,au=2*ru,uu=180/ru,cu=ru/180,fu=Math.abs,su=Math.atan,lu=Math.atan2,hu=Math.cos,du=Math.ceil,pu=Math.exp,vu=Math.log,gu=Math.pow,yu=Math.sin,_u=Math.sign||function(t){return t>0?1:t<0?-1:0},bu=Math.sqrt,mu=Math.tan;function xu(t){return t>1?0:t<-1?ru:Math.acos(t)}function wu(t){return t>1?iu:t<-1?-iu:Math.asin(t)}function Mu(t){return(t=yu(t/2))*t}function Nu(){}function Tu(t,n){t&&Su.hasOwnProperty(t.type)&&Su[t.type](t,n)}var Au={Feature:function(t,n){Tu(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)Tu(e[r].geometry,n)}},Su={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){ku(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)ku(e[r],n,0)},Polygon:function(t,n){Eu(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Eu(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)Tu(e[r],n)}};function ku(t,n,e){var r,i=-1,o=t.length-e;for(n.lineStart();++i<o;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function Eu(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)ku(t[e],n,1);n.polygonEnd()}function Cu(t,n){t&&Au.hasOwnProperty(t.type)?Au[t.type](t,n):Tu(t,n)}var Pu,zu,Ru,Du,qu,Lu=Qa(),Uu=Qa(),Ou={point:Nu,lineStart:Nu,lineEnd:Nu,polygonStart:function(){Lu.reset(),Ou.lineStart=Bu,Ou.lineEnd=Fu},polygonEnd:function(){var t=+Lu;Uu.add(t<0?au+t:t),this.lineStart=this.lineEnd=this.point=Nu},sphere:function(){Uu.add(au)}};function Bu(){Ou.point=Yu}function Fu(){Iu(Pu,zu)}function Yu(t,n){Ou.point=Iu,Pu=t,zu=n,Ru=t*=cu,Du=hu(n=(n*=cu)/2+ou),qu=yu(n)}function Iu(t,n){var e=(t*=cu)-Ru,r=e>=0?1:-1,i=r*e,o=hu(n=(n*=cu)/2+ou),a=yu(n),u=qu*a,c=Du*o+u*hu(i),f=u*r*yu(i);Lu.add(lu(f,c)),Ru=t,Du=o,qu=a}function Hu(t){return[lu(t[1],t[0]),wu(t[2])]}function ju(t){var n=t[0],e=t[1],r=hu(e);return[r*hu(n),r*yu(n),yu(e)]}function Xu(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function Vu(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function Gu(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function $u(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function Wu(t){var n=bu(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var Zu,Qu,Ku,Ju,tc,nc,ec,rc,ic,oc,ac,uc,cc,fc,sc,lc,hc,dc,pc,vc,gc,yc,_c,bc,mc,xc,wc=Qa(),Mc={point:Nc,lineStart:Ac,lineEnd:Sc,polygonStart:function(){Mc.point=kc,Mc.lineStart=Ec,Mc.lineEnd=Cc,wc.reset(),Ou.polygonStart()},polygonEnd:function(){Ou.polygonEnd(),Mc.point=Nc,Mc.lineStart=Ac,Mc.lineEnd=Sc,Lu<0?(Zu=-(Ku=180),Qu=-(Ju=90)):wc>nu?Ju=90:wc<-nu&&(Qu=-90),oc[0]=Zu,oc[1]=Ku},sphere:function(){Zu=-(Ku=180),Qu=-(Ju=90)}};function Nc(t,n){ic.push(oc=[Zu=t,Ku=t]),n<Qu&&(Qu=n),n>Ju&&(Ju=n)}function Tc(t,n){var e=ju([t*cu,n*cu]);if(rc){var r=Vu(rc,e),i=Vu([r[1],-r[0],0],r);Wu(i),i=Hu(i);var o,a=t-tc,u=a>0?1:-1,c=i[0]*uu*u,f=fu(a)>180;f^(u*tc<c&&c<u*t)?(o=i[1]*uu)>Ju&&(Ju=o):f^(u*tc<(c=(c+360)%360-180)&&c<u*t)?(o=-i[1]*uu)<Qu&&(Qu=o):(n<Qu&&(Qu=n),n>Ju&&(Ju=n)),f?t<tc?Pc(Zu,t)>Pc(Zu,Ku)&&(Ku=t):Pc(t,Ku)>Pc(Zu,Ku)&&(Zu=t):Ku>=Zu?(t<Zu&&(Zu=t),t>Ku&&(Ku=t)):t>tc?Pc(Zu,t)>Pc(Zu,Ku)&&(Ku=t):Pc(t,Ku)>Pc(Zu,Ku)&&(Zu=t)}else ic.push(oc=[Zu=t,Ku=t]);n<Qu&&(Qu=n),n>Ju&&(Ju=n),rc=e,tc=t}function Ac(){Mc.point=Tc}function Sc(){oc[0]=Zu,oc[1]=Ku,Mc.point=Nc,rc=null}function kc(t,n){if(rc){var e=t-tc;wc.add(fu(e)>180?e+(e>0?360:-360):e)}else nc=t,ec=n;Ou.point(t,n),Tc(t,n)}function Ec(){Ou.lineStart()}function Cc(){kc(nc,ec),Ou.lineEnd(),fu(wc)>nu&&(Zu=-(Ku=180)),oc[0]=Zu,oc[1]=Ku,rc=null}function Pc(t,n){return(n-=t)<0?n+360:n}function zc(t,n){return t[0]-n[0]}function Rc(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var Dc={sphere:Nu,point:qc,lineStart:Uc,lineEnd:Fc,polygonStart:function(){Dc.lineStart=Yc,Dc.lineEnd=Ic},polygonEnd:function(){Dc.lineStart=Uc,Dc.lineEnd=Fc}};function qc(t,n){t*=cu;var e=hu(n*=cu);Lc(e*hu(t),e*yu(t),yu(n))}function Lc(t,n,e){cc+=(t-cc)/++ac,fc+=(n-fc)/ac,sc+=(e-sc)/ac}function Uc(){Dc.point=Oc}function Oc(t,n){t*=cu;var e=hu(n*=cu);bc=e*hu(t),mc=e*yu(t),xc=yu(n),Dc.point=Bc,Lc(bc,mc,xc)}function Bc(t,n){t*=cu;var e=hu(n*=cu),r=e*hu(t),i=e*yu(t),o=yu(n),a=lu(bu((a=mc*o-xc*i)*a+(a=xc*r-bc*o)*a+(a=bc*i-mc*r)*a),bc*r+mc*i+xc*o);uc+=a,lc+=a*(bc+(bc=r)),hc+=a*(mc+(mc=i)),dc+=a*(xc+(xc=o)),Lc(bc,mc,xc)}function Fc(){Dc.point=qc}function Yc(){Dc.point=Hc}function Ic(){jc(yc,_c),Dc.point=qc}function Hc(t,n){yc=t,_c=n,t*=cu,n*=cu,Dc.point=jc;var e=hu(n);bc=e*hu(t),mc=e*yu(t),xc=yu(n),Lc(bc,mc,xc)}function jc(t,n){t*=cu;var e=hu(n*=cu),r=e*hu(t),i=e*yu(t),o=yu(n),a=mc*o-xc*i,u=xc*r-bc*o,c=bc*i-mc*r,f=bu(a*a+u*u+c*c),s=wu(f),l=f&&-s/f;pc+=l*a,vc+=l*u,gc+=l*c,uc+=s,lc+=s*(bc+(bc=r)),hc+=s*(mc+(mc=i)),dc+=s*(xc+(xc=o)),Lc(bc,mc,xc)}function Xc(t){return function(){return t}}function Vc(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e}function Gc(t,n){return[fu(t)>ru?t+Math.round(-t/au)*au:t,n]}function $c(t,n,e){return(t%=au)?n||e?Vc(Zc(t),Qc(n,e)):Zc(t):n||e?Qc(n,e):Gc}function Wc(t){return function(n,e){return[(n+=t)>ru?n-au:n<-ru?n+au:n,e]}}function Zc(t){var n=Wc(t);return n.invert=Wc(-t),n}function Qc(t,n){var e=hu(t),r=yu(t),i=hu(n),o=yu(n);function a(t,n){var a=hu(n),u=hu(t)*a,c=yu(t)*a,f=yu(n),s=f*e+u*r;return[lu(c*i-s*o,u*e-f*r),wu(s*i+c*o)]}return a.invert=function(t,n){var a=hu(n),u=hu(t)*a,c=yu(t)*a,f=yu(n),s=f*i-c*o;return[lu(c*i+f*o,u*e+s*r),wu(s*e-u*r)]},a}function Kc(t){function n(n){return(n=t(n[0]*cu,n[1]*cu))[0]*=uu,n[1]*=uu,n}return t=$c(t[0]*cu,t[1]*cu,t.length>2?t[2]*cu:0),n.invert=function(n){return(n=t.invert(n[0]*cu,n[1]*cu))[0]*=uu,n[1]*=uu,n},n}function Jc(t,n,e,r,i,o){if(e){var a=hu(n),u=yu(n),c=r*e;null==i?(i=n+r*au,o=n-c/2):(i=tf(a,i),o=tf(a,o),(r>0?i<o:i>o)&&(i+=r*au));for(var f,s=i;r>0?s>o:s<o;s-=c)f=Hu([a,-u*hu(s),-u*yu(s)]),t.point(f[0],f[1])}}function tf(t,n){(n=ju(n))[0]-=t,Wu(n);var e=xu(-n[1]);return((-n[2]<0?-e:e)+au-nu)%au}function nf(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:Nu,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}}function ef(t,n){return fu(t[0]-n[0])<nu&&fu(t[1]-n[1])<nu}function rf(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function of(t,n,e,r,i){var o,a,u=[],c=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],a=t[n];if(ef(r,a)){for(i.lineStart(),o=0;o<n;++o)i.point((r=t[o])[0],r[1]);i.lineEnd()}else u.push(e=new rf(r,t,null,!0)),c.push(e.o=new rf(r,null,e,!1)),u.push(e=new rf(a,t,null,!1)),c.push(e.o=new rf(a,null,e,!0))}}),u.length){for(c.sort(n),af(u),af(c),o=0,a=c.length;o<a;++o)c[o].e=e=!e;for(var f,s,l=u[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;f=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(o=0,a=f.length;o<a;++o)i.point((s=f[o])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(f=h.p.z,o=f.length-1;o>=0;--o)i.point((s=f[o])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}f=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}}function af(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}Gc.invert=Gc;var uf=Qa();function cf(t){return fu(t[0])<=ru?t[0]:_u(t[0])*((fu(t[0])+ru)%au-ru)}function ff(t,n){var e=cf(n),r=n[1],i=yu(r),o=[yu(e),-hu(e),0],a=0,u=0;uf.reset(),1===i?r=iu+nu:-1===i&&(r=-iu-nu);for(var c=0,f=t.length;c<f;++c)if(l=(s=t[c]).length)for(var s,l,h=s[l-1],d=cf(h),p=h[1]/2+ou,v=yu(p),g=hu(p),y=0;y<l;++y,d=b,v=x,g=w,h=_){var _=s[y],b=cf(_),m=_[1]/2+ou,x=yu(m),w=hu(m),M=b-d,N=M>=0?1:-1,T=N*M,A=T>ru,S=v*x;if(uf.add(lu(S*N*yu(T),g*w+S*hu(T))),a+=A?M+N*au:M,A^d>=e^b>=e){var k=Vu(ju(h),ju(_));Wu(k);var E=Vu(o,k);Wu(E);var C=(A^M>=0?-1:1)*wu(E[2]);(r>C||r===C&&(k[0]||k[1]))&&(u+=A^M>=0?1:-1)}}return(a<-nu||a<nu&&uf<-nu)^1&u}function sf(t,n,e,r){return function(i){var o,a,u,c=n(i),f=nf(),s=n(f),l=!1,h={point:d,lineStart:v,lineEnd:g,polygonStart:function(){h.point=y,h.lineStart=_,h.lineEnd=b,a=[],o=[]},polygonEnd:function(){h.point=d,h.lineStart=v,h.lineEnd=g,a=A(a);var t=ff(o,r);a.length?(l||(i.polygonStart(),l=!0),of(a,hf,t,e,i)):t&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),a=o=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(n,e){t(n,e)&&i.point(n,e)}function p(t,n){c.point(t,n)}function v(){h.point=p,c.lineStart()}function g(){h.point=d,c.lineEnd()}function y(t,n){u.push([t,n]),s.point(t,n)}function _(){s.lineStart(),u=[]}function b(){y(u[0][0],u[0][1]),s.lineEnd();var t,n,e,r,c=s.clean(),h=f.result(),d=h.length;if(u.pop(),o.push(u),u=null,d)if(1&c){if((n=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else d>1&&2&c&&h.push(h.pop().concat(h.shift())),a.push(h.filter(lf))}return h}}function lf(t){return t.length>1}function hf(t,n){return((t=t.x)[0]<0?t[1]-iu-nu:iu-t[1])-((n=n.x)[0]<0?n[1]-iu-nu:iu-n[1])}var df=sf(function(){return!0},function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,a){var u=o>0?ru:-ru,c=fu(o-e);fu(c-ru)<nu?(t.point(e,r=(r+a)/2>0?iu:-iu),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(u,r),t.point(o,r),n=0):i!==u&&c>=ru&&(fu(e-i)<nu&&(e-=i*nu),fu(o-u)<nu&&(o-=u*nu),r=function(t,n,e,r){var i,o,a=yu(t-e);return fu(a)>nu?su((yu(n)*(o=hu(r))*yu(e)-yu(r)*(i=hu(n))*yu(t))/(i*o*a)):(n+r)/2}(e,r,o,a),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(u,r),n=0),t.point(e=o,r=a),i=u},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}},function(t,n,e,r){var i;if(null==t)i=e*iu,r.point(-ru,i),r.point(0,i),r.point(ru,i),r.point(ru,0),r.point(ru,-i),r.point(0,-i),r.point(-ru,-i),r.point(-ru,0),r.point(-ru,i);else if(fu(t[0]-n[0])>nu){var o=t[0]<n[0]?ru:-ru;i=e*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(n[0],n[1])},[-ru,-iu]);function pf(t){var n=hu(t),e=6*cu,r=n>0,i=fu(n)>nu;function o(t,e){return hu(t)*hu(e)>n}function a(t,e,r){var i=[1,0,0],o=Vu(ju(t),ju(e)),a=Xu(o,o),u=o[0],c=a-u*u;if(!c)return!r&&t;var f=n*a/c,s=-n*u/c,l=Vu(i,o),h=$u(i,f);Gu(h,$u(o,s));var d=l,p=Xu(h,d),v=Xu(d,d),g=p*p-v*(Xu(h,h)-1);if(!(g<0)){var y=bu(g),_=$u(d,(-p-y)/v);if(Gu(_,h),_=Hu(_),!r)return _;var b,m=t[0],x=e[0],w=t[1],M=e[1];x<m&&(b=m,m=x,x=b);var N=x-m,T=fu(N-ru)<nu;if(!T&&M<w&&(b=w,w=M,M=b),T||N<nu?T?w+M>0^_[1]<(fu(_[0]-m)<nu?w:M):w<=_[1]&&_[1]<=M:N>ru^(m<=_[0]&&_[0]<=x)){var A=$u(d,(-p+y)/v);return Gu(A,h),[_,Hu(A)]}}}function u(n,e){var i=r?t:ru-t,o=0;return n<-i?o|=1:n>i&&(o|=2),e<-i?o|=4:e>i&&(o|=8),o}return sf(o,function(t){var n,e,c,f,s;return{lineStart:function(){f=c=!1,s=1},point:function(l,h){var d,p=[l,h],v=o(l,h),g=r?v?0:u(l,h):v?u(l+(l<0?ru:-ru),h):0;if(!n&&(f=c=v)&&t.lineStart(),v!==c&&(!(d=a(n,p))||ef(n,d)||ef(p,d))&&(p[0]+=nu,p[1]+=nu,v=o(p[0],p[1])),v!==c)s=0,v?(t.lineStart(),d=a(p,n),t.point(d[0],d[1])):(d=a(n,p),t.point(d[0],d[1]),t.lineEnd()),n=d;else if(i&&n&&r^v){var y;g&e||!(y=a(p,n,!0))||(s=0,r?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!v||n&&ef(n,p)||t.point(p[0],p[1]),n=p,c=v,e=g},lineEnd:function(){c&&t.lineEnd(),n=null},clean:function(){return s|(f&&c)<<1}}},function(n,r,i,o){Jc(o,t,e,i,n,r)},r?[0,-t]:[-ru,t-ru])}var vf=1e9,gf=-vf;function yf(t,n,e,r){function i(i,o){return t<=i&&i<=e&&n<=o&&o<=r}function o(i,o,u,f){var s=0,l=0;if(null==i||(s=a(i,u))!==(l=a(o,u))||c(i,o)<0^u>0)do{f.point(0===s||3===s?t:e,s>1?r:n)}while((s=(s+u+4)%4)!==l);else f.point(o[0],o[1])}function a(r,i){return fu(r[0]-t)<nu?i>0?0:3:fu(r[0]-e)<nu?i>0?2:1:fu(r[1]-n)<nu?i>0?1:0:i>0?3:2}function u(t,n){return c(t.x,n.x)}function c(t,n){var e=a(t,1),r=a(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(a){var c,f,s,l,h,d,p,v,g,y,_,b=a,m=nf(),x={point:w,lineStart:function(){x.point=M,f&&f.push(s=[]);y=!0,g=!1,p=v=NaN},lineEnd:function(){c&&(M(l,h),d&&g&&m.rejoin(),c.push(m.result()));x.point=w,g&&b.lineEnd()},polygonStart:function(){b=m,c=[],f=[],_=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=f.length;e<i;++e)for(var o,a,u=f[e],c=1,s=u.length,l=u[0],h=l[0],d=l[1];c<s;++c)o=h,a=d,l=u[c],h=l[0],d=l[1],a<=r?d>r&&(h-o)*(r-a)>(d-a)*(t-o)&&++n:d<=r&&(h-o)*(r-a)<(d-a)*(t-o)&&--n;return n}(),e=_&&n,i=(c=A(c)).length;(e||i)&&(a.polygonStart(),e&&(a.lineStart(),o(null,null,1,a),a.lineEnd()),i&&of(c,u,n,o,a),a.polygonEnd());b=a,c=f=s=null}};function w(t,n){i(t,n)&&b.point(t,n)}function M(o,a){var u=i(o,a);if(f&&s.push([o,a]),y)l=o,h=a,d=u,y=!1,u&&(b.lineStart(),b.point(o,a));else if(u&&g)b.point(o,a);else{var c=[p=Math.max(gf,Math.min(vf,p)),v=Math.max(gf,Math.min(vf,v))],m=[o=Math.max(gf,Math.min(vf,o)),a=Math.max(gf,Math.min(vf,a))];!function(t,n,e,r,i,o){var a,u=t[0],c=t[1],f=0,s=1,l=n[0]-u,h=n[1]-c;if(a=e-u,l||!(a>0)){if(a/=l,l<0){if(a<f)return;a<s&&(s=a)}else if(l>0){if(a>s)return;a>f&&(f=a)}if(a=i-u,l||!(a<0)){if(a/=l,l<0){if(a>s)return;a>f&&(f=a)}else if(l>0){if(a<f)return;a<s&&(s=a)}if(a=r-c,h||!(a>0)){if(a/=h,h<0){if(a<f)return;a<s&&(s=a)}else if(h>0){if(a>s)return;a>f&&(f=a)}if(a=o-c,h||!(a<0)){if(a/=h,h<0){if(a>s)return;a>f&&(f=a)}else if(h>0){if(a<f)return;a<s&&(s=a)}return f>0&&(t[0]=u+f*l,t[1]=c+f*h),s<1&&(n[0]=u+s*l,n[1]=c+s*h),!0}}}}}(c,m,t,n,e,r)?u&&(b.lineStart(),b.point(o,a),_=!1):(g||(b.lineStart(),b.point(c[0],c[1])),b.point(m[0],m[1]),u||b.lineEnd(),_=!1)}p=o,v=a,g=u}return x}}var _f,bf,mf,xf=Qa(),wf={sphere:Nu,point:Nu,lineStart:function(){wf.point=Nf,wf.lineEnd=Mf},lineEnd:Nu,polygonStart:Nu,polygonEnd:Nu};function Mf(){wf.point=wf.lineEnd=Nu}function Nf(t,n){_f=t*=cu,bf=yu(n*=cu),mf=hu(n),wf.point=Tf}function Tf(t,n){t*=cu;var e=yu(n*=cu),r=hu(n),i=fu(t-_f),o=hu(i),a=r*yu(i),u=mf*e-bf*r*o,c=bf*e+mf*r*o;xf.add(lu(bu(a*a+u*u),c)),_f=t,bf=e,mf=r}function Af(t){return xf.reset(),Cu(t,wf),+xf}var Sf=[null,null],kf={type:"LineString",coordinates:Sf};function Ef(t,n){return Sf[0]=t,Sf[1]=n,Af(kf)}var Cf={Feature:function(t,n){return zf(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(zf(e[r].geometry,n))return!0;return!1}},Pf={Sphere:function(){return!0},Point:function(t,n){return Rf(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Rf(e[r],n))return!0;return!1},LineString:function(t,n){return Df(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Df(e[r],n))return!0;return!1},Polygon:function(t,n){return qf(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(qf(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(zf(e[r],n))return!0;return!1}};function zf(t,n){return!(!t||!Pf.hasOwnProperty(t.type))&&Pf[t.type](t,n)}function Rf(t,n){return 0===Ef(t,n)}function Df(t,n){for(var e,r,i,o=0,a=t.length;o<a;o++){if(0===(r=Ef(t[o],n)))return!0;if(o>0&&(i=Ef(t[o],t[o-1]))>0&&e<=i&&r<=i&&(e+r-i)*(1-Math.pow((e-r)/i,2))<eu*i)return!0;e=r}return!1}function qf(t,n){return!!ff(t.map(Lf),Uf(n))}function Lf(t){return(t=t.map(Uf)).pop(),t}function Uf(t){return[t[0]*cu,t[1]*cu]}function Of(t,n,e){var r=g(t,n-nu,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function Bf(t,n,e){var r=g(t,n-nu,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function Ff(){var t,n,e,r,i,o,a,u,c,f,s,l,h=10,d=h,p=90,v=360,y=2.5;function _(){return{type:"MultiLineString",coordinates:b()}}function b(){return g(du(r/p)*p,e,p).map(s).concat(g(du(u/v)*v,a,v).map(l)).concat(g(du(n/h)*h,t,h).filter(function(t){return fu(t%p)>nu}).map(c)).concat(g(du(o/d)*d,i,d).filter(function(t){return fu(t%v)>nu}).map(f))}return _.lines=function(){return b().map(function(t){return{type:"LineString",coordinates:t}})},_.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(l(a).slice(1),s(e).reverse().slice(1),l(u).reverse().slice(1))]}},_.extent=function(t){return arguments.length?_.extentMajor(t).extentMinor(t):_.extentMinor()},_.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],u=+t[0][1],a=+t[1][1],r>e&&(t=r,r=e,e=t),u>a&&(t=u,u=a,a=t),_.precision(y)):[[r,u],[e,a]]},_.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],o=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),o>i&&(e=o,o=i,i=e),_.precision(y)):[[n,o],[t,i]]},_.step=function(t){return arguments.length?_.stepMajor(t).stepMinor(t):_.stepMinor()},_.stepMajor=function(t){return arguments.length?(p=+t[0],v=+t[1],_):[p,v]},_.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],_):[h,d]},_.precision=function(h){return arguments.length?(y=+h,c=Of(o,i,90),f=Bf(n,t,y),s=Of(u,a,90),l=Bf(r,e,y),_):y},_.extentMajor([[-180,-90+nu],[180,90-nu]]).extentMinor([[-180,-80-nu],[180,80+nu]])}function Yf(t){return t}var If,Hf,jf,Xf,Vf=Qa(),Gf=Qa(),$f={point:Nu,lineStart:Nu,lineEnd:Nu,polygonStart:function(){$f.lineStart=Wf,$f.lineEnd=Kf},polygonEnd:function(){$f.lineStart=$f.lineEnd=$f.point=Nu,Vf.add(fu(Gf)),Gf.reset()},result:function(){var t=Vf/2;return Vf.reset(),t}};function Wf(){$f.point=Zf}function Zf(t,n){$f.point=Qf,If=jf=t,Hf=Xf=n}function Qf(t,n){Gf.add(Xf*t-jf*n),jf=t,Xf=n}function Kf(){Qf(If,Hf)}var Jf=1/0,ts=Jf,ns=-Jf,es=ns,rs={point:function(t,n){t<Jf&&(Jf=t);t>ns&&(ns=t);n<ts&&(ts=n);n>es&&(es=n)},lineStart:Nu,lineEnd:Nu,polygonStart:Nu,polygonEnd:Nu,result:function(){var t=[[Jf,ts],[ns,es]];return ns=es=-(ts=Jf=1/0),t}};var is,os,as,us,cs=0,fs=0,ss=0,ls=0,hs=0,ds=0,ps=0,vs=0,gs=0,ys={point:_s,lineStart:bs,lineEnd:ws,polygonStart:function(){ys.lineStart=Ms,ys.lineEnd=Ns},polygonEnd:function(){ys.point=_s,ys.lineStart=bs,ys.lineEnd=ws},result:function(){var t=gs?[ps/gs,vs/gs]:ds?[ls/ds,hs/ds]:ss?[cs/ss,fs/ss]:[NaN,NaN];return cs=fs=ss=ls=hs=ds=ps=vs=gs=0,t}};function _s(t,n){cs+=t,fs+=n,++ss}function bs(){ys.point=ms}function ms(t,n){ys.point=xs,_s(as=t,us=n)}function xs(t,n){var e=t-as,r=n-us,i=bu(e*e+r*r);ls+=i*(as+t)/2,hs+=i*(us+n)/2,ds+=i,_s(as=t,us=n)}function ws(){ys.point=_s}function Ms(){ys.point=Ts}function Ns(){As(is,os)}function Ts(t,n){ys.point=As,_s(is=as=t,os=us=n)}function As(t,n){var e=t-as,r=n-us,i=bu(e*e+r*r);ls+=i*(as+t)/2,hs+=i*(us+n)/2,ds+=i,ps+=(i=us*t-as*n)*(as+t),vs+=i*(us+n),gs+=3*i,_s(as=t,us=n)}function Ss(t){this._context=t}Ss.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,au)}},result:Nu};var ks,Es,Cs,Ps,zs,Rs=Qa(),Ds={point:Nu,lineStart:function(){Ds.point=qs},lineEnd:function(){ks&&Ls(Es,Cs),Ds.point=Nu},polygonStart:function(){ks=!0},polygonEnd:function(){ks=null},result:function(){var t=+Rs;return Rs.reset(),t}};function qs(t,n){Ds.point=Ls,Es=Ps=t,Cs=zs=n}function Ls(t,n){Ps-=t,zs-=n,Rs.add(bu(Ps*Ps+zs*zs)),Ps=t,zs=n}function Us(){this._string=[]}function Os(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}function Bs(t){return function(n){var e=new Fs;for(var r in t)e[r]=t[r];return e.stream=n,e}}function Fs(){}function Ys(t,n,e){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Cu(e,t.stream(rs)),n(rs.result()),null!=r&&t.clipExtent(r),t}function Is(t,n,e){return Ys(t,function(e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],o=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),a=+n[0][0]+(r-o*(e[1][0]+e[0][0]))/2,u=+n[0][1]+(i-o*(e[1][1]+e[0][1]))/2;t.scale(150*o).translate([a,u])},e)}function Hs(t,n,e){return Is(t,[[0,0],n],e)}function js(t,n,e){return Ys(t,function(e){var r=+n,i=r/(e[1][0]-e[0][0]),o=(r-i*(e[1][0]+e[0][0]))/2,a=-i*e[0][1];t.scale(150*i).translate([o,a])},e)}function Xs(t,n,e){return Ys(t,function(e){var r=+n,i=r/(e[1][1]-e[0][1]),o=-i*e[0][0],a=(r-i*(e[1][1]+e[0][1]))/2;t.scale(150*i).translate([o,a])},e)}Us.prototype={_radius:4.5,_circle:Os(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=Os(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}},Fs.prototype={constructor:Fs,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var Vs=16,Gs=hu(30*cu);function $s(t,n){return+n?function(t,n){function e(r,i,o,a,u,c,f,s,l,h,d,p,v,g){var y=f-r,_=s-i,b=y*y+_*_;if(b>4*n&&v--){var m=a+h,x=u+d,w=c+p,M=bu(m*m+x*x+w*w),N=wu(w/=M),T=fu(fu(w)-1)<nu||fu(o-l)<nu?(o+l)/2:lu(x,m),A=t(T,N),S=A[0],k=A[1],E=S-r,C=k-i,P=_*E-y*C;(P*P/b>n||fu((y*E+_*C)/b-.5)>.3||a*h+u*d+c*p<Gs)&&(e(r,i,o,a,u,c,S,k,T,m/=M,x/=M,w,v,g),g.point(S,k),e(S,k,T,m,x,w,f,s,l,h,d,p,v,g))}}return function(n){var r,i,o,a,u,c,f,s,l,h,d,p,v={point:g,lineStart:y,lineEnd:b,polygonStart:function(){n.polygonStart(),v.lineStart=m},polygonEnd:function(){n.polygonEnd(),v.lineStart=y}};function g(e,r){e=t(e,r),n.point(e[0],e[1])}function y(){s=NaN,v.point=_,n.lineStart()}function _(r,i){var o=ju([r,i]),a=t(r,i);e(s,l,f,h,d,p,s=a[0],l=a[1],f=r,h=o[0],d=o[1],p=o[2],Vs,n),n.point(s,l)}function b(){v.point=g,n.lineEnd()}function m(){y(),v.point=x,v.lineEnd=w}function x(t,n){_(r=t,n),i=s,o=l,a=h,u=d,c=p,v.point=_}function w(){e(s,l,f,h,d,p,i,o,r,a,u,c,Vs,n),v.lineEnd=b,b()}return v}}(t,n):function(t){return Bs({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)}var Ws=Bs({point:function(t,n){this.stream.point(t*cu,n*cu)}});function Zs(t,n,e,r,i,o){var a=hu(o),u=yu(o),c=a*t,f=u*t,s=a/t,l=u/t,h=(u*e-a*n)/t,d=(u*n+a*e)/t;function p(t,o){return[c*(t*=r)-f*(o*=i)+n,e-f*t-c*o]}return p.invert=function(t,n){return[r*(s*t-l*n+h),i*(d-l*t-s*n)]},p}function Qs(t){return Ks(function(){return t})()}function Ks(t){var n,e,r,i,o,a,u,c,f,s,l=150,h=480,d=250,p=0,v=0,g=0,y=0,_=0,b=0,m=1,x=1,w=null,M=df,N=null,T=Yf,A=.5;function S(t){return c(t[0]*cu,t[1]*cu)}function k(t){return(t=c.invert(t[0],t[1]))&&[t[0]*uu,t[1]*uu]}function E(){var t=Zs(l,0,0,m,x,b).apply(null,n(p,v)),r=(b?Zs:function(t,n,e,r,i){function o(o,a){return[n+t*(o*=r),e-t*(a*=i)]}return o.invert=function(o,a){return[(o-n)/t*r,(e-a)/t*i]},o})(l,h-t[0],d-t[1],m,x,b);return e=$c(g,y,_),u=Vc(n,r),c=Vc(e,u),a=$s(u,A),C()}function C(){return f=s=null,S}return S.stream=function(t){return f&&s===t?f:f=Ws(function(t){return Bs({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}(e)(M(a(T(s=t)))))},S.preclip=function(t){return arguments.length?(M=t,w=void 0,C()):M},S.postclip=function(t){return arguments.length?(T=t,N=r=i=o=null,C()):T},S.clipAngle=function(t){return arguments.length?(M=+t?pf(w=t*cu):(w=null,df),C()):w*uu},S.clipExtent=function(t){return arguments.length?(T=null==t?(N=r=i=o=null,Yf):yf(N=+t[0][0],r=+t[0][1],i=+t[1][0],o=+t[1][1]),C()):null==N?null:[[N,r],[i,o]]},S.scale=function(t){return arguments.length?(l=+t,E()):l},S.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],E()):[h,d]},S.center=function(t){return arguments.length?(p=t[0]%360*cu,v=t[1]%360*cu,E()):[p*uu,v*uu]},S.rotate=function(t){return arguments.length?(g=t[0]%360*cu,y=t[1]%360*cu,_=t.length>2?t[2]%360*cu:0,E()):[g*uu,y*uu,_*uu]},S.angle=function(t){return arguments.length?(b=t%360*cu,E()):b*uu},S.reflectX=function(t){return arguments.length?(m=t?-1:1,E()):m<0},S.reflectY=function(t){return arguments.length?(x=t?-1:1,E()):x<0},S.precision=function(t){return arguments.length?(a=$s(u,A=t*t),C()):bu(A)},S.fitExtent=function(t,n){return Is(S,t,n)},S.fitSize=function(t,n){return Hs(S,t,n)},S.fitWidth=function(t,n){return js(S,t,n)},S.fitHeight=function(t,n){return Xs(S,t,n)},function(){return n=t.apply(this,arguments),S.invert=n.invert&&k,E()}}function Js(t){var n=0,e=ru/3,r=Ks(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*cu,e=t[1]*cu):[n*uu,e*uu]},i}function tl(t,n){var e=yu(t),r=(e+yu(n))/2;if(fu(r)<nu)return function(t){var n=hu(t);function e(t,e){return[t*n,yu(e)/n]}return e.invert=function(t,e){return[t/n,wu(e*n)]},e}(t);var i=1+e*(2*r-e),o=bu(i)/r;function a(t,n){var e=bu(i-2*r*yu(n))/r;return[e*yu(t*=r),o-e*hu(t)]}return a.invert=function(t,n){var e=o-n,a=lu(t,fu(e))*_u(e);return e*r<0&&(a-=ru*_u(t)*_u(e)),[a/r,wu((i-(t*t+e*e)*r*r)/(2*r))]},a}function nl(){return Js(tl).scale(155.424).center([0,33.6442])}function el(){return nl().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function rl(t){return function(n,e){var r=hu(n),i=hu(e),o=t(r*i);return[o*i*yu(n),o*yu(e)]}}function il(t){return function(n,e){var r=bu(n*n+e*e),i=t(r),o=yu(i),a=hu(i);return[lu(n*o,r*a),wu(r&&e*o/r)]}}var ol=rl(function(t){return bu(2/(1+t))});ol.invert=il(function(t){return 2*wu(t/2)});var al=rl(function(t){return(t=xu(t))&&t/yu(t)});function ul(t,n){return[t,vu(mu((iu+n)/2))]}function cl(t){var n,e,r,i=Qs(t),o=i.center,a=i.scale,u=i.translate,c=i.clipExtent,f=null;function s(){var o=ru*a(),u=i(Kc(i.rotate()).invert([0,0]));return c(null==f?[[u[0]-o,u[1]-o],[u[0]+o,u[1]+o]]:t===ul?[[Math.max(u[0]-o,f),n],[Math.min(u[0]+o,e),r]]:[[f,Math.max(u[1]-o,n)],[e,Math.min(u[1]+o,r)]])}return i.scale=function(t){return arguments.length?(a(t),s()):a()},i.translate=function(t){return arguments.length?(u(t),s()):u()},i.center=function(t){return arguments.length?(o(t),s()):o()},i.clipExtent=function(t){return arguments.length?(null==t?f=n=e=r=null:(f=+t[0][0],n=+t[0][1],e=+t[1][0],r=+t[1][1]),s()):null==f?null:[[f,n],[e,r]]},s()}function fl(t){return mu((iu+t)/2)}function sl(t,n){var e=hu(t),r=t===n?yu(t):vu(e/hu(n))/vu(fl(n)/fl(t)),i=e*gu(fl(t),r)/r;if(!r)return ul;function o(t,n){i>0?n<-iu+nu&&(n=-iu+nu):n>iu-nu&&(n=iu-nu);var e=i/gu(fl(n),r);return[e*yu(r*t),i-e*hu(r*t)]}return o.invert=function(t,n){var e=i-n,o=_u(r)*bu(t*t+e*e),a=lu(t,fu(e))*_u(e);return e*r<0&&(a-=ru*_u(t)*_u(e)),[a/r,2*su(gu(i/o,1/r))-iu]},o}function ll(t,n){return[t,n]}function hl(t,n){var e=hu(t),r=t===n?yu(t):(e-hu(n))/(n-t),i=e/r+t;if(fu(r)<nu)return ll;function o(t,n){var e=i-n,o=r*t;return[e*yu(o),i-e*hu(o)]}return o.invert=function(t,n){var e=i-n,o=lu(t,fu(e))*_u(e);return e*r<0&&(o-=ru*_u(t)*_u(e)),[o/r,i-_u(r)*bu(t*t+e*e)]},o}al.invert=il(function(t){return t}),ul.invert=function(t,n){return[t,2*su(pu(n))-iu]},ll.invert=ll;var dl=1.340264,pl=-.081106,vl=893e-6,gl=.003796,yl=bu(3)/2;function _l(t,n){var e=wu(yl*yu(n)),r=e*e,i=r*r*r;return[t*hu(e)/(yl*(dl+3*pl*r+i*(7*vl+9*gl*r))),e*(dl+pl*r+i*(vl+gl*r))]}function bl(t,n){var e=hu(n),r=hu(t)*e;return[e*yu(t)/r,yu(n)/r]}function ml(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}function xl(t,n){return[hu(n)*yu(t),yu(n)]}function wl(t,n){var e=hu(n),r=1+hu(t)*e;return[e*yu(t)/r,yu(n)/r]}function Ml(t,n){return[vu(mu((iu+n)/2)),-t]}function Nl(t,n){return t.parent===n.parent?1:2}function Tl(t,n){return t+n.x}function Al(t,n){return Math.max(t,n.y)}function Sl(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function kl(t,n){var e,r,i,o,a,u=new zl(t),c=+t.value&&(u.value=t.value),f=[u];for(null==n&&(n=El);e=f.pop();)if(c&&(e.value=+e.data.value),(i=n(e.data))&&(a=i.length))for(e.children=new Array(a),o=a-1;o>=0;--o)f.push(r=e.children[o]=new zl(i[o])),r.parent=e,r.depth=e.depth+1;return u.eachBefore(Pl)}function El(t){return t.children}function Cl(t){t.data=t.data.data}function Pl(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function zl(t){this.data=t,this.depth=this.height=0,this.parent=null}_l.invert=function(t,n){for(var e,r=n,i=r*r,o=i*i*i,a=0;a<12&&(o=(i=(r-=e=(r*(dl+pl*i+o*(vl+gl*i))-n)/(dl+3*pl*i+o*(7*vl+9*gl*i)))*r)*i*i,!(fu(e)<eu));++a);return[yl*t*(dl+3*pl*i+o*(7*vl+9*gl*i))/hu(r),wu(yu(r)/yl)]},bl.invert=il(su),ml.invert=function(t,n){var e,r=n,i=25;do{var o=r*r,a=o*o;r-=e=(r*(1.007226+o*(.015085+a*(.028874*o-.044475-.005916*a)))-n)/(1.007226+o*(.045255+a*(.259866*o-.311325-.005916*11*a)))}while(fu(e)>nu&&--i>0);return[t/(.8707+(o=r*r)*(o*(o*o*o*(.003971-.001529*o)-.013791)-.131979)),r]},xl.invert=il(wu),wl.invert=il(function(t){return 2*su(t)}),Ml.invert=function(t,n){return[-n,2*su(pu(t))-iu]},zl.prototype=kl.prototype={constructor:zl,count:function(){return this.eachAfter(Sl)},each:function(t){var n,e,r,i,o=this,a=[o];do{for(n=a.reverse(),a=[];o=n.pop();)if(t(o),e=o.children)for(r=0,i=e.length;r<i;++r)a.push(e[r])}while(a.length);return this},eachAfter:function(t){for(var n,e,r,i=this,o=[i],a=[];i=o.pop();)if(a.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)o.push(n[e]);for(;i=a.pop();)t(i);return this},eachBefore:function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},sum:function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},sort:function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each(function(n){t.push(n)}),t},leaves:function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},links:function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n},copy:function(){return kl(this).eachBefore(Cl)}};var Rl=Array.prototype.slice;function Dl(t){for(var n,e,r=0,i=(t=function(t){for(var n,e,r=t.length;r;)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t}(Rl.call(t))).length,o=[];r<i;)n=t[r],e&&Ul(e,n)?++r:(e=Bl(o=ql(o,n)),r=0);return e}function ql(t,n){var e,r;if(Ol(n,t))return[n];for(e=0;e<t.length;++e)if(Ll(n,t[e])&&Ol(Fl(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(Ll(Fl(t[e],t[r]),n)&&Ll(Fl(t[e],n),t[r])&&Ll(Fl(t[r],n),t[e])&&Ol(Yl(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function Ll(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function Ul(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function Ol(t,n){for(var e=0;e<n.length;++e)if(!Ul(t,n[e]))return!1;return!0}function Bl(t){switch(t.length){case 1:return function(t){return{x:t.x,y:t.y,r:t.r}}(t[0]);case 2:return Fl(t[0],t[1]);case 3:return Yl(t[0],t[1],t[2])}}function Fl(t,n){var e=t.x,r=t.y,i=t.r,o=n.x,a=n.y,u=n.r,c=o-e,f=a-r,s=u-i,l=Math.sqrt(c*c+f*f);return{x:(e+o+c/l*s)/2,y:(r+a+f/l*s)/2,r:(l+i+u)/2}}function Yl(t,n,e){var r=t.x,i=t.y,o=t.r,a=n.x,u=n.y,c=n.r,f=e.x,s=e.y,l=e.r,h=r-a,d=r-f,p=i-u,v=i-s,g=c-o,y=l-o,_=r*r+i*i-o*o,b=_-a*a-u*u+c*c,m=_-f*f-s*s+l*l,x=d*p-h*v,w=(p*m-v*b)/(2*x)-r,M=(v*g-p*y)/x,N=(d*b-h*m)/(2*x)-i,T=(h*y-d*g)/x,A=M*M+T*T-1,S=2*(o+w*M+N*T),k=w*w+N*N-o*o,E=-(A?(S+Math.sqrt(S*S-4*A*k))/(2*A):k/S);return{x:r+w+M*E,y:i+N+T*E,r:E}}function Il(t,n,e){var r,i,o,a,u=t.x-n.x,c=t.y-n.y,f=u*u+c*c;f?(i=n.r+e.r,i*=i,a=t.r+e.r,i>(a*=a)?(r=(f+a-i)/(2*f),o=Math.sqrt(Math.max(0,a/f-r*r)),e.x=t.x-r*u-o*c,e.y=t.y-r*c+o*u):(r=(f+i-a)/(2*f),o=Math.sqrt(Math.max(0,i/f-r*r)),e.x=n.x+r*u-o*c,e.y=n.y+r*c+o*u)):(e.x=n.x+e.r,e.y=n.y)}function Hl(t,n){var e=t.r+n.r-1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function jl(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,o=(n.y*e.r+e.y*n.r)/r;return i*i+o*o}function Xl(t){this._=t,this.next=null,this.previous=null}function Vl(t){if(!(i=t.length))return 0;var n,e,r,i,o,a,u,c,f,s,l;if((n=t[0]).x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;Il(e,n,r=t[2]),n=new Xl(n),e=new Xl(e),r=new Xl(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(u=3;u<i;++u){Il(n._,e._,r=t[u]),r=new Xl(r),c=e.next,f=n.previous,s=e._.r,l=n._.r;do{if(s<=l){if(Hl(c._,r._)){e=c,n.next=e,e.previous=n,--u;continue t}s+=c._.r,c=c.next}else{if(Hl(f._,r._)){(n=f).next=e,e.previous=n,--u;continue t}l+=f._.r,f=f.previous}}while(c!==f.next);for(r.previous=n,r.next=e,n.next=e.previous=e=r,o=jl(n);(r=r.next)!==e;)(a=jl(r))<o&&(n=r,o=a);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=Dl(n),u=0;u<i;++u)(n=t[u]).x-=r.x,n.y-=r.y;return r.r}function Gl(t){return null==t?null:$l(t)}function $l(t){if("function"!=typeof t)throw new Error;return t}function Wl(){return 0}function Zl(t){return function(){return t}}function Ql(t){return Math.sqrt(t.value)}function Kl(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function Jl(t,n){return function(e){if(r=e.children){var r,i,o,a=r.length,u=t(e)*n||0;if(u)for(i=0;i<a;++i)r[i].r+=u;if(o=Vl(r),u)for(i=0;i<a;++i)r[i].r-=u;e.r=o+u}}}function th(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}function nh(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}function eh(t,n,e,r,i){for(var o,a=t.children,u=-1,c=a.length,f=t.value&&(r-n)/t.value;++u<c;)(o=a[u]).y0=e,o.y1=i,o.x0=n,o.x1=n+=o.value*f}var rh="$",ih={depth:-1},oh={};function ah(t){return t.id}function uh(t){return t.parentId}function ch(t,n){return t.parent===n.parent?1:2}function fh(t){var n=t.children;return n?n[0]:t.t}function sh(t){var n=t.children;return n?n[n.length-1]:t.t}function lh(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function hh(t,n,e){return t.a.parent===n.parent?t.a:e}function dh(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}function ph(t,n,e,r,i){for(var o,a=t.children,u=-1,c=a.length,f=t.value&&(i-e)/t.value;++u<c;)(o=a[u]).x0=n,o.x1=r,o.y0=e,o.y1=e+=o.value*f}dh.prototype=Object.create(zl.prototype);var vh=(1+Math.sqrt(5))/2;function gh(t,n,e,r,i,o){for(var a,u,c,f,s,l,h,d,p,v,g,y=[],_=n.children,b=0,m=0,x=_.length,w=n.value;b<x;){c=i-e,f=o-r;do{s=_[m++].value}while(!s&&m<x);for(l=h=s,g=s*s*(v=Math.max(f/c,c/f)/(w*t)),p=Math.max(h/g,g/l);m<x;++m){if(s+=u=_[m].value,u<l&&(l=u),u>h&&(h=u),g=s*s*v,(d=Math.max(h/g,g/l))>p){s-=u;break}p=d}y.push(a={value:s,dice:c<f,children:_.slice(b,m)}),a.dice?eh(a,e,r,i,w?r+=f*s/w:o):ph(a,e,r,w?e+=c*s/w:i,o),w-=s,b=m}return y}var yh=function t(n){function e(t,e,r,i,o){gh(n,t,e,r,i,o)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(vh);var _h=function t(n){function e(t,e,r,i,o){if((a=t._squarify)&&a.ratio===n)for(var a,u,c,f,s,l=-1,h=a.length,d=t.value;++l<h;){for(c=(u=a[l]).children,f=u.value=0,s=c.length;f<s;++f)u.value+=c[f].value;u.dice?eh(u,e,r,i,r+=(o-r)*u.value/d):ph(u,e,r,e+=(i-e)*u.value/d,o),d-=u.value}else t._squarify=a=gh(n,t,e,r,i,o),a.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(vh);function bh(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])}function mh(t,n){return t[0]-n[0]||t[1]-n[1]}function xh(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&bh(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}function wh(){return Math.random()}var Mh=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(wh),Nh=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var o;if(null!=r)o=r,r=null;else do{r=2*n()-1,o=2*n()-1,i=r*r+o*o}while(!i||i>1);return t+e*o*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(wh),Th=function t(n){function e(){var t=Nh.source(n).apply(this,arguments);return function(){return Math.exp(t())}}return e.source=t,e}(wh),Ah=function t(n){function e(t){return function(){for(var e=0,r=0;r<t;++r)e+=n();return e}}return e.source=t,e}(wh),Sh=function t(n){function e(t){var e=Ah.source(n)(t);return function(){return e()/t}}return e.source=t,e}(wh),kh=function t(n){function e(t){return function(){return-Math.log(1-n())/t}}return e.source=t,e}(wh);function Eh(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t)}return this}function Ch(t,n){switch(arguments.length){case 0:break;case 1:this.interpolator(t);break;default:this.interpolator(n).domain(t)}return this}var Ph=Array.prototype,zh=Ph.map,Rh=Ph.slice,Dh={name:"implicit"};function qh(){var t=co(),n=[],e=[],r=Dh;function i(i){var o=i+"",a=t.get(o);if(!a){if(r!==Dh)return r;t.set(o,a=n.push(i))}return e[(a-1)%e.length]}return i.domain=function(e){if(!arguments.length)return n.slice();n=[],t=co();for(var r,o,a=-1,u=e.length;++a<u;)t.has(o=(r=e[a])+"")||t.set(o,n.push(r));return i},i.range=function(t){return arguments.length?(e=Rh.call(t),i):e.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return qh(n,e).unknown(r)},Eh.apply(i,arguments),i}function Lh(){var t,n,e=qh().unknown(void 0),r=e.domain,i=e.range,o=[0,1],a=!1,u=0,c=0,f=.5;function s(){var e=r().length,s=o[1]<o[0],l=o[s-0],h=o[1-s];t=(h-l)/Math.max(1,e-u+2*c),a&&(t=Math.floor(t)),l+=(h-l-t*(e-u))*f,n=t*(1-u),a&&(l=Math.round(l),n=Math.round(n));var d=g(e).map(function(n){return l+t*n});return i(s?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),s()):r()},e.range=function(t){return arguments.length?(o=[+t[0],+t[1]],s()):o.slice()},e.rangeRound=function(t){return o=[+t[0],+t[1]],a=!0,s()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(a=!!t,s()):a},e.padding=function(t){return arguments.length?(u=Math.min(1,c=+t),s()):u},e.paddingInner=function(t){return arguments.length?(u=Math.min(1,t),s()):u},e.paddingOuter=function(t){return arguments.length?(c=+t,s()):c},e.align=function(t){return arguments.length?(f=Math.max(0,Math.min(1,t)),s()):f},e.copy=function(){return Lh(r(),o).round(a).paddingInner(u).paddingOuter(c).align(f)},Eh.apply(s(),arguments)}function Uh(t){return+t}var Oh=[0,1];function Bh(t){return t}function Fh(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:function(t){return function(){return t}}(isNaN(n)?NaN:.5)}function Yh(t){var n,e=t[0],r=t[t.length-1];return e>r&&(n=e,e=r,r=n),function(t){return Math.max(e,Math.min(r,t))}}function Ih(t,n,e){var r=t[0],i=t[1],o=n[0],a=n[1];return i<r?(r=Fh(i,r),o=e(a,o)):(r=Fh(r,i),o=e(o,a)),function(t){return o(r(t))}}function Hh(t,n,e){var r=Math.min(t.length,n.length)-1,o=new Array(r),a=new Array(r),u=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++u<r;)o[u]=Fh(t[u],t[u+1]),a[u]=e(n[u],n[u+1]);return function(n){var e=i(t,n,1,r)-1;return a[e](o[e](n))}}function jh(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function Xh(){var t,n,e,r,i,o,a=Oh,u=Oh,c=Te,f=Bh;function s(){return r=Math.min(a.length,u.length)>2?Hh:Ih,i=o=null,l}function l(n){return isNaN(n=+n)?e:(i||(i=r(a.map(t),u,c)))(t(f(n)))}return l.invert=function(e){return f(n((o||(o=r(u,a.map(t),me)))(e)))},l.domain=function(t){return arguments.length?(a=zh.call(t,Uh),f===Bh||(f=Yh(a)),s()):a.slice()},l.range=function(t){return arguments.length?(u=Rh.call(t),s()):u.slice()},l.rangeRound=function(t){return u=Rh.call(t),c=Ae,s()},l.clamp=function(t){return arguments.length?(f=t?Yh(a):Bh,l):f!==Bh},l.interpolate=function(t){return arguments.length?(c=t,s()):c},l.unknown=function(t){return arguments.length?(e=t,l):e},function(e,r){return t=e,n=r,s()}}function Vh(t,n){return Xh()(t,n)}function Gh(n,e,r,i){var o,a=w(n,e,r);switch((i=Oa(null==i?",f":i)).type){case"s":var u=Math.max(Math.abs(n),Math.abs(e));return null!=i.precision||isNaN(o=Wa(a,u))||(i.precision=o),t.formatPrefix(i,u);case"":case"e":case"g":case"p":case"r":null!=i.precision||isNaN(o=Za(a,Math.max(Math.abs(n),Math.abs(e))))||(i.precision=o-("e"===i.type));break;case"f":case"%":null!=i.precision||isNaN(o=$a(a))||(i.precision=o-2*("%"===i.type))}return t.format(i)}function $h(t){var n=t.domain;return t.ticks=function(t){var e=n();return m(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return Gh(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),o=0,a=i.length-1,u=i[o],c=i[a];return c<u&&(r=u,u=c,c=r,r=o,o=a,a=r),(r=x(u,c,e))>0?r=x(u=Math.floor(u/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=x(u=Math.ceil(u*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[o]=Math.floor(u/r)*r,i[a]=Math.ceil(c/r)*r,n(i)):r<0&&(i[o]=Math.ceil(u*r)/r,i[a]=Math.floor(c*r)/r,n(i)),t},t}function Wh(t,n){var e,r=0,i=(t=t.slice()).length-1,o=t[r],a=t[i];return a<o&&(e=r,r=i,i=e,e=o,o=a,a=e),t[r]=n.floor(o),t[i]=n.ceil(a),t}function Zh(t){return Math.log(t)}function Qh(t){return Math.exp(t)}function Kh(t){return-Math.log(-t)}function Jh(t){return-Math.exp(-t)}function td(t){return isFinite(t)?+("1e"+t):t<0?0:t}function nd(t){return function(n){return-t(-n)}}function ed(n){var e,r,i=n(Zh,Qh),o=i.domain,a=10;function u(){return e=function(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}(a),r=function(t){return 10===t?td:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}(a),o()[0]<0?(e=nd(e),r=nd(r),n(Kh,Jh)):n(Zh,Qh),i}return i.base=function(t){return arguments.length?(a=+t,u()):a},i.domain=function(t){return arguments.length?(o(t),u()):o()},i.ticks=function(t){var n,i=o(),u=i[0],c=i[i.length-1];(n=c<u)&&(h=u,u=c,c=h);var f,s,l,h=e(u),d=e(c),p=null==t?10:+t,v=[];if(!(a%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,u>0){for(;h<d;++h)for(s=1,f=r(h);s<a;++s)if(!((l=f*s)<u)){if(l>c)break;v.push(l)}}else for(;h<d;++h)for(s=a-1,f=r(h);s>=1;--s)if(!((l=f*s)<u)){if(l>c)break;v.push(l)}}else v=m(h,d,Math.min(d-h,p)).map(r);return n?v.reverse():v},i.tickFormat=function(n,o){if(null==o&&(o=10===a?".0e":","),"function"!=typeof o&&(o=t.format(o)),n===1/0)return o;null==n&&(n=10);var u=Math.max(1,a*n/i.ticks().length);return function(t){var n=t/r(Math.round(e(t)));return n*a<a-.5&&(n*=a),n<=u?o(t):""}},i.nice=function(){return o(Wh(o(),{floor:function(t){return r(Math.floor(e(t)))},ceil:function(t){return r(Math.ceil(e(t)))}}))},i}function rd(t){return function(n){return Math.sign(n)*Math.log1p(Math.abs(n/t))}}function id(t){return function(n){return Math.sign(n)*Math.expm1(Math.abs(n))*t}}function od(t){var n=1,e=t(rd(n),id(n));return e.constant=function(e){return arguments.length?t(rd(n=+e),id(n)):n},$h(e)}function ad(t){return function(n){return n<0?-Math.pow(-n,t):Math.pow(n,t)}}function ud(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function cd(t){return t<0?-t*t:t*t}function fd(t){var n=t(Bh,Bh),e=1;function r(){return 1===e?t(Bh,Bh):.5===e?t(ud,cd):t(ad(e),ad(1/e))}return n.exponent=function(t){return arguments.length?(e=+t,r()):e},$h(n)}function sd(){var t=fd(Xh());return t.copy=function(){return jh(t,sd()).exponent(t.exponent())},Eh.apply(t,arguments),t}var ld=new Date,hd=new Date;function dd(t,n,e,r){function i(n){return t(n=0===arguments.length?new Date:new Date(+n)),n}return i.floor=function(n){return t(n=new Date(+n)),n},i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var a,u=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return u;do{u.push(a=new Date(+e)),n(e,o),t(e)}while(a<e&&e<r);return u},i.filter=function(e){return dd(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return ld.setTime(+n),hd.setTime(+r),t(ld),t(hd),Math.floor(e(ld,hd))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var pd=dd(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});pd.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?dd(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):pd:null};var vd=pd.range,gd=6e4,yd=6048e5,_d=dd(function(t){t.setTime(t-t.getMilliseconds())},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),bd=_d.range,md=dd(function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds())},function(t,n){t.setTime(+t+n*gd)},function(t,n){return(n-t)/gd},function(t){return t.getMinutes()}),xd=md.range,wd=dd(function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds()-t.getMinutes()*gd)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()}),Md=wd.range,Nd=dd(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*gd)/864e5},function(t){return t.getDate()-1}),Td=Nd.range;function Ad(t){return dd(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*gd)/yd})}var Sd=Ad(0),kd=Ad(1),Ed=Ad(2),Cd=Ad(3),Pd=Ad(4),zd=Ad(5),Rd=Ad(6),Dd=Sd.range,qd=kd.range,Ld=Ed.range,Ud=Cd.range,Od=Pd.range,Bd=zd.range,Fd=Rd.range,Yd=dd(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),Id=Yd.range,Hd=dd(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});Hd.every=function(t){return isFinite(t=Math.floor(t))&&t>0?dd(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var jd=Hd.range,Xd=dd(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*gd)},function(t,n){return(n-t)/gd},function(t){return t.getUTCMinutes()}),Vd=Xd.range,Gd=dd(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()}),$d=Gd.range,Wd=dd(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1}),Zd=Wd.range;function Qd(t){return dd(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/yd})}var Kd=Qd(0),Jd=Qd(1),tp=Qd(2),np=Qd(3),ep=Qd(4),rp=Qd(5),ip=Qd(6),op=Kd.range,ap=Jd.range,up=tp.range,cp=np.range,fp=ep.range,sp=rp.range,lp=ip.range,hp=dd(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),dp=hp.range,pp=dd(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});pp.every=function(t){return isFinite(t=Math.floor(t))&&t>0?dd(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var vp=pp.range;function gp(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function yp(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function _p(t,n,e){return{y:t,m:n,d:e,H:0,M:0,S:0,L:0}}function bp(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,a=t.shortDays,u=t.months,c=t.shortMonths,f=Sp(i),s=kp(i),l=Sp(o),h=kp(o),d=Sp(a),p=kp(a),v=Sp(u),g=kp(u),y=Sp(c),_=kp(c),b={a:function(t){return a[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return u[t.getMonth()]},c:null,d:Wp,e:Wp,f:tv,H:Zp,I:Qp,j:Kp,L:Jp,m:nv,M:ev,p:function(t){return i[+(t.getHours()>=12)]},q:function(t){return 1+~~(t.getMonth()/3)},Q:Cv,s:Pv,S:rv,u:iv,U:ov,V:av,w:uv,W:cv,x:null,X:null,y:fv,Y:sv,Z:lv,"%":Ev},m={a:function(t){return a[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return u[t.getUTCMonth()]},c:null,d:hv,e:hv,f:yv,H:dv,I:pv,j:vv,L:gv,m:_v,M:bv,p:function(t){return i[+(t.getUTCHours()>=12)]},q:function(t){return 1+~~(t.getUTCMonth()/3)},Q:Cv,s:Pv,S:mv,u:xv,U:wv,V:Mv,w:Nv,W:Tv,x:null,X:null,y:Av,Y:Sv,Z:kv,"%":Ev},x={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=_[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=g[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return N(t,n,e,r)},d:Bp,e:Bp,f:Xp,H:Yp,I:Yp,j:Fp,L:jp,m:Op,M:Ip,p:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},q:Up,Q:Gp,s:$p,S:Hp,u:Cp,U:Pp,V:zp,w:Ep,W:Rp,x:function(t,n,r){return N(t,e,n,r)},X:function(t,n,e){return N(t,r,n,e)},y:qp,Y:Dp,Z:Lp,"%":Vp};function w(t,n){return function(e){var r,i,o,a=[],u=-1,c=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++u<f;)37===t.charCodeAt(u)&&(a.push(t.slice(c,u)),null!=(i=xp[r=t.charAt(++u)])?r=t.charAt(++u):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),a.push(r),c=u+1);return a.push(t.slice(c,u)),a.join("")}}function M(t,n){return function(e){var r,i,o=_p(1900,void 0,1);if(N(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("s"in o)return new Date(1e3*o.s+("L"in o?o.L:0));if(!n||"Z"in o||(o.Z=0),"p"in o&&(o.H=o.H%12+12*o.p),void 0===o.m&&(o.m="q"in o?o.q:0),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(i=(r=yp(_p(o.y,0,1))).getUTCDay(),r=i>4||0===i?Jd.ceil(r):Jd(r),r=Wd.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(i=(r=gp(_p(o.y,0,1))).getDay(),r=i>4||0===i?kd.ceil(r):kd(r),r=Nd.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?yp(_p(o.y,0,1)).getUTCDay():gp(_p(o.y,0,1)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,yp(o)):gp(o)}}function N(t,n,e,r){for(var i,o,a=0,u=n.length,c=e.length;a<u;){if(r>=c)return-1;if(37===(i=n.charCodeAt(a++))){if(i=n.charAt(a++),!(o=x[i in xp?n.charAt(a++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return b.x=w(e,b),b.X=w(r,b),b.c=w(n,b),m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),{format:function(t){var n=w(t+="",b);return n.toString=function(){return t},n},parse:function(t){var n=M(t+="",!1);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+="",m);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t+="",!0);return n.toString=function(){return t},n}}}var mp,xp={"-":"",_:" ",0:"0"},wp=/^\s*\d+/,Mp=/^%/,Np=/[\\^$*+?|[\]().{}]/g;function Tp(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function Ap(t){return t.replace(Np,"\\$&")}function Sp(t){return new RegExp("^(?:"+t.map(Ap).join("|")+")","i")}function kp(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function Ep(t,n,e){var r=wp.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Cp(t,n,e){var r=wp.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Pp(t,n,e){var r=wp.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function zp(t,n,e){var r=wp.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Rp(t,n,e){var r=wp.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Dp(t,n,e){var r=wp.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function qp(t,n,e){var r=wp.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Lp(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function Up(t,n,e){var r=wp.exec(n.slice(e,e+1));return r?(t.q=3*r[0]-3,e+r[0].length):-1}function Op(t,n,e){var r=wp.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Bp(t,n,e){var r=wp.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Fp(t,n,e){var r=wp.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Yp(t,n,e){var r=wp.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Ip(t,n,e){var r=wp.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Hp(t,n,e){var r=wp.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function jp(t,n,e){var r=wp.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Xp(t,n,e){var r=wp.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Vp(t,n,e){var r=Mp.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Gp(t,n,e){var r=wp.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function $p(t,n,e){var r=wp.exec(n.slice(e));return r?(t.s=+r[0],e+r[0].length):-1}function Wp(t,n){return Tp(t.getDate(),n,2)}function Zp(t,n){return Tp(t.getHours(),n,2)}function Qp(t,n){return Tp(t.getHours()%12||12,n,2)}function Kp(t,n){return Tp(1+Nd.count(Hd(t),t),n,3)}function Jp(t,n){return Tp(t.getMilliseconds(),n,3)}function tv(t,n){return Jp(t,n)+"000"}function nv(t,n){return Tp(t.getMonth()+1,n,2)}function ev(t,n){return Tp(t.getMinutes(),n,2)}function rv(t,n){return Tp(t.getSeconds(),n,2)}function iv(t){var n=t.getDay();return 0===n?7:n}function ov(t,n){return Tp(Sd.count(Hd(t)-1,t),n,2)}function av(t,n){var e=t.getDay();return t=e>=4||0===e?Pd(t):Pd.ceil(t),Tp(Pd.count(Hd(t),t)+(4===Hd(t).getDay()),n,2)}function uv(t){return t.getDay()}function cv(t,n){return Tp(kd.count(Hd(t)-1,t),n,2)}function fv(t,n){return Tp(t.getFullYear()%100,n,2)}function sv(t,n){return Tp(t.getFullYear()%1e4,n,4)}function lv(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+Tp(n/60|0,"0",2)+Tp(n%60,"0",2)}function hv(t,n){return Tp(t.getUTCDate(),n,2)}function dv(t,n){return Tp(t.getUTCHours(),n,2)}function pv(t,n){return Tp(t.getUTCHours()%12||12,n,2)}function vv(t,n){return Tp(1+Wd.count(pp(t),t),n,3)}function gv(t,n){return Tp(t.getUTCMilliseconds(),n,3)}function yv(t,n){return gv(t,n)+"000"}function _v(t,n){return Tp(t.getUTCMonth()+1,n,2)}function bv(t,n){return Tp(t.getUTCMinutes(),n,2)}function mv(t,n){return Tp(t.getUTCSeconds(),n,2)}function xv(t){var n=t.getUTCDay();return 0===n?7:n}function wv(t,n){return Tp(Kd.count(pp(t)-1,t),n,2)}function Mv(t,n){var e=t.getUTCDay();return t=e>=4||0===e?ep(t):ep.ceil(t),Tp(ep.count(pp(t),t)+(4===pp(t).getUTCDay()),n,2)}function Nv(t){return t.getUTCDay()}function Tv(t,n){return Tp(Jd.count(pp(t)-1,t),n,2)}function Av(t,n){return Tp(t.getUTCFullYear()%100,n,2)}function Sv(t,n){return Tp(t.getUTCFullYear()%1e4,n,4)}function kv(){return"+0000"}function Ev(){return"%"}function Cv(t){return+t}function Pv(t){return Math.floor(+t/1e3)}function zv(n){return mp=bp(n),t.timeFormat=mp.format,t.timeParse=mp.parse,t.utcFormat=mp.utcFormat,t.utcParse=mp.utcParse,mp}zv({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var Rv=Date.prototype.toISOString?function(t){return t.toISOString()}:t.utcFormat("%Y-%m-%dT%H:%M:%S.%LZ");var Dv=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:t.utcParse("%Y-%m-%dT%H:%M:%S.%LZ"),qv=1e3,Lv=60*qv,Uv=60*Lv,Ov=24*Uv,Bv=7*Ov,Fv=30*Ov,Yv=365*Ov;function Iv(t){return new Date(t)}function Hv(t){return t instanceof Date?+t:+new Date(+t)}function jv(t,n,r,i,o,a,u,c,f){var s=Vh(Bh,Bh),l=s.invert,h=s.domain,d=f(".%L"),p=f(":%S"),v=f("%I:%M"),g=f("%I %p"),y=f("%a %d"),_=f("%b %d"),b=f("%B"),m=f("%Y"),x=[[u,1,qv],[u,5,5*qv],[u,15,15*qv],[u,30,30*qv],[a,1,Lv],[a,5,5*Lv],[a,15,15*Lv],[a,30,30*Lv],[o,1,Uv],[o,3,3*Uv],[o,6,6*Uv],[o,12,12*Uv],[i,1,Ov],[i,2,2*Ov],[r,1,Bv],[n,1,Fv],[n,3,3*Fv],[t,1,Yv]];function M(e){return(u(e)<e?d:a(e)<e?p:o(e)<e?v:i(e)<e?g:n(e)<e?r(e)<e?y:_:t(e)<e?b:m)(e)}function N(n,r,i,o){if(null==n&&(n=10),"number"==typeof n){var a=Math.abs(i-r)/n,u=e(function(t){return t[2]}).right(x,a);u===x.length?(o=w(r/Yv,i/Yv,n),n=t):u?(o=(u=x[a/x[u-1][2]<x[u][2]/a?u-1:u])[1],n=u[0]):(o=Math.max(w(r,i,n),1),n=c)}return null==o?n:n.every(o)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(zh.call(t,Hv)):h().map(Iv)},s.ticks=function(t,n){var e,r=h(),i=r[0],o=r[r.length-1],a=o<i;return a&&(e=i,i=o,o=e),e=(e=N(t,i,o,n))?e.range(i,o+1):[],a?e.reverse():e},s.tickFormat=function(t,n){return null==n?M:f(n)},s.nice=function(t,n){var e=h();return(t=N(t,e[0],e[e.length-1],n))?h(Wh(e,t)):s},s.copy=function(){return jh(s,jv(t,n,r,i,o,a,u,c,f))},s}function Xv(){var t,n,e,r,i,o=0,a=1,u=Bh,c=!1;function f(n){return isNaN(n=+n)?i:u(0===e?.5:(n=(r(n)-t)*e,c?Math.max(0,Math.min(1,n)):n))}return f.domain=function(i){return arguments.length?(t=r(o=+i[0]),n=r(a=+i[1]),e=t===n?0:1/(n-t),f):[o,a]},f.clamp=function(t){return arguments.length?(c=!!t,f):c},f.interpolator=function(t){return arguments.length?(u=t,f):u},f.unknown=function(t){return arguments.length?(i=t,f):i},function(i){return r=i,t=i(o),n=i(a),e=t===n?0:1/(n-t),f}}function Vv(t,n){return n.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function Gv(){var t=fd(Xv());return t.copy=function(){return Vv(t,Gv()).exponent(t.exponent())},Ch.apply(t,arguments)}function $v(){var t,n,e,r,i,o,a,u=0,c=.5,f=1,s=Bh,l=!1;function h(t){return isNaN(t=+t)?a:(t=.5+((t=+o(t))-n)*(t<n?r:i),s(l?Math.max(0,Math.min(1,t)):t))}return h.domain=function(a){return arguments.length?(t=o(u=+a[0]),n=o(c=+a[1]),e=o(f=+a[2]),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),h):[u,c,f]},h.clamp=function(t){return arguments.length?(l=!!t,h):l},h.interpolator=function(t){return arguments.length?(s=t,h):s},h.unknown=function(t){return arguments.length?(a=t,h):a},function(a){return o=a,t=a(u),n=a(c),e=a(f),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),h}}function Wv(){var t=fd($v());return t.copy=function(){return Vv(t,Wv()).exponent(t.exponent())},Ch.apply(t,arguments)}function Zv(t){for(var n=t.length/6|0,e=new Array(n),r=0;r<n;)e[r]="#"+t.slice(6*r,6*++r);return e}var Qv=Zv("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),Kv=Zv("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Jv=Zv("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),tg=Zv("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),ng=Zv("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),eg=Zv("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),rg=Zv("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),ig=Zv("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),og=Zv("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),ag=Zv("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");function ug(t){return pe(t[t.length-1])}var cg=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(Zv),fg=ug(cg),sg=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(Zv),lg=ug(sg),hg=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(Zv),dg=ug(hg),pg=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(Zv),vg=ug(pg),gg=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(Zv),yg=ug(gg),_g=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(Zv),bg=ug(_g),mg=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(Zv),xg=ug(mg),wg=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(Zv),Mg=ug(wg),Ng=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(Zv),Tg=ug(Ng),Ag=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(Zv),Sg=ug(Ag),kg=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(Zv),Eg=ug(kg),Cg=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(Zv),Pg=ug(Cg),zg=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(Zv),Rg=ug(zg),Dg=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(Zv),qg=ug(Dg),Lg=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(Zv),Ug=ug(Lg),Og=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(Zv),Bg=ug(Og),Fg=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(Zv),Yg=ug(Fg),Ig=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(Zv),Hg=ug(Ig),jg=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(Zv),Xg=ug(jg),Vg=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(Zv),Gg=ug(Vg),$g=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(Zv),Wg=ug($g),Zg=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(Zv),Qg=ug(Zg),Kg=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(Zv),Jg=ug(Kg),ty=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(Zv),ny=ug(ty),ey=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(Zv),ry=ug(ey),iy=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(Zv),oy=ug(iy),ay=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(Zv),uy=ug(ay);var cy=Qe(ee(300,.5,0),ee(-240,.5,1)),fy=Qe(ee(-100,.75,.35),ee(80,1.5,.8)),sy=Qe(ee(260,.75,.35),ee(80,1.5,.8)),ly=ee();var hy=_n(),dy=Math.PI/3,py=2*Math.PI/3;function vy(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var gy=vy(Zv("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),yy=vy(Zv("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),_y=vy(Zv("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),by=vy(Zv("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));function my(t){return function(){return t}}var xy=Math.abs,wy=Math.atan2,My=Math.cos,Ny=Math.max,Ty=Math.min,Ay=Math.sin,Sy=Math.sqrt,ky=1e-12,Ey=Math.PI,Cy=Ey/2,Py=2*Ey;function zy(t){return t>=1?Cy:t<=-1?-Cy:Math.asin(t)}function Ry(t){return t.innerRadius}function Dy(t){return t.outerRadius}function qy(t){return t.startAngle}function Ly(t){return t.endAngle}function Uy(t){return t&&t.padAngle}function Oy(t,n,e,r,i,o,a){var u=t-e,c=n-r,f=(a?o:-o)/Sy(u*u+c*c),s=f*c,l=-f*u,h=t+s,d=n+l,p=e+s,v=r+l,g=(h+p)/2,y=(d+v)/2,_=p-h,b=v-d,m=_*_+b*b,x=i-o,w=h*v-p*d,M=(b<0?-1:1)*Sy(Ny(0,x*x*m-w*w)),N=(w*b-_*M)/m,T=(-w*_-b*M)/m,A=(w*b+_*M)/m,S=(-w*_+b*M)/m,k=N-g,E=T-y,C=A-g,P=S-y;return k*k+E*E>C*C+P*P&&(N=A,T=S),{cx:N,cy:T,x01:-s,y01:-l,x11:N*(i/x-1),y11:T*(i/x-1)}}function By(t){this._context=t}function Fy(t){return new By(t)}function Yy(t){return t[0]}function Iy(t){return t[1]}function Hy(){var t=Yy,n=Iy,e=my(!0),r=null,i=Fy,o=null;function a(a){var u,c,f,s=a.length,l=!1;for(null==r&&(o=i(f=no())),u=0;u<=s;++u)!(u<s&&e(c=a[u],u,a))===l&&((l=!l)?o.lineStart():o.lineEnd()),l&&o.point(+t(c,u,a),+n(c,u,a));if(f)return o=null,f+""||null}return a.x=function(n){return arguments.length?(t="function"==typeof n?n:my(+n),a):t},a.y=function(t){return arguments.length?(n="function"==typeof t?t:my(+t),a):n},a.defined=function(t){return arguments.length?(e="function"==typeof t?t:my(!!t),a):e},a.curve=function(t){return arguments.length?(i=t,null!=r&&(o=i(r)),a):i},a.context=function(t){return arguments.length?(null==t?r=o=null:o=i(r=t),a):r},a}function jy(){var t=Yy,n=null,e=my(0),r=Iy,i=my(!0),o=null,a=Fy,u=null;function c(c){var f,s,l,h,d,p=c.length,v=!1,g=new Array(p),y=new Array(p);for(null==o&&(u=a(d=no())),f=0;f<=p;++f){if(!(f<p&&i(h=c[f],f,c))===v)if(v=!v)s=f,u.areaStart(),u.lineStart();else{for(u.lineEnd(),u.lineStart(),l=f-1;l>=s;--l)u.point(g[l],y[l]);u.lineEnd(),u.areaEnd()}v&&(g[f]=+t(h,f,c),y[f]=+e(h,f,c),u.point(n?+n(h,f,c):g[f],r?+r(h,f,c):y[f]))}if(d)return u=null,d+""||null}function f(){return Hy().defined(i).curve(a).context(o)}return c.x=function(e){return arguments.length?(t="function"==typeof e?e:my(+e),n=null,c):t},c.x0=function(n){return arguments.length?(t="function"==typeof n?n:my(+n),c):t},c.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:my(+t),c):n},c.y=function(t){return arguments.length?(e="function"==typeof t?t:my(+t),r=null,c):e},c.y0=function(t){return arguments.length?(e="function"==typeof t?t:my(+t),c):e},c.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:my(+t),c):r},c.lineX0=c.lineY0=function(){return f().x(t).y(e)},c.lineY1=function(){return f().x(t).y(r)},c.lineX1=function(){return f().x(n).y(e)},c.defined=function(t){return arguments.length?(i="function"==typeof t?t:my(!!t),c):i},c.curve=function(t){return arguments.length?(a=t,null!=o&&(u=a(o)),c):a},c.context=function(t){return arguments.length?(null==t?o=u=null:u=a(o=t),c):o},c}function Xy(t,n){return n<t?-1:n>t?1:n>=t?0:NaN}function Vy(t){return t}By.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var Gy=Wy(Fy);function $y(t){this._curve=t}function Wy(t){function n(n){return new $y(t(n))}return n._curve=t,n}function Zy(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(Wy(t)):n()._curve},t}function Qy(){return Zy(Hy().curve(Gy))}function Ky(){var t=jy().curve(Gy),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,o=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return Zy(e())},delete t.lineX0,t.lineEndAngle=function(){return Zy(r())},delete t.lineX1,t.lineInnerRadius=function(){return Zy(i())},delete t.lineY0,t.lineOuterRadius=function(){return Zy(o())},delete t.lineY1,t.curve=function(t){return arguments.length?n(Wy(t)):n()._curve},t}function Jy(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]}$y.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var t_=Array.prototype.slice;function n_(t){return t.source}function e_(t){return t.target}function r_(t){var n=n_,e=e_,r=Yy,i=Iy,o=null;function a(){var a,u=t_.call(arguments),c=n.apply(this,u),f=e.apply(this,u);if(o||(o=a=no()),t(o,+r.apply(this,(u[0]=c,u)),+i.apply(this,u),+r.apply(this,(u[0]=f,u)),+i.apply(this,u)),a)return o=null,a+""||null}return a.source=function(t){return arguments.length?(n=t,a):n},a.target=function(t){return arguments.length?(e=t,a):e},a.x=function(t){return arguments.length?(r="function"==typeof t?t:my(+t),a):r},a.y=function(t){return arguments.length?(i="function"==typeof t?t:my(+t),a):i},a.context=function(t){return arguments.length?(o=null==t?null:t,a):o},a}function i_(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function o_(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function a_(t,n,e,r,i){var o=Jy(n,e),a=Jy(n,e=(e+i)/2),u=Jy(r,e),c=Jy(r,i);t.moveTo(o[0],o[1]),t.bezierCurveTo(a[0],a[1],u[0],u[1],c[0],c[1])}var u_={draw:function(t,n){var e=Math.sqrt(n/Ey);t.moveTo(e,0),t.arc(0,0,e,0,Py)}},c_={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},f_=Math.sqrt(1/3),s_=2*f_,l_={draw:function(t,n){var e=Math.sqrt(n/s_),r=e*f_;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},h_=Math.sin(Ey/10)/Math.sin(7*Ey/10),d_=Math.sin(Py/10)*h_,p_=-Math.cos(Py/10)*h_,v_={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=d_*e,i=p_*e;t.moveTo(0,-e),t.lineTo(r,i);for(var o=1;o<5;++o){var a=Py*o/5,u=Math.cos(a),c=Math.sin(a);t.lineTo(c*e,-u*e),t.lineTo(u*r-c*i,c*r+u*i)}t.closePath()}},g_={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},y_=Math.sqrt(3),__={draw:function(t,n){var e=-Math.sqrt(n/(3*y_));t.moveTo(0,2*e),t.lineTo(-y_*e,-e),t.lineTo(y_*e,-e),t.closePath()}},b_=Math.sqrt(3)/2,m_=1/Math.sqrt(12),x_=3*(m_/2+1),w_={draw:function(t,n){var e=Math.sqrt(n/x_),r=e/2,i=e*m_,o=r,a=e*m_+e,u=-o,c=a;t.moveTo(r,i),t.lineTo(o,a),t.lineTo(u,c),t.lineTo(-.5*r-b_*i,b_*r+-.5*i),t.lineTo(-.5*o-b_*a,b_*o+-.5*a),t.lineTo(-.5*u-b_*c,b_*u+-.5*c),t.lineTo(-.5*r+b_*i,-.5*i-b_*r),t.lineTo(-.5*o+b_*a,-.5*a-b_*o),t.lineTo(-.5*u+b_*c,-.5*c-b_*u),t.closePath()}},M_=[u_,c_,l_,g_,v_,__,w_];function N_(){}function T_(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function A_(t){this._context=t}function S_(t){this._context=t}function k_(t){this._context=t}function E_(t,n){this._basis=new A_(t),this._beta=n}A_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:T_(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:T_(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},S_.prototype={areaStart:N_,areaEnd:N_,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:T_(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},k_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:T_(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},E_.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],o=n[0],a=t[e]-i,u=n[e]-o,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*a),this._beta*n[c]+(1-this._beta)*(o+r*u));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var C_=function t(n){function e(t){return 1===n?new A_(t):new E_(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function P_(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function z_(t,n){this._context=t,this._k=(1-n)/6}z_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:P_(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:P_(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var R_=function t(n){function e(t){return new z_(t,n)}return e.tension=function(n){return t(+n)},e}(0);function D_(t,n){this._context=t,this._k=(1-n)/6}D_.prototype={areaStart:N_,areaEnd:N_,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:P_(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var q_=function t(n){function e(t){return new D_(t,n)}return e.tension=function(n){return t(+n)},e}(0);function L_(t,n){this._context=t,this._k=(1-n)/6}L_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:P_(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var U_=function t(n){function e(t){return new L_(t,n)}return e.tension=function(n){return t(+n)},e}(0);function O_(t,n,e){var r=t._x1,i=t._y1,o=t._x2,a=t._y2;if(t._l01_a>ky){var u=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*u-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*u-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>ky){var f=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*f+t._x1*t._l23_2a-n*t._l12_2a)/s,a=(a*f+t._y1*t._l23_2a-e*t._l12_2a)/s}t._context.bezierCurveTo(r,i,o,a,t._x2,t._y2)}function B_(t,n){this._context=t,this._alpha=n}B_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:O_(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var F_=function t(n){function e(t){return n?new B_(t,n):new z_(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Y_(t,n){this._context=t,this._alpha=n}Y_.prototype={areaStart:N_,areaEnd:N_,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:O_(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var I_=function t(n){function e(t){return n?new Y_(t,n):new D_(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function H_(t,n){this._context=t,this._alpha=n}H_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:O_(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var j_=function t(n){function e(t){return n?new H_(t,n):new L_(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function X_(t){this._context=t}function V_(t){return t<0?-1:1}function G_(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),a=(e-t._y1)/(i||r<0&&-0),u=(o*i+a*r)/(r+i);return(V_(o)+V_(a))*Math.min(Math.abs(o),Math.abs(a),.5*Math.abs(u))||0}function $_(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function W_(t,n,e){var r=t._x0,i=t._y0,o=t._x1,a=t._y1,u=(o-r)/3;t._context.bezierCurveTo(r+u,i+u*n,o-u,a-u*e,o,a)}function Z_(t){this._context=t}function Q_(t){this._context=new K_(t)}function K_(t){this._context=t}function J_(t){this._context=t}function tb(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),a=new Array(r);for(i[0]=0,o[0]=2,a[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,a[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,a[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,a[n]-=e*a[n-1];for(i[r-1]=a[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(a[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}function nb(t,n){this._context=t,this._t=n}function eb(t,n){if((i=t.length)>1)for(var e,r,i,o=1,a=t[n[0]],u=a.length;o<i;++o)for(r=a,a=t[n[o]],e=0;e<u;++e)a[e][1]+=a[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]}function rb(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e}function ib(t,n){return t[n]}function ob(t){var n=t.map(ab);return rb(t).sort(function(t,e){return n[t]-n[e]})}function ab(t){for(var n,e=-1,r=0,i=t.length,o=-1/0;++e<i;)(n=+t[e][1])>o&&(o=n,r=e);return r}function ub(t){var n=t.map(cb);return rb(t).sort(function(t,e){return n[t]-n[e]})}function cb(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}function fb(t){return function(){return t}}function sb(t){return t[0]}function lb(t){return t[1]}function hb(){this._=null}function db(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function pb(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function vb(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function gb(t){for(;t.L;)t=t.L;return t}function yb(t,n,e,r){var i=[null,null],o=Yb.push(i)-1;return i.left=t,i.right=n,e&&bb(i,t,n,e),r&&bb(i,n,t,r),Bb[t.index].halfedges.push(o),Bb[n.index].halfedges.push(o),i}function _b(t,n,e){var r=[n,e];return r.left=t,r}function bb(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function mb(t,n,e,r,i){var o,a=t[0],u=t[1],c=a[0],f=a[1],s=0,l=1,h=u[0]-c,d=u[1]-f;if(o=n-c,h||!(o>0)){if(o/=h,h<0){if(o<s)return;o<l&&(l=o)}else if(h>0){if(o>l)return;o>s&&(s=o)}if(o=r-c,h||!(o<0)){if(o/=h,h<0){if(o>l)return;o>s&&(s=o)}else if(h>0){if(o<s)return;o<l&&(l=o)}if(o=e-f,d||!(o>0)){if(o/=d,d<0){if(o<s)return;o<l&&(l=o)}else if(d>0){if(o>l)return;o>s&&(s=o)}if(o=i-f,d||!(o<0)){if(o/=d,d<0){if(o>l)return;o>s&&(s=o)}else if(d>0){if(o<s)return;o<l&&(l=o)}return!(s>0||l<1)||(s>0&&(t[0]=[c+s*h,f+s*d]),l<1&&(t[1]=[c+l*h,f+l*d]),!0)}}}}}function xb(t,n,e,r,i){var o=t[1];if(o)return!0;var a,u,c=t[0],f=t.left,s=t.right,l=f[0],h=f[1],d=s[0],p=s[1],v=(l+d)/2,g=(h+p)/2;if(p===h){if(v<n||v>=r)return;if(l>d){if(c){if(c[1]>=i)return}else c=[v,e];o=[v,i]}else{if(c){if(c[1]<e)return}else c=[v,i];o=[v,e]}}else if(u=g-(a=(l-d)/(p-h))*v,a<-1||a>1)if(l>d){if(c){if(c[1]>=i)return}else c=[(e-u)/a,e];o=[(i-u)/a,i]}else{if(c){if(c[1]<e)return}else c=[(i-u)/a,i];o=[(e-u)/a,e]}else if(h<p){if(c){if(c[0]>=r)return}else c=[n,a*n+u];o=[r,a*r+u]}else{if(c){if(c[0]<n)return}else c=[r,a*r+u];o=[n,a*n+u]}return t[0]=c,t[1]=o,!0}function wb(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function Mb(t,n){return n[+(n.left!==t.site)]}function Nb(t,n){return n[+(n.left===t.site)]}X_.prototype={areaStart:N_,areaEnd:N_,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}},Z_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:W_(this,this._t0,$_(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,W_(this,$_(this,e=G_(this,t,n)),e);break;default:W_(this,this._t0,e=G_(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(Q_.prototype=Object.create(Z_.prototype)).point=function(t,n){Z_.prototype.point.call(this,n,t)},K_.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},J_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=tb(t),i=tb(n),o=0,a=1;a<e;++o,++a)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[a],n[a]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}},nb.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}},hb.prototype={constructor:hb,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=gb(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(pb(this,e),e=(t=e).U),e.C=!1,r.C=!0,vb(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(vb(this,e),e=(t=e).U),e.C=!1,r.C=!0,pb(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,o=t.L,a=t.R;if(e=o?a?gb(a):o:a,i?i.L===t?i.L=e:i.R=e:this._=e,o&&a?(r=e.C,e.C=t.C,e.L=o,o.U=e,e!==a?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=a,a.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,pb(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,vb(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,pb(this,i),t=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,vb(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,pb(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,vb(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var Tb,Ab=[];function Sb(){db(this),this.x=this.y=this.arc=this.site=this.cy=null}function kb(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,o=e.site;if(r!==o){var a=i[0],u=i[1],c=r[0]-a,f=r[1]-u,s=o[0]-a,l=o[1]-u,h=2*(c*l-f*s);if(!(h>=-Hb)){var d=c*c+f*f,p=s*s+l*l,v=(l*d-f*p)/h,g=(c*p-s*d)/h,y=Ab.pop()||new Sb;y.arc=t,y.site=i,y.x=v+a,y.y=(y.cy=g+u)+Math.sqrt(v*v+g*g),t.circle=y;for(var _=null,b=Fb._;b;)if(y.y<b.y||y.y===b.y&&y.x<=b.x){if(!b.L){_=b.P;break}b=b.L}else{if(!b.R){_=b;break}b=b.R}Fb.insert(_,y),_||(Tb=y)}}}}function Eb(t){var n=t.circle;n&&(n.P||(Tb=n.N),Fb.remove(n),Ab.push(n),db(n),t.circle=null)}var Cb=[];function Pb(){db(this),this.edge=this.site=this.circle=null}function zb(t){var n=Cb.pop()||new Pb;return n.site=t,n}function Rb(t){Eb(t),Ob.remove(t),Cb.push(t),db(t)}function Db(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],o=t.P,a=t.N,u=[t];Rb(t);for(var c=o;c.circle&&Math.abs(e-c.circle.x)<Ib&&Math.abs(r-c.circle.cy)<Ib;)o=c.P,u.unshift(c),Rb(c),c=o;u.unshift(c),Eb(c);for(var f=a;f.circle&&Math.abs(e-f.circle.x)<Ib&&Math.abs(r-f.circle.cy)<Ib;)a=f.N,u.push(f),Rb(f),f=a;u.push(f),Eb(f);var s,l=u.length;for(s=1;s<l;++s)f=u[s],c=u[s-1],bb(f.edge,c.site,f.site,i);c=u[0],(f=u[l-1]).edge=yb(c.site,f.site,null,i),kb(c),kb(f)}function qb(t){for(var n,e,r,i,o=t[0],a=t[1],u=Ob._;u;)if((r=Lb(u,a)-o)>Ib)u=u.L;else{if(!((i=o-Ub(u,a))>Ib)){r>-Ib?(n=u.P,e=u):i>-Ib?(n=u,e=u.N):n=e=u;break}if(!u.R){n=u;break}u=u.R}!function(t){Bb[t.index]={site:t,halfedges:[]}}(t);var c=zb(t);if(Ob.insert(n,c),n||e){if(n===e)return Eb(n),e=zb(n.site),Ob.insert(c,e),c.edge=e.edge=yb(n.site,c.site),kb(n),void kb(e);if(e){Eb(n),Eb(e);var f=n.site,s=f[0],l=f[1],h=t[0]-s,d=t[1]-l,p=e.site,v=p[0]-s,g=p[1]-l,y=2*(h*g-d*v),_=h*h+d*d,b=v*v+g*g,m=[(g*_-d*b)/y+s,(h*b-v*_)/y+l];bb(e.edge,f,p,m),c.edge=yb(f,t,null,m),e.edge=yb(t,p,null,m),kb(n),kb(e)}else c.edge=yb(n.site,c.site)}}function Lb(t,n){var e=t.site,r=e[0],i=e[1],o=i-n;if(!o)return r;var a=t.P;if(!a)return-1/0;var u=(e=a.site)[0],c=e[1],f=c-n;if(!f)return u;var s=u-r,l=1/o-1/f,h=s/f;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*f)-c+f/2+i-o/2)))/l+r:(r+u)/2}function Ub(t,n){var e=t.N;if(e)return Lb(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var Ob,Bb,Fb,Yb,Ib=1e-6,Hb=1e-12;function jb(t,n,e){return(t[0]-e[0])*(n[1]-t[1])-(t[0]-n[0])*(e[1]-t[1])}function Xb(t,n){return n[1]-t[1]||n[0]-t[0]}function Vb(t,n){var e,r,i,o=t.sort(Xb).pop();for(Yb=[],Bb=new Array(t.length),Ob=new hb,Fb=new hb;;)if(i=Tb,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===e&&o[1]===r||(qb(o),e=o[0],r=o[1]),o=t.pop();else{if(!i)break;Db(i.arc)}if(function(){for(var t,n,e,r,i=0,o=Bb.length;i<o;++i)if((t=Bb[i])&&(r=(n=t.halfedges).length)){var a=new Array(r),u=new Array(r);for(e=0;e<r;++e)a[e]=e,u[e]=wb(t,Yb[n[e]]);for(a.sort(function(t,n){return u[n]-u[t]}),e=0;e<r;++e)u[e]=n[a[e]];for(e=0;e<r;++e)n[e]=u[e]}}(),n){var a=+n[0][0],u=+n[0][1],c=+n[1][0],f=+n[1][1];!function(t,n,e,r){for(var i,o=Yb.length;o--;)xb(i=Yb[o],t,n,e,r)&&mb(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>Ib||Math.abs(i[0][1]-i[1][1])>Ib)||delete Yb[o]}(a,u,c,f),function(t,n,e,r){var i,o,a,u,c,f,s,l,h,d,p,v,g=Bb.length,y=!0;for(i=0;i<g;++i)if(o=Bb[i]){for(a=o.site,u=(c=o.halfedges).length;u--;)Yb[c[u]]||c.splice(u,1);for(u=0,f=c.length;u<f;)p=(d=Nb(o,Yb[c[u]]))[0],v=d[1],l=(s=Mb(o,Yb[c[++u%f]]))[0],h=s[1],(Math.abs(p-l)>Ib||Math.abs(v-h)>Ib)&&(c.splice(u,0,Yb.push(_b(a,d,Math.abs(p-t)<Ib&&r-v>Ib?[t,Math.abs(l-t)<Ib?h:r]:Math.abs(v-r)<Ib&&e-p>Ib?[Math.abs(h-r)<Ib?l:e,r]:Math.abs(p-e)<Ib&&v-n>Ib?[e,Math.abs(l-e)<Ib?h:n]:Math.abs(v-n)<Ib&&p-t>Ib?[Math.abs(h-n)<Ib?l:t,n]:null))-1),++f);f&&(y=!1)}if(y){var _,b,m,x=1/0;for(i=0,y=null;i<g;++i)(o=Bb[i])&&(m=(_=(a=o.site)[0]-t)*_+(b=a[1]-n)*b)<x&&(x=m,y=o);if(y){var w=[t,n],M=[t,r],N=[e,r],T=[e,n];y.halfedges.push(Yb.push(_b(a=y.site,w,M))-1,Yb.push(_b(a,M,N))-1,Yb.push(_b(a,N,T))-1,Yb.push(_b(a,T,w))-1)}}for(i=0;i<g;++i)(o=Bb[i])&&(o.halfedges.length||delete Bb[i])}(a,u,c,f)}this.edges=Yb,this.cells=Bb,Ob=Fb=Yb=Bb=null}function Gb(t){return function(){return t}}function $b(t,n,e){this.target=t,this.type=n,this.transform=e}function Wb(t,n,e){this.k=t,this.x=n,this.y=e}Vb.prototype={constructor:Vb,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return Mb(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){if(o=(i=e.halfedges).length)for(var i,o,a,u=e.site,c=-1,f=n[i[o-1]],s=f.left===u?f.right:f.left;++c<o;)a=s,s=(f=n[i[c]]).left===u?f.right:f.left,a&&s&&r<a.index&&r<s.index&&jb(u,a,s)<0&&t.push([u.data,a.data,s.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,n,e){for(var r,i,o=this,a=o._found||0,u=o.cells.length;!(i=o.cells[a]);)if(++a>=u)return null;var c=t-i.site[0],f=n-i.site[1],s=c*c+f*f;do{i=o.cells[r=a],a=null,i.halfedges.forEach(function(e){var r=o.edges[e],u=r.left;if(u!==i.site&&u||(u=r.right)){var c=t-u[0],f=n-u[1],l=c*c+f*f;l<s&&(s=l,a=u.index)}})}while(null!==a);return o._found=r,null==e||s<=e*e?i.site:null}},Wb.prototype={constructor:Wb,scale:function(t){return 1===t?this:new Wb(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new Wb(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var Zb=new Wb(1,0,0);function Qb(t){for(;!t.__zoom;)if(!(t=t.parentNode))return Zb;return t.__zoom}function Kb(){t.event.stopImmediatePropagation()}function Jb(){t.event.preventDefault(),t.event.stopImmediatePropagation()}function tm(){return!t.event.ctrlKey&&!t.event.button}function nm(){var t=this;return t instanceof SVGElement?(t=t.ownerSVGElement||t).hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]:[[0,0],[t.clientWidth,t.clientHeight]]}function em(){return this.__zoom||Zb}function rm(){return-t.event.deltaY*(1===t.event.deltaMode?.05:t.event.deltaMode?1:.002)}function im(){return navigator.maxTouchPoints||"ontouchstart"in this}function om(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],o=t.invertY(n[0][1])-e[0][1],a=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),a>o?(o+a)/2:Math.min(0,o)||Math.max(0,a))}Qb.prototype=Wb.prototype,t.FormatSpecifier=Ba,t.active=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>xr&&e.name===n)return new Ur([[t]],yi,n,+r);return null},t.arc=function(){var t=Ry,n=Dy,e=my(0),r=null,i=qy,o=Ly,a=Uy,u=null;function c(){var c,f,s=+t.apply(this,arguments),l=+n.apply(this,arguments),h=i.apply(this,arguments)-Cy,d=o.apply(this,arguments)-Cy,p=xy(d-h),v=d>h;if(u||(u=c=no()),l<s&&(f=l,l=s,s=f),l>ky)if(p>Py-ky)u.moveTo(l*My(h),l*Ay(h)),u.arc(0,0,l,h,d,!v),s>ky&&(u.moveTo(s*My(d),s*Ay(d)),u.arc(0,0,s,d,h,v));else{var g,y,_=h,b=d,m=h,x=d,w=p,M=p,N=a.apply(this,arguments)/2,T=N>ky&&(r?+r.apply(this,arguments):Sy(s*s+l*l)),A=Ty(xy(l-s)/2,+e.apply(this,arguments)),S=A,k=A;if(T>ky){var E=zy(T/s*Ay(N)),C=zy(T/l*Ay(N));(w-=2*E)>ky?(m+=E*=v?1:-1,x-=E):(w=0,m=x=(h+d)/2),(M-=2*C)>ky?(_+=C*=v?1:-1,b-=C):(M=0,_=b=(h+d)/2)}var P=l*My(_),z=l*Ay(_),R=s*My(x),D=s*Ay(x);if(A>ky){var q,L=l*My(b),U=l*Ay(b),O=s*My(m),B=s*Ay(m);if(p<Ey&&(q=function(t,n,e,r,i,o,a,u){var c=e-t,f=r-n,s=a-i,l=u-o,h=l*c-s*f;if(!(h*h<ky))return[t+(h=(s*(n-o)-l*(t-i))/h)*c,n+h*f]}(P,z,O,B,L,U,R,D))){var F=P-q[0],Y=z-q[1],I=L-q[0],H=U-q[1],j=1/Ay(function(t){return t>1?0:t<-1?Ey:Math.acos(t)}((F*I+Y*H)/(Sy(F*F+Y*Y)*Sy(I*I+H*H)))/2),X=Sy(q[0]*q[0]+q[1]*q[1]);S=Ty(A,(s-X)/(j-1)),k=Ty(A,(l-X)/(j+1))}}M>ky?k>ky?(g=Oy(O,B,P,z,l,k,v),y=Oy(L,U,R,D,l,k,v),u.moveTo(g.cx+g.x01,g.cy+g.y01),k<A?u.arc(g.cx,g.cy,k,wy(g.y01,g.x01),wy(y.y01,y.x01),!v):(u.arc(g.cx,g.cy,k,wy(g.y01,g.x01),wy(g.y11,g.x11),!v),u.arc(0,0,l,wy(g.cy+g.y11,g.cx+g.x11),wy(y.cy+y.y11,y.cx+y.x11),!v),u.arc(y.cx,y.cy,k,wy(y.y11,y.x11),wy(y.y01,y.x01),!v))):(u.moveTo(P,z),u.arc(0,0,l,_,b,!v)):u.moveTo(P,z),s>ky&&w>ky?S>ky?(g=Oy(R,D,L,U,s,-S,v),y=Oy(P,z,O,B,s,-S,v),u.lineTo(g.cx+g.x01,g.cy+g.y01),S<A?u.arc(g.cx,g.cy,S,wy(g.y01,g.x01),wy(y.y01,y.x01),!v):(u.arc(g.cx,g.cy,S,wy(g.y01,g.x01),wy(g.y11,g.x11),!v),u.arc(0,0,s,wy(g.cy+g.y11,g.cx+g.x11),wy(y.cy+y.y11,y.cx+y.x11),v),u.arc(y.cx,y.cy,S,wy(y.y11,y.x11),wy(y.y01,y.x01),!v))):u.arc(0,0,s,x,m,v):u.lineTo(R,D)}else u.moveTo(0,0);if(u.closePath(),c)return u=null,c+""||null}return c.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +o.apply(this,arguments))/2-Ey/2;return[My(r)*e,Ay(r)*e]},c.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:my(+n),c):t},c.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:my(+t),c):n},c.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:my(+t),c):e},c.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:my(+t),c):r},c.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:my(+t),c):i},c.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:my(+t),c):o},c.padAngle=function(t){return arguments.length?(a="function"==typeof t?t:my(+t),c):a},c.context=function(t){return arguments.length?(u=null==t?null:t,c):u},c},t.area=jy,t.areaRadial=Ky,t.ascending=n,t.autoType=function(t){for(var n in t){var e,r,i=t[n].trim();if(i)if("true"===i)i=!0;else if("false"===i)i=!1;else if("NaN"===i)i=NaN;else if(isNaN(e=+i)){if(!(r=i.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)))continue;ra&&r[4]&&!r[7]&&(i=i.replace(/-/g,"/").replace(/T/," ")),i=new Date(i)}else i=e;else i=null;t[n]=i}return t},t.axisBottom=function(t){return F(D,t)},t.axisLeft=function(t){return F(q,t)},t.axisRight=function(t){return F(R,t)},t.axisTop=function(t){return F(z,t)},t.bisect=i,t.bisectLeft=o,t.bisectRight=i,t.bisector=e,t.blob=function(t,n){return fetch(t,n).then(ia)},t.brush=function(){return Yi(Ci)},t.brushSelection=function(t){var n=t.__brush;return n?n.dim.output(n.selection):null},t.brushX=function(){return Yi(ki)},t.brushY=function(){return Yi(Ei)},t.buffer=function(t,n){return fetch(t,n).then(oa)},t.chord=function(){var t=0,n=null,e=null,r=null;function i(i){var o,a,u,c,f,s,l=i.length,h=[],d=g(l),p=[],v=[],y=v.groups=new Array(l),_=new Array(l*l);for(o=0,f=-1;++f<l;){for(a=0,s=-1;++s<l;)a+=i[f][s];h.push(a),p.push(g(l)),o+=a}for(n&&d.sort(function(t,e){return n(h[t],h[e])}),e&&p.forEach(function(t,n){t.sort(function(t,r){return e(i[n][t],i[n][r])})}),c=(o=Gi(0,Vi-t*l)/o)?t:Vi/l,a=0,f=-1;++f<l;){for(u=a,s=-1;++s<l;){var b=d[f],m=p[b][s],x=i[b][m],w=a,M=a+=x*o;_[m*l+b]={index:b,subindex:m,startAngle:w,endAngle:M,value:x}}y[b]={index:b,startAngle:u,endAngle:a,value:h[b]},a+=c}for(f=-1;++f<l;)for(s=f-1;++s<l;){var N=_[s*l+f],T=_[f*l+s];(N.value||T.value)&&v.push(N.value<T.value?{source:T,target:N}:{source:N,target:T})}return r?v.sort(r):v}return i.padAngle=function(n){return arguments.length?(t=Gi(0,n),i):t},i.sortGroups=function(t){return arguments.length?(n=t,i):n},i.sortSubgroups=function(t){return arguments.length?(e=t,i):e},i.sortChords=function(t){return arguments.length?(null==t?r=null:(r=$i(t))._=t,i):r&&r._},i},t.clientPoint=Ot,t.cluster=function(){var t=Nl,n=1,e=1,r=!1;function i(i){var o,a=0;i.eachAfter(function(n){var e=n.children;e?(n.x=function(t){return t.reduce(Tl,0)/t.length}(e),n.y=function(t){return 1+t.reduce(Al,0)}(e)):(n.x=o?a+=t(n,o):0,n.y=0,o=n)});var u=function(t){for(var n;n=t.children;)t=n[0];return t}(i),c=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),f=u.x-t(u,c)/2,s=c.x+t(c,u)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-f)/(s-f)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},t.color=pn,t.contourDensity=function(){var t=ko,n=Eo,e=Co,r=960,i=500,o=20,a=2,u=3*o,c=r+2*u>>a,f=i+2*u>>a,s=bo(20);function l(r){var i=new Float32Array(c*f),l=new Float32Array(c*f);r.forEach(function(r,o,s){var l=+t(r,o,s)+u>>a,h=+n(r,o,s)+u>>a,d=+e(r,o,s);l>=0&&l<c&&h>=0&&h<f&&(i[l+h*c]+=d)}),Ao({width:c,height:f,data:i},{width:c,height:f,data:l},o>>a),So({width:c,height:f,data:l},{width:c,height:f,data:i},o>>a),Ao({width:c,height:f,data:i},{width:c,height:f,data:l},o>>a),So({width:c,height:f,data:l},{width:c,height:f,data:i},o>>a),Ao({width:c,height:f,data:i},{width:c,height:f,data:l},o>>a),So({width:c,height:f,data:l},{width:c,height:f,data:i},o>>a);var d=s(i);if(!Array.isArray(d)){var p=T(i);d=w(0,p,d),(d=g(0,Math.floor(p/d)*d,d)).shift()}return To().thresholds(d).size([c,f])(i).map(h)}function h(t){return t.value*=Math.pow(2,-2*a),t.coordinates.forEach(d),t}function d(t){t.forEach(p)}function p(t){t.forEach(v)}function v(t){t[0]=t[0]*Math.pow(2,a)-u,t[1]=t[1]*Math.pow(2,a)-u}function y(){return c=r+2*(u=3*o)>>a,f=i+2*u>>a,l}return l.x=function(n){return arguments.length?(t="function"==typeof n?n:bo(+n),l):t},l.y=function(t){return arguments.length?(n="function"==typeof t?t:bo(+t),l):n},l.weight=function(t){return arguments.length?(e="function"==typeof t?t:bo(+t),l):e},l.size=function(t){if(!arguments.length)return[r,i];var n=Math.ceil(t[0]),e=Math.ceil(t[1]);if(!(n>=0||n>=0))throw new Error("invalid size");return r=n,i=e,y()},l.cellSize=function(t){if(!arguments.length)return 1<<a;if(!((t=+t)>=1))throw new Error("invalid cell size");return a=Math.floor(Math.log(t)/Math.LN2),y()},l.thresholds=function(t){return arguments.length?(s="function"==typeof t?t:Array.isArray(t)?bo(yo.call(t)):bo(t),l):s},l.bandwidth=function(t){if(!arguments.length)return Math.sqrt(o*(o+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return o=Math.round((Math.sqrt(4*t*t+1)-1)/2),y()},l},t.contours=To,t.create=function(t){return Rt(Z(t).call(document.documentElement))},t.creator=Z,t.cross=function(t,n,e){var r,i,o,u,c=t.length,f=n.length,s=new Array(c*f);for(null==e&&(e=a),r=o=0;r<c;++r)for(u=t[r],i=0;i<f;++i,++o)s[o]=e(u,n[i]);return s},t.csv=fa,t.csvFormat=jo,t.csvFormatBody=Xo,t.csvFormatRow=Go,t.csvFormatRows=Vo,t.csvFormatValue=$o,t.csvParse=Io,t.csvParseRows=Ho,t.cubehelix=ee,t.curveBasis=function(t){return new A_(t)},t.curveBasisClosed=function(t){return new S_(t)},t.curveBasisOpen=function(t){return new k_(t)},t.curveBundle=C_,t.curveCardinal=R_,t.curveCardinalClosed=q_,t.curveCardinalOpen=U_,t.curveCatmullRom=F_,t.curveCatmullRomClosed=I_,t.curveCatmullRomOpen=j_,t.curveLinear=Fy,t.curveLinearClosed=function(t){return new X_(t)},t.curveMonotoneX=function(t){return new Z_(t)},t.curveMonotoneY=function(t){return new Q_(t)},t.curveNatural=function(t){return new J_(t)},t.curveStep=function(t){return new nb(t,.5)},t.curveStepAfter=function(t){return new nb(t,1)},t.curveStepBefore=function(t){return new nb(t,0)},t.customEvent=kt,t.descending=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},t.deviation=f,t.dispatch=I,t.drag=function(){var n,e,r,i,o=Gt,a=$t,u=Wt,c=Zt,f={},s=I("start","drag","end"),l=0,h=0;function d(t){t.on("mousedown.drag",p).filter(c).on("touchstart.drag",y).on("touchmove.drag",_).on("touchend.drag touchcancel.drag",b).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function p(){if(!i&&o.apply(this,arguments)){var u=m("mouse",a.apply(this,arguments),Bt,this,arguments);u&&(Rt(t.event.view).on("mousemove.drag",v,!0).on("mouseup.drag",g,!0),Ht(t.event.view),Yt(),r=!1,n=t.event.clientX,e=t.event.clientY,u("start"))}}function v(){if(It(),!r){var i=t.event.clientX-n,o=t.event.clientY-e;r=i*i+o*o>h}f.mouse("drag")}function g(){Rt(t.event.view).on("mousemove.drag mouseup.drag",null),jt(t.event.view,r),It(),f.mouse("end")}function y(){if(o.apply(this,arguments)){var n,e,r=t.event.changedTouches,i=a.apply(this,arguments),u=r.length;for(n=0;n<u;++n)(e=m(r[n].identifier,i,Ft,this,arguments))&&(Yt(),e("start"))}}function _(){var n,e,r=t.event.changedTouches,i=r.length;for(n=0;n<i;++n)(e=f[r[n].identifier])&&(It(),e("drag"))}function b(){var n,e,r=t.event.changedTouches,o=r.length;for(i&&clearTimeout(i),i=setTimeout(function(){i=null},500),n=0;n<o;++n)(e=f[r[n].identifier])&&(Yt(),e("end"))}function m(n,e,r,i,o){var a,c,h,p=r(e,n),v=s.copy();if(kt(new Vt(d,"beforestart",a,n,l,p[0],p[1],0,0,v),function(){return null!=(t.event.subject=a=u.apply(i,o))&&(c=a.x-p[0]||0,h=a.y-p[1]||0,!0)}))return function t(u){var s,g=p;switch(u){case"start":f[n]=t,s=l++;break;case"end":delete f[n],--l;case"drag":p=r(e,n),s=l}kt(new Vt(d,u,a,n,s,p[0]+c,p[1]+h,p[0]-g[0],p[1]-g[1],v),v.apply,v,[u,i,o])}}return d.filter=function(t){return arguments.length?(o="function"==typeof t?t:Xt(!!t),d):o},d.container=function(t){return arguments.length?(a="function"==typeof t?t:Xt(t),d):a},d.subject=function(t){return arguments.length?(u="function"==typeof t?t:Xt(t),d):u},d.touchable=function(t){return arguments.length?(c="function"==typeof t?t:Xt(!!t),d):c},d.on=function(){var t=s.on.apply(s,arguments);return t===s?d:t},d.clickDistance=function(t){return arguments.length?(h=(t=+t)*t,d):Math.sqrt(h)},d},t.dragDisable=Ht,t.dragEnable=jt,t.dsv=function(t,n,e,r){3===arguments.length&&"function"==typeof e&&(r=e,e=void 0);var i=Fo(t);return ua(n,e).then(function(t){return i.parse(t,r)})},t.dsvFormat=Fo,t.easeBack=si,t.easeBackIn=ci,t.easeBackInOut=si,t.easeBackOut=fi,t.easeBounce=ui,t.easeBounceIn=function(t){return 1-ui(1-t)},t.easeBounceInOut=function(t){return((t*=2)<=1?1-ui(1-t):ui(t-1)+1)/2},t.easeBounceOut=ui,t.easeCircle=Zr,t.easeCircleIn=function(t){return 1-Math.sqrt(1-t*t)},t.easeCircleInOut=Zr,t.easeCircleOut=function(t){return Math.sqrt(1- --t*t)},t.easeCubic=Ir,t.easeCubicIn=function(t){return t*t*t},t.easeCubicInOut=Ir,t.easeCubicOut=function(t){return--t*t*t+1},t.easeElastic=di,t.easeElasticIn=hi,t.easeElasticInOut=pi,t.easeElasticOut=di,t.easeExp=Wr,t.easeExpIn=function(t){return Math.pow(2,10*t-10)},t.easeExpInOut=Wr,t.easeExpOut=function(t){return 1-Math.pow(2,-10*t)},t.easeLinear=function(t){return+t},t.easePoly=Xr,t.easePolyIn=Hr,t.easePolyInOut=Xr,t.easePolyOut=jr,t.easeQuad=Yr,t.easeQuadIn=function(t){return t*t},t.easeQuadInOut=Yr,t.easeQuadOut=function(t){return t*(2-t)},t.easeSin=$r,t.easeSinIn=function(t){return 1-Math.cos(t*Gr)},t.easeSinInOut=$r,t.easeSinOut=function(t){return Math.sin(t*Gr)},t.entries=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},t.extent=s,t.forceCenter=function(t,n){var e;function r(){var r,i,o=e.length,a=0,u=0;for(r=0;r<o;++r)a+=(i=e[r]).x,u+=i.y;for(a=a/o-t,u=u/o-n,r=0;r<o;++r)(i=e[r]).x-=a,i.y-=u}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},t.forceCollide=function(t){var n,e,r=1,i=1;function o(){for(var t,o,u,c,f,s,l,h=n.length,d=0;d<i;++d)for(o=wa(n,Aa,Sa).visitAfter(a),t=0;t<h;++t)u=n[t],s=e[u.index],l=s*s,c=u.x+u.vx,f=u.y+u.vy,o.visit(p);function p(t,n,e,i,o){var a=t.data,h=t.r,d=s+h;if(!a)return n>c+d||i<c-d||e>f+d||o<f-d;if(a.index>u.index){var p=c-a.x-a.vx,v=f-a.y-a.vy,g=p*p+v*v;g<d*d&&(0===p&&(g+=(p=ya())*p),0===v&&(g+=(v=ya())*v),g=(d-(g=Math.sqrt(g)))/g*r,u.vx+=(p*=g)*(d=(h*=h)/(l+h)),u.vy+=(v*=g)*d,a.vx-=p*(d=1-d),a.vy-=v*d)}}}function a(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function u(){if(n){var r,i,o=n.length;for(e=new Array(o),r=0;r<o;++r)i=n[r],e[i.index]=+t(i,r,n)}}return"function"!=typeof t&&(t=ga(null==t?1:+t)),o.initialize=function(t){n=t,u()},o.iterations=function(t){return arguments.length?(i=+t,o):i},o.strength=function(t){return arguments.length?(r=+t,o):r},o.radius=function(n){return arguments.length?(t="function"==typeof n?n:ga(+n),u(),o):t},o},t.forceLink=function(t){var n,e,r,i,o,a=ka,u=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},c=ga(30),f=1;function s(r){for(var i=0,a=t.length;i<f;++i)for(var u,c,s,l,h,d,p,v=0;v<a;++v)c=(u=t[v]).source,l=(s=u.target).x+s.vx-c.x-c.vx||ya(),h=s.y+s.vy-c.y-c.vy||ya(),l*=d=((d=Math.sqrt(l*l+h*h))-e[v])/d*r*n[v],h*=d,s.vx-=l*(p=o[v]),s.vy-=h*p,c.vx+=l*(p=1-p),c.vy+=h*p}function l(){if(r){var u,c,f=r.length,s=t.length,l=co(r,a);for(u=0,i=new Array(f);u<s;++u)(c=t[u]).index=u,"object"!=typeof c.source&&(c.source=Ea(l,c.source)),"object"!=typeof c.target&&(c.target=Ea(l,c.target)),i[c.source.index]=(i[c.source.index]||0)+1,i[c.target.index]=(i[c.target.index]||0)+1;for(u=0,o=new Array(s);u<s;++u)c=t[u],o[u]=i[c.source.index]/(i[c.source.index]+i[c.target.index]);n=new Array(s),h(),e=new Array(s),d()}}function h(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+u(t[e],e,t)}function d(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+c(t[n],n,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,l()},s.links=function(n){return arguments.length?(t=n,l(),s):t},s.id=function(t){return arguments.length?(a=t,s):a},s.iterations=function(t){return arguments.length?(f=+t,s):f},s.strength=function(t){return arguments.length?(u="function"==typeof t?t:ga(+t),h(),s):u},s.distance=function(t){return arguments.length?(c="function"==typeof t?t:ga(+t),d(),s):c},s},t.forceManyBody=function(){var t,n,e,r,i=ga(-30),o=1,a=1/0,u=.81;function c(r){var i,o=t.length,a=wa(t,Ca,Pa).visitAfter(s);for(e=r,i=0;i<o;++i)n=t[i],a.visit(l)}function f(){if(t){var n,e,o=t.length;for(r=new Array(o),n=0;n<o;++n)e=t[n],r[e.index]=+i(e,n,t)}}function s(t){var n,e,i,o,a,u=0,c=0;if(t.length){for(i=o=a=0;a<4;++a)(n=t[a])&&(e=Math.abs(n.value))&&(u+=n.value,c+=e,i+=e*n.x,o+=e*n.y);t.x=i/c,t.y=o/c}else{(n=t).x=n.data.x,n.y=n.data.y;do{u+=r[n.data.index]}while(n=n.next)}t.value=u}function l(t,i,c,f){if(!t.value)return!0;var s=t.x-n.x,l=t.y-n.y,h=f-i,d=s*s+l*l;if(h*h/u<d)return d<a&&(0===s&&(d+=(s=ya())*s),0===l&&(d+=(l=ya())*l),d<o&&(d=Math.sqrt(o*d)),n.vx+=s*t.value*e/d,n.vy+=l*t.value*e/d),!0;if(!(t.length||d>=a)){(t.data!==n||t.next)&&(0===s&&(d+=(s=ya())*s),0===l&&(d+=(l=ya())*l),d<o&&(d=Math.sqrt(o*d)));do{t.data!==n&&(h=r[t.data.index]*e/d,n.vx+=s*h,n.vy+=l*h)}while(t=t.next)}}return c.initialize=function(n){t=n,f()},c.strength=function(t){return arguments.length?(i="function"==typeof t?t:ga(+t),f(),c):i},c.distanceMin=function(t){return arguments.length?(o=t*t,c):Math.sqrt(o)},c.distanceMax=function(t){return arguments.length?(a=t*t,c):Math.sqrt(a)},c.theta=function(t){return arguments.length?(u=t*t,c):Math.sqrt(u)},c},t.forceRadial=function(t,n,e){var r,i,o,a=ga(.1);function u(t){for(var a=0,u=r.length;a<u;++a){var c=r[a],f=c.x-n||1e-6,s=c.y-e||1e-6,l=Math.sqrt(f*f+s*s),h=(o[a]-l)*i[a]*t/l;c.vx+=f*h,c.vy+=s*h}}function c(){if(r){var n,e=r.length;for(i=new Array(e),o=new Array(e),n=0;n<e;++n)o[n]=+t(r[n],n,r),i[n]=isNaN(o[n])?0:+a(r[n],n,r)}}return"function"!=typeof t&&(t=ga(+t)),null==n&&(n=0),null==e&&(e=0),u.initialize=function(t){r=t,c()},u.strength=function(t){return arguments.length?(a="function"==typeof t?t:ga(+t),c(),u):a},u.radius=function(n){return arguments.length?(t="function"==typeof n?n:ga(+n),c(),u):t},u.x=function(t){return arguments.length?(n=+t,u):n},u.y=function(t){return arguments.length?(e=+t,u):e},u},t.forceSimulation=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),o=0,a=.6,u=co(),c=hr(s),f=I("tick","end");function s(){l(),f.call("tick",n),e<r&&(c.stop(),f.call("end",n))}function l(r){var c,f,s=t.length;void 0===r&&(r=1);for(var l=0;l<r;++l)for(e+=(o-e)*i,u.each(function(t){t(e)}),c=0;c<s;++c)null==(f=t[c]).fx?f.x+=f.vx*=a:(f.x=f.fx,f.vx=0),null==f.fy?f.y+=f.vy*=a:(f.y=f.fy,f.vy=0);return n}function h(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,null!=n.fx&&(n.x=n.fx),null!=n.fy&&(n.y=n.fy),isNaN(n.x)||isNaN(n.y)){var i=za*Math.sqrt(e),o=e*Ra;n.x=i*Math.cos(o),n.y=i*Math.sin(o)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function d(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),h(),n={tick:l,restart:function(){return c.restart(s),n},stop:function(){return c.stop(),n},nodes:function(e){return arguments.length?(t=e,h(),u.each(d),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(o=+t,n):o},velocityDecay:function(t){return arguments.length?(a=1-t,n):1-a},force:function(t,e){return arguments.length>1?(null==e?u.remove(t):u.set(t,d(e)),n):u.get(t)},find:function(n,e,r){var i,o,a,u,c,f=0,s=t.length;for(null==r?r=1/0:r*=r,f=0;f<s;++f)(a=(i=n-(u=t[f]).x)*i+(o=e-u.y)*o)<r&&(c=u,r=a);return c},on:function(t,e){return arguments.length>1?(f.on(t,e),n):f.on(t)}}},t.forceX=function(t){var n,e,r,i=ga(.1);function o(t){for(var i,o=0,a=n.length;o<a;++o)(i=n[o]).vx+=(r[o]-i.x)*e[o]*t}function a(){if(n){var o,a=n.length;for(e=new Array(a),r=new Array(a),o=0;o<a;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=ga(null==t?0:+t)),o.initialize=function(t){n=t,a()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:ga(+t),a(),o):i},o.x=function(n){return arguments.length?(t="function"==typeof n?n:ga(+n),a(),o):t},o},t.forceY=function(t){var n,e,r,i=ga(.1);function o(t){for(var i,o=0,a=n.length;o<a;++o)(i=n[o]).vy+=(r[o]-i.y)*e[o]*t}function a(){if(n){var o,a=n.length;for(e=new Array(a),r=new Array(a),o=0;o<a;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=ga(null==t?0:+t)),o.initialize=function(t){n=t,a()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:ga(+t),a(),o):i},o.y=function(n){return arguments.length?(t="function"==typeof n?n:ga(+n),a(),o):t},o},t.formatDefaultLocale=Ga,t.formatLocale=Va,t.formatSpecifier=Oa,t.geoAlbers=el,t.geoAlbersUsa=function(){var t,n,e,r,i,o,a=el(),u=nl().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=nl().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(t,n){o=[t,n]}};function s(t){var n=t[0],a=t[1];return o=null,e.point(n,a),o||(r.point(n,a),o)||(i.point(n,a),o)}function l(){return t=n=null,s}return s.invert=function(t){var n=a.scale(),e=a.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?u:i>=.166&&i<.234&&r>=-.214&&r<-.115?c:a).invert(t)},s.stream=function(e){return t&&n===e?t:(r=[a.stream(n=e),u.stream(e),c.stream(e)],i=r.length,t={point:function(t,n){for(var e=-1;++e<i;)r[e].point(t,n)},sphere:function(){for(var t=-1;++t<i;)r[t].sphere()},lineStart:function(){for(var t=-1;++t<i;)r[t].lineStart()},lineEnd:function(){for(var t=-1;++t<i;)r[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<i;)r[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<i;)r[t].polygonEnd()}});var r,i},s.precision=function(t){return arguments.length?(a.precision(t),u.precision(t),c.precision(t),l()):a.precision()},s.scale=function(t){return arguments.length?(a.scale(t),u.scale(.35*t),c.scale(t),s.translate(a.translate())):a.scale()},s.translate=function(t){if(!arguments.length)return a.translate();var n=a.scale(),o=+t[0],s=+t[1];return e=a.translate(t).clipExtent([[o-.455*n,s-.238*n],[o+.455*n,s+.238*n]]).stream(f),r=u.translate([o-.307*n,s+.201*n]).clipExtent([[o-.425*n+nu,s+.12*n+nu],[o-.214*n-nu,s+.234*n-nu]]).stream(f),i=c.translate([o-.205*n,s+.212*n]).clipExtent([[o-.214*n+nu,s+.166*n+nu],[o-.115*n-nu,s+.234*n-nu]]).stream(f),l()},s.fitExtent=function(t,n){return Is(s,t,n)},s.fitSize=function(t,n){return Hs(s,t,n)},s.fitWidth=function(t,n){return js(s,t,n)},s.fitHeight=function(t,n){return Xs(s,t,n)},s.scale(1070)},t.geoArea=function(t){return Uu.reset(),Cu(t,Ou),2*Uu},t.geoAzimuthalEqualArea=function(){return Qs(ol).scale(124.75).clipAngle(179.999)},t.geoAzimuthalEqualAreaRaw=ol,t.geoAzimuthalEquidistant=function(){return Qs(al).scale(79.4188).clipAngle(179.999)},t.geoAzimuthalEquidistantRaw=al,t.geoBounds=function(t){var n,e,r,i,o,a,u;if(Ju=Ku=-(Zu=Qu=1/0),ic=[],Cu(t,Mc),e=ic.length){for(ic.sort(zc),n=1,o=[r=ic[0]];n<e;++n)Rc(r,(i=ic[n])[0])||Rc(r,i[1])?(Pc(r[0],i[1])>Pc(r[0],r[1])&&(r[1]=i[1]),Pc(i[0],r[1])>Pc(r[0],r[1])&&(r[0]=i[0])):o.push(r=i);for(a=-1/0,n=0,r=o[e=o.length-1];n<=e;r=i,++n)i=o[n],(u=Pc(r[1],i[0]))>a&&(a=u,Zu=i[0],Ku=r[1])}return ic=oc=null,Zu===1/0||Qu===1/0?[[NaN,NaN],[NaN,NaN]]:[[Zu,Qu],[Ku,Ju]]},t.geoCentroid=function(t){ac=uc=cc=fc=sc=lc=hc=dc=pc=vc=gc=0,Cu(t,Dc);var n=pc,e=vc,r=gc,i=n*n+e*e+r*r;return i<eu&&(n=lc,e=hc,r=dc,uc<nu&&(n=cc,e=fc,r=sc),(i=n*n+e*e+r*r)<eu)?[NaN,NaN]:[lu(e,n)*uu,wu(r/bu(i))*uu]},t.geoCircle=function(){var t,n,e=Xc([0,0]),r=Xc(90),i=Xc(6),o={point:function(e,r){t.push(e=n(e,r)),e[0]*=uu,e[1]*=uu}};function a(){var a=e.apply(this,arguments),u=r.apply(this,arguments)*cu,c=i.apply(this,arguments)*cu;return t=[],n=$c(-a[0]*cu,-a[1]*cu,0).invert,Jc(o,u,c,1),a={type:"Polygon",coordinates:[t]},t=n=null,a}return a.center=function(t){return arguments.length?(e="function"==typeof t?t:Xc([+t[0],+t[1]]),a):e},a.radius=function(t){return arguments.length?(r="function"==typeof t?t:Xc(+t),a):r},a.precision=function(t){return arguments.length?(i="function"==typeof t?t:Xc(+t),a):i},a},t.geoClipAntimeridian=df,t.geoClipCircle=pf,t.geoClipExtent=function(){var t,n,e,r=0,i=0,o=960,a=500;return e={stream:function(e){return t&&n===e?t:t=yf(r,i,o,a)(n=e)},extent:function(u){return arguments.length?(r=+u[0][0],i=+u[0][1],o=+u[1][0],a=+u[1][1],t=n=null,e):[[r,i],[o,a]]}}},t.geoClipRectangle=yf,t.geoConicConformal=function(){return Js(sl).scale(109.5).parallels([30,30])},t.geoConicConformalRaw=sl,t.geoConicEqualArea=nl,t.geoConicEqualAreaRaw=tl,t.geoConicEquidistant=function(){return Js(hl).scale(131.154).center([0,13.9389])},t.geoConicEquidistantRaw=hl,t.geoContains=function(t,n){return(t&&Cf.hasOwnProperty(t.type)?Cf[t.type]:zf)(t,n)},t.geoDistance=Ef,t.geoEqualEarth=function(){return Qs(_l).scale(177.158)},t.geoEqualEarthRaw=_l,t.geoEquirectangular=function(){return Qs(ll).scale(152.63)},t.geoEquirectangularRaw=ll,t.geoGnomonic=function(){return Qs(bl).scale(144.049).clipAngle(60)},t.geoGnomonicRaw=bl,t.geoGraticule=Ff,t.geoGraticule10=function(){return Ff()()},t.geoIdentity=function(){var t,n,e,r,i,o,a,u=1,c=0,f=0,s=1,l=1,h=0,d=null,p=1,v=1,g=Bs({point:function(t,n){var e=b([t,n]);this.stream.point(e[0],e[1])}}),y=Yf;function _(){return p=u*s,v=u*l,o=a=null,b}function b(e){var r=e[0]*p,i=e[1]*v;if(h){var o=i*t-r*n;r=r*t+i*n,i=o}return[r+c,i+f]}return b.invert=function(e){var r=e[0]-c,i=e[1]-f;if(h){var o=i*t+r*n;r=r*t-i*n,i=o}return[r/p,i/v]},b.stream=function(t){return o&&a===t?o:o=g(y(a=t))},b.postclip=function(t){return arguments.length?(y=t,d=e=r=i=null,_()):y},b.clipExtent=function(t){return arguments.length?(y=null==t?(d=e=r=i=null,Yf):yf(d=+t[0][0],e=+t[0][1],r=+t[1][0],i=+t[1][1]),_()):null==d?null:[[d,e],[r,i]]},b.scale=function(t){return arguments.length?(u=+t,_()):u},b.translate=function(t){return arguments.length?(c=+t[0],f=+t[1],_()):[c,f]},b.angle=function(e){return arguments.length?(n=yu(h=e%360*cu),t=hu(h),_()):h*uu},b.reflectX=function(t){return arguments.length?(s=t?-1:1,_()):s<0},b.reflectY=function(t){return arguments.length?(l=t?-1:1,_()):l<0},b.fitExtent=function(t,n){return Is(b,t,n)},b.fitSize=function(t,n){return Hs(b,t,n)},b.fitWidth=function(t,n){return js(b,t,n)},b.fitHeight=function(t,n){return Xs(b,t,n)},b},t.geoInterpolate=function(t,n){var e=t[0]*cu,r=t[1]*cu,i=n[0]*cu,o=n[1]*cu,a=hu(r),u=yu(r),c=hu(o),f=yu(o),s=a*hu(e),l=a*yu(e),h=c*hu(i),d=c*yu(i),p=2*wu(bu(Mu(o-r)+a*c*Mu(i-e))),v=yu(p),g=p?function(t){var n=yu(t*=p)/v,e=yu(p-t)/v,r=e*s+n*h,i=e*l+n*d,o=e*u+n*f;return[lu(i,r)*uu,lu(o,bu(r*r+i*i))*uu]}:function(){return[e*uu,r*uu]};return g.distance=p,g},t.geoLength=Af,t.geoMercator=function(){return cl(ul).scale(961/au)},t.geoMercatorRaw=ul,t.geoNaturalEarth1=function(){return Qs(ml).scale(175.295)},t.geoNaturalEarth1Raw=ml,t.geoOrthographic=function(){return Qs(xl).scale(249.5).clipAngle(90+nu)},t.geoOrthographicRaw=xl,t.geoPath=function(t,n){var e,r,i=4.5;function o(t){return t&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),Cu(t,e(r))),r.result()}return o.area=function(t){return Cu(t,e($f)),$f.result()},o.measure=function(t){return Cu(t,e(Ds)),Ds.result()},o.bounds=function(t){return Cu(t,e(rs)),rs.result()},o.centroid=function(t){return Cu(t,e(ys)),ys.result()},o.projection=function(n){return arguments.length?(e=null==n?(t=null,Yf):(t=n).stream,o):t},o.context=function(t){return arguments.length?(r=null==t?(n=null,new Us):new Ss(n=t),"function"!=typeof i&&r.pointRadius(i),o):n},o.pointRadius=function(t){return arguments.length?(i="function"==typeof t?t:(r.pointRadius(+t),+t),o):i},o.projection(t).context(n)},t.geoProjection=Qs,t.geoProjectionMutator=Ks,t.geoRotation=Kc,t.geoStereographic=function(){return Qs(wl).scale(250).clipAngle(142)},t.geoStereographicRaw=wl,t.geoStream=Cu,t.geoTransform=function(t){return{stream:Bs(t)}},t.geoTransverseMercator=function(){var t=cl(Ml),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)},t.geoTransverseMercatorRaw=Ml,t.gray=function(t,n){return new Bn(t,0,0,null==n?1:n)},t.hcl=Xn,t.hierarchy=kl,t.histogram=function(){var t=v,n=s,e=M;function r(r){var o,a,u=r.length,c=new Array(u);for(o=0;o<u;++o)c[o]=t(r[o],o,r);var f=n(c),s=f[0],l=f[1],h=e(c,s,l);Array.isArray(h)||(h=w(s,l,h),h=g(Math.ceil(s/h)*h,l,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,v=new Array(d+1);for(o=0;o<=d;++o)(p=v[o]=[]).x0=o>0?h[o-1]:s,p.x1=o<d?h[o]:l;for(o=0;o<u;++o)s<=(a=c[o])&&a<=l&&v[i(h,a,0,d)].push(r[o]);return v}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:p(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:p([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?p(h.call(t)):p(t),r):e},r},t.hsl=Tn,t.html=pa,t.image=function(t,n){return new Promise(function(e,r){var i=new Image;for(var o in n)i[o]=n[o];i.onerror=r,i.onload=function(){e(i)},i.src=t})},t.interpolate=Te,t.interpolateArray=function(t,n){return(ye(n)?ge:_e)(t,n)},t.interpolateBasis=oe,t.interpolateBasisClosed=ae,t.interpolateBlues=Qg,t.interpolateBrBG=fg,t.interpolateBuGn=Sg,t.interpolateBuPu=Eg,t.interpolateCividis=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-t*(35.34-t*(2381.73-t*(6402.7-t*(7024.72-2710.57*t)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+t*(170.73+t*(52.82-t*(131.46-t*(176.58-67.37*t)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+t*(442.36-t*(2482.43-t*(6167.24-t*(6614.94-2475.67*t)))))))+")"},t.interpolateCool=sy,t.interpolateCubehelix=Ze,t.interpolateCubehelixDefault=cy,t.interpolateCubehelixLong=Qe,t.interpolateDate=be,t.interpolateDiscrete=function(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}},t.interpolateGnBu=Pg,t.interpolateGreens=Jg,t.interpolateGreys=ny,t.interpolateHcl=Ge,t.interpolateHclLong=$e,t.interpolateHsl=je,t.interpolateHslLong=Xe,t.interpolateHue=function(t,n){var e=fe(+t,+n);return function(t){var n=e(t);return n-360*Math.floor(n/360)}},t.interpolateInferno=_y,t.interpolateLab=function(t,n){var e=le((t=On(t)).l,(n=On(n)).l),r=le(t.a,n.a),i=le(t.b,n.b),o=le(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=o(n),t+""}},t.interpolateMagma=yy,t.interpolateNumber=me,t.interpolateNumberArray=ge,t.interpolateObject=xe,t.interpolateOrRd=Rg,t.interpolateOranges=uy,t.interpolatePRGn=lg,t.interpolatePiYG=dg,t.interpolatePlasma=by,t.interpolatePuBu=Ug,t.interpolatePuBuGn=qg,t.interpolatePuOr=vg,t.interpolatePuRd=Bg,t.interpolatePurples=ry,t.interpolateRainbow=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return ly.h=360*t-100,ly.s=1.5-1.5*n,ly.l=.8-.9*n,ly+""},t.interpolateRdBu=yg,t.interpolateRdGy=bg,t.interpolateRdPu=Yg,t.interpolateRdYlBu=xg,t.interpolateRdYlGn=Mg,t.interpolateReds=oy,t.interpolateRgb=he,t.interpolateRgbBasis=pe,t.interpolateRgbBasisClosed=ve,t.interpolateRound=Ae,t.interpolateSinebow=function(t){var n;return t=(.5-t)*Math.PI,hy.r=255*(n=Math.sin(t))*n,hy.g=255*(n=Math.sin(t+dy))*n,hy.b=255*(n=Math.sin(t+py))*n,hy+""},t.interpolateSpectral=Tg,t.interpolateString=Ne,t.interpolateTransformCss=qe,t.interpolateTransformSvg=Le,t.interpolateTurbo=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(34.61+t*(1172.33-t*(10793.56-t*(33300.12-t*(38394.49-14825.05*t)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+t*(557.33+t*(1225.33-t*(3574.96-t*(1073.77+707.56*t)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+t*(3211.1-t*(15327.97-t*(27814-t*(22569.18-6838.66*t)))))))+")"},t.interpolateViridis=gy,t.interpolateWarm=fy,t.interpolateYlGn=Xg,t.interpolateYlGnBu=Hg,t.interpolateYlOrBr=Gg,t.interpolateYlOrRd=Wg,t.interpolateZoom=Ie,t.interrupt=Pr,t.interval=function(t,n,e){var r=new lr,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?fr():+e,r.restart(function o(a){a+=i,r.restart(o,i+=n,e),t(a)},n,e),r)},t.isoFormat=Rv,t.isoParse=Dv,t.json=function(t,n){return fetch(t,n).then(la)},t.keys=function(t){var n=[];for(var e in t)n.push(e);return n},t.lab=On,t.lch=function(t,n,e,r){return 1===arguments.length?jn(t):new Vn(e,n,t,null==r?1:r)},t.line=Hy,t.lineRadial=Qy,t.linkHorizontal=function(){return r_(i_)},t.linkRadial=function(){var t=r_(a_);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t},t.linkVertical=function(){return r_(o_)},t.local=qt,t.map=co,t.matcher=nt,t.max=T,t.mean=function(t,n){var e,r=t.length,i=r,o=-1,a=0;if(null==n)for(;++o<r;)isNaN(e=u(t[o]))?--i:a+=e;else for(;++o<r;)isNaN(e=u(n(t[o],o,t)))?--i:a+=e;if(i)return a/i},t.median=function(t,e){var r,i=t.length,o=-1,a=[];if(null==e)for(;++o<i;)isNaN(r=u(t[o]))||a.push(r);else for(;++o<i;)isNaN(r=u(e(t[o],o,t)))||a.push(r);return N(a.sort(n),.5)},t.merge=A,t.min=S,t.mouse=Bt,t.namespace=W,t.namespaces=$,t.nest=function(){var t,n,e,r=[],i=[];function o(e,i,a,u){if(i>=r.length)return null!=t&&e.sort(t),null!=n?n(e):e;for(var c,f,s,l=-1,h=e.length,d=r[i++],p=co(),v=a();++l<h;)(s=p.get(c=d(f=e[l])+""))?s.push(f):p.set(c,[f]);return p.each(function(t,n){u(v,n,o(t,i,a,u))}),v}return e={object:function(t){return o(t,0,fo,so)},map:function(t){return o(t,0,lo,ho)},entries:function(t){return function t(e,o){if(++o>r.length)return e;var a,u=i[o-1];return null!=n&&o>=r.length?a=e.entries():(a=[],e.each(function(n,e){a.push({key:e,values:t(n,o)})})),null!=u?a.sort(function(t,n){return u(t.key,n.key)}):a}(o(t,0,lo,ho),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}},t.now=fr,t.pack=function(){var t=null,n=1,e=1,r=Wl;function i(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(Kl(t)).eachAfter(Jl(r,.5)).eachBefore(th(1)):i.eachBefore(Kl(Ql)).eachAfter(Jl(Wl,1)).eachAfter(Jl(r,i.r/Math.min(n,e))).eachBefore(th(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=Gl(n),i):t},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r="function"==typeof t?t:Zl(+t),i):r},i},t.packEnclose=Dl,t.packSiblings=function(t){return Vl(t),t},t.pairs=function(t,n){null==n&&(n=a);for(var e=0,r=t.length-1,i=t[0],o=new Array(r<0?0:r);e<r;)o[e]=n(i,i=t[++e]);return o},t.partition=function(){var t=1,n=1,e=0,r=!1;function i(i){var o=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/o,i.eachBefore(function(t,n){return function(r){r.children&&eh(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,o=r.y0,a=r.x1-e,u=r.y1-e;a<i&&(i=a=(i+a)/2),u<o&&(o=u=(o+u)/2),r.x0=i,r.y0=o,r.x1=a,r.y1=u}}(n,o)),r&&i.eachBefore(nh),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},t.path=no,t.permute=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},t.pie=function(){var t=Vy,n=Xy,e=null,r=my(0),i=my(Py),o=my(0);function a(a){var u,c,f,s,l,h=a.length,d=0,p=new Array(h),v=new Array(h),g=+r.apply(this,arguments),y=Math.min(Py,Math.max(-Py,i.apply(this,arguments)-g)),_=Math.min(Math.abs(y)/h,o.apply(this,arguments)),b=_*(y<0?-1:1);for(u=0;u<h;++u)(l=v[p[u]=u]=+t(a[u],u,a))>0&&(d+=l);for(null!=n?p.sort(function(t,e){return n(v[t],v[e])}):null!=e&&p.sort(function(t,n){return e(a[t],a[n])}),u=0,f=d?(y-h*b)/d:0;u<h;++u,g=s)c=p[u],s=g+((l=v[c])>0?l*f:0)+b,v[c]={data:a[c],index:u,value:l,startAngle:g,endAngle:s,padAngle:_};return v}return a.value=function(n){return arguments.length?(t="function"==typeof n?n:my(+n),a):t},a.sortValues=function(t){return arguments.length?(n=t,e=null,a):n},a.sort=function(t){return arguments.length?(e=t,n=null,a):e},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:my(+t),a):r},a.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:my(+t),a):i},a.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:my(+t),a):o},a},t.piecewise=function(t,n){for(var e=0,r=n.length-1,i=n[0],o=new Array(r<0?0:r);e<r;)o[e]=t(i,i=n[++e]);return function(t){var n=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return o[n](t-n)}},t.pointRadial=Jy,t.polygonArea=function(t){for(var n,e=-1,r=t.length,i=t[r-1],o=0;++e<r;)n=i,i=t[e],o+=n[1]*i[0]-n[0]*i[1];return o/2},t.polygonCentroid=function(t){for(var n,e,r=-1,i=t.length,o=0,a=0,u=t[i-1],c=0;++r<i;)n=u,u=t[r],c+=e=n[0]*u[1]-u[0]*n[1],o+=(n[0]+u[0])*e,a+=(n[1]+u[1])*e;return[o/(c*=3),a/c]},t.polygonContains=function(t,n){for(var e,r,i=t.length,o=t[i-1],a=n[0],u=n[1],c=o[0],f=o[1],s=!1,l=0;l<i;++l)e=(o=t[l])[0],(r=o[1])>u!=f>u&&a<(c-e)*(u-r)/(f-r)+e&&(s=!s),c=e,f=r;return s},t.polygonHull=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(mh),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var o=xh(r),a=xh(i),u=a[0]===o[0],c=a[a.length-1]===o[o.length-1],f=[];for(n=o.length-1;n>=0;--n)f.push(t[r[o[n]][2]]);for(n=+u;n<a.length-c;++n)f.push(t[r[a[n]][2]]);return f},t.polygonLength=function(t){for(var n,e,r=-1,i=t.length,o=t[i-1],a=o[0],u=o[1],c=0;++r<i;)n=a,e=u,n-=a=(o=t[r])[0],e-=u=o[1],c+=Math.sqrt(n*n+e*e);return c},t.precisionFixed=$a,t.precisionPrefix=Wa,t.precisionRound=Za,t.quadtree=wa,t.quantile=N,t.quantize=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},t.radialArea=Ky,t.radialLine=Qy,t.randomBates=Sh,t.randomExponential=kh,t.randomIrwinHall=Ah,t.randomLogNormal=Th,t.randomNormal=Nh,t.randomUniform=Mh,t.range=g,t.rgb=_n,t.ribbon=function(){var t=eo,n=ro,e=io,r=oo,i=ao,o=null;function a(){var a,u=Wi.call(arguments),c=t.apply(this,u),f=n.apply(this,u),s=+e.apply(this,(u[0]=c,u)),l=r.apply(this,u)-Xi,h=i.apply(this,u)-Xi,d=s*Ii(l),p=s*Hi(l),v=+e.apply(this,(u[0]=f,u)),g=r.apply(this,u)-Xi,y=i.apply(this,u)-Xi;if(o||(o=a=no()),o.moveTo(d,p),o.arc(0,0,s,l,h),l===g&&h===y||(o.quadraticCurveTo(0,0,v*Ii(g),v*Hi(g)),o.arc(0,0,v,g,y)),o.quadraticCurveTo(0,0,d,p),o.closePath(),a)return o=null,a+""||null}return a.radius=function(t){return arguments.length?(e="function"==typeof t?t:Zi(+t),a):e},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:Zi(+t),a):r},a.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:Zi(+t),a):i},a.source=function(n){return arguments.length?(t=n,a):t},a.target=function(t){return arguments.length?(n=t,a):n},a.context=function(t){return arguments.length?(o=null==t?null:t,a):o},a},t.scaleBand=Lh,t.scaleDiverging=function t(){var n=$h($v()(Bh));return n.copy=function(){return Vv(n,t())},Ch.apply(n,arguments)},t.scaleDivergingLog=function t(){var n=ed($v()).domain([.1,1,10]);return n.copy=function(){return Vv(n,t()).base(n.base())},Ch.apply(n,arguments)},t.scaleDivergingPow=Wv,t.scaleDivergingSqrt=function(){return Wv.apply(null,arguments).exponent(.5)},t.scaleDivergingSymlog=function t(){var n=od($v());return n.copy=function(){return Vv(n,t()).constant(n.constant())},Ch.apply(n,arguments)},t.scaleIdentity=function t(n){var e;function r(t){return isNaN(t=+t)?e:t}return r.invert=r,r.domain=r.range=function(t){return arguments.length?(n=zh.call(t,Uh),r):n.slice()},r.unknown=function(t){return arguments.length?(e=t,r):e},r.copy=function(){return t(n).unknown(e)},n=arguments.length?zh.call(n,Uh):[0,1],$h(r)},t.scaleImplicit=Dh,t.scaleLinear=function t(){var n=Vh(Bh,Bh);return n.copy=function(){return jh(n,t())},Eh.apply(n,arguments),$h(n)},t.scaleLog=function t(){var n=ed(Xh()).domain([1,10]);return n.copy=function(){return jh(n,t()).base(n.base())},Eh.apply(n,arguments),n},t.scaleOrdinal=qh,t.scalePoint=function(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(Lh.apply(null,arguments).paddingInner(1))},t.scalePow=sd,t.scaleQuantile=function t(){var e,r=[],o=[],a=[];function u(){var t=0,n=Math.max(1,o.length);for(a=new Array(n-1);++t<n;)a[t-1]=N(r,t/n);return c}function c(t){return isNaN(t=+t)?e:o[i(a,t)]}return c.invertExtent=function(t){var n=o.indexOf(t);return n<0?[NaN,NaN]:[n>0?a[n-1]:r[0],n<a.length?a[n]:r[r.length-1]]},c.domain=function(t){if(!arguments.length)return r.slice();r=[];for(var e,i=0,o=t.length;i<o;++i)null==(e=t[i])||isNaN(e=+e)||r.push(e);return r.sort(n),u()},c.range=function(t){return arguments.length?(o=Rh.call(t),u()):o.slice()},c.unknown=function(t){return arguments.length?(e=t,c):e},c.quantiles=function(){return a.slice()},c.copy=function(){return t().domain(r).range(o).unknown(e)},Eh.apply(c,arguments)},t.scaleQuantize=function t(){var n,e=0,r=1,o=1,a=[.5],u=[0,1];function c(t){return t<=t?u[i(a,t,0,o)]:n}function f(){var t=-1;for(a=new Array(o);++t<o;)a[t]=((t+1)*r-(t-o)*e)/(o+1);return c}return c.domain=function(t){return arguments.length?(e=+t[0],r=+t[1],f()):[e,r]},c.range=function(t){return arguments.length?(o=(u=Rh.call(t)).length-1,f()):u.slice()},c.invertExtent=function(t){var n=u.indexOf(t);return n<0?[NaN,NaN]:n<1?[e,a[0]]:n>=o?[a[o-1],r]:[a[n-1],a[n]]},c.unknown=function(t){return arguments.length?(n=t,c):c},c.thresholds=function(){return a.slice()},c.copy=function(){return t().domain([e,r]).range(u).unknown(n)},Eh.apply($h(c),arguments)},t.scaleSequential=function t(){var n=$h(Xv()(Bh));return n.copy=function(){return Vv(n,t())},Ch.apply(n,arguments)},t.scaleSequentialLog=function t(){var n=ed(Xv()).domain([1,10]);return n.copy=function(){return Vv(n,t()).base(n.base())},Ch.apply(n,arguments)},t.scaleSequentialPow=Gv,t.scaleSequentialQuantile=function t(){var e=[],r=Bh;function o(t){if(!isNaN(t=+t))return r((i(e,t)-1)/(e.length-1))}return o.domain=function(t){if(!arguments.length)return e.slice();e=[];for(var r,i=0,a=t.length;i<a;++i)null==(r=t[i])||isNaN(r=+r)||e.push(r);return e.sort(n),o},o.interpolator=function(t){return arguments.length?(r=t,o):r},o.copy=function(){return t(r).domain(e)},Ch.apply(o,arguments)},t.scaleSequentialSqrt=function(){return Gv.apply(null,arguments).exponent(.5)},t.scaleSequentialSymlog=function t(){var n=od(Xv());return n.copy=function(){return Vv(n,t()).constant(n.constant())},Ch.apply(n,arguments)},t.scaleSqrt=function(){return sd.apply(null,arguments).exponent(.5)},t.scaleSymlog=function t(){var n=od(Xh());return n.copy=function(){return jh(n,t()).constant(n.constant())},Eh.apply(n,arguments)},t.scaleThreshold=function t(){var n,e=[.5],r=[0,1],o=1;function a(t){return t<=t?r[i(e,t,0,o)]:n}return a.domain=function(t){return arguments.length?(e=Rh.call(t),o=Math.min(e.length,r.length-1),a):e.slice()},a.range=function(t){return arguments.length?(r=Rh.call(t),o=Math.min(e.length,r.length-1),a):r.slice()},a.invertExtent=function(t){var n=r.indexOf(t);return[e[n-1],e[n]]},a.unknown=function(t){return arguments.length?(n=t,a):n},a.copy=function(){return t().domain(e).range(r).unknown(n)},Eh.apply(a,arguments)},t.scaleTime=function(){return Eh.apply(jv(Hd,Yd,Sd,Nd,wd,md,_d,pd,t.timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},t.scaleUtc=function(){return Eh.apply(jv(pp,hp,Kd,Wd,Gd,Xd,_d,pd,t.utcFormat).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)},t.scan=function(t,e){if(r=t.length){var r,i,o=0,a=0,u=t[a];for(null==e&&(e=n);++o<r;)(e(i=t[o],u)<0||0!==e(u,u))&&(u=i,a=o);return 0===e(u,u)?a:void 0}},t.schemeAccent=Kv,t.schemeBlues=Zg,t.schemeBrBG=cg,t.schemeBuGn=Ag,t.schemeBuPu=kg,t.schemeCategory10=Qv,t.schemeDark2=Jv,t.schemeGnBu=Cg,t.schemeGreens=Kg,t.schemeGreys=ty,t.schemeOrRd=zg,t.schemeOranges=ay,t.schemePRGn=sg,t.schemePaired=tg,t.schemePastel1=ng,t.schemePastel2=eg,t.schemePiYG=hg,t.schemePuBu=Lg,t.schemePuBuGn=Dg,t.schemePuOr=pg,t.schemePuRd=Og,t.schemePurples=ey,t.schemeRdBu=gg,t.schemeRdGy=_g,t.schemeRdPu=Fg,t.schemeRdYlBu=mg,t.schemeRdYlGn=wg,t.schemeReds=iy,t.schemeSet1=rg,t.schemeSet2=ig,t.schemeSet3=og,t.schemeSpectral=Ng,t.schemeTableau10=ag,t.schemeYlGn=jg,t.schemeYlGnBu=Ig,t.schemeYlOrBr=Vg,t.schemeYlOrRd=$g,t.select=Rt,t.selectAll=function(t){return"string"==typeof t?new Pt([document.querySelectorAll(t)],[document.documentElement]):new Pt([null==t?[]:t],Ct)},t.selection=zt,t.selector=K,t.selectorAll=tt,t.set=go,t.shuffle=function(t,n,e){for(var r,i,o=(null==e?t.length:e)-(n=null==n?0:+n);o;)i=Math.random()*o--|0,r=t[o+n],t[o+n]=t[i+n],t[i+n]=r;return t},t.stack=function(){var t=my([]),n=rb,e=eb,r=ib;function i(i){var o,a,u=t.apply(this,arguments),c=i.length,f=u.length,s=new Array(f);for(o=0;o<f;++o){for(var l,h=u[o],d=s[o]=new Array(c),p=0;p<c;++p)d[p]=l=[0,+r(i[p],h,p,i)],l.data=i[p];d.key=h}for(o=0,a=n(s);o<f;++o)s[a[o]].index=o;return e(s,a),s}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:my(t_.call(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:my(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?rb:"function"==typeof t?t:my(t_.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?eb:t,i):e},i},t.stackOffsetDiverging=function(t,n){if((u=t.length)>0)for(var e,r,i,o,a,u,c=0,f=t[n[0]].length;c<f;++c)for(o=a=0,e=0;e<u;++e)(i=(r=t[n[e]][c])[1]-r[0])>0?(r[0]=o,r[1]=o+=i):i<0?(r[1]=a,r[0]=a+=i):(r[0]=0,r[1]=i)},t.stackOffsetExpand=function(t,n){if((r=t.length)>0){for(var e,r,i,o=0,a=t[0].length;o<a;++o){for(i=e=0;e<r;++e)i+=t[e][o][1]||0;if(i)for(e=0;e<r;++e)t[e][o][1]/=i}eb(t,n)}},t.stackOffsetNone=eb,t.stackOffsetSilhouette=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],o=i.length;r<o;++r){for(var a=0,u=0;a<e;++a)u+=t[a][r][1]||0;i[r][1]+=i[r][0]=-u/2}eb(t,n)}},t.stackOffsetWiggle=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,o=0,a=1;a<r;++a){for(var u=0,c=0,f=0;u<i;++u){for(var s=t[n[u]],l=s[a][1]||0,h=(l-(s[a-1][1]||0))/2,d=0;d<u;++d){var p=t[n[d]];h+=(p[a][1]||0)-(p[a-1][1]||0)}c+=l,f+=h*l}e[a-1][1]+=e[a-1][0]=o,c&&(o-=f/c)}e[a-1][1]+=e[a-1][0]=o,eb(t,n)}},t.stackOrderAppearance=ob,t.stackOrderAscending=ub,t.stackOrderDescending=function(t){return ub(t).reverse()},t.stackOrderInsideOut=function(t){var n,e,r=t.length,i=t.map(cb),o=ob(t),a=0,u=0,c=[],f=[];for(n=0;n<r;++n)e=o[n],a<u?(a+=i[e],c.push(e)):(u+=i[e],f.push(e));return f.reverse().concat(c)},t.stackOrderNone=rb,t.stackOrderReverse=function(t){return rb(t).reverse()},t.stratify=function(){var t=ah,n=uh;function e(e){var r,i,o,a,u,c,f,s=e.length,l=new Array(s),h={};for(i=0;i<s;++i)r=e[i],u=l[i]=new zl(r),null!=(c=t(r,i,e))&&(c+="")&&(h[f=rh+(u.id=c)]=f in h?oh:u);for(i=0;i<s;++i)if(u=l[i],null!=(c=n(e[i],i,e))&&(c+="")){if(!(a=h[rh+c]))throw new Error("missing: "+c);if(a===oh)throw new Error("ambiguous: "+c);a.children?a.children.push(u):a.children=[u],u.parent=a}else{if(o)throw new Error("multiple roots");o=u}if(!o)throw new Error("no root");if(o.parent=ih,o.eachBefore(function(t){t.depth=t.parent.depth+1,--s}).eachBefore(Pl),o.parent=null,s>0)throw new Error("cycle");return o}return e.id=function(n){return arguments.length?(t=$l(n),e):t},e.parentId=function(t){return arguments.length?(n=$l(t),e):n},e},t.style=ft,t.sum=function(t,n){var e,r=t.length,i=-1,o=0;if(null==n)for(;++i<r;)(e=+t[i])&&(o+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(o+=e);return o},t.svg=va,t.symbol=function(){var t=my(u_),n=my(64),e=null;function r(){var r;if(e||(e=r=no()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return r.type=function(n){return arguments.length?(t="function"==typeof n?n:my(n),r):t},r.size=function(t){return arguments.length?(n="function"==typeof t?t:my(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},t.symbolCircle=u_,t.symbolCross=c_,t.symbolDiamond=l_,t.symbolSquare=g_,t.symbolStar=v_,t.symbolTriangle=__,t.symbolWye=w_,t.symbols=M_,t.text=ua,t.thresholdFreedmanDiaconis=function(t,e,r){return t=d.call(t,u).sort(n),Math.ceil((r-e)/(2*(N(t,.75)-N(t,.25))*Math.pow(t.length,-1/3)))},t.thresholdScott=function(t,n,e){return Math.ceil((e-n)/(3.5*f(t)*Math.pow(t.length,-1/3)))},t.thresholdSturges=M,t.tickFormat=Gh,t.tickIncrement=x,t.tickStep=w,t.ticks=m,t.timeDay=Nd,t.timeDays=Td,t.timeFormatDefaultLocale=zv,t.timeFormatLocale=bp,t.timeFriday=zd,t.timeFridays=Bd,t.timeHour=wd,t.timeHours=Md,t.timeInterval=dd,t.timeMillisecond=pd,t.timeMilliseconds=vd,t.timeMinute=md,t.timeMinutes=xd,t.timeMonday=kd,t.timeMondays=qd,t.timeMonth=Yd,t.timeMonths=Id,t.timeSaturday=Rd,t.timeSaturdays=Fd,t.timeSecond=_d,t.timeSeconds=bd,t.timeSunday=Sd,t.timeSundays=Dd,t.timeThursday=Pd,t.timeThursdays=Od,t.timeTuesday=Ed,t.timeTuesdays=Ld,t.timeWednesday=Cd,t.timeWednesdays=Ud,t.timeWeek=Sd,t.timeWeeks=Dd,t.timeYear=Hd,t.timeYears=jd,t.timeout=yr,t.timer=hr,t.timerFlush=dr,t.touch=Ft,t.touches=function(t,n){null==n&&(n=Ut().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=Ot(t,n[e]);return i},t.transition=Or,t.transpose=k,t.tree=function(){var t=ch,n=1,e=1,r=null;function i(i){var c=function(t){for(var n,e,r,i,o,a=new dh(t,0),u=[a];n=u.pop();)if(r=n._.children)for(n.children=new Array(o=r.length),i=o-1;i>=0;--i)u.push(e=n.children[i]=new dh(r[i],i)),e.parent=n;return(a.parent=new dh(null,0)).children=[a],a}(i);if(c.eachAfter(o),c.parent.m=-c.z,c.eachBefore(a),r)i.eachBefore(u);else{var f=i,s=i,l=i;i.eachBefore(function(t){t.x<f.x&&(f=t),t.x>s.x&&(s=t),t.depth>l.depth&&(l=t)});var h=f===s?1:t(f,s)/2,d=h-f.x,p=n/(s.x+h+d),v=e/(l.depth||1);i.eachBefore(function(t){t.x=(t.x+d)*p,t.y=t.depth*v})}return i}function o(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,o=i.length;--o>=0;)(n=i[o]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var o=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-o):n.z=o}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,o=n,a=n,u=e,c=o.parent.children[0],f=o.m,s=a.m,l=u.m,h=c.m;u=sh(u),o=fh(o),u&&o;)c=fh(c),(a=sh(a)).a=n,(i=u.z+l-o.z-f+t(u._,o._))>0&&(lh(hh(u,n,r),n,i),f+=i,s+=i),l+=u.m,f+=o.m,h+=c.m,s+=a.m;u&&!sh(a)&&(a.t=u,a.m+=l-s),o&&!fh(c)&&(c.t=o,c.m+=f-h,r=n)}return r}(n,i,n.parent.A||r[0])}function a(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function u(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},t.treemap=function(){var t=yh,n=!1,e=1,r=1,i=[0],o=Wl,a=Wl,u=Wl,c=Wl,f=Wl;function s(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(l),i=[0],n&&t.eachBefore(nh),t}function l(n){var e=i[n.depth],r=n.x0+e,s=n.y0+e,l=n.x1-e,h=n.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),n.x0=r,n.y0=s,n.x1=l,n.y1=h,n.children&&(e=i[n.depth+1]=o(n)/2,r+=f(n)-e,s+=a(n)-e,(l-=u(n)-e)<r&&(r=l=(r+l)/2),(h-=c(n)-e)<s&&(s=h=(s+h)/2),t(n,r,s,l,h))}return s.round=function(t){return arguments.length?(n=!!t,s):n},s.size=function(t){return arguments.length?(e=+t[0],r=+t[1],s):[e,r]},s.tile=function(n){return arguments.length?(t=$l(n),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(o="function"==typeof t?t:Zl(+t),s):o},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(a="function"==typeof t?t:Zl(+t),s):a},s.paddingRight=function(t){return arguments.length?(u="function"==typeof t?t:Zl(+t),s):u},s.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:Zl(+t),s):c},s.paddingLeft=function(t){return arguments.length?(f="function"==typeof t?t:Zl(+t),s):f},s},t.treemapBinary=function(t,n,e,r,i){var o,a,u=t.children,c=u.length,f=new Array(c+1);for(f[0]=a=o=0;o<c;++o)f[o+1]=a+=u[o].value;!function t(n,e,r,i,o,a,c){if(n>=e-1){var s=u[n];return s.x0=i,s.y0=o,s.x1=a,void(s.y1=c)}for(var l=f[n],h=r/2+l,d=n+1,p=e-1;d<p;){var v=d+p>>>1;f[v]<h?d=v+1:p=v}h-f[d-1]<f[d]-h&&n+1<d&&--d;var g=f[d]-l,y=r-g;if(a-i>c-o){var _=(i*y+a*g)/r;t(n,d,g,i,o,_,c),t(d,e,y,_,o,a,c)}else{var b=(o*y+c*g)/r;t(n,d,g,i,o,a,b),t(d,e,y,i,b,a,c)}}(0,c,t.value,n,e,r,i)},t.treemapDice=eh,t.treemapResquarify=_h,t.treemapSlice=ph,t.treemapSliceDice=function(t,n,e,r,i){(1&t.depth?ph:eh)(t,n,e,r,i)},t.treemapSquarify=yh,t.tsv=sa,t.tsvFormat=Ko,t.tsvFormatBody=Jo,t.tsvFormatRow=na,t.tsvFormatRows=ta,t.tsvFormatValue=ea,t.tsvParse=Zo,t.tsvParseRows=Qo,t.utcDay=Wd,t.utcDays=Zd,t.utcFriday=rp,t.utcFridays=sp,t.utcHour=Gd,t.utcHours=$d,t.utcMillisecond=pd,t.utcMilliseconds=vd,t.utcMinute=Xd,t.utcMinutes=Vd,t.utcMonday=Jd,t.utcMondays=ap,t.utcMonth=hp,t.utcMonths=dp,t.utcSaturday=ip,t.utcSaturdays=lp,t.utcSecond=_d,t.utcSeconds=bd,t.utcSunday=Kd,t.utcSundays=op,t.utcThursday=ep,t.utcThursdays=fp,t.utcTuesday=tp,t.utcTuesdays=up,t.utcWednesday=np,t.utcWednesdays=cp,t.utcWeek=Kd,t.utcWeeks=op,t.utcYear=pp,t.utcYears=vp,t.values=function(t){var n=[];for(var e in t)n.push(t[e]);return n},t.variance=c,t.version="5.16.0",t.voronoi=function(){var t=sb,n=lb,e=null;function r(r){return new Vb(r.map(function(e,i){var o=[Math.round(t(e,i,r)/Ib)*Ib,Math.round(n(e,i,r)/Ib)*Ib];return o.index=i,o.data=e,o}),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t="function"==typeof n?n:fb(+n),r):t},r.y=function(t){return arguments.length?(n="function"==typeof t?t:fb(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},t.window=ct,t.xml=da,t.zip=function(){return k(arguments)},t.zoom=function(){var n,e,r=tm,i=nm,o=om,a=rm,u=im,c=[0,1/0],f=[[-1/0,-1/0],[1/0,1/0]],s=250,l=Ie,h=I("start","zoom","end"),d=500,p=150,v=0;function g(t){t.property("__zoom",em).on("wheel.zoom",M).on("mousedown.zoom",N).on("dblclick.zoom",T).filter(u).on("touchstart.zoom",A).on("touchmove.zoom",S).on("touchend.zoom touchcancel.zoom",k).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function y(t,n){return(n=Math.max(c[0],Math.min(c[1],n)))===t.k?t:new Wb(n,t.x,t.y)}function _(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new Wb(t.k,r,i)}function b(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function m(t,n,e){t.on("start.zoom",function(){x(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){x(this,arguments).end()}).tween("zoom",function(){var t=this,r=arguments,o=x(t,r),a=i.apply(t,r),u=null==e?b(a):"function"==typeof e?e.apply(t,r):e,c=Math.max(a[1][0]-a[0][0],a[1][1]-a[0][1]),f=t.__zoom,s="function"==typeof n?n.apply(t,r):n,h=l(f.invert(u).concat(c/f.k),s.invert(u).concat(c/s.k));return function(t){if(1===t)t=s;else{var n=h(t),e=c/n[2];t=new Wb(e,u[0]-n[0]*e,u[1]-n[1]*e)}o.zoom(null,t)}})}function x(t,n,e){return!e&&t.__zooming||new w(t,n)}function w(t,n){this.that=t,this.args=n,this.active=0,this.extent=i.apply(t,n),this.taps=0}function M(){if(r.apply(this,arguments)){var t=x(this,arguments),n=this.__zoom,e=Math.max(c[0],Math.min(c[1],n.k*Math.pow(2,a.apply(this,arguments)))),i=Bt(this);if(t.wheel)t.mouse[0][0]===i[0]&&t.mouse[0][1]===i[1]||(t.mouse[1]=n.invert(t.mouse[0]=i)),clearTimeout(t.wheel);else{if(n.k===e)return;t.mouse=[i,n.invert(i)],Pr(this),t.start()}Jb(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},p),t.zoom("mouse",o(_(y(n,e),t.mouse[0],t.mouse[1]),t.extent,f))}}function N(){if(!e&&r.apply(this,arguments)){var n=x(this,arguments,!0),i=Rt(t.event.view).on("mousemove.zoom",function(){if(Jb(),!n.moved){var e=t.event.clientX-u,r=t.event.clientY-c;n.moved=e*e+r*r>v}n.zoom("mouse",o(_(n.that.__zoom,n.mouse[0]=Bt(n.that),n.mouse[1]),n.extent,f))},!0).on("mouseup.zoom",function(){i.on("mousemove.zoom mouseup.zoom",null),jt(t.event.view,n.moved),Jb(),n.end()},!0),a=Bt(this),u=t.event.clientX,c=t.event.clientY;Ht(t.event.view),Kb(),n.mouse=[a,this.__zoom.invert(a)],Pr(this),n.start()}}function T(){if(r.apply(this,arguments)){var n=this.__zoom,e=Bt(this),a=n.invert(e),u=n.k*(t.event.shiftKey?.5:2),c=o(_(y(n,u),e,a),i.apply(this,arguments),f);Jb(),s>0?Rt(this).transition().duration(s).call(m,c,e):Rt(this).call(g.transform,c)}}function A(){if(r.apply(this,arguments)){var e,i,o,a,u=t.event.touches,c=u.length,f=x(this,arguments,t.event.changedTouches.length===c);for(Kb(),i=0;i<c;++i)a=[a=Ft(this,u,(o=u[i]).identifier),this.__zoom.invert(a),o.identifier],f.touch0?f.touch1||f.touch0[2]===a[2]||(f.touch1=a,f.taps=0):(f.touch0=a,e=!0,f.taps=1+!!n);n&&(n=clearTimeout(n)),e&&(f.taps<2&&(n=setTimeout(function(){n=null},d)),Pr(this),f.start())}}function S(){if(this.__zooming){var e,r,i,a,u=x(this,arguments),c=t.event.changedTouches,s=c.length;for(Jb(),n&&(n=clearTimeout(n)),u.taps=0,e=0;e<s;++e)i=Ft(this,c,(r=c[e]).identifier),u.touch0&&u.touch0[2]===r.identifier?u.touch0[0]=i:u.touch1&&u.touch1[2]===r.identifier&&(u.touch1[0]=i);if(r=u.that.__zoom,u.touch1){var l=u.touch0[0],h=u.touch0[1],d=u.touch1[0],p=u.touch1[1],v=(v=d[0]-l[0])*v+(v=d[1]-l[1])*v,g=(g=p[0]-h[0])*g+(g=p[1]-h[1])*g;r=y(r,Math.sqrt(v/g)),i=[(l[0]+d[0])/2,(l[1]+d[1])/2],a=[(h[0]+p[0])/2,(h[1]+p[1])/2]}else{if(!u.touch0)return;i=u.touch0[0],a=u.touch0[1]}u.zoom("touch",o(_(r,i,a),u.extent,f))}}function k(){if(this.__zooming){var n,r,i=x(this,arguments),o=t.event.changedTouches,a=o.length;for(Kb(),e&&clearTimeout(e),e=setTimeout(function(){e=null},d),n=0;n<a;++n)r=o[n],i.touch0&&i.touch0[2]===r.identifier?delete i.touch0:i.touch1&&i.touch1[2]===r.identifier&&delete i.touch1;if(i.touch1&&!i.touch0&&(i.touch0=i.touch1,delete i.touch1),i.touch0)i.touch0[1]=this.__zoom.invert(i.touch0[0]);else if(i.end(),2===i.taps){var u=Rt(this).on("dblclick.zoom");u&&u.apply(this,arguments)}}}return g.transform=function(t,n,e){var r=t.selection?t.selection():t;r.property("__zoom",em),t!==r?m(t,n,e):r.interrupt().each(function(){x(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},g.scaleBy=function(t,n,e){g.scaleTo(t,function(){var t=this.__zoom.k,e="function"==typeof n?n.apply(this,arguments):n;return t*e},e)},g.scaleTo=function(t,n,e){g.transform(t,function(){var t=i.apply(this,arguments),r=this.__zoom,a=null==e?b(t):"function"==typeof e?e.apply(this,arguments):e,u=r.invert(a),c="function"==typeof n?n.apply(this,arguments):n;return o(_(y(r,c),a,u),t,f)},e)},g.translateBy=function(t,n,e){g.transform(t,function(){return o(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),i.apply(this,arguments),f)})},g.translateTo=function(t,n,e,r){g.transform(t,function(){var t=i.apply(this,arguments),a=this.__zoom,u=null==r?b(t):"function"==typeof r?r.apply(this,arguments):r;return o(Zb.translate(u[0],u[1]).scale(a.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,f)},r)},w.prototype={start:function(){return 1==++this.active&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(delete this.that.__zooming,this.emit("end")),this},emit:function(t){kt(new $b(g,t,this.that.__zoom),h.apply,h,[t,this.that,this.args])}},g.wheelDelta=function(t){return arguments.length?(a="function"==typeof t?t:Gb(+t),g):a},g.filter=function(t){return arguments.length?(r="function"==typeof t?t:Gb(!!t),g):r},g.touchable=function(t){return arguments.length?(u="function"==typeof t?t:Gb(!!t),g):u},g.extent=function(t){return arguments.length?(i="function"==typeof t?t:Gb([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),g):i},g.scaleExtent=function(t){return arguments.length?(c[0]=+t[0],c[1]=+t[1],g):[c[0],c[1]]},g.translateExtent=function(t){return arguments.length?(f[0][0]=+t[0][0],f[1][0]=+t[1][0],f[0][1]=+t[0][1],f[1][1]=+t[1][1],g):[[f[0][0],f[0][1]],[f[1][0],f[1][1]]]},g.constrain=function(t){return arguments.length?(o=t,g):o},g.duration=function(t){return arguments.length?(s=+t,g):s},g.interpolate=function(t){return arguments.length?(l=t,g):l},g.on=function(){var t=h.on.apply(h,arguments);return t===h?g:t},g.clickDistance=function(t){return arguments.length?(v=(t=+t)*t,g):Math.sqrt(v)},g},t.zoomIdentity=Zb,t.zoomTransform=Qb,Object.defineProperty(t,"__esModule",{value:!0})});


/***/ }),

/***/ "./benchmarks/lib/graphGenerator.js":
/*!******************************************!*\
  !*** ./benchmarks/lib/graphGenerator.js ***!
  \******************************************/
/*! exports provided: generateRandomGraph */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateRandomGraph", function() { return generateRandomGraph; });
function generatePairInRange(a, b) {
    function randRange(a, b) {
        return a + Math.floor(Math.random() * (b - a))
    }
    const x = randRange(a, b)
    let y = randRange(a, b)
    while (y === x) {
        y = randRange(a, b)
    }
    return {
        x: x,
        y: y
    }
}

function generateRandomGraph({ nodeNum, linkNum, width, height }) {
    const data = {
        nodes: [],
        links: []
    }

    data.nodes = Array(nodeNum)
        .fill()
        .map((v, i) => {
            return {
                id: String(i),
                x: Math.random() * width,
                y: Math.random() * height
            }
        })

    const linkSet = new Set()
    data.links = Array(linkNum)
        .fill()
        .map((v, i) => {
            let pair
            do {
                pair = generatePairInRange(0, nodeNum)
            } while (linkSet.has(`${pair.x}-${pair.y}`))
            linkSet.add(`${pair.x}-${pair.y}`)
            linkSet.add(`${pair.y}-${pair.x}`)

            return {
                source: String(pair.x),
                target: String(pair.y)
            }
        })

    return data
}


/***/ }),

/***/ "./benchmarks/lib/linechart.js":
/*!*************************************!*\
  !*** ./benchmarks/lib/linechart.js ***!
  \*************************************/
/*! exports provided: drawLineChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drawLineChart", function() { return drawLineChart; });
/* harmony import */ var _d3_v5_min_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./d3.v5.min.js */ "./benchmarks/lib/d3.v5.min.js");
/* harmony import */ var _d3_v5_min_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_d3_v5_min_js__WEBPACK_IMPORTED_MODULE_0__);


// set the dimensions and margins of the graph
const margin = { top: 10, right: 30, bottom: 30, left: 60 }
const width = 500 - margin.left - margin.right
const height = 300 - margin.top - margin.bottom

// The table generation function
function tabulate(container, data, columnNames) {
    var table = _d3_v5_min_js__WEBPACK_IMPORTED_MODULE_0__["select"](container)
            .append('table')
            .attr('style', 'margin-left: 250px'),
        thead = table.append('thead'),
        tbody = table.append('tbody')

    // append the header row
    thead
        .append('tr')
        .selectAll('th')
        .data(columnNames)
        .enter()
        .append('th')
        .text(function(column) {
            return column
        })

    // create a row for each object in the data
    var rows = tbody
        .selectAll('tr')
        .data(data)
        .enter()
        .append('tr')

    // create a cell in each row for each column
    var cells = rows
        .selectAll('td')
        .data(function(row) {
            return columnNames.map(function(column) {
                return { column: column, value: row[column] }
            })
        })
        .enter()
        .append('td')
        .attr('style', 'font-family: Courier') // sets the font style
        .html(function(d) {
            return d.value
        })

    return table
}

// Read the data
function drawLineChart(container, data) {
    // append the svg object to the body of the page
    const svg = _d3_v5_min_js__WEBPACK_IMPORTED_MODULE_0__["select"](container)
        .append('svg')
        .attr('width', width + margin.left + margin.right)
        .attr('height', height + margin.top + margin.bottom)
        .append('g')
        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')

    // Add X axis --> it is a size format
    const xDomain = _d3_v5_min_js__WEBPACK_IMPORTED_MODULE_0__["extent"](data, (d) => d.size)
    xDomain[0] = Math.pow(10, parseInt(xDomain[0].toString().length - 1))
    xDomain[1] = Math.pow(10, parseInt((xDomain[1] - 1).toString().length))
    console.log(xDomain)
    const x = _d3_v5_min_js__WEBPACK_IMPORTED_MODULE_0__["scaleLog"]()
        .base(2)
        .domain(xDomain)
        .range([0, width])

    // draw axis
    svg.append('line')
        .attr('x1', 0)
        .attr('x2', width)
        .attr('y1', height)
        .attr('y2', height)
        .attr('stroke', 'black')
    let calibration = 1
    while (calibration <= x.domain()[1]) {
        if (calibration >= x.domain()[0]) {
            svg.append('line')
                .attr('x1', x(calibration))
                .attr('x2', x(calibration))
                .attr('y1', height - 5)
                .attr('y2', height)
                .attr('stroke', 'black')
            svg.append('text')
                .attr('x', x(calibration))
                .attr('y', height + 15)
                .text(calibration)
                .attr('stroke', 'black')
        }
        calibration *= 10
    }

    // Add Y axis
    const y = _d3_v5_min_js__WEBPACK_IMPORTED_MODULE_0__["scaleLinear"]()
        .domain([
            0,
            _d3_v5_min_js__WEBPACK_IMPORTED_MODULE_0__["max"](data, function(d) {
                return Number(d.value)
            })
        ])
        .range([height, 0])

    // Add the line
    svg.append('path')
        .datum(data)
        .attr('fill', 'none')
        .attr('stroke', 'steelblue')
        .attr('stroke-width', 1.5)
        .attr(
            'd',
            _d3_v5_min_js__WEBPACK_IMPORTED_MODULE_0__["line"]()
                .x(function(d) {
                    return x(d.size)
                })
                .y(function(d) {
                    return y(d.value)
                })
        )

    tabulate(container, data, ['size', 'value'])
}


/***/ }),

/***/ "./benchmarks/lib/stats.module.js":
/*!****************************************!*\
  !*** ./benchmarks/lib/stats.module.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * @author mrdoob / http://mrdoob.com/
 */

var Stats = function () {
  var mode = 0;

  var container = document.createElement("div");
  container.style.cssText =
    "position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000";
  container.addEventListener(
    "click",
    function (event) {
      event.preventDefault();
      showPanel(++mode % container.children.length);
    },
    false
  );

  //

  function addPanel(panel) {
    container.appendChild(panel.dom);
    return panel;
  }

  function showPanel(id) {
    for (var i = 0; i < container.children.length; i++) {
      container.children[i].style.display = i === id ? "block" : "none";
    }

    mode = id;
  }

  //

  var beginTime = (performance || Date).now(),
    prevTime = beginTime,
    frames = 0,
    fpsHistory = [];

  var fpsPanel = addPanel(new Stats.Panel("FPS", "#0ff", "#002"));
  var msPanel = addPanel(new Stats.Panel("MS", "#0f0", "#020"));

  if (self.performance && self.performance.memory) {
    var memPanel = addPanel(new Stats.Panel("MB", "#f08", "#201"));
  }

  showPanel(0);

  return {
    REVISION: 16,

    dom: container,

    addPanel: addPanel,
    showPanel: showPanel,

    getFPSHistory: function () {
      return fpsHistory;
    },

    begin: function () {
      beginTime = (performance || Date).now();
    },

    end: function () {
      frames++;

      var time = (performance || Date).now();

      msPanel.update(time - beginTime, 200);

      if (time >= prevTime + 1000) {
        const fps = (frames * 1000) / (time - prevTime);
        fpsHistory.push(fps);

        fpsPanel.update(fps, 100);

        prevTime = time;
        frames = 0;

        if (memPanel) {
          var memory = performance.memory;
          memPanel.update(
            memory.usedJSHeapSize / 1048576,
            memory.jsHeapSizeLimit / 1048576
          );
        }
      }

      return time;
    },

    update: function () {
      beginTime = this.end();
    },

    // Backwards Compatibility

    domElement: container,
    setMode: showPanel,
  };
};

Stats.Panel = function (name, fg, bg) {
  var min = Infinity,
    max = 0,
    round = Math.round;
  var PR = round(window.devicePixelRatio || 1);

  var WIDTH = 80 * PR,
    HEIGHT = 48 * PR,
    TEXT_X = 3 * PR,
    TEXT_Y = 2 * PR,
    GRAPH_X = 3 * PR,
    GRAPH_Y = 15 * PR,
    GRAPH_WIDTH = 74 * PR,
    GRAPH_HEIGHT = 30 * PR;

  var canvas = document.createElement("canvas");
  canvas.width = WIDTH;
  canvas.height = HEIGHT;
  canvas.style.cssText = "width:80px;height:48px";

  var context = canvas.getContext("2d");
  context.font = "bold " + 9 * PR + "px Helvetica,Arial,sans-serif";
  context.textBaseline = "top";

  context.fillStyle = bg;
  context.fillRect(0, 0, WIDTH, HEIGHT);

  context.fillStyle = fg;
  context.fillText(name, TEXT_X, TEXT_Y);
  context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);

  context.fillStyle = bg;
  context.globalAlpha = 0.9;
  context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);

  return {
    dom: canvas,

    update: function (value, maxValue) {
      min = Math.min(min, value);
      max = Math.max(max, value);

      context.fillStyle = bg;
      context.globalAlpha = 1;
      context.fillRect(0, 0, WIDTH, GRAPH_Y);
      context.fillStyle = fg;
      context.fillText(
        round(value) + " " + name + " (" + round(min) + "-" + round(max) + ")",
        TEXT_X,
        TEXT_Y
      );

      context.drawImage(
        canvas,
        GRAPH_X + PR,
        GRAPH_Y,
        GRAPH_WIDTH - PR,
        GRAPH_HEIGHT,
        GRAPH_X,
        GRAPH_Y,
        GRAPH_WIDTH - PR,
        GRAPH_HEIGHT
      );

      context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT);

      context.fillStyle = bg;
      context.globalAlpha = 0.9;
      context.fillRect(
        GRAPH_X + GRAPH_WIDTH - PR,
        GRAPH_Y,
        PR,
        round((1 - value / maxValue) * GRAPH_HEIGHT)
      );
    },
  };
};

/* harmony default export */ __webpack_exports__["default"] = (Stats);


/***/ }),

/***/ "./benchmarks/lib/utils.js":
/*!*********************************!*\
  !*** ./benchmarks/lib/utils.js ***!
  \*********************************/
/*! exports provided: parseBoolean, isRefreshedManually, isFirstTime, initPage, getFrameRate, reloadPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseBoolean", function() { return parseBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRefreshedManually", function() { return isRefreshedManually; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFirstTime", function() { return isFirstTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPage", function() { return initPage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFrameRate", function() { return getFrameRate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reloadPage", function() { return reloadPage; });
function parseBoolean(str) {
    return str === 'true'
}

// Function that returns a Promise for the FPS
const getFPS = () =>
    new Promise((resolve) => {
        let count = 0
        const total = 10
        let t1
        let t2
        function refresh() {
            if (count === 0) {
                t1 = new Date()
            }
            if (count === total) {
                t2 = new Date()
                resolve((total * 1000) / (t2 - t1))
            } else {
                count++
                requestAnimationFrame(refresh)
            }
        }
        refresh()
    })

const IS_REFRESHED_MANUALLY = 'IS_REFRESHED_MANUALLY'
const FRAME_RATE = 'FRAME_RATE'

function isRefreshedManually() {
    let isRefreshedManually = localStorage.getItem(IS_REFRESHED_MANUALLY)
    return (
        isRefreshedManually === undefined ||
        isRefreshedManually === null ||
        parseBoolean(isRefreshedManually)
    )
}

function isFirstTime() {
    return isRefreshedManually() || !localStorage.getItem(FRAME_RATE)
}

function initPage() {
    // Whether the page is refreshed by manual at last time

    if (isRefreshedManually()) {
        // The page will be refreshed for each benchmark test case
        // So we need to distinguish whether the page is refreshed manually or automatically
        // If the page is refreshed manually, we should clear the local storage
        localStorage.clear()
        localStorage.setItem(IS_REFRESHED_MANUALLY, 'true')

        // Calling the function to get the FPS
        getFPS().then((fps) => {
            console.log(fps)
            localStorage.setItem(FRAME_RATE, fps)
            reloadPage()
        })
    } else {
        // the page is refreshed automatically
        localStorage.setItem(IS_REFRESHED_MANUALLY, 'true')
    }
}

function getFrameRate() {
    return Math.round(localStorage.getItem(FRAME_RATE))
}

function reloadPage() {
    localStorage.setItem(IS_REFRESHED_MANUALLY, 'false')
    location.reload()
}


/***/ }),

/***/ "./build/NetV.js":
/*!***********************!*\
  !*** ./build/NetV.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else { var i, a; }
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/configs.ts":
/*!************************!*\
  !*** ./src/configs.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @description default configurations in NetV
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.label = exports.link = exports.node = exports.lazyLinkUpdateThreshold = exports.linkLimit = exports.nodeLimit = exports.enablePanZoom = exports.backgroundColor = exports.height = exports.width = void 0;
exports.width = 800;
exports.height = 600;
exports.backgroundColor = { r: 1, g: 1, b: 1, a: 1 };
exports.enablePanZoom = true;
exports.nodeLimit = 100;
exports.linkLimit = 1000;
exports.lazyLinkUpdateThreshold = 100;
exports.node = {
    r: 5,
    fill: { r: 0.2, g: 0.6, b: 0.2, a: 0.8 },
    // strokeColor: { r: 0.6, g: 0.6, b: 0.6, a: 0.5 },
    strokeColor: { r: 0.9, g: 0.9, b: 0.9, a: 0.6 },
    strokeWidth: 2,
    showLabel: false,
    // textOffset: { x: 8, y: 0 }, put in label config instead of each node
    clickCallback: (node) => { },
    hoverCallback: (node) => { }
};
exports.link = {
    // strokeColor: { r: 0.5, g: 0.5, b: 0.5, a: 0.2 },
    strokeColor: { r: 0.4, g: 0.6, b: 0.8, a: 0.5 },
    strokeWidth: 2,
    clickCallback: (link) => { },
    hoverCallback: (node) => { }
};
exports.label = {
    offset: { x: 8, y: 0 },
    fontSize: 18,
    strokeWidth: 0.5
};


/***/ }),

/***/ "./src/dataset/index.ts":
/*!******************************!*\
  !*** ./src/dataset/index.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 * @description build-in dataset in NetV
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.patents = exports.miserables = void 0;
const miserables_1 = __webpack_require__(/*! ./miserables */ "./src/dataset/miserables.ts");
Object.defineProperty(exports, "miserables", { enumerable: true, get: function () { return miserables_1.miserables; } });
const patents_1 = __webpack_require__(/*! ./patents */ "./src/dataset/patents.ts");
Object.defineProperty(exports, "patents", { enumerable: true, get: function () { return patents_1.patents; } });


/***/ }),

/***/ "./src/dataset/miserables.ts":
/*!***********************************!*\
  !*** ./src/dataset/miserables.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 * @description Les Miserables relation dataset.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.miserables = void 0;
/**
 * @description generated by d3-force: https://observablehq.com/@d3/force-directed-graph
 */
exports.miserables = {
    nodes: [
        { id: 'Myriel', x: 293.47145117553623, y: 356.4335718104138, group: 1 },
        { id: 'Napoleon', x: 253.9025088618656, y: 374.3058116536445, group: 1 },
        { id: 'Mlle.Baptistine', x: 350.92724989918077, y: 332.3325539999943, group: 1 },
        { id: 'Mme.Magloire', x: 356.0916156539997, y: 352.7885799116015, group: 1 },
        { id: 'CountessdeLo', x: 254.29291520989335, y: 357.3175734076417, group: 1 },
        { id: 'Geborand', x: 257.857293626201, y: 335.85427628358957, group: 1 },
        { id: 'Champtercier', x: 259.6255563825028, y: 383.83027469832814, group: 1 },
        { id: 'Cravatte', x: 249.8596459829139, y: 346.18225516832496, group: 1 },
        { id: 'Count', x: 269.96793951350924, y: 390.6800842321571, group: 1 },
        { id: 'OldMan', x: 246.73952311277665, y: 364.59357494432066, group: 1 },
        { id: 'Labarre', x: 443.516583315026, y: 358.29204789477683, group: 2 },
        { id: 'Valjean', x: 442.16894757641506, y: 320.8315532160861, group: 2 },
        { id: 'Marguerite', x: 413.3816851007931, y: 240.04091559296504, group: 3 },
        { id: 'Mme.deR', x: 427.2361715950254, y: 355.10211589979514, group: 2 },
        { id: 'Isabeau', x: 405.85082858191834, y: 330.5201512205085, group: 2 },
        { id: 'Gervais', x: 405.2113121906881, y: 316.29125359396136, group: 2 },
        { id: 'Tholomyes', x: 422.4125307781646, y: 126.07649449775806, group: 3 },
        { id: 'Listolier', x: 363.1729422677979, y: 102.77890368289785, group: 3 },
        { id: 'Fameuil', x: 381.7947103094028, y: 66.58133724043948, group: 3 },
        { id: 'Blacheville', x: 383.1792676740261, y: 94.80320315500154, group: 3 },
        { id: 'Favourite', x: 361.893731644285, y: 70.38696381384074, group: 3 },
        { id: 'Dahlia', x: 398.75350988351653, y: 77.09700751527119, group: 3 },
        { id: 'Zephine', x: 349.0495914601376, y: 88.80888613372713, group: 3 },
        { id: 'Fantine', x: 398.01411438702473, y: 173.76444196945977, group: 3 },
        { id: 'Mme.Thenardier', x: 471.2516533386725, y: 262.218701666645, group: 4 },
        { id: 'Thenardier', x: 504.81672085603066, y: 283.04638900481723, group: 4 },
        { id: 'Cosette', x: 472.3346941487192, y: 228.68779443303478, group: 5 },
        { id: 'Javert', x: 460.05257689332836, y: 295.5578154268904, group: 4 },
        { id: 'Fauchelevent', x: 385.43935764589986, y: 302.12824588622857, group: 0 },
        { id: 'Bamatabois', x: 393.19041590383597, y: 345.4971667690817, group: 2 },
        { id: 'Perpetue', x: 367.53833132893976, y: 194.5556482306271, group: 3 },
        { id: 'Simplice', x: 401.3622252354655, y: 242.9982847994576, group: 2 },
        { id: 'Scaufflaire', x: 414.67072799627573, y: 344.0547720945736, group: 2 },
        { id: 'Woman1', x: 421.4167414392426, y: 293.31120219129394, group: 2 },
        { id: 'Judge', x: 420.04392007841335, y: 401.03233609152744, group: 2 },
        { id: 'Champmathieu', x: 377.79524254621833, y: 383.8105787115102, group: 2 },
        { id: 'Brevet', x: 401.9529844469992, y: 388.8684782987411, group: 2 },
        { id: 'Chenildieu', x: 400.6685707133538, y: 413.49417790523466, group: 2 },
        { id: 'Cochepaille', x: 379.04969704462354, y: 404.26974059233163, group: 2 },
        { id: 'Pontmercy', x: 553.1137401750198, y: 244.92830027360765, group: 4 },
        { id: 'Boulatruelle', x: 490.1571086086932, y: 249.2101923835803, group: 6 },
        { id: 'Eponine', x: 549.7584267571892, y: 302.9031065228431, group: 4 },
        { id: 'Anzelma', x: 515.3807399395134, y: 257.0179688983911, group: 4 },
        { id: 'Woman2', x: 433.6608665340514, y: 265.8174673886634, group: 5 },
        { id: 'MotherInnocent', x: 403.02536257416523, y: 289.03312200121326, group: 0 },
        { id: 'Gribier', x: 341.80973227456775, y: 294.212396148023, group: 0 },
        { id: 'Jondrette', x: 565.1965303422186, y: 470.65950349375856, group: 7 },
        { id: 'Mme.Burgon', x: 569.1896269242101, y: 426.66185053824563, group: 7 },
        { id: 'Gavroche', x: 572.1619393936826, y: 364.22606766497563, group: 8 },
        { id: 'Gillenormand', x: 524.5914505208005, y: 257.4012214828336, group: 5 },
        { id: 'Magnon', x: 492.548393202341, y: 222.5966351328885, group: 5 },
        { id: 'Mlle.Gillenormand', x: 514.3692655023644, y: 229.09670062389281, group: 5 },
        { id: 'Mme.Pontmercy', x: 549.3250508171474, y: 196.14056833084936, group: 5 },
        { id: 'Mlle.Vaubois', x: 517.8593572394071, y: 186.2488309111565, group: 5 },
        { id: 'Lt.Gillenormand', x: 543.274961139455, y: 223.68184285180976, group: 5 },
        { id: 'Marius', x: 574.2576699056139, y: 283.85211708310334, group: 8 },
        { id: 'BaronessT', x: 573.7140909650625, y: 245.59311909245818, group: 5 },
        { id: 'Mabeuf', x: 628.5432532486191, y: 314.22078408627164, group: 8 },
        { id: 'Enjolras', x: 588.2395498093626, y: 342.0594469923279, group: 8 },
        { id: 'Combeferre', x: 637.7370664614637, y: 351.69235762788395, group: 8 },
        { id: 'Prouvaire', x: 650.8833522869903, y: 386.83918103509916, group: 8 },
        { id: 'Feuilly', x: 626.8556606438109, y: 365.9084164593141, group: 8 },
        { id: 'Courfeyrac', x: 628.3448989975013, y: 336.7666454119022, group: 8 },
        { id: 'Bahorel', x: 656.7717772764985, y: 362.5885882509189, group: 8 },
        { id: 'Bossuet', x: 599.0185765743107, y: 363.8286723407053, group: 8 },
        { id: 'Joly', x: 656.6182923735408, y: 343.2375733559165, group: 8 },
        { id: 'Grantaire', x: 638.4375855314988, y: 402.4387250378995, group: 8 },
        { id: 'MotherPlutarch', x: 664.556723861883, y: 298.0336964526786, group: 9 },
        { id: 'Gueulemer', x: 508.16450525817805, y: 330.4502907444367, group: 4 },
        { id: 'Babet', x: 492.56005279882095, y: 325.9834092848427, group: 4 },
        { id: 'Claquesous', x: 510.93855506250077, y: 309.2869380697328, group: 4 },
        { id: 'Montparnasse', x: 502.7190894173557, y: 350.9275183133438, group: 4 },
        { id: 'Toussaint', x: 445.1254802056807, y: 266.46242665022004, group: 5 },
        { id: 'Child1', x: 588.0351552386961, y: 410.2195555961996, group: 10 },
        { id: 'Child2', x: 559.2777814782705, y: 408.3533184893569, group: 10 },
        { id: 'Brujon', x: 537.1787383904656, y: 337.86922775917947, group: 4 },
        { id: 'Mme.Hucheloup', x: 626.3775850466164, y: 384.35202066894516, group: 8 }
    ],
    links: [
        { source: 'Napoleon', target: 'Myriel', value: 1 },
        { source: 'Mlle.Baptistine', target: 'Myriel', value: 8 },
        { source: 'Mme.Magloire', target: 'Myriel', value: 10 },
        { source: 'Mme.Magloire', target: 'Mlle.Baptistine', value: 6 },
        { source: 'CountessdeLo', target: 'Myriel', value: 1 },
        { source: 'Geborand', target: 'Myriel', value: 1 },
        { source: 'Champtercier', target: 'Myriel', value: 1 },
        { source: 'Cravatte', target: 'Myriel', value: 1 },
        { source: 'Count', target: 'Myriel', value: 2 },
        { source: 'OldMan', target: 'Myriel', value: 1 },
        { source: 'Valjean', target: 'Labarre', value: 1 },
        { source: 'Valjean', target: 'Mme.Magloire', value: 3 },
        { source: 'Valjean', target: 'Mlle.Baptistine', value: 3 },
        { source: 'Valjean', target: 'Myriel', value: 5 },
        { source: 'Marguerite', target: 'Valjean', value: 1 },
        { source: 'Mme.deR', target: 'Valjean', value: 1 },
        { source: 'Isabeau', target: 'Valjean', value: 1 },
        { source: 'Gervais', target: 'Valjean', value: 1 },
        { source: 'Listolier', target: 'Tholomyes', value: 4 },
        { source: 'Fameuil', target: 'Tholomyes', value: 4 },
        { source: 'Fameuil', target: 'Listolier', value: 4 },
        { source: 'Blacheville', target: 'Tholomyes', value: 4 },
        { source: 'Blacheville', target: 'Listolier', value: 4 },
        { source: 'Blacheville', target: 'Fameuil', value: 4 },
        { source: 'Favourite', target: 'Tholomyes', value: 3 },
        { source: 'Favourite', target: 'Listolier', value: 3 },
        { source: 'Favourite', target: 'Fameuil', value: 3 },
        { source: 'Favourite', target: 'Blacheville', value: 4 },
        { source: 'Dahlia', target: 'Tholomyes', value: 3 },
        { source: 'Dahlia', target: 'Listolier', value: 3 },
        { source: 'Dahlia', target: 'Fameuil', value: 3 },
        { source: 'Dahlia', target: 'Blacheville', value: 3 },
        { source: 'Dahlia', target: 'Favourite', value: 5 },
        { source: 'Zephine', target: 'Tholomyes', value: 3 },
        { source: 'Zephine', target: 'Listolier', value: 3 },
        { source: 'Zephine', target: 'Fameuil', value: 3 },
        { source: 'Zephine', target: 'Blacheville', value: 3 },
        { source: 'Zephine', target: 'Favourite', value: 4 },
        { source: 'Zephine', target: 'Dahlia', value: 4 },
        { source: 'Fantine', target: 'Tholomyes', value: 3 },
        { source: 'Fantine', target: 'Listolier', value: 3 },
        { source: 'Fantine', target: 'Fameuil', value: 3 },
        { source: 'Fantine', target: 'Blacheville', value: 3 },
        { source: 'Fantine', target: 'Favourite', value: 4 },
        { source: 'Fantine', target: 'Dahlia', value: 4 },
        { source: 'Fantine', target: 'Zephine', value: 4 },
        { source: 'Fantine', target: 'Marguerite', value: 2 },
        { source: 'Fantine', target: 'Valjean', value: 9 },
        { source: 'Mme.Thenardier', target: 'Fantine', value: 2 },
        { source: 'Mme.Thenardier', target: 'Valjean', value: 7 },
        { source: 'Thenardier', target: 'Mme.Thenardier', value: 13 },
        { source: 'Thenardier', target: 'Fantine', value: 1 },
        { source: 'Thenardier', target: 'Valjean', value: 12 },
        { source: 'Cosette', target: 'Mme.Thenardier', value: 4 },
        { source: 'Cosette', target: 'Valjean', value: 31 },
        { source: 'Cosette', target: 'Tholomyes', value: 1 },
        { source: 'Cosette', target: 'Thenardier', value: 1 },
        { source: 'Javert', target: 'Valjean', value: 17 },
        { source: 'Javert', target: 'Fantine', value: 5 },
        { source: 'Javert', target: 'Thenardier', value: 5 },
        { source: 'Javert', target: 'Mme.Thenardier', value: 1 },
        { source: 'Javert', target: 'Cosette', value: 1 },
        { source: 'Fauchelevent', target: 'Valjean', value: 8 },
        { source: 'Fauchelevent', target: 'Javert', value: 1 },
        { source: 'Bamatabois', target: 'Fantine', value: 1 },
        { source: 'Bamatabois', target: 'Javert', value: 1 },
        { source: 'Bamatabois', target: 'Valjean', value: 2 },
        { source: 'Perpetue', target: 'Fantine', value: 1 },
        { source: 'Simplice', target: 'Perpetue', value: 2 },
        { source: 'Simplice', target: 'Valjean', value: 3 },
        { source: 'Simplice', target: 'Fantine', value: 2 },
        { source: 'Simplice', target: 'Javert', value: 1 },
        { source: 'Scaufflaire', target: 'Valjean', value: 1 },
        { source: 'Woman1', target: 'Valjean', value: 2 },
        { source: 'Woman1', target: 'Javert', value: 1 },
        { source: 'Judge', target: 'Valjean', value: 3 },
        { source: 'Judge', target: 'Bamatabois', value: 2 },
        { source: 'Champmathieu', target: 'Valjean', value: 3 },
        { source: 'Champmathieu', target: 'Judge', value: 3 },
        { source: 'Champmathieu', target: 'Bamatabois', value: 2 },
        { source: 'Brevet', target: 'Judge', value: 2 },
        { source: 'Brevet', target: 'Champmathieu', value: 2 },
        { source: 'Brevet', target: 'Valjean', value: 2 },
        { source: 'Brevet', target: 'Bamatabois', value: 1 },
        { source: 'Chenildieu', target: 'Judge', value: 2 },
        { source: 'Chenildieu', target: 'Champmathieu', value: 2 },
        { source: 'Chenildieu', target: 'Brevet', value: 2 },
        { source: 'Chenildieu', target: 'Valjean', value: 2 },
        { source: 'Chenildieu', target: 'Bamatabois', value: 1 },
        { source: 'Cochepaille', target: 'Judge', value: 2 },
        { source: 'Cochepaille', target: 'Champmathieu', value: 2 },
        { source: 'Cochepaille', target: 'Brevet', value: 2 },
        { source: 'Cochepaille', target: 'Chenildieu', value: 2 },
        { source: 'Cochepaille', target: 'Valjean', value: 2 },
        { source: 'Cochepaille', target: 'Bamatabois', value: 1 },
        { source: 'Pontmercy', target: 'Thenardier', value: 1 },
        { source: 'Boulatruelle', target: 'Thenardier', value: 1 },
        { source: 'Eponine', target: 'Mme.Thenardier', value: 2 },
        { source: 'Eponine', target: 'Thenardier', value: 3 },
        { source: 'Anzelma', target: 'Eponine', value: 2 },
        { source: 'Anzelma', target: 'Thenardier', value: 2 },
        { source: 'Anzelma', target: 'Mme.Thenardier', value: 1 },
        { source: 'Woman2', target: 'Valjean', value: 3 },
        { source: 'Woman2', target: 'Cosette', value: 1 },
        { source: 'Woman2', target: 'Javert', value: 1 },
        { source: 'MotherInnocent', target: 'Fauchelevent', value: 3 },
        { source: 'MotherInnocent', target: 'Valjean', value: 1 },
        { source: 'Gribier', target: 'Fauchelevent', value: 2 },
        { source: 'Mme.Burgon', target: 'Jondrette', value: 1 },
        { source: 'Gavroche', target: 'Mme.Burgon', value: 2 },
        { source: 'Gavroche', target: 'Thenardier', value: 1 },
        { source: 'Gavroche', target: 'Javert', value: 1 },
        { source: 'Gavroche', target: 'Valjean', value: 1 },
        { source: 'Gillenormand', target: 'Cosette', value: 3 },
        { source: 'Gillenormand', target: 'Valjean', value: 2 },
        { source: 'Magnon', target: 'Gillenormand', value: 1 },
        { source: 'Magnon', target: 'Mme.Thenardier', value: 1 },
        { source: 'Mlle.Gillenormand', target: 'Gillenormand', value: 9 },
        { source: 'Mlle.Gillenormand', target: 'Cosette', value: 2 },
        { source: 'Mlle.Gillenormand', target: 'Valjean', value: 2 },
        { source: 'Mme.Pontmercy', target: 'Mlle.Gillenormand', value: 1 },
        { source: 'Mme.Pontmercy', target: 'Pontmercy', value: 1 },
        { source: 'Mlle.Vaubois', target: 'Mlle.Gillenormand', value: 1 },
        { source: 'Lt.Gillenormand', target: 'Mlle.Gillenormand', value: 2 },
        { source: 'Lt.Gillenormand', target: 'Gillenormand', value: 1 },
        { source: 'Lt.Gillenormand', target: 'Cosette', value: 1 },
        { source: 'Marius', target: 'Mlle.Gillenormand', value: 6 },
        { source: 'Marius', target: 'Gillenormand', value: 12 },
        { source: 'Marius', target: 'Pontmercy', value: 1 },
        { source: 'Marius', target: 'Lt.Gillenormand', value: 1 },
        { source: 'Marius', target: 'Cosette', value: 21 },
        { source: 'Marius', target: 'Valjean', value: 19 },
        { source: 'Marius', target: 'Tholomyes', value: 1 },
        { source: 'Marius', target: 'Thenardier', value: 2 },
        { source: 'Marius', target: 'Eponine', value: 5 },
        { source: 'Marius', target: 'Gavroche', value: 4 },
        { source: 'BaronessT', target: 'Gillenormand', value: 1 },
        { source: 'BaronessT', target: 'Marius', value: 1 },
        { source: 'Mabeuf', target: 'Marius', value: 1 },
        { source: 'Mabeuf', target: 'Eponine', value: 1 },
        { source: 'Mabeuf', target: 'Gavroche', value: 1 },
        { source: 'Enjolras', target: 'Marius', value: 7 },
        { source: 'Enjolras', target: 'Gavroche', value: 7 },
        { source: 'Enjolras', target: 'Javert', value: 6 },
        { source: 'Enjolras', target: 'Mabeuf', value: 1 },
        { source: 'Enjolras', target: 'Valjean', value: 4 },
        { source: 'Combeferre', target: 'Enjolras', value: 15 },
        { source: 'Combeferre', target: 'Marius', value: 5 },
        { source: 'Combeferre', target: 'Gavroche', value: 6 },
        { source: 'Combeferre', target: 'Mabeuf', value: 2 },
        { source: 'Prouvaire', target: 'Gavroche', value: 1 },
        { source: 'Prouvaire', target: 'Enjolras', value: 4 },
        { source: 'Prouvaire', target: 'Combeferre', value: 2 },
        { source: 'Feuilly', target: 'Gavroche', value: 2 },
        { source: 'Feuilly', target: 'Enjolras', value: 6 },
        { source: 'Feuilly', target: 'Prouvaire', value: 2 },
        { source: 'Feuilly', target: 'Combeferre', value: 5 },
        { source: 'Feuilly', target: 'Mabeuf', value: 1 },
        { source: 'Feuilly', target: 'Marius', value: 1 },
        { source: 'Courfeyrac', target: 'Marius', value: 9 },
        { source: 'Courfeyrac', target: 'Enjolras', value: 17 },
        { source: 'Courfeyrac', target: 'Combeferre', value: 13 },
        { source: 'Courfeyrac', target: 'Gavroche', value: 7 },
        { source: 'Courfeyrac', target: 'Mabeuf', value: 2 },
        { source: 'Courfeyrac', target: 'Eponine', value: 1 },
        { source: 'Courfeyrac', target: 'Feuilly', value: 6 },
        { source: 'Courfeyrac', target: 'Prouvaire', value: 3 },
        { source: 'Bahorel', target: 'Combeferre', value: 5 },
        { source: 'Bahorel', target: 'Gavroche', value: 5 },
        { source: 'Bahorel', target: 'Courfeyrac', value: 6 },
        { source: 'Bahorel', target: 'Mabeuf', value: 2 },
        { source: 'Bahorel', target: 'Enjolras', value: 4 },
        { source: 'Bahorel', target: 'Feuilly', value: 3 },
        { source: 'Bahorel', target: 'Prouvaire', value: 2 },
        { source: 'Bahorel', target: 'Marius', value: 1 },
        { source: 'Bossuet', target: 'Marius', value: 5 },
        { source: 'Bossuet', target: 'Courfeyrac', value: 12 },
        { source: 'Bossuet', target: 'Gavroche', value: 5 },
        { source: 'Bossuet', target: 'Bahorel', value: 4 },
        { source: 'Bossuet', target: 'Enjolras', value: 10 },
        { source: 'Bossuet', target: 'Feuilly', value: 6 },
        { source: 'Bossuet', target: 'Prouvaire', value: 2 },
        { source: 'Bossuet', target: 'Combeferre', value: 9 },
        { source: 'Bossuet', target: 'Mabeuf', value: 1 },
        { source: 'Bossuet', target: 'Valjean', value: 1 },
        { source: 'Joly', target: 'Bahorel', value: 5 },
        { source: 'Joly', target: 'Bossuet', value: 7 },
        { source: 'Joly', target: 'Gavroche', value: 3 },
        { source: 'Joly', target: 'Courfeyrac', value: 5 },
        { source: 'Joly', target: 'Enjolras', value: 5 },
        { source: 'Joly', target: 'Feuilly', value: 5 },
        { source: 'Joly', target: 'Prouvaire', value: 2 },
        { source: 'Joly', target: 'Combeferre', value: 5 },
        { source: 'Joly', target: 'Mabeuf', value: 1 },
        { source: 'Joly', target: 'Marius', value: 2 },
        { source: 'Grantaire', target: 'Bossuet', value: 3 },
        { source: 'Grantaire', target: 'Enjolras', value: 3 },
        { source: 'Grantaire', target: 'Combeferre', value: 1 },
        { source: 'Grantaire', target: 'Courfeyrac', value: 2 },
        { source: 'Grantaire', target: 'Joly', value: 2 },
        { source: 'Grantaire', target: 'Gavroche', value: 1 },
        { source: 'Grantaire', target: 'Bahorel', value: 1 },
        { source: 'Grantaire', target: 'Feuilly', value: 1 },
        { source: 'Grantaire', target: 'Prouvaire', value: 1 },
        { source: 'MotherPlutarch', target: 'Mabeuf', value: 3 },
        { source: 'Gueulemer', target: 'Thenardier', value: 5 },
        { source: 'Gueulemer', target: 'Valjean', value: 1 },
        { source: 'Gueulemer', target: 'Mme.Thenardier', value: 1 },
        { source: 'Gueulemer', target: 'Javert', value: 1 },
        { source: 'Gueulemer', target: 'Gavroche', value: 1 },
        { source: 'Gueulemer', target: 'Eponine', value: 1 },
        { source: 'Babet', target: 'Thenardier', value: 6 },
        { source: 'Babet', target: 'Gueulemer', value: 6 },
        { source: 'Babet', target: 'Valjean', value: 1 },
        { source: 'Babet', target: 'Mme.Thenardier', value: 1 },
        { source: 'Babet', target: 'Javert', value: 2 },
        { source: 'Babet', target: 'Gavroche', value: 1 },
        { source: 'Babet', target: 'Eponine', value: 1 },
        { source: 'Claquesous', target: 'Thenardier', value: 4 },
        { source: 'Claquesous', target: 'Babet', value: 4 },
        { source: 'Claquesous', target: 'Gueulemer', value: 4 },
        { source: 'Claquesous', target: 'Valjean', value: 1 },
        { source: 'Claquesous', target: 'Mme.Thenardier', value: 1 },
        { source: 'Claquesous', target: 'Javert', value: 1 },
        { source: 'Claquesous', target: 'Eponine', value: 1 },
        { source: 'Claquesous', target: 'Enjolras', value: 1 },
        { source: 'Montparnasse', target: 'Javert', value: 1 },
        { source: 'Montparnasse', target: 'Babet', value: 2 },
        { source: 'Montparnasse', target: 'Gueulemer', value: 2 },
        { source: 'Montparnasse', target: 'Claquesous', value: 2 },
        { source: 'Montparnasse', target: 'Valjean', value: 1 },
        { source: 'Montparnasse', target: 'Gavroche', value: 1 },
        { source: 'Montparnasse', target: 'Eponine', value: 1 },
        { source: 'Montparnasse', target: 'Thenardier', value: 1 },
        { source: 'Toussaint', target: 'Cosette', value: 2 },
        { source: 'Toussaint', target: 'Javert', value: 1 },
        { source: 'Toussaint', target: 'Valjean', value: 1 },
        { source: 'Child1', target: 'Gavroche', value: 2 },
        { source: 'Child2', target: 'Gavroche', value: 2 },
        { source: 'Child2', target: 'Child1', value: 3 },
        { source: 'Brujon', target: 'Babet', value: 3 },
        { source: 'Brujon', target: 'Gueulemer', value: 3 },
        { source: 'Brujon', target: 'Thenardier', value: 3 },
        { source: 'Brujon', target: 'Gavroche', value: 1 },
        { source: 'Brujon', target: 'Eponine', value: 1 },
        { source: 'Brujon', target: 'Claquesous', value: 1 },
        { source: 'Brujon', target: 'Montparnasse', value: 1 },
        { source: 'Mme.Hucheloup', target: 'Bossuet', value: 1 },
        { source: 'Mme.Hucheloup', target: 'Joly', value: 1 },
        { source: 'Mme.Hucheloup', target: 'Grantaire', value: 1 },
        { source: 'Mme.Hucheloup', target: 'Bahorel', value: 1 },
        { source: 'Mme.Hucheloup', target: 'Courfeyrac', value: 1 },
        { source: 'Mme.Hucheloup', target: 'Gavroche', value: 1 },
        { source: 'Mme.Hucheloup', target: 'Enjolras', value: 1 }
    ]
};


/***/ }),

/***/ "./src/dataset/patents.ts":
/*!********************************!*\
  !*** ./src/dataset/patents.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 * @description Patents dataset, from https://www.patentsview.org/web/#viz/relationships
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.patents = void 0;
exports.patents = {
    nodes: [
        {
            type: 'patent',
            id: '6516227',
            name: 'Rechargeable spinal cord stimulator system',
            numCitations: 1363,
            x: -146.50722772206416,
            y: 237.7898848864182
        },
        {
            type: 'patent',
            id: '6535909',
            name: 'System and method for record and playback of collaborative Web browsing session',
            numCitations: 1438,
            x: 301.0880840740178,
            y: 78.3544919158754
        },
        {
            type: 'patent',
            id: '6549908',
            name: 'Methods and apparatus for interpreting user selections in the context of a relation distributed as a set of orthogonalized sub-relations',
            numCitations: 1268,
            x: -13.814856590741202,
            y: -183.5501679350274
        },
        {
            type: 'patent',
            id: '6553563',
            name: 'Development tool, method, and system for client server applications',
            numCitations: 1351,
            x: -0.5224312790142777,
            y: -247.1495779627279
        },
        {
            type: 'patent',
            id: '6558320',
            name: 'Handheld personal data assistant (PDA) with a medical device and method of using the same',
            numCitations: 1514,
            x: -204.64071894654788,
            y: 71.57055284512312
        },
        {
            type: 'patent',
            id: '6558351',
            name: 'Closed loop system for controlling insulin infusion',
            numCitations: 1369,
            x: -212.97816000219387,
            y: 14.71564053417009
        },
        {
            type: 'patent',
            id: '6560461',
            name: 'Authorized location reporting paging system',
            numCitations: 1479,
            x: -250.43543062905093,
            y: -191.43720062406038
        },
        {
            type: 'patent',
            id: '6563174',
            name: 'Thin film transistor and matrix display device',
            numCitations: 3284,
            x: -12.588249503652401,
            y: -3.606638925074952
        },
        {
            type: 'patent',
            id: '6565509',
            name: 'Analyte monitoring device and methods of use',
            numCitations: 1333,
            x: -105.25511612362045,
            y: 157.11713360602621
        },
        {
            type: 'patent',
            id: '6571282',
            name: 'Block-based communication in a communication services patterns environment',
            numCitations: 1467,
            x: 139.669746748281,
            y: 253.01406501471942
        },
        {
            type: 'patent',
            id: '6574635',
            name: 'Application instantiation based upon attributes and values stored in a meta data repository, including tiering of application layers objects and components',
            numCitations: 1368,
            x: 11.002027627782116,
            y: -234.9180529832358
        },
        {
            type: 'patent',
            id: '6577726',
            name: 'Computer telephony integration hotelling method and system',
            numCitations: 1270,
            x: -87.19153245841262,
            y: -173.97644755929284
        },
        {
            type: 'patent',
            id: '6587835',
            name: 'Shopping assistance with handheld computing device',
            numCitations: 1471,
            x: -279.2865813378465,
            y: 110.1587912501507
        },
        {
            type: 'patent',
            id: '6601087',
            name: 'Instant document sharing',
            numCitations: 1397,
            x: 210.94821350137184,
            y: 92.53188786911404
        },
        {
            type: 'patent',
            id: '6602252',
            name: 'Combined dissecting, cauterizing, and stapling device',
            numCitations: 1503,
            x: 147.94977165043258,
            y: 170.08888855631307
        },
        {
            type: 'patent',
            id: '6604117',
            name: 'Method of maintaining a network of partially replicated database system',
            numCitations: 1261,
            x: -0.888555802742035,
            y: -218.23048820307227
        },
        {
            type: 'patent',
            id: '6604128',
            name: 'Method and system for distributing objects over a network',
            numCitations: 1261,
            x: -56.73872742120841,
            y: -243.3483841066443
        },
        {
            type: 'patent',
            id: '6606744',
            name: 'Providing collaborative installation management in a network-based supply chain environment',
            numCitations: 1271,
            x: 153.9948251850397,
            y: 231.46579888120272
        },
        {
            type: 'patent',
            id: '6609150',
            name: 'Web client-server system and method for incompatible page markup and presentation languages',
            numCitations: 1336,
            x: 13.182867607321255,
            y: -184.8342643188157
        },
        {
            type: 'patent',
            id: '6621834',
            name: 'System and method for voice transmission over network protocols',
            numCitations: 1265,
            x: 85.08228149344369,
            y: 105.43464571232896
        },
        {
            type: 'patent',
            id: '6641533',
            name: 'Handheld personal data assistant (PDA) with a medical device and method of using the same',
            numCitations: 1431,
            x: -218.09766118001224,
            y: 39.85760035797989
        },
        {
            type: 'patent',
            id: '6644532',
            name: 'Surgical stapling apparatus',
            numCitations: 1267,
            x: 304.6630925316294,
            y: -29.709611573491397
        },
        {
            type: 'patent',
            id: '6654032',
            name: 'Instant sharing of documents on a remote server',
            numCitations: 1413,
            x: 159.30050355296015,
            y: 108.98389585627005
        },
        {
            type: 'patent',
            id: '6656193',
            name: 'Device for attachment of buttress material to a surgical fastening device',
            numCitations: 1279,
            x: 116.90914153158597,
            y: -78.76626936858557
        },
        {
            type: 'patent',
            id: '6665648',
            name: 'State models for monitoring process',
            numCitations: 1288,
            x: -19.75185273935374,
            y: -126.65338912269928
        },
        {
            type: 'patent',
            id: '6665655',
            name: 'Implicit rating of retrieved information in an information search system',
            numCitations: 1294,
            x: -205.5103612199467,
            y: -62.615175772923976
        },
        {
            type: 'patent',
            id: '6684438',
            name: 'Method of using cache to determine the visibility to a remote database client of a plurality of database transactions',
            numCitations: 1265,
            x: -70.89621190805329,
            y: -211.65898126469475
        },
        {
            type: 'patent',
            id: '6690387',
            name: 'Touch-screen image scrolling system and method',
            numCitations: 1361,
            x: -96.0833335861014,
            y: 257.188666044209
        },
        {
            type: 'patent',
            id: '6693232',
            name: 'Inbred corn line LH295',
            numCitations: 1585,
            x: 225.21362396634333,
            y: -181.7023120873901
        },
        {
            type: 'patent',
            id: '6698643',
            name: 'Expanding parallel jaw device for use with an electromechanical driver device',
            numCitations: 1355,
            x: 116.93380088200308,
            y: 220.21419705439607
        },
        {
            type: 'patent',
            id: '6711565',
            name: 'Method, apparatus, and system for previewing search results',
            numCitations: 1388,
            x: -37.50448129076735,
            y: -273.41169584791356
        },
        {
            type: 'patent',
            id: '6716233',
            name: 'Electromechanical driver and remote surgical instrument attachment having computer assisted control capabilities',
            numCitations: 1244,
            x: 99.98744927740107,
            y: 212.59527229962606
        },
        {
            type: 'patent',
            id: '6718361',
            name: 'Method and apparatus for reliable and scalable distribution of data files in distributed networks',
            numCitations: 1349,
            x: -214.4706454200155,
            y: 179.76445383311545
        },
        {
            type: 'patent',
            id: '6724399',
            name: 'Methods and apparatus for enabling keyboard accelerators in applications implemented via a browser',
            numCitations: 1271,
            x: -3.865437098036597,
            y: -168.04665075977616
        },
        {
            type: 'patent',
            id: '6727522',
            name: 'Transistor and semiconductor device',
            numCitations: 3301,
            x: 45.493009086533476,
            y: -18.399336761865555
        },
        {
            type: 'patent',
            id: '6728702',
            name: 'System and method to implement an integrated search center supporting a full-text search and query on a database',
            numCitations: 1290,
            x: -50.77651269647964,
            y: -265.6439416642619
        },
        {
            type: 'patent',
            id: '6728960',
            name: 'Techniques for managing multiple threads in a browser environment',
            numCitations: 1287,
            x: -31.86098260027274,
            y: -177.09627925166075
        },
        {
            type: 'patent',
            id: '6732095',
            name: 'Method and apparatus for mapping between XML and relational representations',
            numCitations: 1318,
            x: -45.17430826877544,
            y: -152.23938355298804
        },
        {
            type: 'patent',
            id: '6732100',
            name: 'Database access method and system for user role defined access',
            numCitations: 1347,
            x: -59.210136806292674,
            y: -174.83877990849572
        },
        {
            type: 'patent',
            id: '6732111',
            name: 'Method, apparatus, system, and program product for attaching files and other objects to a partially replicated database',
            numCitations: 1294,
            x: -90.7397050479451,
            y: -244.71990328774314
        },
        {
            type: 'patent',
            id: '6754681',
            name: 'Partially replicated distributed database with multiple levels of remote clients',
            numCitations: 1269,
            x: -79.58083870312655,
            y: -228.1724054173842
        },
        {
            type: 'patent',
            id: '6763351',
            name: 'Method, apparatus, and system for attaching search results',
            numCitations: 1487,
            x: -25.243474733492743,
            y: -263.25740794021067
        },
        {
            type: 'patent',
            id: '6763501',
            name: 'Remote document serving',
            numCitations: 1319,
            x: 158.3253837620942,
            y: 93.49546231516919
        },
        {
            type: 'patent',
            id: '6768904',
            name: 'Data communication method using mobile terminal',
            numCitations: 1256,
            x: -307.97606158133414,
            y: 18.769756679797396
        },
        {
            type: 'patent',
            id: '6782383',
            name: 'System and method to implement a persistent and dismissible search center frame',
            numCitations: 1282,
            x: -12.976177557835852,
            y: -272.9194404073791
        },
        {
            type: 'patent',
            id: '6783524',
            name: 'Robotic surgical tool with ultrasound cauterizing and cutting instrument',
            numCitations: 1505,
            x: 43.38231098694066,
            y: 279.08217801147714
        },
        {
            type: 'patent',
            id: '6786382',
            name: 'Surgical stapling instrument incorporating an articulation joint for a firing bar track',
            numCitations: 1371,
            x: 134.94078164502835,
            y: -65.10082373566381
        },
        {
            type: 'patent',
            id: '6804330',
            name: 'Method and system for accessing CRM data via voice',
            numCitations: 1348,
            x: 41.445251723842865,
            y: -236.9915648109865
        },
        {
            type: 'patent',
            id: '6809653',
            name: 'Telemetered characteristic monitor system and method of using the same',
            numCitations: 1250,
            x: -192.3665947756808,
            y: 85.20039713859154
        },
        {
            type: 'patent',
            id: '6826565',
            name: 'Method and apparatus for serving files to browsing clients',
            numCitations: 1253,
            x: -187.202078612142,
            y: -205.8028067140975
        },
        {
            type: 'patent',
            id: '6826582',
            name: 'Method and system for using file systems for content management',
            numCitations: 1262,
            x: -173.39071713434592,
            y: -84.74810645391052
        },
        {
            type: 'patent',
            id: '6826745',
            name: 'System and method for smart scripting call centers and configuration thereof',
            numCitations: 1290,
            x: -76.78126433121005,
            y: -189.22148175125054
        },
        {
            type: 'patent',
            id: '6829655',
            name: 'Method and system for server synchronization with a computing device via a companion device',
            numCitations: 1292,
            x: 54.15067210701869,
            y: -193.55954311545358
        },
        {
            type: 'patent',
            id: '6830174',
            name: 'Medical instrument',
            numCitations: 1345,
            x: 241.6836563040002,
            y: 178.8101554942473
        },
        {
            type: 'patent',
            id: '6842748',
            name: 'Usage based strength between related information in an information retrieval system',
            numCitations: 1273,
            x: -255.7671401763918,
            y: -89.30941490160309
        },
        {
            type: 'patent',
            id: '6843403',
            name: 'Surgical clamping, cutting and stapling device',
            numCitations: 1278,
            x: 80.62267888317515,
            y: 204.67249292957572
        },
        {
            type: 'patent',
            id: '6850252',
            name: 'Intelligent electronic appliance system and method',
            numCitations: 1784,
            x: -269.0939625716982,
            y: 80.79152540917103
        },
        {
            type: 'patent',
            id: '6850895',
            name: 'Assignment manager',
            numCitations: 1429,
            x: -104.71523172899978,
            y: -237.67489051495383
        },
        {
            type: 'patent',
            id: '6850949',
            name: 'System and method for generating a dynamic interface via a communications network',
            numCitations: 1276,
            x: 170.8948478666423,
            y: -157.1623996387279
        },
        {
            type: 'patent',
            id: '6852915',
            name: 'Inbred corn line LH283BtMON810',
            numCitations: 1584,
            x: 214.2878252666797,
            y: -221.65064590625735
        },
        {
            type: 'patent',
            id: '6905057',
            name: 'Surgical stapling instrument incorporating a firing mechanism having a linked rack transmission',
            numCitations: 1398,
            x: 204.244314091743,
            y: -78.10023672232607
        },
        {
            type: 'patent',
            id: '6959852',
            name: 'Surgical stapling instrument with multistroke firing incorporating an anti-backup mechanism',
            numCitations: 1279,
            x: 214.47741140236582,
            y: -56.291587636591125
        },
        {
            type: 'patent',
            id: '6964363',
            name: 'Surgical stapling instrument having articulation joint support plates for supporting a firing bar',
            numCitations: 1330,
            x: 171.89247270898028,
            y: -97.41002462550293
        },
        {
            type: 'patent',
            id: '6978921',
            name: 'Surgical stapling instrument incorporating an E-beam firing mechanism',
            numCitations: 1271,
            x: 220.9998003804044,
            y: -71.42078135636545
        },
        {
            type: 'patent',
            id: '6981628',
            name: 'Surgical instrument with a lateral-moving articulation control',
            numCitations: 1588,
            x: 155.12209667738722,
            y: -93.69628751460294
        },
        {
            type: 'patent',
            id: '7000818',
            name: 'Surgical stapling instrument having separate distinct closing and firing systems',
            numCitations: 1422,
            x: 227.01768845379692,
            y: 7.024056611463051
        },
        {
            type: 'patent',
            id: '7025743',
            name: 'External infusion device with remote programming, bolus estimator and/or vibration alarm capabilities',
            numCitations: 1348,
            x: -139.33487275744275,
            y: 46.52061115334398
        },
        {
            type: 'patent',
            id: '7049190',
            name: 'Method for forming ZnO film, method for forming ZnO semiconductor layer, method for fabricating semiconductor device, and semiconductor device',
            numCitations: 3234,
            x: -289.10918833611,
            y: -97.96776938549537
        },
        {
            type: 'patent',
            id: '7055731',
            name: 'Surgical stapling instrument incorporating a tapered firing bar for increased flexibility around the articulation joint',
            numCitations: 1325,
            x: 230.49518386439988,
            y: -59.64224567858248
        },
        {
            type: 'patent',
            id: '7061014',
            name: 'Natural-superlattice homologous single crystal thin film, method for preparation thereof, and device using said single crystal thin film',
            numCitations: 3339,
            x: -5.800882044901439,
            y: 68.52641595031525
        },
        {
            type: 'patent',
            id: '7064346',
            name: 'Transistor and semiconductor device',
            numCitations: 3268,
            x: -3.4003031519913716,
            y: 25.981356836043688
        },
        {
            type: 'patent',
            id: '7105868',
            name: 'High-electron mobility transistor with zinc oxide',
            numCitations: 3233,
            x: -17.835785749785817,
            y: 199.91883720210305
        },
        {
            type: 'patent',
            id: '7111769',
            name: 'Surgical instrument incorporating an articulation mechanism having rotation about the longitudinal axis',
            numCitations: 1278,
            x: 151.22579832524045,
            y: -37.17099074749013
        },
        {
            type: 'patent',
            id: '7147138',
            name: 'Surgical stapling instrument having an electroactive polymer actuated buttress deployment mechanism',
            numCitations: 1428,
            x: 189.086143238575,
            y: -73.69130392683924
        },
        {
            type: 'patent',
            id: '7159750',
            name: 'Surgical stapling device',
            numCitations: 1258,
            x: -41.29995186519443,
            y: 292.8462674537822
        },
        {
            type: 'patent',
            id: '7211825',
            name: 'Indium oxide-based thin film transistors and circuits',
            numCitations: 3245,
            x: -312.3839057221477,
            y: -5.614541567133007
        },
        {
            type: 'patent',
            id: '7246734',
            name: 'Rotary hydraulic pump actuated multi-stroke surgical instrument',
            numCitations: 1288,
            x: 200.44563380086515,
            y: -63.18865588076886
        },
        {
            type: 'patent',
            id: '7282782',
            name: 'Combined binary oxide semiconductor device',
            numCitations: 3273,
            x: -125.8309041477986,
            y: -31.277877893580488
        },
        {
            type: 'patent',
            id: '7297977',
            name: 'Semiconductor device',
            numCitations: 3318,
            x: -128.28288629696726,
            y: -55.26147557803329
        },
        {
            type: 'patent',
            id: '7323356',
            name: 'LnCuO(S,Se,Te)monocrystalline thin film, its manufacturing method, and optical device or electronic device using the monocrystalline thin film',
            numCitations: 3251,
            x: -18.59755305395574,
            y: 88.95531610838968
        },
        {
            type: 'patent',
            id: '7340411',
            name: 'System and method for generating, capturing, and managing customer lead information over a computer network',
            numCitations: 1282,
            x: 171.1408315591698,
            y: -202.24883708044808
        },
        {
            type: 'patent',
            id: '7380695',
            name: 'Surgical stapling instrument having a single lockout mechanism for prevention of firing',
            numCitations: 1386,
            x: 186.25833530110194,
            y: -21.66321873245209
        },
        {
            type: 'patent',
            id: '7380696',
            name: 'Articulating surgical stapling instrument incorporating a two-piece E-beam firing mechanism',
            numCitations: 1388,
            x: 207.9029593903179,
            y: -8.531533737621885
        },
        {
            type: 'patent',
            id: '7385224',
            name: 'Thin film transistor having an etching protection film and manufacturing method thereof',
            numCitations: 3224,
            x: -209.82230482555335,
            y: -138.5100409900293
        },
        {
            type: 'patent',
            id: '7402506',
            name: 'Methods of making thin film transistors comprising zinc-oxide-based semiconductor materials and transistors made thereby',
            numCitations: 3258,
            x: 205.02475667447774,
            y: 185.67878066443038
        },
        {
            type: 'patent',
            id: '7404508',
            name: 'Surgical stapling and cutting device',
            numCitations: 1517,
            x: 142.8534886173237,
            y: 1.3325885281748553
        },
        {
            type: 'patent',
            id: '7411209',
            name: 'Field-effect transistor and method for manufacturing the same',
            numCitations: 3255,
            x: 98.46207221183528,
            y: 123.03084775370279
        },
        {
            type: 'patent',
            id: '7453065',
            name: 'Sensor and image pickup device',
            numCitations: 3230,
            x: -0.16573743942671854,
            y: 141.28922935299022
        },
        {
            type: 'patent',
            id: '7453087',
            name: 'Thin-film transistor and thin-film diode having amorphous-oxide semiconductor layer',
            numCitations: 3242,
            x: 64.92619908272222,
            y: 181.84593665090443
        },
        {
            type: 'patent',
            id: '7462862',
            name: 'Transistor using an isovalent semiconductor oxide as the active channel layer',
            numCitations: 3244,
            x: -69.61679142848251,
            y: -17.951431766711924
        },
        {
            type: 'patent',
            id: '7464846',
            name: 'Surgical instrument having a removable battery',
            numCitations: 1287,
            x: 181.84194955991686,
            y: -6.130356644541759
        },
        {
            type: 'patent',
            id: '7468304',
            name: 'Method of fabricating oxide semiconductor device',
            numCitations: 3240,
            x: 43.14447422876499,
            y: 84.30857449883901
        },
        {
            type: 'patent',
            id: '7501293',
            name: 'Semiconductor device in which zinc oxide is used as a semiconductor material and method for manufacturing the semiconductor device',
            numCitations: 3216,
            x: 100.75984495619763,
            y: 263.93928117765387
        },
        {
            type: 'patent',
            id: '7506791',
            name: 'Surgical stapling instrument with mechanical mechanism for limiting maximum tissue compression',
            numCitations: 1257,
            x: 162.8994374938383,
            y: -13.50766436461125
        },
        {
            type: 'patent',
            id: '7620655',
            name: 'Method, device and computer program product for identifying visitors of websites',
            numCitations: 1243,
            x: 273.7453257058471,
            y: -134.11969716806783
        },
        {
            type: 'patent',
            id: '7632985',
            name: 'Soybean event MON89788 and methods for detection thereof',
            numCitations: 1477,
            x: 25.156412731130995,
            y: 232.6383745363165
        },
        {
            type: 'patent',
            id: '7663607',
            name: 'Multipoint touchscreen',
            numCitations: 2217,
            x: 148.31729075714412,
            y: -252.1205411729562
        },
        {
            type: 'patent',
            id: '7674650',
            name: 'Semiconductor device and manufacturing method thereof',
            numCitations: 3439,
            x: 265.20775273511885,
            y: 97.08753175649879
        },
        {
            type: 'patent',
            id: '7732819',
            name: 'Semiconductor device and manufacturing method thereof',
            numCitations: 3288,
            x: 241.27432475696145,
            y: 92.57917159661595
        },
        {
            type: 'patent',
            id: '8053184',
            name: 'Soybean event MON89788 and methods for detection thereof',
            numCitations: 1249,
            x: 12.74173927451986,
            y: 223.33050946853854
        },
        {
            type: 'inventor',
            id: '4082602-2',
            name: 'Adam Heller',
            numPatents: 278,
            x: -78.97918367878395,
            y: 175.83458551945697
        },
        {
            type: 'inventor',
            id: '6551276-11',
            name: 'Adrian Gut',
            numPatents: 14,
            x: -126.49163896882082,
            y: 77.05392542894437
        },
        {
            type: 'inventor',
            id: '6551276-3',
            name: 'Alan Haubach',
            numPatents: 15,
            x: -133.54480618517556,
            y: 13.73644337954243
        },
        {
            type: 'inventor',
            id: '6732095-1',
            name: 'Alex Warshavsky',
            numPatents: 38,
            x: -41.43006091014681,
            y: -115.69468137064817
        },
        {
            type: 'inventor',
            id: '4082097-1',
            name: 'Alfred E. Mann',
            numPatents: 73,
            x: -166.25127823417688,
            y: 64.21424556623339
        },
        {
            type: 'inventor',
            id: '7402506-2',
            name: 'Andrea C. Scuderi',
            numPatents: 2,
            x: 232.021013564944,
            y: 201.54360553214553
        },
        {
            type: 'inventor',
            id: '6295530-1',
            name: 'Andrew M. Ritchie',
            numPatents: 3,
            x: -180.13270109380883,
            y: -175.89335875039285
        },
        {
            type: 'inventor',
            id: '5944791-1',
            name: 'Andrew W. Scherpbier',
            numPatents: 8,
            x: 89.03596788702271,
            y: 73.41966601562058
        },
        {
            type: 'inventor',
            id: '6665648-4',
            name: 'Andrzej P. Mazur',
            numPatents: 1,
            x: -17.75957738133269,
            y: -90.04327884141138
        },
        {
            type: 'inventor',
            id: '6577726-4',
            name: 'Anil K. Annadata',
            numPatents: 19,
            x: -90.27237726758581,
            y: -142.1198155312784
        },
        {
            type: 'inventor',
            id: '6336137-3',
            name: 'Anil Mukundan',
            numPatents: 24,
            x: 44.97570003882059,
            y: -173.1912630521635
        },
        {
            type: 'inventor',
            id: '6829655-3',
            name: 'Anupam Singhal',
            numPatents: 12,
            x: 68.03341497080808,
            y: -159.6164090183031
        },
        {
            type: 'inventor',
            id: '5276262-2',
            name: 'Arthur L. Johnson',
            numPatents: 9,
            x: 185.5095664352228,
            y: -228.8419915898405
        },
        {
            type: 'inventor',
            id: '7082832-4',
            name: 'Ayanori Endo',
            numPatents: 5,
            x: 116.09261573010951,
            y: 149.17176081875573
        },
        {
            type: 'inventor',
            id: '6370584-1',
            name: 'Azer Bestavros',
            numPatents: 8,
            x: -240.41292415194087,
            y: 197.40201072984638
        },
        {
            type: 'inventor',
            id: '5722997-2',
            name: 'Behrad Aria',
            numPatents: 75,
            x: -76.88639579899268,
            y: 140.59743480285144
        },
        {
            type: 'inventor',
            id: '4972224-1',
            name: 'Bennie Thompson',
            numPatents: 46,
            x: 129.80735052389812,
            y: -4.481972559839983
        },
        {
            type: 'inventor',
            id: '7620655-2',
            name: 'Björn Sperling',
            numPatents: 1,
            x: 265.69802466021343,
            y: -163.1748759268247
        },
        {
            type: 'inventor',
            id: '6551276-12',
            name: 'Bob Murtfeldt',
            numPatents: 14,
            x: -104.57602641605023,
            y: 43.21929386017491
        },
        {
            type: 'inventor',
            id: '6809653-9',
            name: 'Brad T. Hite',
            numPatents: 4,
            x: -178.740694429597,
            y: 114.56430107100311
        },
        {
            type: 'inventor',
            id: '6665648-5',
            name: 'Brian Groves',
            numPatents: 3,
            x: -4.063703727593559,
            y: -93.24666021615177
        },
        {
            type: 'inventor',
            id: '7000818-3',
            name: 'Brian J. Hemmelgarn',
            numPatents: 2,
            x: 251.87825271692208,
            y: 28.28980319526008
        },
        {
            type: 'inventor',
            id: '6658577-1',
            name: 'Brian Q. Huppi',
            numPatents: 94,
            x: 123.19631987835258,
            y: -269.5549552777111
        },
        {
            type: 'inventor',
            id: '5465895-1',
            name: 'Bryan D. Knodel',
            numPatents: 147,
            x: 249.27159352509696,
            y: 149.8942269653444
        },
        {
            type: 'inventor',
            id: '5948006-1',
            name: 'Carla M. Mann',
            numPatents: 30,
            x: -148.41153476987805,
            y: 268.2102368533701
        },
        {
            type: 'inventor',
            id: '6558351-8',
            name: 'Cary D. Talbot',
            numPatents: 51,
            x: -242.1201373960085,
            y: 1.0809105861722483
        },
        {
            type: 'inventor',
            id: '5176644-1',
            name: 'Chad Srisathapat',
            numPatents: 28,
            x: -106.59780325645289,
            y: 56.72415996247363
        },
        {
            type: 'inventor',
            id: '6732095-2',
            name: 'Chandrakant Ramkrishna Bhavsar',
            numPatents: 7,
            x: -56.44692423602858,
            y: -114.38936355952521
        },
        {
            type: 'inventor',
            id: '6804330-5',
            name: 'Chris Haven',
            numPatents: 8,
            x: 76.58996926607027,
            y: -233.59376421774968
        },
        {
            type: 'inventor',
            id: '5859916-3',
            name: 'Christopher A. Julian',
            numPatents: 35,
            x: 32.49529202915526,
            y: 307.85587157329917
        },
        {
            type: 'inventor',
            id: '5963953-3',
            name: 'Christopher Stauber',
            numPatents: 3,
            x: 38.876499177308936,
            y: -254.6853371485407
        },
        {
            type: 'inventor',
            id: '6593834-2',
            name: 'Chunong Qiu',
            numPatents: 30,
            x: -299.51357073275767,
            y: 28.693586133179505
        },
        {
            type: 'inventor',
            id: '5703357-3',
            name: 'Cindy Xing Qiu',
            numPatents: 37,
            x: -307.60494602088494,
            y: -36.09974297692554
        },
        {
            type: 'inventor',
            id: '5382232-1',
            name: 'Cliff Hague',
            numPatents: 25,
            x: -158.94889170792217,
            y: 75.57366125967091
        },
        {
            type: 'inventor',
            id: '6535909-1',
            name: 'David Bradley Rust',
            numPatents: 10,
            x: 293.89378266881215,
            y: 108.24045592690449
        },
        {
            type: 'inventor',
            id: '5713911-1',
            name: 'David C. Racenet',
            numPatents: 117,
            x: -70.73199996729076,
            y: 283.6884502132661
        },
        {
            type: 'inventor',
            id: '5512426-1',
            name: 'David H. Levy',
            numPatents: 97,
            x: 175.62273346829593,
            y: 195.03348092042785
        },
        {
            type: 'inventor',
            id: '5755737-3',
            name: 'David Karl Lee Peterson',
            numPatents: 10,
            x: -116.19997593920681,
            y: 235.42317467768706
        },
        {
            type: 'inventor',
            id: '6004276-13',
            name: 'David L. Rabbers',
            numPatents: 9,
            x: 90.05455138839467,
            y: -199.76724302660992
        },
        {
            type: 'inventor',
            id: '4127227-1',
            name: 'David T. Green',
            numPatents: 253,
            x: 320.0538956493474,
            y: -2.5674406983783777
        },
        {
            type: 'inventor',
            id: '5329655-1',
            name: 'Dean L. Garner',
            numPatents: 9,
            x: 82.9868378665844,
            y: -75.01472155002138
        },
        {
            type: 'inventor',
            id: '6551276-9',
            name: 'Deborah Ruppert',
            numPatents: 22,
            x: -118.26552937451507,
            y: 20.131481189101695
        },
        {
            type: 'inventor',
            id: '6551276-10',
            name: 'Dennis P. Bishop',
            numPatents: 16,
            x: -113.04138432659943,
            y: 68.5347918156229
        },
        {
            type: 'inventor',
            id: '5918159-2',
            name: 'Denzil Willoughby Chesney',
            numPatents: 8,
            x: -221.3438163197732,
            y: -180.31258868435725
        },
        {
            type: 'inventor',
            id: '6912839-2',
            name: 'Derek Dee Deville',
            numPatents: 127,
            x: 124.00562369714609,
            y: 30.303518573213328
        },
        {
            type: 'inventor',
            id: '6718361-8',
            name: 'Domenic J. LaRosa',
            numPatents: 7,
            x: -185.1634027151588,
            y: 191.49880558090896
        },
        {
            type: 'inventor',
            id: '6850949-1',
            name: 'Doug Warner',
            numPatents: 1,
            x: 197.4109586624888,
            y: -141.51137425901277
        },
        {
            type: 'inventor',
            id: '6530932-2',
            name: 'Douglas B. Hoffman',
            numPatents: 41,
            x: 112.65902202678886,
            y: -41.95179419340801
        },
        {
            type: 'inventor',
            id: '6434550-1',
            name: 'Douglas K. Warner',
            numPatents: 11,
            x: -240.213051803147,
            y: -58.38534522176044
        },
        {
            type: 'inventor',
            id: '6850895-5',
            name: 'Duane Wandless',
            numPatents: 3,
            x: -141.77120370957505,
            y: -235.84945888555336
        },
        {
            type: 'inventor',
            id: '7632985-4',
            name: 'Ellen Dickinson',
            numPatents: 5,
            x: -6.650712953659232,
            y: 243.85922494977996
        },
        {
            type: 'inventor',
            id: '5616532-3',
            name: 'Ephraim Heller',
            numPatents: 125,
            x: -136.66276931786788,
            y: 148.50833287306844
        },
        {
            type: 'inventor',
            id: '6724399-1',
            name: 'Ernst Katchour',
            numPatents: 2,
            x: 20.460705177816816,
            y: -138.6316174346047
        },
        {
            type: 'inventor',
            id: '4403687-2',
            name: 'Eugene L. Timperman',
            numPatents: 69,
            x: 167.81405976240322,
            y: 23.653794348670516
        },
        {
            type: 'inventor',
            id: '6905057-2',
            name: 'Frederick E. Shelton, IV',
            numPatents: 1047,
            x: 206.94055601161958,
            y: -33.63794401922105
        },
        {
            type: 'inventor',
            id: '5041086-4',
            name: 'Fredric C. Colman',
            numPatents: 119,
            x: -93.07141522233565,
            y: 187.61382791214774
        },
        {
            type: 'inventor',
            id: '6433921-2',
            name: 'G. Victor Treyz',
            numPatents: 19,
            x: -250.2141922087249,
            y: 117.70936188128789
        },
        {
            type: 'inventor',
            id: '6558351-1',
            name: 'Garry M. Steil',
            numPatents: 21,
            x: -197.55033843707088,
            y: -14.969054157255261
        },
        {
            type: 'inventor',
            id: '5707369-2',
            name: 'Geoffrey C. Hueil',
            numPatents: 37,
            x: 88.77732129975968,
            y: -59.34294469090431
        },
        {
            type: 'inventor',
            id: '6826582-2',
            name: 'George Ericsson',
            numPatents: 1,
            x: -158.02070855249937,
            y: -111.41355666075413
        },
        {
            type: 'inventor',
            id: 'RE28932-2',
            name: 'Graham W. Bryan',
            numPatents: 17,
            x: 302.15197174981995,
            y: 2.971153301217186
        },
        {
            type: 'inventor',
            id: '6144679-1',
            name: 'Gregory S Herman',
            numPatents: 70,
            x: -107.08721212438253,
            y: -22.999325980475344
        },
        {
            type: 'inventor',
            id: '6601087-2',
            name: 'Guanghong Yang',
            numPatents: 8,
            x: 181.9400868080221,
            y: 77.6677862338119
        },
        {
            type: 'inventor',
            id: '6577726-3',
            name: 'Henry D. Jay',
            numPatents: 7,
            x: -122.02320476982499,
            y: -157.95566732418285
        },
        {
            type: 'inventor',
            id: '4283024-1',
            name: 'Henry R. Sienkiewicz',
            numPatents: 35,
            x: 274.60415603712727,
            y: -27.27330962584567
        },
        {
            type: 'inventor',
            id: '7323356-5',
            name: 'Hidenori Hiramatsu',
            numPatents: 4,
            x: -36.605424251950446,
            y: 115.850089319988
        },
        {
            type: 'inventor',
            id: '4703019-2',
            name: 'Hideo Hosono',
            numPatents: 68,
            x: -9.859457094237333,
            y: 112.18374696348913
        },
        {
            type: 'inventor',
            id: '4253061-3',
            name: 'Hideo Ohno',
            numPatents: 55,
            x: 16.424397835913993,
            y: 1.5981290321141162
        },
        {
            type: 'inventor',
            id: '5272069-6',
            name: 'Hiromichi Ota',
            numPatents: 19,
            x: -42.930231233299565,
            y: 72.03081578296118
        },
        {
            type: 'inventor',
            id: '5041200-1',
            name: 'Hiromitsu Ishii',
            numPatents: 40,
            x: -240.4509629339296,
            y: -150.27601265988352
        },
        {
            type: 'inventor',
            id: '6863363-1',
            name: 'Hisato Yabuta',
            numPatents: 40,
            x: 60.4372147665455,
            y: 56.49664921881387
        },
        {
            type: 'inventor',
            id: '7385224-2',
            name: 'Hitoshi Hokari',
            numPatents: 3,
            x: -241.8310333799511,
            y: -133.54049779295428
        },
        {
            type: 'inventor',
            id: '5041200-4',
            name: 'Ikuhiro Yamaguchi',
            numPatents: 10,
            x: -228.78086701719153,
            y: -162.3667158856017
        },
        {
            type: 'inventor',
            id: '4997262-1',
            name: 'Ikuo Sakono',
            numPatents: 9,
            x: -22.451556652393943,
            y: -34.04750168418211
        },
        {
            type: 'inventor',
            id: '5081422-1',
            name: 'Ishiang Shih',
            numPatents: 28,
            x: -286.3270775940396,
            y: -23.733105119458497
        },
        {
            type: 'inventor',
            id: '6281898-2',
            name: 'Jacquelyn A. Martino',
            numPatents: 43,
            x: -77.40426674630258,
            y: 233.14366209397406
        },
        {
            type: 'inventor',
            id: '6665648-3',
            name: 'Jai-Jein Yu',
            numPatents: 3,
            x: -31.84005286492673,
            y: -91.62375747364119
        },
        {
            type: 'inventor',
            id: '4809697-1',
            name: 'James D. Causey, III',
            numPatents: 108,
            x: -178.265216120422,
            y: 51.755680930746685
        },
        {
            type: 'inventor',
            id: '4863425-2',
            name: 'James L. Henke',
            numPatents: 25,
            x: -229.82632326693144,
            y: 81.1483918350451
        },
        {
            type: 'inventor',
            id: '5533238-1',
            name: 'James Say',
            numPatents: 115,
            x: -110.26514650550313,
            y: 189.73841907261374
        },
        {
            type: 'inventor',
            id: '6711565-2',
            name: 'Jason Zoss',
            numPatents: 14,
            x: -36.79763583041338,
            y: -303.3606293140057
        },
        {
            type: 'inventor',
            id: '6551276-8',
            name: 'Jay Yonemoto',
            numPatents: 26,
            x: -108.39060115065696,
            y: 30.667530964984817
        },
        {
            type: 'inventor',
            id: '5863326-1',
            name: 'Jeffrey E. Nause',
            numPatents: 7,
            x: -34.97468782651399,
            y: 225.53781276672427
        },
        {
            type: 'inventor',
            id: '4951278-2',
            name: 'Jeffrey I. Cohen',
            numPatents: 45,
            x: -106.67729256003422,
            y: -275.96655765182123
        },
        {
            type: 'inventor',
            id: '6393605-1',
            name: 'Jeffrey Loomans',
            numPatents: 4,
            x: -12.089523280862164,
            y: -146.87295689250564
        },
        {
            type: 'inventor',
            id: '5243622-2',
            name: 'Jeffrey M. Fischer',
            numPatents: 23,
            x: -69.11510576403663,
            y: -121.59596238278911
        },
        {
            type: 'inventor',
            id: '5897563-4',
            name: 'Jeffrey S. Swayze',
            numPatents: 237,
            x: 182.7575218770712,
            y: -42.652264875397925
        },
        {
            type: 'inventor',
            id: '7608761-4',
            name: 'Jennifer Rinehart',
            numPatents: 9,
            x: 14.603033717644877,
            y: 258.01693807943076
        },
        {
            type: 'inventor',
            id: '7380696-3',
            name: 'Jerry R. Morgan',
            numPatents: 1,
            x: 240.77923512539172,
            y: 0.756185655222625
        },
        {
            type: 'inventor',
            id: '5715450-1',
            name: 'Jesse Ambrose',
            numPatents: 19,
            x: 36.180423514508206,
            y: -271.11815189166657
        },
        {
            type: 'inventor',
            id: '6711565-3',
            name: 'Jian-Jung Ying',
            numPatents: 15,
            x: -52.40594362916027,
            y: -298.6209852446577
        },
        {
            type: 'inventor',
            id: '6516227-4',
            name: 'Joey Chen',
            numPatents: 50,
            x: -154.54667136290993,
            y: 208.95072280734337
        },
        {
            type: 'inventor',
            id: '6233617-2',
            name: 'John Coker',
            numPatents: 29,
            x: -107.81893815632144,
            y: -170.9074676231656
        },
        {
            type: 'inventor',
            id: '4561444-1',
            name: 'John H. Livingston',
            numPatents: 31,
            x: -152.85300444583956,
            y: 85.10940008964967
        },
        {
            type: 'inventor',
            id: '5237178-2',
            name: 'John J. Mastrototaro',
            numPatents: 77,
            x: -205.49739590958532,
            y: 50.31477970484868
        },
        {
            type: 'inventor',
            id: '6424847-3',
            name: 'John J. Shin',
            numPatents: 6,
            x: -185.37446355710384,
            y: -3.2872027106235895
        },
        {
            type: 'inventor',
            id: '5713911-2',
            name: 'John W. Beardsley',
            numPatents: 110,
            x: -33.81475988638202,
            y: 262.88267211113725
        },
        {
            type: 'inventor',
            id: '6690387-1',
            name: 'John Zimmerman',
            numPatents: 16,
            x: -103.86436428501,
            y: 287.0324152077035
        },
        {
            type: 'inventor',
            id: '6295530-2',
            name: 'Jonathan Bradshaw',
            numPatents: 7,
            x: -211.8714260910478,
            y: -224.50904787445123
        },
        {
            type: 'inventor',
            id: '6964363-2',
            name: 'Joseph Charles Heuil',
            numPatents: 1,
            x: 157.89490960975428,
            y: -126.44781831975064
        },
        {
            type: 'inventor',
            id: '6804330-4',
            name: 'Joseph Harb',
            numPatents: 16,
            x: 61.12664822458566,
            y: -268.1908816611899
        },
        {
            type: 'inventor',
            id: '7154477-2',
            name: 'Joshua A. Strickon',
            numPatents: 31,
            x: 143.607727645999,
            y: -281.669369261142
        },
        {
            type: 'inventor',
            id: '6665648-1',
            name: 'Karen Brodersen',
            numPatents: 2,
            x: -52.887761617406746,
            y: -135.25324601212748
        },
        {
            type: 'inventor',
            id: '6914182-1',
            name: 'Katsutoshi Takeda',
            numPatents: 12,
            x: -301.89433487691184,
            y: -70.43324650808906
        },
        {
            type: 'inventor',
            id: '5925224-1',
            name: 'Kazuki Kobayashi',
            numPatents: 22,
            x: -41.900676918096416,
            y: 7.301358596622912
        },
        {
            type: 'inventor',
            id: '7061014-4',
            name: 'Kazushige Ueda',
            numPatents: 8,
            x: -37.66496363448323,
            y: 59.62475565738286
        },
        {
            type: 'inventor',
            id: '4356455-3',
            name: 'Keishi Saito',
            numPatents: 60,
            x: 10.219140633910085,
            y: 114.60611008460567
        },
        {
            type: 'inventor',
            id: '6175752-9',
            name: 'Keith A. Friedman',
            numPatents: 56,
            x: -72.76478399432692,
            y: 157.96280246014734
        },
        {
            type: 'inventor',
            id: 'D263987-1',
            name: 'Keith L. Milliman',
            numPatents: 148,
            x: 285.27055146309806,
            y: -4.161607699952845
        },
        {
            type: 'inventor',
            id: 'D304234-2',
            name: 'Keith Ratcliff',
            numPatents: 76,
            x: 298.25438655644587,
            y: -62.037733990730615
        },
        {
            type: 'inventor',
            id: '6838397-3',
            name: 'Kengo Akimoto',
            numPatents: 301,
            x: 233.30591089284124,
            y: 118.12865814744283
        },
        {
            type: 'inventor',
            id: '4072236-1',
            name: 'Kenji Nomura',
            numPatents: 72,
            x: -18.491573620748454,
            y: 164.3319743882085
        },
        {
            type: 'inventor',
            id: '4890611-3',
            name: 'Kenneth H. Mollenauer',
            numPatents: 139,
            x: 171.12139099125284,
            y: 149.8278932183207
        },
        {
            type: 'inventor',
            id: '5409498-4',
            name: 'Kenneth S. Wales',
            numPatents: 34,
            x: 151.61506500486365,
            y: -68.1715301096975
        },
        {
            type: 'inventor',
            id: '6558351-2',
            name: 'Kerstin Rebrin',
            numPatents: 8,
            x: -213.99832648219893,
            y: -18.21020350970695
        },
        {
            type: 'inventor',
            id: '7083075-3',
            name: 'Kevin R. Doll',
            numPatents: 33,
            x: 195.17161861296412,
            y: 21.82757190718286
        },
        {
            type: 'inventor',
            id: '6826745-3',
            name: 'Kevin R. Nix',
            numPatents: 5,
            x: -113.52318349679786,
            y: -186.65850464097767
        },
        {
            type: 'inventor',
            id: '4682596-2',
            name: 'Kevin W. Smith',
            numPatents: 245,
            x: 142.01517052619224,
            y: 35.31713032040018
        },
        {
            type: 'inventor',
            id: '6336137-1',
            name: 'King-Hwa Lee',
            numPatents: 7,
            x: 29.136416821389545,
            y: -152.83892279100135
        },
        {
            type: 'inventor',
            id: '6553563-3',
            name: 'Klaus W. Strobel',
            numPatents: 3,
            x: 18.502269802896187,
            y: -277.84229119164485
        },
        {
            type: 'inventor',
            id: '5715675-2',
            name: 'Korey Kline',
            numPatents: 67,
            x: 107.3928086404656,
            y: 0.12497168391208881
        },
        {
            type: 'inventor',
            id: '6718361-2',
            name: 'Krishna Mangiapudi',
            numPatents: 2,
            x: -221.42351181095376,
            y: 210.68462107621696
        },
        {
            type: 'inventor',
            id: '6577726-1',
            name: 'Kuang-Yang Huang',
            numPatents: 7,
            x: -110.90293474419634,
            y: -144.1107477274019
        },
        {
            type: 'inventor',
            id: '7159750-5',
            name: 'Lee Ann Olson',
            numPatents: 102,
            x: -12.291045729816593,
            y: 284.322824027671
        },
        {
            type: 'inventor',
            id: '6718361-4',
            name: 'Leroy R. Karge',
            numPatents: 6,
            x: -246.56898495901828,
            y: 176.8643082489128
        },
        {
            type: 'inventor',
            id: '6551276-4',
            name: 'Luis J. Malave',
            numPatents: 25,
            x: -150.46955158412106,
            y: 15.466681355594043
        },
        {
            type: 'inventor',
            id: '6048110-3',
            name: 'Lyn M. Irving',
            numPatents: 50,
            x: 185.89368255203638,
            y: 211.73497316837444
        },
        {
            type: 'inventor',
            id: '6718361-3',
            name: 'Lynne M. Murach',
            numPatents: 6,
            x: -184.59731612599379,
            y: 168.95459030128404
        },
        {
            type: 'inventor',
            id: '5948789-1',
            name: 'Magnus Larsson',
            numPatents: 32,
            x: 282.3498743492304,
            y: -105.85390576839409
        },
        {
            type: 'inventor',
            id: '6829655-2',
            name: 'Magnus Vejlstrup',
            numPatents: 5,
            x: 84.57683420505849,
            y: -211.60546591129122
        },
        {
            type: 'inventor',
            id: '6711565-4',
            name: 'Marc Caltabiano',
            numPatents: 18,
            x: -21.572503547031765,
            y: -303.25001204800884
        },
        {
            type: 'inventor',
            id: '7078503-3',
            name: 'Marianne Malven',
            numPatents: 24,
            x: 39.36478912183982,
            y: 204.50761088237962
        },
        {
            type: 'inventor',
            id: '6223205-2',
            name: 'Mark E. Crovella',
            numPatents: 11,
            x: -239.130673392076,
            y: 159.5386268120703
        },
        {
            type: 'inventor',
            id: '6621834-2',
            name: 'Mark Randle Boyns',
            numPatents: 9,
            x: 92.9515991340844,
            y: 139.72491699418129
        },
        {
            type: 'inventor',
            id: '5534132-1',
            name: 'Mark S. Vreeke',
            numPatents: 99,
            x: -126.17414240825202,
            y: 182.14886801748534
        },
        {
            type: 'inventor',
            id: '4892244-4',
            name: 'Mark S. Zeiner',
            numPatents: 112,
            x: 87.86551233944792,
            y: -93.61435949906866
        },
        {
            type: 'inventor',
            id: '6829655-6',
            name: 'Martin Susser',
            numPatents: 8,
            x: 86.5166449716311,
            y: -176.3680568624842
        },
        {
            type: 'inventor',
            id: '4486720-1',
            name: 'Masahiro Hirano',
            numPatents: 64,
            x: -26.473941021328834,
            y: 50.583877501287475
        },
        {
            type: 'inventor',
            id: '5622653-1',
            name: 'Masahiro Orita',
            numPatents: 13,
            x: -43.311943512469504,
            y: 88.05852401092362
        },
        {
            type: 'inventor',
            id: '6080998-3',
            name: 'Masao Isomura',
            numPatents: 3,
            x: -277.1673968733419,
            y: -69.16313590358769
        },
        {
            type: 'inventor',
            id: '4902671-3',
            name: 'Masashi Kawasaki',
            numPatents: 44,
            x: 25.499834981751505,
            y: 12.458835962907768
        },
        {
            type: 'inventor',
            id: '5117838-1',
            name: 'Matthew A. Palmer',
            numPatents: 213,
            x: 111.84440719512871,
            y: 17.55352243854731
        },
        {
            type: 'inventor',
            id: '6577726-2',
            name: 'Matthew S. Malden',
            numPatents: 15,
            x: -89.77281715762112,
            y: -212.5200099480745
        },
        {
            type: 'inventor',
            id: '6665655-2',
            name: 'Michael A. Myer',
            numPatents: 3,
            x: -222.1548984266278,
            y: -91.88370779987125
        },
        {
            type: 'inventor',
            id: '5632432-4',
            name: 'Michael E. Setser',
            numPatents: 46,
            x: 236.1453486905915,
            y: -29.533043437416676
        },
        {
            type: 'inventor',
            id: '5306623-3',
            name: 'Michael F. Tomasco',
            numPatents: 89,
            x: -136.35034022301926,
            y: 166.87376786095362
        },
        {
            type: 'inventor',
            id: '6606744-1',
            name: 'Michael G. Mikurak',
            numPatents: 14,
            x: 143.06107123828787,
            y: 203.68650030864686
        },
        {
            type: 'inventor',
            id: '6264087-1',
            name: 'Michael P. Whitman',
            numPatents: 134,
            x: 88.31330790988822,
            y: 237.10476528058422
        },
        {
            type: 'inventor',
            id: '6665648-2',
            name: 'Michael Tsunghsi Yu',
            numPatents: 2,
            x: 7.3045597411881005,
            y: -101.62893346986323
        },
        {
            type: 'inventor',
            id: '6081518-1',
            name: 'Michel K. Bowman-Amuah',
            numPatents: 56,
            x: 153.55805703292674,
            y: 278.7584163590403
        },
        {
            type: 'inventor',
            id: '4224725-1',
            name: 'Michio Kadota',
            numPatents: 173,
            x: 70.25249110067011,
            y: 260.17630684500784
        },
        {
            type: 'inventor',
            id: '6850949-2',
            name: 'Mike Myer',
            numPatents: 1,
            x: 200.98410027290677,
            y: -165.1800994159187
        },
        {
            type: 'inventor',
            id: '5261037-2',
            name: 'Min Zhu',
            numPatents: 119,
            x: 187.21787990519445,
            y: 119.18052322241124
        },
        {
            type: 'inventor',
            id: '6732100-4',
            name: 'Mingte J. Chen',
            numPatents: 1,
            x: -74.89396821135054,
            y: -144.48151011840986
        },
        {
            type: 'inventor',
            id: '5176502-3',
            name: 'Mitchell J. Palmer',
            numPatents: 40,
            x: 315.79092621337537,
            y: -58.79666939419763
        },
        {
            type: 'inventor',
            id: '7385224-3',
            name: 'Motohiko Yoshida',
            numPatents: 5,
            x: -231.18768324847443,
            y: -116.45107756791272
        },
        {
            type: 'inventor',
            id: '5918159-1',
            name: 'Mundi Fomukong',
            numPatents: 12,
            x: -221.62526815353186,
            y: -201.75317388265475
        },
        {
            type: 'inventor',
            id: '7632985-3',
            name: 'Nancy Taylor',
            numPatents: 5,
            x: 50.015886492956845,
            y: 227.2759540780497
        },
        {
            type: 'inventor',
            id: '7468304-1',
            name: 'Nobuyuki Kaji',
            numPatents: 16,
            x: 41.822376082161696,
            y: 52.514246752854255
        },
        {
            type: 'inventor',
            id: '7205716-5',
            name: 'Norihito Sone',
            numPatents: 19,
            x: 269.115065567314,
            y: 70.01224836249358
        },
        {
            type: 'inventor',
            id: '5358514-3',
            name: 'Paul M. Meadows',
            numPatents: 70,
            x: -171.2697553163847,
            y: 256.54794390887173
        },
        {
            type: 'inventor',
            id: '6558351-3',
            name: 'Paul V. Goode',
            numPatents: 154,
            x: -230.16114196390936,
            y: -13.410314845001913
        },
        {
            type: 'inventor',
            id: '6711565-1',
            name: 'Pavitra Subramaniam',
            numPatents: 20,
            x: -6.372748347947338,
            y: -297.9670264909068
        },
        {
            type: 'inventor',
            id: 'D423761-3',
            name: 'Peter Hong',
            numPatents: 25,
            x: -207.02913444458756,
            y: 113.2044477207746
        },
        {
            type: 'inventor',
            id: '6152987-2',
            name: 'Peter Mardilovich',
            numPatents: 110,
            x: -113.70541462763414,
            y: -71.63866878448928
        },
        {
            type: 'inventor',
            id: '5873096-1',
            name: 'Peter S. Lim',
            numPatents: 19,
            x: -41.4971575994779,
            y: -229.8634738486308
        },
        {
            type: 'inventor',
            id: '6732111-4',
            name: 'Peter Siam Sy Lim III',
            numPatents: 1,
            x: -119.68776087181291,
            y: -264.7441153149242
        },
        {
            type: 'inventor',
            id: '6850895-3',
            name: 'Peter Siam Sy Lim, III',
            numPatents: 3,
            x: -137.51327861868992,
            y: -253.05015263416013
        },
        {
            type: 'inventor',
            id: '7159750-4',
            name: 'Philip Roy',
            numPatents: 45,
            x: -55.915331837334584,
            y: 265.4527399859059
        },
        {
            type: 'inventor',
            id: '6103033-7',
            name: 'Phillip John Plante',
            numPatents: 76,
            x: -89.56172634273938,
            y: 128.49359954020937
        },
        {
            type: 'inventor',
            id: '5978829-1',
            name: 'Pi-Yu Chung',
            numPatents: 15,
            x: 79.03330309768333,
            y: -166.89620301402695
        },
        {
            type: 'inventor',
            id: '6092083-2',
            name: 'Prashant Chatterjee',
            numPatents: 12,
            x: -127.98166248978045,
            y: -226.09590322983067
        },
        {
            type: 'inventor',
            id: '7340411-1',
            name: 'Rachael L. Cook',
            numPatents: 1,
            x: 145.5816434953685,
            y: -185.9115227848251
        },
        {
            type: 'inventor',
            id: '4872603-1',
            name: 'Ralph Stearns',
            numPatents: 82,
            x: -17.638261139740077,
            y: 311.87440096016235
        },
        {
            type: 'inventor',
            id: '6836540-6',
            name: 'Randy Hoffman',
            numPatents: 66,
            x: -96.67915062271523,
            y: -18.863267642338357
        },
        {
            type: 'inventor',
            id: '4798594-1',
            name: 'Richard A. Hillstead',
            numPatents: 56,
            x: 220.9404304325887,
            y: 155.9212493217171
        },
        {
            type: 'inventor',
            id: '5097122-2',
            name: 'Richard E. Purvis',
            numPatents: 22,
            x: -231.6221173485312,
            y: 58.532788593406465
        },
        {
            type: 'inventor',
            id: '6268803-3',
            name: 'Richard Gorman',
            numPatents: 10,
            x: 76.71667439228202,
            y: -247.40756847543366
        },
        {
            type: 'inventor',
            id: '5271543-1',
            name: 'Richard L. Grant',
            numPatents: 22,
            x: 108.37790261638156,
            y: -109.53429774011205
        },
        {
            type: 'inventor',
            id: '6092083-1',
            name: 'Robert A. Brodersen',
            numPatents: 21,
            x: -116.78677329380332,
            y: -211.74312172754898
        },
        {
            type: 'inventor',
            id: '5873096-2',
            name: 'Robert Broderson',
            numPatents: 3,
            x: 32.470564362710334,
            y: -212.3565037616904
        },
        {
            type: 'inventor',
            id: '5963953-1',
            name: 'Robert Cram',
            numPatents: 3,
            x: 39.731656228036044,
            y: -159.70117419662853
        },
        {
            type: 'inventor',
            id: '4362387-1',
            name: 'Roy Clark',
            numPatents: 23,
            x: -143.38065467805583,
            y: -83.18646932332894
        },
        {
            type: 'inventor',
            id: '5417770-8',
            name: 'Ryo Hayashi',
            numPatents: 71,
            x: 109.56900270181322,
            y: 94.2690776193339
        },
        {
            type: 'inventor',
            id: '6081875-2',
            name: 'Sanjoy Chatterjee',
            numPatents: 2,
            x: -168.55351719373274,
            y: -55.00391327710072
        },
        {
            type: 'inventor',
            id: '5416255-1',
            name: 'Scott A. Bergemann',
            numPatents: 106,
            x: 236.9843658437831,
            y: -154.5385328936314
        },
        {
            type: 'inventor',
            id: '6724399-2',
            name: 'Shankar S. Nathan',
            numPatents: 1,
            x: 8.017651326713803,
            y: -132.67439205632664
        },
        {
            type: 'inventor',
            id: '6804330-1',
            name: 'Shannon Jones',
            numPatents: 5,
            x: 71.13206981844631,
            y: -258.49934239941376
        },
        {
            type: 'inventor',
            id: '6887736-4',
            name: 'Shanthi Ganesan',
            numPatents: 4,
            x: -36.994882107564074,
            y: 176.4435210395316
        },
        {
            type: 'inventor',
            id: '6183589-1',
            name: 'Shin Kim',
            numPatents: 47,
            x: -287.672664666798,
            y: 45.812611641390674
        },
        {
            type: 'inventor',
            id: '6654032-4',
            name: 'Songxiang Wei',
            numPatents: 7,
            x: 132.3199171044082,
            y: 86.33369201811875
        },
        {
            type: 'inventor',
            id: '6783524-1',
            name: 'Stephen C. Anderson',
            numPatents: 1,
            x: 62.6200720139505,
            y: 302.49618857083027
        },
        {
            type: 'inventor',
            id: '5774357-1',
            name: 'Steven M. Hoffberg',
            numPatents: 106,
            x: -298.14981578939944,
            y: 88.5680351045039
        },
        {
            type: 'inventor',
            id: '5594169-2',
            name: 'Steven P. Hotelling',
            numPatents: 306,
            x: 178.31356224420756,
            y: -255.43042507480578
        },
        {
            type: 'inventor',
            id: '6526335-2',
            name: 'Susan M. Treyz',
            numPatents: 15,
            x: -279.2338471304183,
            y: 139.99257336727945
        },
        {
            type: 'inventor',
            id: '6639246-1',
            name: 'Tatsuya Honda',
            numPatents: 109,
            x: 250.0602077201684,
            y: 66.33401322268637
        },
        {
            type: 'inventor',
            id: '5345639-6',
            name: 'Tatsuya Iwasaki',
            numPatents: 116,
            x: 86.3336134471773,
            y: 157.82593462060743
        },
        {
            type: 'inventor',
            id: '6324568-1',
            name: 'Thanh Diec',
            numPatents: 3,
            x: -78.03147469125184,
            y: -272.5886606861718
        },
        {
            type: 'inventor',
            id: '5715450-2',
            name: 'Thomas M. Rothwein',
            numPatents: 13,
            x: -19.165101013241493,
            y: -208.1804640840619
        },
        {
            type: 'inventor',
            id: 'RE39841-4',
            name: 'Todd Phillip Omaits',
            numPatents: 7,
            x: 129.99306854625007,
            y: -22.049901615038408
        },
        {
            type: 'inventor',
            id: '6850949-3',
            name: 'Tom Abshire',
            numPatents: 1,
            x: 140.26566902715228,
            y: -153.3917294843958
        },
        {
            type: 'inventor',
            id: '7061014-6',
            name: 'Toshio Kamiya',
            numPatents: 25,
            x: 9.126271276254377,
            y: 101.82298630556326
        },
        {
            type: 'inventor',
            id: '6718361-1',
            name: 'Vijay R. Basani',
            numPatents: 9,
            x: -201.38227173205027,
            y: 208.74327049926328
        },
        {
            type: 'inventor',
            id: '6718361-5',
            name: 'Vitaly S. Revsin',
            numPatents: 13,
            x: -198.70473078024983,
            y: 152.4052211665943
        },
        {
            type: 'inventor',
            id: '6978921-3',
            name: 'William B. Weisenburgh, II',
            numPatents: 152,
            x: 248.24393906293733,
            y: -90.29342524369324
        },
        {
            type: 'inventor',
            id: '5257971-2',
            name: 'William P. Van Antwerp',
            numPatents: 69,
            x: -243.520991916779,
            y: 23.417679977911327
        },
        {
            type: 'inventor',
            id: '6829655-1',
            name: 'Xiaofei Huang',
            numPatents: 5,
            x: 89.9887416103856,
            y: -187.79413998163483
        },
        {
            type: 'inventor',
            id: '5283452-1',
            name: 'Yi-Chi Shih',
            numPatents: 33,
            x: -323.71359641871163,
            y: 23.908936586494086
        },
        {
            type: 'inventor',
            id: '5901896-1',
            name: 'Yoram Gal',
            numPatents: 76,
            x: -107.23225510620489,
            y: 124.73541739026112
        },
        {
            type: 'inventor',
            id: '4573472-1',
            name: 'Yoshihiro Ito',
            numPatents: 189,
            x: 118.20250938383892,
            y: 287.9615326434283
        },
        {
            type: 'inventor',
            id: '5855957-1',
            name: 'Zheng Yuan',
            numPatents: 58,
            x: 138.0920695217319,
            y: 124.0644011797693
        },
        {
            type: 'assignee',
            id: 'org_Z59aUBGtZ9P5QzdFiKmZ',
            name: 'Ablaise Limited',
            numPatents: 2,
            x: -190.4821130010742,
            y: -236.53619698539487
        },
        {
            type: 'assignee',
            id: 'org_4zO2Bc08x56XjDq5TeBp',
            name: 'Accenture LLP',
            numPatents: 210,
            x: 172.86602300833957,
            y: 253.70330815416585
        },
        {
            type: 'assignee',
            id: 'org_bwq83jbccKqF4jJrPcaR',
            name: 'Advanced Bionics AG',
            numPatents: 633,
            x: -176.91468472981555,
            y: 233.6338835259619
        },
        {
            type: 'assignee',
            id: 'org_IDUbS09ZR0JhJ8jFEptT',
            name: 'Apple Inc.',
            numPatents: 21023,
            x: 151.68246641578867,
            y: -222.1248748814489
        },
        {
            type: 'assignee',
            id: 'org_EhYFPIJEmYQYRoYvsnpy',
            name: 'Canon Kabushiki Kaisha',
            numPatents: 74596,
            x: 49.48223920573296,
            y: 134.09228873115592
        },
        {
            type: 'assignee',
            id: 'org_Imeg9W6P1TE6I2QutS4y',
            name: 'Casio Computer Co., Ltd.',
            numPatents: 4521,
            x: -179.8175934120515,
            y: -142.71828852921044
        },
        {
            type: 'assignee',
            id: 'org_8csMgtgnN0mREZpNP1Ji',
            name: 'Cerebral Vascular Applications, Inc.',
            numPatents: 4,
            x: 268.8004541444387,
            y: 164.52369478315683
        },
        {
            type: 'assignee',
            id: 'org_0eTr3XIBjAKpXkC6823r',
            name: 'Cermet, Inc.',
            numPatents: 7,
            x: -48.40372768955156,
            y: 205.44025883826066
        },
        {
            type: 'assignee',
            id: 'org_107WKNPbvDDKrZBlmw8U',
            name: 'Contigo Software, Inc.',
            numPatents: 2,
            x: 299.3174359095953,
            y: 48.03492469800833
        },
        {
            type: 'assignee',
            id: 'org_ppElkEtQvFtG6A4754UI',
            name: 'Eastman Kodak Company',
            numPatents: 21539,
            x: 211.37525941352786,
            y: 217.58287786532108
        },
        {
            type: 'assignee',
            id: 'org_0jPWM7YqhtXm0lm3fm1Y',
            name: 'EMC Corporation',
            numPatents: 4976,
            x: -189.70156274838973,
            y: -110.01559890437628
        },
        {
            type: 'assignee',
            id: 'org_Wh2cnOIzKlhzjuqVmOqY',
            name: 'Enecto AB',
            numPatents: 1,
            x: 243.6765412246258,
            y: -131.2090311866099
        },
        {
            type: 'assignee',
            id: 'org_Xu6gXSsltDBZTAhMFBWD',
            name: 'Ethicon Endo-Surger, Inc.',
            numPatents: 3,
            x: 224.71243580316477,
            y: 39.60984252547865
        },
        {
            type: 'assignee',
            id: 'org_NfKBB9TWF4As8TSasJ5n',
            name: 'Ethicon Endo-Surgery, Inc.',
            numPatents: 2194,
            x: 171.0743702247664,
            y: -55.03680709894609
        },
        {
            type: 'assignee',
            id: 'org_vS6rcKyc2qN3rFdX0P2K',
            name: 'Hewlett-Packard Development Company, L.P.',
            numPatents: 35118,
            x: -90.3103968526694,
            y: -50.0521628929454
        },
        {
            type: 'assignee',
            id: 'per_tX2e2yVLgyNgobEpzWKT',
            name: 'Hideo Ohno',
            numPatents: 4,
            x: -39.53612842704436,
            y: -20.270273354977252
        },
        {
            type: 'assignee',
            id: 'org_MKvbnCcyPudXexUvsSwF',
            name: "Holden's Foundation Seeds, Inc.",
            numPatents: 83,
            x: 240.0999059851908,
            y: -206.02637614806125
        },
        {
            type: 'assignee',
            id: 'org_fA0azqoBGEzoPoy85Jyv',
            name: 'INTUITIVE SURGICAL OPERATIONS, INC.',
            numPatents: 1202,
            x: 15.378862865447624,
            y: 290.2178222875223
        },
        {
            type: 'assignee',
            id: 'org_DttZMvkyvW3fV6oCUMTF',
            name: 'Japan Science and Technology Agency',
            numPatents: 1157,
            x: 13.173450731061086,
            y: 56.48614099577767
        },
        {
            type: 'assignee',
            id: 'org_c5vyBzK7iikkU4DjQFHT',
            name: 'Japan Science and Technology Corporation',
            numPatents: 418,
            x: 63.56317058275,
            y: 6.273673519090753
        },
        {
            type: 'assignee',
            id: 'org_FvgvGFe8JZ0iYlZ80weF',
            name: 'Koninklijke Philips Electronics N.V.',
            numPatents: 17138,
            x: -123.24179123790191,
            y: 270.99746548441016
        },
        {
            type: 'assignee',
            id: 'org_XcqCjtT8pi8Mk3UjQlDt',
            name: 'LG Electronics Inc.',
            numPatents: 32725,
            x: -277.3460229984558,
            y: 7.13369822254301
        },
        {
            type: 'assignee',
            id: 'per_DIjUTM7lHhDsAz2u8jiO',
            name: 'Masashi Kawasaki',
            numPatents: 3,
            x: 19.895436596662908,
            y: -10.717178250900918
        },
        {
            type: 'assignee',
            id: 'org_GVMlLVbwCDSiqP9Og8Tn',
            name: 'Medtronic MiniMed, Inc.',
            numPatents: 800,
            x: -183.74023419057417,
            y: 37.687218769839085
        },
        {
            type: 'assignee',
            id: 'org_Qw8EsrN0M52nVQUM6vsV',
            name: 'Monsanto Technology LLC',
            numPatents: 8689,
            x: 19.763901488352673,
            y: 196.62236862589774
        },
        {
            type: 'assignee',
            id: 'org_j5U5IEa1FIbgtr7iNsQM',
            name: 'Murata Manufacturing Co., Ltd.',
            numPatents: 7342,
            x: 87.64878197108817,
            y: 291.1023195872352
        },
        {
            type: 'assignee',
            id: 'org_1p4FWEoItjyKbwTpCJol',
            name: 'Network Appliance, Inc.',
            numPatents: 530,
            x: -222.2920372118052,
            y: 149.08372155272062
        },
        {
            type: 'assignee',
            id: 'org_ATOWHd4GGaoh14zutXq7',
            name: 'Power Medical Interventions, Inc.',
            numPatents: 30,
            x: 108.88110399749706,
            y: 186.8533878262659
        },
        {
            type: 'assignee',
            id: 'org_k8V7c5gnmC7SVmup5Vu7',
            name: 'Raindance Communications, Inc.',
            numPatents: 3,
            x: 65.15717694264417,
            y: 83.41943637820401
        },
        {
            type: 'assignee',
            id: 'org_242hJegwfQCeP9hsfwpW',
            name: 'Right Now Technologies, Inc.',
            numPatents: 2,
            x: 186.81965281602268,
            y: -183.4017025145853
        },
        {
            type: 'assignee',
            id: 'org_6r9t7ZA6YT031Od4kMPg',
            name: 'Rightnow Technologies, Inc.',
            numPatents: 10,
            x: -231.73615880122236,
            y: -74.09916970934252
        },
        {
            type: 'assignee',
            id: 'org_2IF97zVymSuraSnUAXmq',
            name: 'Sanyo Electric Co., Ltd.',
            numPatents: 8383,
            x: -283.9028253608946,
            y: -127.87253381969171
        },
        {
            type: 'assignee',
            id: 'org_plZbLxiysESbaI9pOeym',
            name: 'SEMICONDUCTOR ENERGY LABORATORY CO., LTD.',
            numPatents: 13885,
            x: 256.2283987637905,
            y: 124.46141696066522
        },
        {
            type: 'assignee',
            id: 'org_CMWcoCJWPOfisLWrKvyd',
            name: 'Sharp Kabushiki Kaisha',
            numPatents: 22540,
            x: 4.095560406482671,
            y: -32.13618482579938
        },
        {
            type: 'assignee',
            id: 'org_83NNgJrP5lkIN876kNeG',
            name: 'Siebel Systems, Inc.',
            numPatents: 298,
            x: -33.91994752314842,
            y: -212.5994288988811
        },
        {
            type: 'assignee',
            id: 'org_J8VnAzFqEjWgxq4ev71z',
            name: 'Starion Instruments Corporation',
            numPatents: 20,
            x: 178.98416654116346,
            y: 169.54821211190276
        },
        {
            type: 'assignee',
            id: 'org_m2tNPJkA2g1AWOc7uzS1',
            name: 'TheraSense, Inc.',
            numPatents: 53,
            x: -125.9145998460851,
            y: 132.41739054516117
        },
        {
            type: 'assignee',
            id: 'org_JjrM6UmeOY0Q5MmoNiP8',
            name: 'TOKYO INSTITUTE OF TECHNOLOGY',
            numPatents: 395,
            x: 18.61413008116646,
            y: 165.21253699554214
        },
        {
            type: 'assignee',
            id: 'org_ewVsCutpRzD9pT07kBoE',
            name: 'Tyco Healtcare Group LP',
            numPatents: 5,
            x: -67.25430526742107,
            y: 308.6149282041579
        },
        {
            type: 'assignee',
            id: 'org_5wNNrJ4zFQ5KQ8OWnzRC',
            name: 'United States Surtical Corporation',
            numPatents: 1,
            x: 282.781009224431,
            y: -52.981590115087144
        },
        {
            type: 'assignee',
            id: 'org_3vI2Z5kC1SaSlbUBoOBT',
            name: 'WebEx Communications, Inc.',
            numPatents: 22,
            x: 187.36763951128714,
            y: 101.20849847080181
        }
    ],
    links: [
        { source: '6516227', target: '5358514-3' },
        { source: '6516227', target: '5755737-3' },
        { source: '6516227', target: '5948006-1' },
        { source: '6516227', target: '6516227-4' },
        { source: '6516227', target: 'org_bwq83jbccKqF4jJrPcaR' },
        { source: '6535909', target: '6535909-1' },
        { source: '6535909', target: 'org_107WKNPbvDDKrZBlmw8U' },
        { source: '6549908', target: '6393605-1' },
        { source: '6549908', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6553563', target: '5715450-1' },
        { source: '6553563', target: '5715450-2' },
        { source: '6553563', target: '6553563-3' },
        { source: '6553563', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6558320', target: '4809697-1' },
        { source: '6558320', target: '4863425-2' },
        { source: '6558320', target: '5097122-2' },
        { source: '6558320', target: 'org_GVMlLVbwCDSiqP9Og8Tn' },
        { source: '6558351', target: '5097122-2' },
        { source: '6558351', target: '5237178-2' },
        { source: '6558351', target: '5257971-2' },
        { source: '6558351', target: '6424847-3' },
        { source: '6558351', target: '6558351-1' },
        { source: '6558351', target: '6558351-2' },
        { source: '6558351', target: '6558351-3' },
        { source: '6558351', target: '6558351-8' },
        { source: '6558351', target: 'org_GVMlLVbwCDSiqP9Og8Tn' },
        { source: '6560461', target: '5918159-1' },
        { source: '6560461', target: '5918159-2' },
        { source: '6563174', target: '4253061-3' },
        { source: '6563174', target: '4902671-3' },
        { source: '6563174', target: '4997262-1' },
        { source: '6563174', target: '5925224-1' },
        { source: '6563174', target: 'org_CMWcoCJWPOfisLWrKvyd' },
        { source: '6563174', target: 'per_DIjUTM7lHhDsAz2u8jiO' },
        { source: '6563174', target: 'per_tX2e2yVLgyNgobEpzWKT' },
        { source: '6565509', target: '4082602-2' },
        { source: '6565509', target: '5041086-4' },
        { source: '6565509', target: '5306623-3' },
        { source: '6565509', target: '5533238-1' },
        { source: '6565509', target: '5534132-1' },
        { source: '6565509', target: '5616532-3' },
        { source: '6565509', target: '5722997-2' },
        { source: '6565509', target: '5901896-1' },
        { source: '6565509', target: '6103033-7' },
        { source: '6565509', target: '6175752-9' },
        { source: '6565509', target: 'org_m2tNPJkA2g1AWOc7uzS1' },
        { source: '6571282', target: '6081518-1' },
        { source: '6571282', target: 'org_4zO2Bc08x56XjDq5TeBp' },
        { source: '6574635', target: '5715450-1' },
        { source: '6574635', target: '5715450-2' },
        { source: '6574635', target: '5963953-3' },
        { source: '6574635', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6577726', target: '6577726-1' },
        { source: '6577726', target: '6577726-2' },
        { source: '6577726', target: '6577726-3' },
        { source: '6577726', target: '6577726-4' },
        { source: '6577726', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6587835', target: '6433921-2' },
        { source: '6587835', target: '6526335-2' },
        { source: '6601087', target: '5261037-2' },
        { source: '6601087', target: '6601087-2' },
        { source: '6601087', target: 'org_3vI2Z5kC1SaSlbUBoOBT' },
        { source: '6602252', target: '4890611-3' },
        { source: '6602252', target: 'org_J8VnAzFqEjWgxq4ev71z' },
        { source: '6604117', target: '5873096-1' },
        { source: '6604117', target: '5873096-2' },
        { source: '6604117', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6604128', target: '6324568-1' },
        { source: '6604128', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6606744', target: '6606744-1' },
        { source: '6606744', target: 'org_4zO2Bc08x56XjDq5TeBp' },
        { source: '6609150', target: '5963953-1' },
        { source: '6609150', target: '6336137-1' },
        { source: '6609150', target: '6336137-3' },
        { source: '6609150', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6621834', target: '5944791-1' },
        { source: '6621834', target: '6621834-2' },
        { source: '6621834', target: 'org_k8V7c5gnmC7SVmup5Vu7' },
        { source: '6641533', target: '4809697-1' },
        { source: '6641533', target: '4863425-2' },
        { source: '6641533', target: '5097122-2' },
        { source: '6641533', target: 'org_GVMlLVbwCDSiqP9Og8Tn' },
        { source: '6644532', target: '4127227-1' },
        { source: '6644532', target: '4283024-1' },
        { source: '6644532', target: '5176502-3' },
        { source: '6644532', target: 'D263987-1' },
        { source: '6644532', target: 'D304234-2' },
        { source: '6644532', target: 'RE28932-2' },
        { source: '6644532', target: 'org_5wNNrJ4zFQ5KQ8OWnzRC' },
        { source: '6654032', target: '5261037-2' },
        { source: '6654032', target: '5855957-1' },
        { source: '6654032', target: '6601087-2' },
        { source: '6654032', target: '6654032-4' },
        { source: '6654032', target: 'org_3vI2Z5kC1SaSlbUBoOBT' },
        { source: '6656193', target: '4892244-4' },
        { source: '6656193', target: '5271543-1' },
        { source: '6656193', target: '5329655-1' },
        { source: '6656193', target: '5409498-4' },
        { source: '6656193', target: '5707369-2' },
        { source: '6656193', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '6665648', target: '6665648-1' },
        { source: '6665648', target: '6665648-2' },
        { source: '6665648', target: '6665648-3' },
        { source: '6665648', target: '6665648-4' },
        { source: '6665648', target: '6665648-5' },
        { source: '6665648', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6665655', target: '6434550-1' },
        { source: '6665655', target: '6665655-2' },
        { source: '6665655', target: 'org_6r9t7ZA6YT031Od4kMPg' },
        { source: '6684438', target: '5873096-1' },
        { source: '6684438', target: '6092083-1' },
        { source: '6684438', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6690387', target: '6281898-2' },
        { source: '6690387', target: '6690387-1' },
        { source: '6690387', target: 'org_FvgvGFe8JZ0iYlZ80weF' },
        { source: '6693232', target: '5416255-1' },
        { source: '6693232', target: 'org_MKvbnCcyPudXexUvsSwF' },
        { source: '6698643', target: '6264087-1' },
        { source: '6698643', target: 'org_ATOWHd4GGaoh14zutXq7' },
        { source: '6711565', target: '6711565-1' },
        { source: '6711565', target: '6711565-2' },
        { source: '6711565', target: '6711565-3' },
        { source: '6711565', target: '6711565-4' },
        { source: '6711565', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6716233', target: '6264087-1' },
        { source: '6716233', target: 'org_ATOWHd4GGaoh14zutXq7' },
        { source: '6718361', target: '6223205-2' },
        { source: '6718361', target: '6370584-1' },
        { source: '6718361', target: '6718361-1' },
        { source: '6718361', target: '6718361-2' },
        { source: '6718361', target: '6718361-3' },
        { source: '6718361', target: '6718361-4' },
        { source: '6718361', target: '6718361-5' },
        { source: '6718361', target: '6718361-8' },
        { source: '6718361', target: 'org_1p4FWEoItjyKbwTpCJol' },
        { source: '6724399', target: '6724399-1' },
        { source: '6724399', target: '6724399-2' },
        { source: '6724399', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6727522', target: '4253061-3' },
        { source: '6727522', target: '4902671-3' },
        { source: '6727522', target: 'org_c5vyBzK7iikkU4DjQFHT' },
        { source: '6728702', target: '6577726-2' },
        { source: '6728702', target: '6711565-1' },
        { source: '6728702', target: '6711565-2' },
        { source: '6728702', target: '6711565-3' },
        { source: '6728702', target: '6711565-4' },
        { source: '6728702', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6728960', target: '6393605-1' },
        { source: '6728960', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6732095', target: '5243622-2' },
        { source: '6732095', target: '6732095-1' },
        { source: '6732095', target: '6732095-2' },
        { source: '6732095', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6732100', target: '5715450-2' },
        { source: '6732100', target: '6577726-2' },
        { source: '6732100', target: '6577726-4' },
        { source: '6732100', target: '6665648-1' },
        { source: '6732100', target: '6732100-4' },
        { source: '6732100', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6732111', target: '4951278-2' },
        { source: '6732111', target: '6092083-1' },
        { source: '6732111', target: '6092083-2' },
        { source: '6732111', target: '6732111-4' },
        { source: '6732111', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6754681', target: '5873096-1' },
        { source: '6754681', target: '6092083-1' },
        { source: '6754681', target: '6092083-2' },
        { source: '6754681', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6763351', target: '6711565-1' },
        { source: '6763351', target: '6711565-2' },
        { source: '6763351', target: '6711565-3' },
        { source: '6763351', target: '6711565-4' },
        { source: '6763351', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6763501', target: '5261037-2' },
        { source: '6763501', target: '5855957-1' },
        { source: '6763501', target: '6601087-2' },
        { source: '6763501', target: '6654032-4' },
        { source: '6763501', target: 'org_3vI2Z5kC1SaSlbUBoOBT' },
        { source: '6768904', target: '6183589-1' },
        { source: '6768904', target: 'org_XcqCjtT8pi8Mk3UjQlDt' },
        { source: '6782383', target: '6711565-1' },
        { source: '6782383', target: '6711565-2' },
        { source: '6782383', target: '6711565-3' },
        { source: '6782383', target: '6711565-4' },
        { source: '6782383', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6783524', target: '5859916-3' },
        { source: '6783524', target: '6783524-1' },
        { source: '6783524', target: 'org_fA0azqoBGEzoPoy85Jyv' },
        { source: '6786382', target: '6530932-2' },
        { source: '6786382', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '6804330', target: '5715450-1' },
        { source: '6804330', target: '6268803-3' },
        { source: '6804330', target: '6804330-1' },
        { source: '6804330', target: '6804330-4' },
        { source: '6804330', target: '6804330-5' },
        { source: '6804330', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6809653', target: '4082097-1' },
        { source: '6809653', target: '4561444-1' },
        { source: '6809653', target: '4809697-1' },
        { source: '6809653', target: '4863425-2' },
        { source: '6809653', target: '5097122-2' },
        { source: '6809653', target: '5237178-2' },
        { source: '6809653', target: '5382232-1' },
        { source: '6809653', target: '6809653-9' },
        { source: '6809653', target: 'D423761-3' },
        { source: '6809653', target: 'org_GVMlLVbwCDSiqP9Og8Tn' },
        { source: '6826565', target: '6295530-1' },
        { source: '6826565', target: '6295530-2' },
        { source: '6826565', target: 'org_Z59aUBGtZ9P5QzdFiKmZ' },
        { source: '6826582', target: '4362387-1' },
        { source: '6826582', target: '6081875-2' },
        { source: '6826582', target: '6826582-2' },
        { source: '6826582', target: 'org_0jPWM7YqhtXm0lm3fm1Y' },
        { source: '6826745', target: '6233617-2' },
        { source: '6826745', target: '6577726-2' },
        { source: '6826745', target: '6826745-3' },
        { source: '6826745', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6829655', target: '5978829-1' },
        { source: '6829655', target: '6004276-13' },
        { source: '6829655', target: '6829655-1' },
        { source: '6829655', target: '6829655-2' },
        { source: '6829655', target: '6829655-3' },
        { source: '6829655', target: '6829655-6' },
        { source: '6829655', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6830174', target: '4798594-1' },
        { source: '6830174', target: '5465895-1' },
        { source: '6830174', target: 'org_8csMgtgnN0mREZpNP1Ji' },
        { source: '6842748', target: '6434550-1' },
        { source: '6842748', target: '6665655-2' },
        { source: '6842748', target: 'org_6r9t7ZA6YT031Od4kMPg' },
        { source: '6843403', target: '6264087-1' },
        { source: '6843403', target: 'org_ATOWHd4GGaoh14zutXq7' },
        { source: '6850252', target: '5774357-1' },
        { source: '6850895', target: '6092083-1' },
        { source: '6850895', target: '6092083-2' },
        { source: '6850895', target: '6577726-2' },
        { source: '6850895', target: '6850895-3' },
        { source: '6850895', target: '6850895-5' },
        { source: '6850895', target: 'org_83NNgJrP5lkIN876kNeG' },
        { source: '6850949', target: '6850949-1' },
        { source: '6850949', target: '6850949-2' },
        { source: '6850949', target: '6850949-3' },
        { source: '6850949', target: 'org_242hJegwfQCeP9hsfwpW' },
        { source: '6852915', target: '5276262-2' },
        { source: '6852915', target: 'org_MKvbnCcyPudXexUvsSwF' },
        { source: '6905057', target: '5897563-4' },
        { source: '6905057', target: '6905057-2' },
        { source: '6905057', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '6959852', target: '5632432-4' },
        { source: '6959852', target: '6905057-2' },
        { source: '6959852', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '6964363', target: '5409498-4' },
        { source: '6964363', target: '6964363-2' },
        { source: '6964363', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '6978921', target: '5632432-4' },
        { source: '6978921', target: '6905057-2' },
        { source: '6978921', target: '6978921-3' },
        { source: '6978921', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '6981628', target: '5409498-4' },
        { source: '6981628', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '7000818', target: '5632432-4' },
        { source: '7000818', target: '6905057-2' },
        { source: '7000818', target: '7000818-3' },
        { source: '7000818', target: 'org_Xu6gXSsltDBZTAhMFBWD' },
        { source: '7025743', target: '4082097-1' },
        { source: '7025743', target: '4561444-1' },
        { source: '7025743', target: '4809697-1' },
        { source: '7025743', target: '5176644-1' },
        { source: '7025743', target: '5382232-1' },
        { source: '7025743', target: '6551276-10' },
        { source: '7025743', target: '6551276-11' },
        { source: '7025743', target: '6551276-12' },
        { source: '7025743', target: '6551276-3' },
        { source: '7025743', target: '6551276-4' },
        { source: '7025743', target: '6551276-8' },
        { source: '7025743', target: '6551276-9' },
        { source: '7025743', target: 'org_GVMlLVbwCDSiqP9Og8Tn' },
        { source: '7049190', target: '6080998-3' },
        { source: '7049190', target: '6914182-1' },
        { source: '7049190', target: 'org_2IF97zVymSuraSnUAXmq' },
        { source: '7055731', target: '5632432-4' },
        { source: '7055731', target: '6905057-2' },
        { source: '7055731', target: '6978921-3' },
        { source: '7055731', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '7061014', target: '4486720-1' },
        { source: '7061014', target: '4703019-2' },
        { source: '7061014', target: '5272069-6' },
        { source: '7061014', target: '5622653-1' },
        { source: '7061014', target: '7061014-4' },
        { source: '7061014', target: '7061014-6' },
        { source: '7061014', target: 'org_DttZMvkyvW3fV6oCUMTF' },
        { source: '7064346', target: '4253061-3' },
        { source: '7064346', target: '4902671-3' },
        { source: '7064346', target: 'org_DttZMvkyvW3fV6oCUMTF' },
        { source: '7105868', target: '5863326-1' },
        { source: '7105868', target: '6887736-4' },
        { source: '7105868', target: 'org_0eTr3XIBjAKpXkC6823r' },
        { source: '7111769', target: '5409498-4' },
        { source: '7111769', target: '5897563-4' },
        { source: '7111769', target: '6530932-2' },
        { source: '7111769', target: '6905057-2' },
        { source: '7111769', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '7147138', target: '6905057-2' },
        { source: '7147138', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '7159750', target: '4872603-1' },
        { source: '7159750', target: '5713911-1' },
        { source: '7159750', target: '5713911-2' },
        { source: '7159750', target: '7159750-4' },
        { source: '7159750', target: '7159750-5' },
        { source: '7159750', target: 'org_ewVsCutpRzD9pT07kBoE' },
        { source: '7211825', target: '5081422-1' },
        { source: '7211825', target: '5283452-1' },
        { source: '7211825', target: '5703357-3' },
        { source: '7211825', target: '6593834-2' },
        { source: '7246734', target: '6905057-2' },
        { source: '7246734', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '7282782', target: '6144679-1' },
        { source: '7282782', target: '6152987-2' },
        { source: '7282782', target: '6836540-6' },
        { source: '7282782', target: 'org_vS6rcKyc2qN3rFdX0P2K' },
        { source: '7297977', target: '6144679-1' },
        { source: '7297977', target: '6152987-2' },
        { source: '7297977', target: '6836540-6' },
        { source: '7297977', target: 'org_vS6rcKyc2qN3rFdX0P2K' },
        { source: '7323356', target: '4486720-1' },
        { source: '7323356', target: '4703019-2' },
        { source: '7323356', target: '5272069-6' },
        { source: '7323356', target: '5622653-1' },
        { source: '7323356', target: '7061014-4' },
        { source: '7323356', target: '7323356-5' },
        { source: '7323356', target: 'org_DttZMvkyvW3fV6oCUMTF' },
        { source: '7340411', target: '7340411-1' },
        { source: '7380695', target: '5409498-4' },
        { source: '7380695', target: '5632432-4' },
        { source: '7380695', target: '6905057-2' },
        { source: '7380695', target: '7083075-3' },
        { source: '7380695', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '7380696', target: '5632432-4' },
        { source: '7380696', target: '6905057-2' },
        { source: '7380696', target: '7083075-3' },
        { source: '7380696', target: '7380696-3' },
        { source: '7380696', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '7385224', target: '5041200-1' },
        { source: '7385224', target: '5041200-4' },
        { source: '7385224', target: '7385224-2' },
        { source: '7385224', target: '7385224-3' },
        { source: '7385224', target: 'org_Imeg9W6P1TE6I2QutS4y' },
        { source: '7402506', target: '5512426-1' },
        { source: '7402506', target: '6048110-3' },
        { source: '7402506', target: '7402506-2' },
        { source: '7402506', target: 'org_ppElkEtQvFtG6A4754UI' },
        { source: '7404508', target: '4682596-2' },
        { source: '7404508', target: '5117838-1' },
        { source: '7404508', target: '5715675-2' },
        { source: '7404508', target: '6912839-2' },
        { source: '7404508', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '7411209', target: '5345639-6' },
        { source: '7411209', target: '5417770-8' },
        { source: '7411209', target: '7082832-4' },
        { source: '7411209', target: 'org_EhYFPIJEmYQYRoYvsnpy' },
        { source: '7453065', target: '4072236-1' },
        { source: '7453065', target: '4356455-3' },
        { source: '7453065', target: '4703019-2' },
        { source: '7453065', target: '7061014-6' },
        { source: '7453065', target: 'org_EhYFPIJEmYQYRoYvsnpy' },
        { source: '7453065', target: 'org_JjrM6UmeOY0Q5MmoNiP8' },
        { source: '7453087', target: '5345639-6' },
        { source: '7453087', target: 'org_EhYFPIJEmYQYRoYvsnpy' },
        { source: '7462862', target: '6144679-1' },
        { source: '7462862', target: '6836540-6' },
        { source: '7462862', target: 'org_vS6rcKyc2qN3rFdX0P2K' },
        { source: '7464846', target: '4403687-2' },
        { source: '7464846', target: '5897563-4' },
        { source: '7464846', target: '6905057-2' },
        { source: '7464846', target: '7083075-3' },
        { source: '7464846', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '7468304', target: '6863363-1' },
        { source: '7468304', target: '7468304-1' },
        { source: '7468304', target: 'org_EhYFPIJEmYQYRoYvsnpy' },
        { source: '7501293', target: '4224725-1' },
        { source: '7501293', target: '4573472-1' },
        { source: '7501293', target: 'org_j5U5IEa1FIbgtr7iNsQM' },
        { source: '7506791', target: '4403687-2' },
        { source: '7506791', target: '4972224-1' },
        { source: '7506791', target: '6905057-2' },
        { source: '7506791', target: 'RE39841-4' },
        { source: '7506791', target: 'org_NfKBB9TWF4As8TSasJ5n' },
        { source: '7620655', target: '5948789-1' },
        { source: '7620655', target: '7620655-2' },
        { source: '7620655', target: 'org_Wh2cnOIzKlhzjuqVmOqY' },
        { source: '7632985', target: '7078503-3' },
        { source: '7632985', target: '7608761-4' },
        { source: '7632985', target: '7632985-3' },
        { source: '7632985', target: '7632985-4' },
        { source: '7632985', target: 'org_Qw8EsrN0M52nVQUM6vsV' },
        { source: '7663607', target: '5594169-2' },
        { source: '7663607', target: '6658577-1' },
        { source: '7663607', target: '7154477-2' },
        { source: '7663607', target: 'org_IDUbS09ZR0JhJ8jFEptT' },
        { source: '7674650', target: '6639246-1' },
        { source: '7674650', target: '6838397-3' },
        { source: '7674650', target: '7205716-5' },
        { source: '7674650', target: 'org_plZbLxiysESbaI9pOeym' },
        { source: '7732819', target: '6639246-1' },
        { source: '7732819', target: '6838397-3' },
        { source: '7732819', target: '7205716-5' },
        { source: '7732819', target: 'org_plZbLxiysESbaI9pOeym' },
        { source: '8053184', target: '7078503-3' },
        { source: '8053184', target: '7608761-4' },
        { source: '8053184', target: '7632985-3' },
        { source: '8053184', target: '7632985-4' },
        { source: '8053184', target: 'org_Qw8EsrN0M52nVQUM6vsV' }
    ]
};


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Jiacheng Pan <jackieanxis@gmail.com>
 * @description Provide the entrance of NetV.js.
 * @dependences interfaces.ts, utils/map2.js, node.ts, link.ts
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetV = void 0;
const map2_1 = __webpack_require__(/*! ./utils/map2 */ "./src/utils/map2.ts");
const node_1 = __webpack_require__(/*! ./node */ "./src/node.ts");
const link_1 = __webpack_require__(/*! ./link */ "./src/link.ts");
const defaultConfigs = __webpack_require__(/*! ./configs */ "./src/configs.ts");
const dataset = __webpack_require__(/*! ./dataset */ "./src/dataset/index.ts");
const renderer_1 = __webpack_require__(/*! ./renderer */ "./src/renderer/index.ts");
const interaction_1 = __webpack_require__(/*! ./interaction/interaction */ "./src/interaction/interaction.ts");
const Utils = __webpack_require__(/*! ./utils/utils */ "./src/utils/utils.ts");
const label_1 = __webpack_require__(/*! ./label/label */ "./src/label/label.ts");
class NetV {
    /**
     * @description create NetV object.
     * @param configs configurations of NetV, must include a `container: HTMLDivElement` term
     */
    constructor(configs) {
        this.Utils = Utils;
        this.$_id2node = new Map();
        this.$_ends2link = new map2_1.default();
        this.$_sourceId2links = new Map();
        this.$_targetId2links = new Map();
        this.$_configs = JSON.parse(JSON.stringify(defaultConfigs)); // NOTE: deep copy configs
        this.$_lazyLinkUpdate = false; // flag to control lazy update link or not
        this.$_data = { nodes: [], links: [] };
        this.$_modifiedLinkCount = 0; // record modified link num to control lazy update
        if (!('container' in configs) || configs.container.tagName !== 'DIV') {
            throw Error('Container should be specified as a div element!');
        }
        this.$_container = configs.container;
        // override configs
        for (const key in configs) {
            if (key === 'container')
                continue; // NOTE: exclude container in configs
            if (configs[key] === Object(configs[key])) {
                this.$_configs[key] = Object.assign(Object.assign({}, this.$_configs[key]), configs[key]);
            }
            else {
                this.$_configs[key] = configs[key];
            }
        }
        const canvas = document.createElement('canvas'); // TODO: consider node enviroment, document not defined
        const pixelRatio = window.devicePixelRatio || 1;
        canvas.style.width = this.$_configs.width + 'px';
        canvas.style.height = this.$_configs.height + 'px';
        canvas.setAttribute('width', String(this.$_configs.width * pixelRatio));
        canvas.setAttribute('height', String(this.$_configs.height * pixelRatio));
        this.$_container.appendChild(canvas);
        this.$_renderer = new renderer_1.Renderer({
            canvas,
            width: this.$_configs.width,
            height: this.$_configs.height,
            backgroundColor: this.$_configs.backgroundColor,
            nodeLimit: this.$_configs.nodeLimit,
            linkLimit: this.$_configs.linkLimit
        });
        this.labelManager = new label_1.LabelManager(this);
        this.$_interaction = new interaction_1.InteractionManager(this);
        if (this.$_configs.enablePanZoom) {
            this.$_interaction.initZoom();
        }
        this.$_interaction.initMouse();
    }
    $_addModifiedLinkCount(n) {
        this.$_modifiedLinkCount += n;
        if (this.$_modifiedLinkCount > this.$_configs.lazyLinkUpdateThreshold) {
            this.$_lazyLinkUpdate = true;
        }
    }
    /**
     * @description data getter setter
     * @param nodeLinkData? the node-link-data of a graph, provided?setter:getter;
     */
    data(nodeLinkData) {
        if (nodeLinkData === undefined) {
            return this.$_data;
        }
        else {
            // delete old data
            this.$_data = Object.assign(Object.assign({}, this.$_data), nodeLinkData);
            this.$_id2node = new Map();
            this.$_ends2link = new map2_1.default();
            this.$_sourceId2links = new Map();
            this.$_targetId2links = new Map();
            this.addNodes(this.$_data.nodes);
            this.addLinks(this.$_data.links);
        }
    }
    /**
     * @description initialize and add a node
     * @param nodeData the data of a node, include id, styles...
     */
    addNode(nodeData) {
        return this.addNodes([nodeData])[0];
    }
    /**
     * @description initialize and add a link
     * @param linkData the data of a link, include source, target, and styles...
     */
    addLink(linkData) {
        return this.addLinks([linkData])[0];
    }
    /**
     * @description initialize and add an array of nodes.
     * @param {interfaces.NodeData[]} nodesData: a data array of nodes tobe added
     * @memberof NetV
     */
    addNodes(nodesData) {
        const newNodes = nodesData.map((nodeData) => {
            nodeData.id = nodeData.id.toString();
            const node = new node_1.default(this, nodeData);
            return node;
        });
        this.$_renderer.addNodes(newNodes);
        return newNodes;
    }
    /**
     * @description initialize and add an array of links.
     * @param {interfaces.LinkData[]} linksData: a data array of links tobe added
     * @memberof NetV
     */
    addLinks(linksData) {
        const newLinks = linksData.map((linkData) => {
            linkData.source = linkData.source.toString();
            linkData.target = linkData.target.toString();
            const link = new link_1.default(this, linkData);
            return link;
        });
        // this.$_renderer.addLinks(newLinks)
        this.$_renderer.addLinks([...this.$_ends2link.values()]); // NOTE: preserve link order, not elegant
        return newLinks;
    }
    /**
     * @description get a Node object from the id2node Map data structure
     * @param id node id
     */
    getNodeById(id) {
        return this.$_id2node.get(id);
    }
    /**
     * @description get a Link object from the ends2link Map2 data structure
     * @param endId1 one end id of the link (source or target)
     * @param endId2 another end id of the link (source or target)
     */
    getLinkByEnds(endId1, endId2) {
        return this.$_ends2link.get([endId1, endId2]);
    }
    /**
     * @description get all nodes
     */
    nodes() {
        return [...this.$_id2node.values()];
    }
    /**
     * @description get all links
     */
    links() {
        return [...this.$_ends2link.values()];
    }
    /**
     * @description wipe all the data in the instance
     * @memberof NetV
     */
    wipe() {
        this.$_data = undefined;
        this.$_id2node = new Map();
        this.$_ends2link = new map2_1.default();
        this.$_sourceId2links = new Map();
        this.$_targetId2links = new Map();
    }
    /**
     * @description return build-in dataset according to name
     * @param name dataset name
     */
    loadDataset(name) {
        if (name in dataset)
            return dataset[name];
        console.error(`NetV does not have build-in dataset: ${name}`);
        return { nodes: [], links: [] };
    }
    /**
     * given position, return element on this pixel if exists
     * @param x x pos
     * @param y y pos
     */
    getElementByPosition(position) {
        const id = this.$_renderer.getIdByPosition(position);
        if (id) {
            if (typeof id === 'string') {
                const node = this.getNodeById(id);
                return {
                    type: 'node',
                    element: node
                };
            }
            if (Array.isArray(id)) {
                const link = this.getLinkByEnds(id[0], id[1]);
                return {
                    type: 'link',
                    element: link
                };
            }
        }
    }
    /**
     * @description draw elements
     */
    draw() {
        if (this.$_lazyLinkUpdate) {
            // TODO: maybe need more efficient and reliable way to store and get all links
            this.$_renderer.linkManager.refreshPosition([...this.$_ends2link.values()]);
            this.$_lazyLinkUpdate = false;
            this.$_modifiedLinkCount = 0;
        }
        this.$_renderer.draw();
    }
}
exports.NetV = NetV;


/***/ }),

/***/ "./src/interaction/interaction.ts":
/*!****************************************!*\
  !*** ./src/interaction/interaction.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 * @description handle all interaction in NetV
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InteractionManager = void 0;
class InteractionManager {
    constructor(netv) {
        this.transform = {
            x: 0,
            y: 0,
            k: 1
        };
        this.isMouseDown = false;
        this.isMouseMove = false;
        this.netv = netv;
    }
    /**
     * init zoom&pan interaction
     * currently no callback
     */
    initZoom() {
        const canvas = this.netv.$_container.querySelector('canvas');
        const handleScroll = (evt) => {
            const x = evt.offsetX || evt.pageX - canvas.offsetLeft;
            const y = evt.offsetY || evt.pageY - canvas.offsetTop;
            const delta = evt.deltaY ? evt.deltaY / 40 : evt.detail ? -evt.detail : 0;
            if (delta) {
                const k = Math.pow(1.1, delta);
                this.transform.x = (1 - k) * x + k * this.transform.x;
                this.transform.y = (1 - k) * y + k * this.transform.y;
                this.transform.k *= k;
                this.netv.$_renderer.setTransform(this.transform);
                this.netv.labelManager.setTransform(this.transform);
                this.netv.draw();
            }
            evt.preventDefault();
        };
        canvas.addEventListener('DOMMouseScroll', handleScroll, false);
        canvas.addEventListener('mousewheel', handleScroll, false);
    }
    /**
     * setup click utility
     */
    initMouse() {
        const canvas = this.netv.$_container.querySelector('canvas');
        const handleMouseDown = (evt) => {
            var _a;
            const x = evt.offsetX || evt.pageX - canvas.offsetLeft;
            const y = evt.offsetY || evt.pageY - canvas.offsetTop;
            const yInv = this.netv.$_configs.height - y;
            this.isMouseDown = true;
            this.mouseDownPos = { x, y };
            this.dragStartTransform = JSON.parse(JSON.stringify(this.transform));
            this.mouseDownElement = this.netv.getElementByPosition({
                x,
                y: yInv
            });
            if ((_a = this.mouseDownElement) === null || _a === void 0 ? void 0 : _a.element.position) {
                // record orgin position for drag
                this.mouseDownElementOriginPos = Object.assign({}, this.mouseDownElement.element.position());
            }
        };
        const handleMouseMove = (evt) => {
            const x = evt.offsetX || evt.pageX - canvas.offsetLeft;
            const y = evt.offsetY || evt.pageY - canvas.offsetTop;
            if (this.isMouseDown) {
                this.isMouseMove = true;
                if (!this.mouseDownElement || !this.mouseDownElement.element.position) {
                    // pan, when not dragging node
                    this.transform.x = this.dragStartTransform.x + x - this.mouseDownPos.x;
                    this.transform.y = this.dragStartTransform.y + y - this.mouseDownPos.y;
                    this.netv.$_renderer.setTransform(this.transform);
                    this.netv.labelManager.setTransform(this.transform);
                    this.netv.draw();
                }
                else {
                    // drag node
                    this.mouseDownElement.element.position({
                        x: this.mouseDownElementOriginPos.x +
                            (x - this.mouseDownPos.x) / this.transform.k,
                        y: this.mouseDownElementOriginPos.y +
                            (y - this.mouseDownPos.y) / this.transform.k
                    });
                    this.netv.draw();
                }
            }
            else {
                const yInv = this.netv.$_configs.height - y;
                const element = this.netv.getElementByPosition({ x, y: yInv });
                if (element === null || element === void 0 ? void 0 : element.element.$_hoverCallback) {
                    element.element.$_hoverCallback(element.element);
                }
                return; // currently not support hover
            }
        };
        const handleMouseUp = (evt) => {
            var _a;
            if (!this.isMouseMove && this.mouseDownElement) {
                // click
                if ((_a = this.mouseDownElement) === null || _a === void 0 ? void 0 : _a.element.$_clickCallback) {
                    this.mouseDownElement.element.$_clickCallback(this.mouseDownElement.element); // TODO: not elegant
                }
            }
            this.isMouseDown = false;
            this.isMouseMove = false;
            this.mouseDownElement = undefined;
        };
        canvas.addEventListener('mousedown', handleMouseDown);
        canvas.addEventListener('mousemove', handleMouseMove);
        canvas.addEventListener('mouseup', handleMouseUp);
    }
}
exports.InteractionManager = InteractionManager;


/***/ }),

/***/ "./src/label/label.ts":
/*!****************************!*\
  !*** ./src/label/label.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 * @description graph label related class or method
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LabelManager = void 0;
class LabelManager {
    constructor(core) {
        this.$_core = core;
        this.$_svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
        core.$_container.prepend(this.$_svg);
        this.$_svg.setAttribute('width', core.$_configs.width);
        this.$_svg.setAttribute('height', core.$_configs.height);
        core.$_container.style.position = 'relative';
        core.$_container.style.overflow = 'hidden';
        core.$_container.style.width = core.$_configs.width;
        core.$_container.style.height = core.$_configs.height;
        this.$_svg.style.position = 'absolute';
        this.$_svg.style.overflow = 'visible';
        this.$_svg.style.pointerEvents = 'none';
        this.$_offset = this.$_core.$_configs.label.offset;
        this.$_fontSize = this.$_core.$_configs.label.fontSize;
        this.$_strokeWidth = this.$_core.$_configs.label.strokeWidth;
        this.$_svg.setAttribute('transform', `translate(${this.$_offset.x} ${this.$_offset.y})`);
        this.$_svg.setAttribute('font-size', `${this.$_fontSize}px`);
        this.$_svg.setAttribute('stroke', `white`);
        this.$_svg.setAttribute('stroke-width', `${this.$_strokeWidth}px`);
    }
    /**
     * draw node's label
     * @param node node to add label
     */
    drawLabel(node) {
        const pos = node.position();
        const text = node.text();
        if (!text)
            return;
        const textElement = document.createElementNS('http://www.w3.org/2000/svg', 'text');
        textElement.setAttribute('id', node.id());
        textElement.setAttribute('x', String(pos.x));
        textElement.setAttribute('y', String(pos.y));
        textElement.setAttribute('text-anchor', 'start');
        textElement.setAttribute('alignment-baseline', 'middle');
        textElement.innerHTML = text;
        this.$_svg.appendChild(textElement);
    }
    /**
     * remove node's label
     * @param node node to delete label
     */
    removeLabel(node) {
        var _a;
        // @ts-ignore
        (_a = this.$_svg.getElementById(node.id())) === null || _a === void 0 ? void 0 : _a.remove();
    }
    /**
     * set viewport transform
     * @param transform
     */
    setTransform(transform) {
        this.$_svg.setAttribute('transform', `translate(${this.$_offset.x + (1 - transform.k) * -400 + transform.x}
             ${this.$_offset.y + (1 - transform.k) * -300 + transform.y})
             scale(${transform.k})`);
        this.$_svg.setAttribute('font-size', `${this.$_fontSize / transform.k}px`);
        this.$_svg.setAttribute('stroke-width', `${this.$_strokeWidth / transform.k}px`);
    }
}
exports.LabelManager = LabelManager;


/***/ }),

/***/ "./src/link.ts":
/*!*********************!*\
  !*** ./src/link.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Jiacheng Pan <jackieanxis@gmail.com>
 * @description Provide a Link class.
 * @dependences interfaces.ts, utils/is.ts
 */
Object.defineProperty(exports, "__esModule", { value: true });
class Link {
    constructor(core, linkData) {
        this.$_core = core;
        const defaultConfigs = this.$_core.$_configs;
        const data = Object.assign({
            strokeWidth: defaultConfigs.link.strokeWidth,
            strokeColor: defaultConfigs.link.strokeColor,
            clickCallback: defaultConfigs.link.clickCallback,
            hoverCallback: defaultConfigs.link.hoverCallback
        }, linkData);
        const sourceNode = this.$_core.getNodeById(data.source);
        const targetNode = this.$_core.getNodeById(data.target);
        this.sourceTarget({
            source: sourceNode,
            target: targetNode
        });
        this.$_strokeWidth = data.strokeWidth;
        this.$_strokeColor = data.strokeColor;
        this.setClickCallback(data.clickCallback);
        this.setHoverCallback(data.hoverCallback);
    }
    /**
     * getter/setter of the source
     * @param {Node} [node]
     * @returns {Node} a source Node Object
     * @memberof Link
     */
    source(node) {
        if (arguments.length === 1) {
            // setter
            this.sourceTarget({
                source: node,
                target: this.$_target
            });
        }
        return this.$_source;
    }
    /**
     * getter/setter of the target
     * @param {Node} [node]
     * @returns {Node} a target Node Object
     * @memberof Link
     */
    target(node) {
        if (arguments.length === 1) {
            // setter
            this.sourceTarget({
                source: this.$_source,
                target: node
            });
        }
        return this.$_target;
    }
    /**
     * getter/setter of source and target
     *
     * @param {sourceTargetObj} [{source: Node, target: Node}]
     * @returns Object {source: Node, target: Node}
     * @memberof Link
     */
    sourceTarget(sourceTargetObj) {
        var _a, _b;
        if (arguments.length > 0) {
            const oldSource = this.$_source;
            const oldTarget = this.$_target;
            const newSource = sourceTargetObj.source;
            const newTarget = sourceTargetObj.target;
            const newSourceId = newSource.id();
            const newTargetId = newTarget.id();
            if (newSource === newTarget) {
                // error: self loop
                throw new Error(`Self loop (${newSourceId} <=> ${newTargetId}) is not allowed.`);
            }
            if (this.$_core.$_ends2link.has([newSourceId, newTargetId])) {
                // error: multiple link
                throw new Error(`Multiple link (${newSourceId} <=> ${newTargetId}) is not allowd.`);
            }
            if (oldSource && oldTarget) {
                // delete old Map
                this.$_core.$_ends2link.delete([oldSource.id(), oldTarget.id()]);
                (_a = this.$_core.$_sourceId2links.get(oldSource.id())) === null || _a === void 0 ? void 0 : _a.delete(this);
                (_b = this.$_core.$_targetId2links.get(oldTarget.id())) === null || _b === void 0 ? void 0 : _b.delete(this);
            }
            this.$_source = newSource;
            this.$_target = newTarget;
            this.$_core.$_ends2link.set([newSourceId, newTargetId], this);
            if (!this.$_core.$_sourceId2links.has(newSourceId)) {
                this.$_core.$_sourceId2links.set(newSourceId, new Set([this]));
            }
            else {
                this.$_core.$_sourceId2links.get(newSourceId).add(this);
            }
            if (!this.$_core.$_targetId2links.has(newTargetId)) {
                this.$_core.$_targetId2links.set(newTargetId, new Set([this]));
            }
            else {
                this.$_core.$_targetId2links.get(newTargetId).add(this);
            }
        }
        return {
            source: this.$_source,
            target: this.$_target
        };
    }
    /**
     * set/get stroke width of a node
     * @param {number} [value]
     * @memberof Node
     */
    strokeWidth(value) {
        if (arguments.length === 1) {
            this.$_strokeWidth = value;
            this.$_core.$_renderer.linkManager.changeAttribute(this, 'strokeWidth');
        }
        return this.$_strokeWidth;
    }
    /**
     * set/get stroke color of a node
     * @param {Color} [value]
     */
    strokeColor(value) {
        if (arguments.length === 1) {
            this.$_strokeColor = value;
            this.$_core.$_renderer.linkManager.changeAttribute(this, 'strokeColor');
        }
        return this.$_strokeColor;
    }
    /**
     * set hover callback function
     * @param callback hover callback function
     */
    setHoverCallback(callback) {
        this.$_hoverCallback = callback;
    }
    /**
     * set click callback function
     * @param callback click callback function
     */
    setClickCallback(callback) {
        this.$_clickCallback = callback;
    }
}
exports.default = Link;


/***/ }),

/***/ "./src/node.ts":
/*!*********************!*\
  !*** ./src/node.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Jiacheng Pan <jackieanxis@gmail.com>
 * @description Provide a Node class.
 * @dependences interfaces.ts, utils/is.ts
 */
Object.defineProperty(exports, "__esModule", { value: true });
const is_1 = __webpack_require__(/*! ./utils/is */ "./src/utils/is.ts");
class Node {
    constructor(core, nodeData) {
        this.$_position = {
            x: 0,
            y: 0
        };
        this.$_core = core;
        const defaultConfigs = this.$_core.$_configs;
        const data = Object.assign({
            x: this.$_position.x,
            y: this.$_position.y,
            strokeWidth: defaultConfigs.node.strokeWidth,
            strokeColor: defaultConfigs.node.strokeColor,
            r: defaultConfigs.node.r,
            fill: defaultConfigs.node.fill,
            showLabel: defaultConfigs.node.showLabel,
            text: defaultConfigs.node.text,
            clickCallback: defaultConfigs.node.clickCallback,
            hoverCallback: defaultConfigs.node.hoverCallback
        }, nodeData);
        this.$_setId(data.id);
        this.$_position = {
            x: data.x,
            y: data.y
        };
        this.$_strokeWidth = data.strokeWidth;
        this.$_strokeColor = data.strokeColor;
        this.$_fill = data.fill;
        this.$_r = data.r;
        this.$_showLabel = data.showLabel;
        this.$_text = data.text;
        if (this.$_showLabel) {
            this.showLabel(true);
        }
        this.setClickCallback(data.clickCallback);
        this.setHoverCallback(data.hoverCallback);
    }
    /**
     * getter of private property $_id
     * @memberof Node
     */
    id() {
        return this.$_id;
    }
    /**
     * set/get x postion
     * @param {number} [value]
     * @memberof Node
     */
    x(value) {
        if (arguments.length > 0) {
            this.position({
                x: value
            });
        }
        return this.$_position.x;
    }
    /**
     * set/get y postion
     * @param {number} [value]
     * @memberof Node
     */
    y(value) {
        if (arguments.length > 0) {
            this.position({
                y: value
            });
        }
        return this.$_position.y;
    }
    /**
     * set/get postion
     * @memberof Node
     */
    position(position) {
        let linkSets = {};
        // e.g. setOnePosition('x', 1) means set x position with value 1
        const setOnePosition = (key, value) => {
            this.$_position[key] = value; // key: 'x' or 'y'
            if (!this.$_core.$_lazyLinkUpdate) {
                // lazeLinkUpdate means update links in batch mode
                Object.entries(linkSets).forEach((entry) => {
                    // entry[0]: 'source' / 'target'
                    // entry[1]: the link set
                    const key = entry[0];
                    const set = entry[1];
                    if (set) {
                        this.$_core.$_addModifiedLinkCount(set.size);
                        for (const link of set) {
                            this.$_core.$_renderer.linkManager.changeAttribute(link, key);
                        }
                    }
                });
            }
        };
        if (arguments.length > 0 && ('x' in position || 'y' in position)) {
            linkSets = {
                // find links from/to this node
                source: this.$_core.$_sourceId2links.get(this.$_id),
                target: this.$_core.$_targetId2links.get(this.$_id)
            };
            if ('x' in position) {
                setOnePosition('x', position.x);
            }
            if ('y' in position) {
                setOnePosition('y', position.y);
            }
            this.$_core.$_renderer.nodeManager.changeAttribute(this, 'position');
        }
        return this.$_position;
    }
    /**
     * set/get stroke width of a node
     * @param {number} [value]
     * @memberof Node
     */
    strokeWidth(value) {
        if (arguments.length === 1) {
            this.$_strokeWidth = value;
            this.$_core.$_renderer.nodeManager.changeAttribute(this, 'strokeWidth');
        }
        return this.$_strokeWidth;
    }
    /**
     * set/get stroke color of a node
     * @param {Color} [value]
     */
    strokeColor(value) {
        if (arguments.length === 1) {
            this.$_strokeColor = value;
            this.$_core.$_renderer.nodeManager.changeAttribute(this, 'strokeColor');
        }
        return this.$_strokeColor;
    }
    /**
     * set/get fill color of a node
     * @param {Color} [value]
     */
    fill(value) {
        if (arguments.length === 1) {
            this.$_fill = value;
            this.$_core.$_renderer.nodeManager.changeAttribute(this, 'fill');
        }
        return this.$_fill;
    }
    /**
     * set/get radius of a node
     * @param {number} [r]
     */
    r(value) {
        if (arguments.length === 1) {
            this.$_r = value;
            this.$_core.$_renderer.nodeManager.changeAttribute(this, 'radius');
        }
        return this.$_r;
    }
    /**
     * control label show or not
     * @param value
     */
    showLabel(value) {
        this.$_showLabel = value;
        if (value) {
            this.$_core.labelManager.drawLabel(this);
        }
        else {
            this.$_core.labelManager.removeLabel(this);
        }
    }
    /**
     * get/set node's label
     * @param value label text
     */
    text(value) {
        if (value) {
            this.$_text = value;
        }
        return this.$_text;
    }
    /**
     * get/set offset value
     * @param value offset value
     * @deprecated not used currently, not support set node's label offset individually
     */
    textOffset(value) {
        if (value) {
            this.$_textOffset = value;
        }
        return this.$_textOffset;
    }
    /**
     * set the id of this node.
     * it is only used for constructor
     * because a node's id is not allowed to be changed.
     * @private
     * @param {string} value
     * @returns nothing
     * @memberof Node
     */
    $_setId(value) {
        if (is_1.isValidId(value)) {
            if (this.$_core.$_id2node.has(value)) {
                throw new Error(`Duplicate node (${value}) is not allowed.`);
            }
            if (is_1.isValidId(this.$_id)) {
                throw new Error('Can not change the id of an exist node.');
            }
            this.$_core.$_id2node.set(value, this);
            this.$_id = value;
        }
        else {
            throw new Error(`Invalid ID ${value}`);
        }
    }
    /**
     * set hover callback function
     * @param callback hover callback function
     */
    setHoverCallback(callback) {
        this.$_hoverCallback = callback;
    }
    /**
     * set click callback function
     * @param callback click callback function
     */
    setClickCallback(callback) {
        this.$_clickCallback = callback;
    }
}
exports.default = Node;


/***/ }),

/***/ "./src/renderer/elements/link/fragment.glsl":
/*!**************************************************!*\
  !*** ./src/renderer/elements/link/fragment.glsl ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#version 300 es\nprecision highp float;\nin vec4 color;\n\nout vec4 fragmentColor;\n\nvoid main(void) {\n    fragmentColor = vec4(color.rgb * color.a, color.a);\n}");

/***/ }),

/***/ "./src/renderer/elements/link/id-fragment.glsl":
/*!*****************************************************!*\
  !*** ./src/renderer/elements/link/id-fragment.glsl ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#version 300 es\nprecision highp float;\nin vec4 color;\n\nin vec4 id;\n\n// TODO: all id related shader need clean up\nout vec4 fragmentColor;\n\nvoid main(void) {\n    fragmentColor = id;\n}");

/***/ }),

/***/ "./src/renderer/elements/link/id-vertex.glsl":
/*!***************************************************!*\
  !*** ./src/renderer/elements/link/id-vertex.glsl ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#version 300 es\nprecision highp float;\nin vec3 inVertexPos;\nin vec2 inSourcePosition;\nin vec2 inTargetPosition;\nin float inStrokeWidth;\nin vec4 inStrokeColor;\n\nin vec4 inId;\n\nout vec4 color;\n\nout vec4 id;\n\nuniform mat3 projection;\nuniform vec2 scale;\nuniform vec2 translate;\n\nvoid main(void) {\n    id = inId;\n\n    color = inStrokeColor;\n\n    vec2 source = inSourcePosition * scale + translate;\n    vec2 target = inTargetPosition * scale + translate;\n    vec2 delta = source - target;\n    vec2 center = 0.5 * (source + target);\n    float len = length(delta);\n    float phi = atan(delta.y / delta.x);\n\n    mat3 line_scale = mat3(\n        len, 0, 0,\n        0, inStrokeWidth, 0,\n        0, 0, 1\n    );\n    mat3 line_rotate = mat3(\n        cos(phi), sin(phi), 0,\n        -sin(phi), cos(phi), 0,\n        0, 0, 1\n    );\n    mat3 line_translate = mat3(\n        1, 0, 0,\n        0, 1, 0,\n        center.x, center.y, 1\n    );\n    \n    mat3 transform = line_translate * line_rotate * line_scale;\n\n    gl_Position = vec4(projection * transform * inVertexPos, 1.);\n}");

/***/ }),

/***/ "./src/renderer/elements/link/render-link.ts":
/*!***************************************************!*\
  !*** ./src/renderer/elements/link/render-link.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 * @description Link used in renderer
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RenderLinkManager = void 0;
const vertex_glsl_1 = __webpack_require__(/*! ./vertex.glsl */ "./src/renderer/elements/link/vertex.glsl");
const fragment_glsl_1 = __webpack_require__(/*! ./fragment.glsl */ "./src/renderer/elements/link/fragment.glsl");
const id_vertex_glsl_1 = __webpack_require__(/*! ./id-vertex.glsl */ "./src/renderer/elements/link/id-vertex.glsl");
const id_fragment_glsl_1 = __webpack_require__(/*! ./id-fragment.glsl */ "./src/renderer/elements/link/id-fragment.glsl");
const utils_1 = __webpack_require__(/*! ../../utils */ "./src/renderer/utils.ts");
const map2_1 = __webpack_require__(/*! ../../../utils/map2 */ "./src/utils/map2.ts");
var LinkAttrKey;
(function (LinkAttrKey) {
    LinkAttrKey[LinkAttrKey["TEMPLATE"] = 0] = "TEMPLATE";
    LinkAttrKey[LinkAttrKey["SOURCE"] = 1] = "SOURCE";
    LinkAttrKey[LinkAttrKey["TARGET"] = 2] = "TARGET";
    LinkAttrKey[LinkAttrKey["WIDTH"] = 3] = "WIDTH";
    LinkAttrKey[LinkAttrKey["COLOR"] = 4] = "COLOR";
})(LinkAttrKey || (LinkAttrKey = {}));
var LinkIdAttrKey;
(function (LinkIdAttrKey) {
    LinkIdAttrKey[LinkIdAttrKey["TEMPLATE"] = 0] = "TEMPLATE";
    LinkIdAttrKey[LinkIdAttrKey["SOURCE"] = 1] = "SOURCE";
    LinkIdAttrKey[LinkIdAttrKey["TARGET"] = 2] = "TARGET";
    LinkIdAttrKey[LinkIdAttrKey["WIDTH"] = 3] = "WIDTH";
    LinkIdAttrKey[LinkIdAttrKey["COLOR"] = 4] = "COLOR";
    LinkIdAttrKey[LinkIdAttrKey["ID"] = 5] = "ID";
})(LinkIdAttrKey || (LinkIdAttrKey = {}));
const LinkAttrMap = {
    source: LinkAttrKey.SOURCE,
    target: LinkAttrKey.TARGET,
    strokeWidth: LinkAttrKey.WIDTH,
    strokeColor: LinkAttrKey.COLOR
};
class RenderLinkManager {
    /**
     * create render link manager
     * @param gl WebGL context
     * @param params nessesary configs for link manager
     * @param idTexture texture store elements id of each pixel
     */
    constructor(gl, params, idTexture) {
        this.count = 0;
        this.idsToIndex = new map2_1.default();
        const { limit, width, height } = params;
        this.gl = gl;
        this.limit = limit;
        this.width = width;
        this.height = height;
        this.pixelRatio = window.devicePixelRatio || 1;
        this.attributes = utils_1.extractAttributesFromShader(vertex_glsl_1.default);
        this.program = utils_1.createProgram(this.gl, vertex_glsl_1.default, fragment_glsl_1.default, this.attributes);
        this.idAttributes = utils_1.extractAttributesFromShader(id_vertex_glsl_1.default);
        this.idProgram = utils_1.createProgram(this.gl, id_vertex_glsl_1.default, id_fragment_glsl_1.default, this.idAttributes);
        this.idTexture = idTexture;
        this.renderIdToIds = {};
        // init arrays
        // prettier-ignore
        this.attributes[LinkAttrKey.TEMPLATE].array = new Float32Array([
            -0.5, 0.5, 1.0,
            -0.5, -0.5, 1.0,
            0.5, 0.5, 1.0,
            0.5, -0.5, 1.0,
        ]);
        this.attributes.forEach((attr) => {
            if (!attr.isBuildIn)
                attr.array = new Float32Array(attr.size * this.limit);
        });
        // init buffers
        this.attributes.forEach((attr) => {
            attr.buffer = utils_1.createArrayBuffer(this.gl, attr.array);
        });
        // init id attributes and buffers
        // TODO: hardcode check, need refactor
        this.idAttributes.forEach((attr, idx) => {
            if (idx < this.attributes.length) {
                this.idAttributes[idx] = this.attributes[idx];
            }
            else {
                if (!attr.isBuildIn)
                    attr.array = new Float32Array(attr.size * this.limit);
                attr.buffer = utils_1.createArrayBuffer(this.gl, attr.array);
            }
        });
        // init uniforms
        this.gl.useProgram(this.program);
        const projectionLoc = this.gl.getUniformLocation(this.program, 'projection');
        const scaleLoc = this.gl.getUniformLocation(this.program, 'scale');
        const translateLoc = this.gl.getUniformLocation(this.program, 'translate');
        // this.gl.viewport(0, 0, this.width, this.height) // TODO: viewport set, not needed? put here in case bug appear
        // prettier-ignore
        const projection = new Float32Array([
            2 / this.width, 0, 0,
            0, -2 / this.height, 0,
            -1, 1, 1
        ]);
        this.gl.uniformMatrix3fv(projectionLoc, false, projection);
        const scale = new Float32Array([1, 1]);
        this.gl.uniform2fv(scaleLoc, scale);
        const translate = new Float32Array([0, 0]);
        this.gl.uniform2fv(translateLoc, translate);
        // id uniforms, identical to link
        // TODO: need refactor too
        this.gl.useProgram(this.idProgram);
        const idProjectionLoc = this.gl.getUniformLocation(this.idProgram, 'projection');
        const idScaleLoc = this.gl.getUniformLocation(this.idProgram, 'scale');
        const idTranslateLoc = this.gl.getUniformLocation(this.idProgram, 'translate');
        this.gl.uniformMatrix3fv(idProjectionLoc, false, projection);
        this.gl.uniform2fv(idScaleLoc, scale);
        this.gl.uniform2fv(idTranslateLoc, translate);
    }
    /**
     * change link's attribute
     * @param link link data
     * @param attribute attribute key to change
     */
    changeAttribute(link, attribute) {
        const key = LinkAttrMap[attribute];
        const attr = this.attributes[key];
        const nodes = link.sourceTarget();
        const index = this.idsToIndex.get([nodes.source.id(), nodes.target.id()]);
        let data = null;
        if (attribute === 'source') {
            const pos = nodes.source.position();
            data = [pos.x, pos.y];
        }
        else if (attribute === 'target') {
            const pos = nodes.target.position();
            data = [pos.x, pos.y];
        }
        else if (attribute === 'strokeWidth') {
            data = [link.strokeWidth() * this.pixelRatio];
        }
        else if (attribute === 'strokeColor') {
            const col = link.strokeColor();
            data = [col.r, col.g, col.b, col.a];
        }
        else {
            console.error('Link attribute not supported.');
            return; // early return, skip following buffer change
        }
        attr.array.set(data, attr.size * index);
        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, attr.size * index * attr.array.BYTES_PER_ELEMENT, attr.array, attr.size * index, attr.size);
    }
    /**
     * refresh all position of edges
     * @param links all link data
     */
    refreshPosition(links) {
        let count = 0;
        links.forEach((link, i) => {
            // TODO: consider link and render link attribute mapping
            const source = link.source();
            const sourcePosition = source.position();
            this.attributes[LinkAttrKey.SOURCE].array[2 * (count + i)] = sourcePosition.x;
            this.attributes[LinkAttrKey.SOURCE].array[2 * (count + i) + 1] = sourcePosition.y;
            const target = link.target();
            const targetPosition = target.position();
            this.attributes[LinkAttrKey.TARGET].array[2 * (count + i)] = targetPosition.x;
            this.attributes[LinkAttrKey.TARGET].array[2 * (count + i) + 1] = targetPosition.y;
            // currently no need for color&renderId change
            /*
            this.attributes[LinkAttrKey.WIDTH].array[this.count + i] =
                link.strokeWidth() * this.pixelRatio

            const color = link.strokeColor()
            this.attributes[LinkAttrKey.COLOR].array[4 * (this.count + i)] = color.r
            this.attributes[LinkAttrKey.COLOR].array[4 * (this.count + i) + 1] = color.g
            this.attributes[LinkAttrKey.COLOR].array[4 * (this.count + i) + 2] = color.b
            this.attributes[LinkAttrKey.COLOR].array[4 * (this.count + i) + 3] = color.a

            const renderIdColor = encodeRenderId(2 * (this.count + i) + 1) // NOTE: link render id, use odd integer
            this.idAttributes[LinkIdAttrKey.ID].array[4 * (this.count + i)] = renderIdColor.r
            this.idAttributes[LinkIdAttrKey.ID].array[4 * (this.count + i) + 1] = renderIdColor.g
            this.idAttributes[LinkIdAttrKey.ID].array[4 * (this.count + i) + 2] = renderIdColor.b
            this.idAttributes[LinkIdAttrKey.ID].array[4 * (this.count + i) + 3] = renderIdColor.a
            */
        });
        const sourceAttr = this.attributes[LinkAttrKey.SOURCE];
        const targetAttr = this.attributes[LinkAttrKey.TARGET];
        const arr = [sourceAttr, targetAttr];
        arr.forEach((attr) => {
            if (!attr.isBuildIn) {
                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
                this.gl.bufferSubData(this.gl.ARRAY_BUFFER, attr.size * count * attr.array.BYTES_PER_ELEMENT, attr.array, attr.size * count, attr.size * links.length);
            }
        });
    }
    /**
     * add links data to engine
     * @param links links data
     */
    addData(links) {
        // set array
        links.forEach((link, i) => {
            // TODO: consider link and render link attribute mapping
            const source = link.source();
            const sourcePosition = source.position();
            this.attributes[LinkAttrKey.SOURCE].array[2 * (this.count + i)] = sourcePosition.x;
            this.attributes[LinkAttrKey.SOURCE].array[2 * (this.count + i) + 1] = sourcePosition.y;
            const target = link.target();
            const targetPosition = target.position();
            this.attributes[LinkAttrKey.TARGET].array[2 * (this.count + i)] = targetPosition.x;
            this.attributes[LinkAttrKey.TARGET].array[2 * (this.count + i) + 1] = targetPosition.y;
            this.attributes[LinkAttrKey.WIDTH].array[this.count + i] =
                link.strokeWidth() * this.pixelRatio;
            const color = link.strokeColor();
            this.attributes[LinkAttrKey.COLOR].array[4 * (this.count + i)] = color.r;
            this.attributes[LinkAttrKey.COLOR].array[4 * (this.count + i) + 1] = color.g;
            this.attributes[LinkAttrKey.COLOR].array[4 * (this.count + i) + 2] = color.b;
            this.attributes[LinkAttrKey.COLOR].array[4 * (this.count + i) + 3] = color.a;
            const renderIdColor = utils_1.encodeRenderId(2 * (this.count + i) + 1); // NOTE: link render id, use odd integer
            this.idAttributes[LinkIdAttrKey.ID].array[4 * (this.count + i)] = renderIdColor.r;
            this.idAttributes[LinkIdAttrKey.ID].array[4 * (this.count + i) + 1] = renderIdColor.g;
            this.idAttributes[LinkIdAttrKey.ID].array[4 * (this.count + i) + 2] = renderIdColor.b;
            this.idAttributes[LinkIdAttrKey.ID].array[4 * (this.count + i) + 3] = renderIdColor.a;
            const sourceTarget = link.sourceTarget();
            this.renderIdToIds[2 * (this.count + i) + 1] = [
                sourceTarget.source.id(),
                sourceTarget.target.id()
            ];
            this.idsToIndex.set([sourceTarget.source.id(), sourceTarget.target.id()], this.count + i);
        });
        this.attributes.forEach((attr) => {
            if (!attr.isBuildIn) {
                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
                this.gl.bufferSubData(this.gl.ARRAY_BUFFER, attr.size * this.count * attr.array.BYTES_PER_ELEMENT, attr.array, attr.size * this.count, attr.size * links.length);
            }
        });
        // id buffer data
        const attr = this.idAttributes[LinkIdAttrKey.ID];
        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, attr.size * this.count * attr.array.BYTES_PER_ELEMENT, attr.array, attr.size * this.count, attr.size * links.length);
        this.count += links.length;
    }
    /**
     * set Transform in Render Link
     * @param transform current transform(pan&zoom condition)
     */
    setTransform(transform) {
        this.gl.useProgram(this.program);
        const scaleLoc = this.gl.getUniformLocation(this.program, 'scale');
        const translateLoc = this.gl.getUniformLocation(this.program, 'translate');
        const scale = new Float32Array([transform.k, transform.k]);
        this.gl.uniform2fv(scaleLoc, scale);
        const translate = new Float32Array([transform.x, transform.y]);
        this.gl.uniform2fv(translateLoc, translate);
        // id uniforms, identical to link
        // TODO: need refactor too
        this.gl.useProgram(this.idProgram);
        const idScaleLoc = this.gl.getUniformLocation(this.idProgram, 'scale');
        const idTranslateLoc = this.gl.getUniformLocation(this.idProgram, 'translate');
        this.gl.uniform2fv(idScaleLoc, scale);
        this.gl.uniform2fv(idTranslateLoc, translate);
    }
    /**
     * render id to link ids(source and target)
     * @param renderId
     */
    getIdsByRenderId(renderId) {
        return this.renderIdToIds[renderId];
    }
    /**
     * draw links
     */
    draw() {
        if (this.count > 0) {
            this.gl.enable(this.gl.BLEND);
            this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);
            this.gl.useProgram(this.program);
            this.attributes.forEach((attr) => {
                this.gl.enableVertexAttribArray(attr.index);
            });
            this.attributes.forEach((attr, i) => {
                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
                this.gl.vertexAttribPointer(attr.index, attr.size, this.gl.FLOAT, false, attr.isBuildIn ? 0 : attr.size * attr.array.BYTES_PER_ELEMENT, 0);
                if (!attr.isBuildIn)
                    this.gl.vertexAttribDivisor(attr.index, 1);
            });
        }
        this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP, 0, 4, this.count);
        // draw id
        this.gl.blendFunc(this.gl.ONE, this.gl.ZERO);
        this.gl.useProgram(this.idProgram);
        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.idTexture);
        this.idAttributes.forEach((attr) => {
            this.gl.enableVertexAttribArray(attr.index);
        });
        const attr = this.idAttributes[LinkIdAttrKey.ID];
        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
        this.gl.vertexAttribPointer(attr.index, attr.size, this.gl.FLOAT, false, attr.size * attr.array.BYTES_PER_ELEMENT, 0);
        this.gl.vertexAttribDivisor(attr.index, 1);
        this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP, 0, 4, this.count);
        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);
        this.gl.enable(this.gl.BLEND);
        this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);
    }
}
exports.RenderLinkManager = RenderLinkManager;


/***/ }),

/***/ "./src/renderer/elements/link/vertex.glsl":
/*!************************************************!*\
  !*** ./src/renderer/elements/link/vertex.glsl ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#version 300 es\nprecision highp float;\nin vec3 inVertexPos;\nin vec2 inSourcePosition;\nin vec2 inTargetPosition;\nin float inStrokeWidth;\nin vec4 inStrokeColor;\n\nout vec4 color;\n\nuniform mat3 projection;\nuniform vec2 scale;\nuniform vec2 translate;\n\nvoid main(void) {\n    color = inStrokeColor;\n\n    vec2 source = inSourcePosition * scale + translate;\n    vec2 target = inTargetPosition * scale + translate;\n    vec2 delta = source - target;\n    vec2 center = 0.5 * (source + target);\n    float len = length(delta);\n    float phi = atan(delta.y / delta.x);\n\n    mat3 line_scale = mat3(\n        len, 0, 0,\n        0, inStrokeWidth, 0,\n        0, 0, 1\n    );\n    mat3 line_rotate = mat3(\n        cos(phi), sin(phi), 0,\n        -sin(phi), cos(phi), 0,\n        0, 0, 1\n    );\n    mat3 line_translate = mat3(\n        1, 0, 0,\n        0, 1, 0,\n        center.x, center.y, 1\n    );\n    \n    mat3 transform = line_translate * line_rotate * line_scale;\n\n    gl_Position = vec4(projection * transform * inVertexPos, 1.);\n}");

/***/ }),

/***/ "./src/renderer/elements/node/fragment.glsl":
/*!**************************************************!*\
  !*** ./src/renderer/elements/node/fragment.glsl ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#version 300 es\nprecision highp float;\nin vec2 pos;\nin float radius;\nin vec4 color;\nin float strokeWidth;\nin vec4 strokeColor;\n\nout vec4 fragmentColor;\n\nuniform vec2 viewport;\nuniform float pixelRatio;\n\nfloat inCircle() {\n  vec2 flip_pos = pos;\n  flip_pos.y = viewport.y - pos.y;\n  float r = distance(gl_FragCoord.xy / pixelRatio, flip_pos);\n  float draw = 1. - step(radius - strokeWidth / 2., r);\n  return draw;\n}\n\nfloat inBorder() {\n  if (strokeWidth == 0.) {\n    return 0.;\n  }\n  vec2 flip_pos = pos;\n  flip_pos.y = viewport.y - pos.y;\n  float r = distance(gl_FragCoord.xy / pixelRatio, flip_pos);\n  float drawOuter = 1. - smoothstep((radius + strokeWidth / 2.) * 0.95, (radius + strokeWidth / 2.) * 1.05, r);\n  float drawInner = 1. - step(radius - strokeWidth / 2., r);\n  return drawOuter * (1. - drawInner);\n  // return drawOuter;\n}\n\nvoid main(void) {\n    // border check, using 0.5(center of smoothstep)\n    if (inCircle() < 1. && (strokeWidth < 0.8 || inBorder() < 0.5)) {\n        discard;\n    }\n    fragmentColor = inBorder() * vec4(strokeColor.rgb * strokeColor.a, strokeColor.a) + inCircle() * vec4(color.rgb * color.a, color.a);\n}");

/***/ }),

/***/ "./src/renderer/elements/node/id-fragment.glsl":
/*!*****************************************************!*\
  !*** ./src/renderer/elements/node/id-fragment.glsl ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#version 300 es\nprecision highp float;\nin vec2 pos;\nin float radius;\nin vec4 color;\nin float strokeWidth;\nin vec4 strokeColor;\n\nin vec4 id;\n\nout vec4 fragmentColor;\n\nuniform vec2 viewport;\nuniform float pixelRatio;\n\nfloat inCircle() {\n  vec2 flip_pos = pos;\n  flip_pos.y = viewport.y - pos.y;\n  float r = distance(gl_FragCoord.xy / pixelRatio, flip_pos);\n  float draw = 1. - step(radius - strokeWidth / 2., r);\n  return draw;\n}\n\nfloat inBorder() {\n  if (strokeWidth == 0.) {\n    return 0.;\n  }\n  vec2 flip_pos = pos;\n  flip_pos.y = viewport.y - pos.y;\n  float r = distance(gl_FragCoord.xy / pixelRatio, flip_pos);\n  float drawOuter = 1. - smoothstep((radius + strokeWidth / 2.) * 0.95, (radius + strokeWidth / 2.) * 1.05, r);\n  float drawInner = 1. - step(radius - strokeWidth / 2., r);\n  return drawOuter * (1. - drawInner);\n  // return drawOuter;\n}\n\nvoid main(void) {\n    // border check, using 0.5(center of smoothstep)\n    if (inCircle() < 1. && (strokeWidth < 0.8 || inBorder() < 0.5)) {\n        discard;\n    }\n    fragmentColor = id;\n}");

/***/ }),

/***/ "./src/renderer/elements/node/id-vertex.glsl":
/*!***************************************************!*\
  !*** ./src/renderer/elements/node/id-vertex.glsl ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#version 300 es\nprecision highp float;\nin vec3 inVertexPos;\nin vec2 inPosition;\nin float inRadius;\nin vec4 inFill;\nin float inStrokeWidth;\nin vec4 inStrokeColor;\n\nin vec4 inId;\n\nout vec2 pos;\nout float radius;\nout vec4 color;\nout float strokeWidth;\nout vec4 strokeColor;\n\nout vec4 id;\n\nuniform mat3 projection;\nuniform vec2 scale;\nuniform vec2 translate;\nuniform vec2 viewport;\n\nvoid main(void) {\n    id = inId;\n\n    float size = inRadius + inStrokeWidth / 2.;\n    radius = inRadius;\n    color = inFill;\n    strokeWidth = inStrokeWidth;\n    strokeColor = inStrokeColor;\n    float vertexSize = size * (2. * sqrt(2.)) * 1.5; // NOTE: x 1.5 to prevent border factor\n    pos = scale * inPosition + translate;\n    mat3 transform = mat3(\n        vertexSize, 0, 0,\n        0, vertexSize, 0,\n        pos.x, pos.y, 1\n    );\n\n    gl_Position = vec4(projection * transform * inVertexPos, 1.);\n}");

/***/ }),

/***/ "./src/renderer/elements/node/render-node.ts":
/*!***************************************************!*\
  !*** ./src/renderer/elements/node/render-node.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 * @description Node using in Renderer
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RenderNodeManager = void 0;
const vertex_glsl_1 = __webpack_require__(/*! ./vertex.glsl */ "./src/renderer/elements/node/vertex.glsl");
const fragment_glsl_1 = __webpack_require__(/*! ./fragment.glsl */ "./src/renderer/elements/node/fragment.glsl");
const id_vertex_glsl_1 = __webpack_require__(/*! ./id-vertex.glsl */ "./src/renderer/elements/node/id-vertex.glsl");
const id_fragment_glsl_1 = __webpack_require__(/*! ./id-fragment.glsl */ "./src/renderer/elements/node/id-fragment.glsl");
const utils_1 = __webpack_require__(/*! ../../utils */ "./src/renderer/utils.ts");
var NodeAttrKey;
(function (NodeAttrKey) {
    NodeAttrKey[NodeAttrKey["TEMPLATE"] = 0] = "TEMPLATE";
    NodeAttrKey[NodeAttrKey["POSITION"] = 1] = "POSITION";
    NodeAttrKey[NodeAttrKey["RADIUS"] = 2] = "RADIUS";
    NodeAttrKey[NodeAttrKey["COLOR"] = 3] = "COLOR";
    NodeAttrKey[NodeAttrKey["STROKE_WIDTH"] = 4] = "STROKE_WIDTH";
    NodeAttrKey[NodeAttrKey["STROKE_COLOR"] = 5] = "STROKE_COLOR";
})(NodeAttrKey || (NodeAttrKey = {}));
var NodeIdAttrKey;
(function (NodeIdAttrKey) {
    NodeIdAttrKey[NodeIdAttrKey["TEMPLATE"] = 0] = "TEMPLATE";
    NodeIdAttrKey[NodeIdAttrKey["POSITION"] = 1] = "POSITION";
    NodeIdAttrKey[NodeIdAttrKey["RADIUS"] = 2] = "RADIUS";
    NodeIdAttrKey[NodeIdAttrKey["COLOR"] = 3] = "COLOR";
    NodeIdAttrKey[NodeIdAttrKey["STROKE_WIDTH"] = 4] = "STROKE_WIDTH";
    NodeIdAttrKey[NodeIdAttrKey["STROKE_COLOR"] = 5] = "STROKE_COLOR";
    NodeIdAttrKey[NodeIdAttrKey["ID"] = 6] = "ID";
})(NodeIdAttrKey || (NodeIdAttrKey = {}));
const NodeAttrMap = {
    position: NodeAttrKey.POSITION,
    radius: NodeAttrKey.RADIUS,
    fill: NodeAttrKey.COLOR,
    strokeWidth: NodeAttrKey.STROKE_WIDTH,
    strokeColor: NodeAttrKey.STROKE_COLOR
};
class RenderNodeManager {
    /**
     * create render node manager
     * @param gl WebGL context
     * @param params nessesary configs for node manager
     * @param idTexture texture store elements id of each pixel
     */
    constructor(gl, params, idTexture) {
        this.count = 0;
        const { limit, width, height } = params;
        this.gl = gl;
        this.limit = limit;
        this.width = width;
        this.height = height;
        this.pixelRatio = window.devicePixelRatio || 1;
        this.attributes = utils_1.extractAttributesFromShader(vertex_glsl_1.default);
        this.program = utils_1.createProgram(this.gl, vertex_glsl_1.default, fragment_glsl_1.default, this.attributes);
        this.idAttributes = utils_1.extractAttributesFromShader(id_vertex_glsl_1.default);
        this.idProgram = utils_1.createProgram(this.gl, id_vertex_glsl_1.default, id_fragment_glsl_1.default, this.idAttributes);
        this.idTexture = idTexture;
        this.renderIdToId = {};
        this.idToIndex = {};
        // init arrays
        // prettier-ignore
        this.attributes[NodeAttrKey.TEMPLATE].array = new Float32Array([
            -0.5, 0.0, 1.0,
            0.0, -0.5, 1.0,
            0.0, 0.5, 1.0,
            0.5, 0.0, 1.0,
        ]);
        // TODO: combine the following two loop?
        this.attributes.forEach((attr) => {
            if (!attr.isBuildIn)
                attr.array = new Float32Array(attr.size * this.limit);
        });
        // init buffers
        this.attributes.forEach((attr) => {
            attr.buffer = utils_1.createArrayBuffer(this.gl, attr.array);
        });
        // init id attributes and buffers
        // TODO: hardcode check, need refactor
        this.idAttributes.forEach((attr, idx) => {
            if (idx < this.attributes.length) {
                this.idAttributes[idx] = this.attributes[idx];
            }
            else {
                if (!attr.isBuildIn)
                    attr.array = new Float32Array(attr.size * this.limit);
                attr.buffer = utils_1.createArrayBuffer(this.gl, attr.array);
            }
        });
        // init uniforms
        this.gl.useProgram(this.program);
        const projectionLoc = this.gl.getUniformLocation(this.program, 'projection');
        const scaleLoc = this.gl.getUniformLocation(this.program, 'scale');
        const translateLoc = this.gl.getUniformLocation(this.program, 'translate');
        const viewportLoc = this.gl.getUniformLocation(this.program, 'viewport');
        const pixelRatioLoc = this.gl.getUniformLocation(this.program, 'pixelRatio');
        // this.gl.viewport(0, 0, this.width, this.height) // TODO: viewport set, not needed? put here in case bug appear
        // prettier-ignore
        const projection = new Float32Array([
            2 / this.width, 0, 0,
            0, -2 / this.height, 0,
            -1, 1, 1
        ]);
        this.gl.uniformMatrix3fv(projectionLoc, false, projection);
        const scale = new Float32Array([1, 1]);
        this.gl.uniform2fv(scaleLoc, scale);
        const translate = new Float32Array([0, 0]);
        this.gl.uniform2fv(translateLoc, translate);
        const viewport = new Float32Array([this.width, this.height]);
        this.gl.uniform2fv(viewportLoc, viewport);
        this.gl.uniform1f(pixelRatioLoc, this.pixelRatio);
        // id uniforms, identical to node
        // TODO: need refactor too
        this.gl.useProgram(this.idProgram);
        const idProjectionLoc = this.gl.getUniformLocation(this.idProgram, 'projection');
        const idScaleLoc = this.gl.getUniformLocation(this.idProgram, 'scale');
        const idTranslateLoc = this.gl.getUniformLocation(this.idProgram, 'translate');
        const idViewportLoc = this.gl.getUniformLocation(this.idProgram, 'viewport');
        const idPixelRatioLoc = this.gl.getUniformLocation(this.idProgram, 'pixelRatio');
        this.gl.uniformMatrix3fv(idProjectionLoc, false, projection);
        this.gl.uniform2fv(idScaleLoc, scale);
        this.gl.uniform2fv(idTranslateLoc, translate);
        this.gl.uniform2fv(idViewportLoc, viewport);
        this.gl.uniform1f(idPixelRatioLoc, this.pixelRatio);
    }
    /**
     * set Transform in Render Node
     * @param transform current transform(pan&zoom condition)
     */
    setTransform(transform) {
        this.gl.useProgram(this.program);
        const scaleLoc = this.gl.getUniformLocation(this.program, 'scale');
        const translateLoc = this.gl.getUniformLocation(this.program, 'translate');
        const scale = new Float32Array([transform.k, transform.k]);
        this.gl.uniform2fv(scaleLoc, scale);
        const translate = new Float32Array([transform.x, transform.y]);
        this.gl.uniform2fv(translateLoc, translate);
        // id uniforms, identical to node
        // TODO: need refactor too
        this.gl.useProgram(this.idProgram);
        const idScaleLoc = this.gl.getUniformLocation(this.idProgram, 'scale');
        const idTranslateLoc = this.gl.getUniformLocation(this.idProgram, 'translate');
        this.gl.uniform2fv(idScaleLoc, scale);
        this.gl.uniform2fv(idTranslateLoc, translate);
    }
    /**
     * change node's attribute
     * @param node node data
     * @param attribute attribute key to change
     */
    changeAttribute(node, attribute) {
        const key = NodeAttrMap[attribute];
        const attr = this.attributes[key];
        const index = this.idToIndex[node.id()];
        let data = null;
        if (attribute === 'position') {
            const pos = node.position();
            data = [pos.x, pos.y];
        }
        else if (attribute === 'fill') {
            const col = node.fill();
            data = [col.r, col.g, col.b, col.a];
        }
        else if (attribute === 'radius') {
            data = [node.r() * this.pixelRatio];
        }
        else if (attribute === 'strokeWidth') {
            data = [node.strokeWidth() * this.pixelRatio];
        }
        else if (attribute === 'strokeColor') {
            const col = node.strokeColor();
            data = [col.r, col.g, col.b, col.a];
        }
        else {
            console.error('Not supported Node attribute.');
            return;
        }
        attr.array.set(data, attr.size * index);
        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, attr.size * index * attr.array.BYTES_PER_ELEMENT, attr.array, attr.size * index, attr.size);
    }
    /**
     * add nodes data to engine
     * @param nodes nodes data
     */
    addData(nodes) {
        // set array
        nodes.forEach((node, i) => {
            // TODO: consider node and render node attribute mapping
            const position = node.position();
            this.attributes[NodeAttrKey.POSITION].array[2 * (this.count + i)] = position.x;
            this.attributes[NodeAttrKey.POSITION].array[2 * (this.count + i) + 1] = position.y;
            this.attributes[NodeAttrKey.RADIUS].array[this.count + i] = node.r() * this.pixelRatio;
            const fill = node.fill();
            this.attributes[NodeAttrKey.COLOR].array[4 * (this.count + i)] = fill.r;
            this.attributes[NodeAttrKey.COLOR].array[4 * (this.count + i) + 1] = fill.g;
            this.attributes[NodeAttrKey.COLOR].array[4 * (this.count + i) + 2] = fill.b;
            this.attributes[NodeAttrKey.COLOR].array[4 * (this.count + i) + 3] = fill.a;
            this.attributes[NodeAttrKey.STROKE_WIDTH].array[this.count + i] =
                node.strokeWidth() * this.pixelRatio;
            const strokeColor = node.strokeColor();
            this.attributes[NodeAttrKey.STROKE_COLOR].array[4 * (this.count + i)] = strokeColor.r;
            this.attributes[NodeAttrKey.STROKE_COLOR].array[4 * (this.count + i) + 1] =
                strokeColor.g;
            this.attributes[NodeAttrKey.STROKE_COLOR].array[4 * (this.count + i) + 2] =
                strokeColor.b;
            this.attributes[NodeAttrKey.STROKE_COLOR].array[4 * (this.count + i) + 3] =
                strokeColor.a;
            const renderIdColor = utils_1.encodeRenderId(2 * (this.count + i)); // NOTE: node render id, use even integer
            this.idAttributes[NodeIdAttrKey.ID].array[4 * (this.count + i)] = renderIdColor.r;
            this.idAttributes[NodeIdAttrKey.ID].array[4 * (this.count + i) + 1] = renderIdColor.g;
            this.idAttributes[NodeIdAttrKey.ID].array[4 * (this.count + i) + 2] = renderIdColor.b;
            this.idAttributes[NodeIdAttrKey.ID].array[4 * (this.count + i) + 3] = renderIdColor.a;
            this.renderIdToId[2 * (this.count + i)] = node.id();
            this.idToIndex[node.id()] = this.count + i;
        });
        this.attributes.forEach((attr) => {
            if (!attr.isBuildIn) {
                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
                this.gl.bufferSubData(this.gl.ARRAY_BUFFER, attr.size * this.count * attr.array.BYTES_PER_ELEMENT, attr.array, attr.size * this.count, attr.size * nodes.length);
            }
        });
        // id buffer data
        const attr = this.idAttributes[NodeIdAttrKey.ID];
        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, attr.size * this.count * attr.array.BYTES_PER_ELEMENT, attr.array, attr.size * this.count, attr.size * nodes.length);
        this.count += nodes.length;
    }
    /**
     * render id to id
     * @param renderId render id in number
     */
    getIdByRenderId(renderId) {
        return this.renderIdToId[renderId];
    }
    /**
     * draw nodes
     */
    draw() {
        if (this.count > 0) {
            this.gl.enable(this.gl.BLEND);
            this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);
            this.gl.useProgram(this.program);
            this.attributes.forEach((attr) => {
                this.gl.enableVertexAttribArray(attr.index);
            });
            this.attributes.forEach((attr, i) => {
                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
                this.gl.vertexAttribPointer(attr.index, attr.size, this.gl.FLOAT, false, attr.size * attr.array.BYTES_PER_ELEMENT, 0);
                if (!attr.isBuildIn)
                    this.gl.vertexAttribDivisor(attr.index, 1);
            });
        }
        this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP, 0, 4, this.count);
        // draw id
        this.gl.blendFunc(this.gl.ONE, this.gl.ZERO);
        this.gl.useProgram(this.idProgram);
        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.idTexture);
        this.idAttributes.forEach((attr) => {
            this.gl.enableVertexAttribArray(attr.index);
        });
        const attr = this.idAttributes[NodeIdAttrKey.ID];
        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer);
        this.gl.vertexAttribPointer(attr.index, attr.size, this.gl.FLOAT, false, attr.size * attr.array.BYTES_PER_ELEMENT, 0);
        this.gl.vertexAttribDivisor(attr.index, 1);
        this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP, 0, 4, this.count);
        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);
        this.gl.enable(this.gl.BLEND);
        this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);
    }
}
exports.RenderNodeManager = RenderNodeManager;


/***/ }),

/***/ "./src/renderer/elements/node/vertex.glsl":
/*!************************************************!*\
  !*** ./src/renderer/elements/node/vertex.glsl ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#version 300 es\nprecision highp float;\nin vec3 inVertexPos;\nin vec2 inPosition;\nin float inRadius;\nin vec4 inFill;\nin float inStrokeWidth;\nin vec4 inStrokeColor;\n\nout vec2 pos;\nout float radius;\nout vec4 color;\nout float strokeWidth;\nout vec4 strokeColor;\n\nuniform mat3 projection;\nuniform vec2 scale;\nuniform vec2 translate;\nuniform vec2 viewport;\n\nvoid main(void) {\n    float size = inRadius + inStrokeWidth / 2.;\n    radius = inRadius;\n    color = inFill;\n    strokeWidth = inStrokeWidth;\n    strokeColor = inStrokeColor;\n    float vertexSize = size * (2. * sqrt(2.)) * 1.5; // NOTE: x 1.5 to prevent border factor\n    pos = scale * inPosition + translate;\n    mat3 transform = mat3(\n        vertexSize, 0, 0,\n        0, vertexSize, 0,\n        pos.x, pos.y, 1\n    );\n\n    gl_Position = vec4(projection * transform * inVertexPos, 1.);\n}");

/***/ }),

/***/ "./src/renderer/index.ts":
/*!*******************************!*\
  !*** ./src/renderer/index.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @description render graph using webgl
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Renderer = void 0;
const render_node_1 = __webpack_require__(/*! ./elements/node/render-node */ "./src/renderer/elements/node/render-node.ts");
const render_link_1 = __webpack_require__(/*! ./elements/link/render-link */ "./src/renderer/elements/link/render-link.ts");
const utils_1 = __webpack_require__(/*! ./utils */ "./src/renderer/utils.ts");
class Renderer {
    /**
     * create renderer object
     * @param configs {canvas: HTMLCanvasElement, width: number, height: number, backgroundColor: Color, defaultConfigs: Object} configs passed to renderer
     */
    constructor(configs) {
        const { canvas, width, height, backgroundColor, nodeLimit, linkLimit } = configs;
        try {
            this.gl = canvas.getContext('webgl2');
        }
        catch (_a) {
            throw new Error('NetV requires WebGL2 supported by your browser');
        }
        this.backgroundColor = backgroundColor;
        this.width = width;
        this.height = height;
        this.initIdTexture();
        this.nodeManager = new render_node_1.RenderNodeManager(this.gl, { width, height, limit: nodeLimit }, this.idTexture);
        this.linkManager = new render_link_1.RenderLinkManager(this.gl, { width, height, limit: linkLimit }, this.idTexture);
    }
    /**
     * add nodes to node manager
     * @param nodes node data in NetV
     */
    addNodes(nodes) {
        this.nodeManager.addData(nodes);
    }
    /**
     * add links to link manager
     * @param links link data in NetV
     */
    addLinks(links) {
        this.linkManager.addData(links);
    }
    setTransform(transform) {
        this.nodeManager.setTransform(transform);
        this.linkManager.setTransform(transform);
        this.draw();
    }
    /**
     * draw all elements
     */
    draw() {
        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.idTexture);
        this.gl.clearColor(1, 1, 1, 1);
        this.gl.clear(this.gl.COLOR_BUFFER_BIT);
        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);
        this.gl.clearColor(this.backgroundColor.r, this.backgroundColor.g, this.backgroundColor.b, this.backgroundColor.a);
        this.gl.clear(this.gl.COLOR_BUFFER_BIT);
        this.linkManager.draw();
        this.nodeManager.draw();
    }
    /**
     * get element's id at (x, y) of canvas if exists
     * @param x x pos
     * @param y y pos
     */
    getIdByPosition(position) {
        const renderId = this.readIdTexture(position);
        if (renderId >= 0) {
            if (renderId % 2 === 0) {
                // NOTE: node has even render id, link has odd render id
                const nodeId = this.nodeManager.getIdByRenderId(renderId);
                return nodeId;
            }
            else {
                const linkIds = this.linkManager.getIdsByRenderId(renderId);
                return linkIds;
            }
        }
    }
    /**
     * read pixel value at (x, y) of texture
     * @param x x pos
     * @param y y pos
     */
    readIdTexture(position) {
        const ratio = window.devicePixelRatio || 1;
        this.gl.bindFramebuffer(this.gl.READ_FRAMEBUFFER, this.idTexture);
        const readPixelBuffer = new Uint8Array([255, 255, 255, 255]); // -1
        this.gl.readPixels(
        // !Warning: x and y are optional in Position, need to check them
        position.x * ratio, position.y * ratio, 1, 1, this.gl.RGBA, this.gl.UNSIGNED_BYTE, readPixelBuffer);
        const objectID = utils_1.decodeRenderId(readPixelBuffer);
        return objectID;
    }
    /**
     * init WebGL texture for recording position of elements
     */
    initIdTexture() {
        const gl = this.gl;
        const pixelRatio = window.devicePixelRatio || 1;
        const screenWidth = this.width * pixelRatio;
        const screenHeight = this.height * pixelRatio;
        const fbo = gl.createFramebuffer();
        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);
        const idTexture = gl.createTexture();
        gl.bindTexture(gl.TEXTURE_2D, idTexture);
        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, screenWidth, screenHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
        gl.bindTexture(gl.TEXTURE_2D, null);
        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, idTexture, 0);
        // TODO: need simplify
        gl.drawBuffers([0].map((v) => v + gl.COLOR_ATTACHMENT0));
        const rbo = gl.createRenderbuffer();
        gl.bindRenderbuffer(gl.RENDERBUFFER, rbo);
        gl.clearColor(1, 1, 1, 1);
        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH24_STENCIL8, screenWidth, screenHeight);
        gl.bindRenderbuffer(gl.RENDERBUFFER, null);
        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, rbo);
        if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {
            throw new Error('Framebuffer generate failed');
        }
        gl.bindFramebuffer(gl.FRAMEBUFFER, null);
        this.idTexture = fbo;
    }
}
exports.Renderer = Renderer;


/***/ }),

/***/ "./src/renderer/utils.ts":
/*!*******************************!*\
  !*** ./src/renderer/utils.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 * @description utility functions for renderer
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.decodeRenderId = exports.encodeRenderId = exports.extractAttributesFromShader = exports.createArrayBuffer = exports.createProgram = exports.compileShader = void 0;
/**
 * compile webgl shader
 * @param gl WebGL instance
 * @param shaderStr shader file in string
 * @param shaderType vertex or fragment shader
 */
function compileShader(gl, shaderStr, shaderType) {
    const shader = gl.createShader(shaderType);
    gl.shaderSource(shader, shaderStr);
    gl.compileShader(shader);
    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
        throw new Error('Shader compile failed: ' + gl.getShaderInfoLog(shader));
    }
    return shader;
}
exports.compileShader = compileShader;
/**
 * generate WebGL program
 * @param gl WebGL instance
 * @param vertShaderStr vertex shader in string format
 * @param fragShaderStr fragment shader in string format
 * @param attributes attributes
 */
function createProgram(gl, vertShaderStr, fragShaderStr, attributes) {
    const vertShader = compileShader(gl, vertShaderStr, gl.VERTEX_SHADER);
    const fragShader = compileShader(gl, fragShaderStr, gl.FRAGMENT_SHADER);
    const program = gl.createProgram();
    attributes.forEach((attr) => {
        gl.bindAttribLocation(program, attr.index, attr.name);
    });
    gl.attachShader(program, vertShader);
    gl.attachShader(program, fragShader);
    gl.linkProgram(program);
    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
        throw new Error(`Could not link shaders: ${gl.getProgramInfoLog(program)}`);
    }
    return program;
}
exports.createProgram = createProgram;
/**
 * create WebGL array buffer given data array
 * @param gl WebGL context
 * @param data data to store in buffer
 * @returns WebGL buffer store given data
 */
function createArrayBuffer(gl, data) {
    const buffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    gl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);
    return buffer;
}
exports.createArrayBuffer = createArrayBuffer;
/**
 * extract attributes from a shader sring
 * @param {string} shaderStr
 * @returns {RenderAttribute[]} attributes array
 */
function extractAttributesFromShader(shaderStr) {
    const matchings = shaderStr.match(/in\s.*;/g);
    return matchings.map((match, index) => {
        const name = match.split(' ')[2].slice(0, -1);
        const type = match.split(' ')[1];
        let size = 1;
        if (type.slice(0, 3) === 'vec') {
            size = Number(type.slice(-1));
        }
        let isBuildIn = false;
        if (name === 'inVertexPos') {
            isBuildIn = true;
        }
        return {
            name,
            size,
            index,
            isBuildIn
        };
    });
}
exports.extractAttributesFromShader = extractAttributesFromShader;
/**
 * encode a render id as color to pass in texture
 * @param id render id
 */
function encodeRenderId(id) {
    // split a large number by 8-bit: id = concat(a, b, g, r), and normalize them into (0, 1)
    const r = (id & 255) / 255.0;
    const g = ((id >> 8) & 255) / 255.0;
    const b = ((id >> 16) & 255) / 255.0;
    const a = ((id >> 24) & 255) / 255.0;
    return { r, g, b, a };
}
exports.encodeRenderId = encodeRenderId;
/**
 * decode pixel value to number
 * @param pixelVal a pixel's value on texture
 */
function decodeRenderId(pixelVal) {
    // parse normalized parts of id number, bit shift to origin position and concat
    const renderId = pixelVal[0] | (pixelVal[1] << 8) | (pixelVal[2] << 16) | (pixelVal[3] << 24);
    return renderId;
}
exports.decodeRenderId = decodeRenderId;


/***/ }),

/***/ "./src/utils/is.ts":
/*!*************************!*\
  !*** ./src/utils/is.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isValidId = void 0;
/**
 * Test whether a string can be a valid id of a Node.
 * @param {string} value: the string tobe tested
 * @returns {boolean}
 */
function isValidId(value) {
    return value !== undefined && typeof value === 'string' && value.length > 0;
}
exports.isValidId = isValidId;


/***/ }),

/***/ "./src/utils/map2.ts":
/*!***************************!*\
  !*** ./src/utils/map2.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Jiacheng Pan <jackieanxis@gmail.com>
 * @description Map2 is a Map data structure which maps two keys to one value.
 * @Usage same to Map data structure in ES6.
 * @dependences None
 */
Object.defineProperty(exports, "__esModule", { value: true });
const JOIN = String.fromCharCode(7);
const isKeys = (keys) => {
    return (keys instanceof Array &&
        keys.length === 2 &&
        keys.every((key) => key !== undefined && key !== null));
};
class Map2 {
    constructor(entries) {
        this.map = new Map();
        if (entries instanceof Array) {
            entries.forEach((entry) => {
                let [key, value] = entry;
                this.set(key, value);
            });
        }
    }
    get size() {
        return this.map.size;
    }
    delete(keys) {
        if (isKeys(keys)) {
            const key = keys.join(JOIN);
            const key_ = keys[1] + JOIN + keys[0];
            let map = this.map;
            map.delete(key);
            map.delete(key_);
        }
    }
    set(keys, value) {
        if (isKeys(keys)) {
            const key = keys.join(JOIN);
            const key_ = keys[1] + JOIN + keys[0];
            let map = this.map;
            if (!map.has(key_)) {
                map.set(key, value);
            }
            else {
                map.set(key_, value);
            }
        }
        return this;
    }
    get(keys) {
        if (isKeys(keys)) {
            const key = keys.join(JOIN);
            const key_ = keys[1] + JOIN + keys[0];
            return this.map.get(key) || this.map.get(key_);
        }
        else {
            return undefined;
        }
    }
    has(keys) {
        if (isKeys(keys)) {
            const key = keys.join(JOIN);
            const key_ = keys[1] + JOIN + keys[0];
            return this.map.has(key) || this.map.has(key_);
        }
        else {
            return false;
        }
    }
    forEach(func) {
        this.map.forEach((value, key) => {
            let keys = key.split(JOIN);
            func(value, keys, this);
        });
    }
    entries() {
        return [...this.map.entries()].map((entry) => {
            const key = entry[0].split(JOIN);
            const value = entry[1];
            return [key, value];
        });
    }
    keys() {
        let keys = [...this.map.keys()];
        return keys.map((key) => key.split(JOIN));
    }
    values() {
        return [...this.map.values()];
    }
}
exports.default = Map2;


/***/ }),

/***/ "./src/utils/utils.ts":
/*!****************************!*\
  !*** ./src/utils/utils.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 * @description some utility functions
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformGraphPosition = void 0;
/**
 * given a graph data with position, return a copy of graph, with position transformed to center of given size
 * @param graph node link graph data
 * @param size graph size (max(width, height))
 * @param centerX x pos of graph center
 * @param centerY y pos of graph center
 */
function transformGraphPosition(graph, size, centerX, centerY) {
    const targetGraph = JSON.parse(JSON.stringify(graph));
    const xs = targetGraph.nodes.map((node) => node.x);
    const ys = targetGraph.nodes.map((node) => node.y);
    const xMin = Math.min(...xs);
    const xMax = Math.max(...xs);
    const yMin = Math.min(...ys);
    const yMax = Math.max(...ys);
    const xMid = (xMin + xMax) / 2;
    const yMid = (yMin + yMax) / 2;
    targetGraph.nodes.forEach((node) => {
        node.x = ((node.x - xMid) / (xMax - xMin)) * size + centerX;
        node.y = ((node.y - yMid) / (yMax - yMin)) * size + centerY;
    });
    return targetGraph;
}
exports.transformGraphPosition = transformGraphPosition;


/***/ })

/******/ });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

/***/ })

/******/ });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly8vLi9iZW5jaG1hcmtzL1Rlc3RDYXNlLmpzIiwid2VicGFjazovLy8uL2JlbmNobWFya3MvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vYmVuY2htYXJrcy9saWIvZDMudjUubWluLmpzIiwid2VicGFjazovLy8uL2JlbmNobWFya3MvbGliL2dyYXBoR2VuZXJhdG9yLmpzIiwid2VicGFjazovLy8uL2JlbmNobWFya3MvbGliL2xpbmVjaGFydC5qcyIsIndlYnBhY2s6Ly8vLi9iZW5jaG1hcmtzL2xpYi9zdGF0cy5tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vYmVuY2htYXJrcy9saWIvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vYnVpbGQvTmV0Vi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsTztRQ1ZBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBOzs7UUFHQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0EsMENBQTBDLGdDQUFnQztRQUMxRTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLHdEQUF3RCxrQkFBa0I7UUFDMUU7UUFDQSxpREFBaUQsY0FBYztRQUMvRDs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0EseUNBQXlDLGlDQUFpQztRQUMxRSxnSEFBZ0gsbUJBQW1CLEVBQUU7UUFDckk7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSwyQkFBMkIsMEJBQTBCLEVB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LFNBQVMsdURBQXVEO0FBQ2hFLFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsaURBQWlEO0FBQzFELFNBQVMscURBQXFEO0FBQzlELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsaURBQWlEO0FBQzFELFNBQVMscURBQXFEO0FBQzlELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMsNERBQTREO0FBQ3JFLFNBQVMsb0RBQW9EO0FBQzdELFNBQVMscURBQXFEO0FBQzlELFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsdURBQXVEO0FBQ2hFLFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMscURBQXFEO0FBQzlELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsaURBQWlEO0FBQzFELFNBQVMscURBQXFEO0FBQzlELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsK0NBQStDO0FBQ3hELFNBQVMsK0NBQStDO0FBQ3hELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMseURBQXlEO0FBQ2xFLFNBQVMsOENBQThDO0FBQ3ZELFNBQVMscURBQXFEO0FBQzlELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMseURBQXlEO0FBQ2xFLFNBQVMsbURBQW1EO0FBQzVELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsdURBQXVEO0FBQ2hFLFNBQVMsbURBQW1EO0FBQzVELFNBQVMsMERBQTBEO0FBQ25FLFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMscURBQXFEO0FBQzlELFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMseURBQXlEO0FBQ2xFLFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsK0NBQStDO0FBQ3hELFNBQVMsNkRBQTZEO0FBQ3RFLFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMscURBQXFEO0FBQzlELFNBQVMscURBQXFEO0FBQzlELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMscURBQXFEO0FBQzlELFNBQVMsdURBQXVEO0FBQ2hFLFNBQVMsZ0VBQWdFO0FBQ3pFLFNBQVMsMkRBQTJEO0FBQ3BFLFNBQVMsMkRBQTJEO0FBQ3BFLFNBQVMsaUVBQWlFO0FBQzFFLFNBQVMseURBQXlEO0FBQ2xFLFNBQVMsZ0VBQWdFO0FBQ3pFLFNBQVMsbUVBQW1FO0FBQzVFLFNBQVMsOERBQThEO0FBQ3ZFLFNBQVMseURBQXlEO0FBQ2xFLFNBQVMsMERBQTBEO0FBQ25FLFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMsaURBQWlEO0FBQzFELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsK0NBQStDO0FBQ3hELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsbURBQW1EO0FBQzVELFNBQVMscURBQXFEO0FBQzlELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMscURBQXFEO0FBQzlELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMscURBQXFEO0FBQzlELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsOENBQThDO0FBQ3ZELFNBQVMsOENBQThDO0FBQ3ZELFNBQVMsK0NBQStDO0FBQ3hELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsK0NBQStDO0FBQ3hELFNBQVMsOENBQThDO0FBQ3ZELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsNkNBQTZDO0FBQ3RELFNBQVMsNkNBQTZDO0FBQ3RELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsbURBQW1EO0FBQzVELFNBQVMscURBQXFEO0FBQzlELFNBQVMsdURBQXVEO0FBQ2hFLFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsMERBQTBEO0FBQ25FLFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsK0NBQStDO0FBQ3hELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsOENBQThDO0FBQ3ZELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsK0NBQStDO0FBQ3hELFNBQVMsdURBQXVEO0FBQ2hFLFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsMkRBQTJEO0FBQ3BFLFNBQVMsbURBQW1EO0FBQzVELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMscURBQXFEO0FBQzlELFNBQVMscURBQXFEO0FBQzlELFNBQVMsb0RBQW9EO0FBQzdELFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVMseURBQXlEO0FBQ2xFLFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMsdURBQXVEO0FBQ2hFLFNBQVMsc0RBQXNEO0FBQy9ELFNBQVMseURBQXlEO0FBQ2xFLFNBQVMsbURBQW1EO0FBQzVELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsK0NBQStDO0FBQ3hELFNBQVMsOENBQThDO0FBQ3ZELFNBQVMsa0RBQWtEO0FBQzNELFNBQVMsbURBQW1EO0FBQzVELFNBQVMsaURBQWlEO0FBQzFELFNBQVMsZ0RBQWdEO0FBQ3pELFNBQVMsbURBQW1EO0FBQzVELFNBQVMscURBQXFEO0FBQzlELFNBQVMsdURBQXVEO0FBQ2hFLFNBQVMsb0RBQW9EO0FBQzdELFNBQVMseURBQXlEO0FBQ2xFLFNBQVMsdURBQXVEO0FBQ2hFLFNBQVMsMERBQTBEO0FBQ25FLFNBQVMsd0RBQXdEO0FBQ2pFLFNBQVM7QUFDVDtBQUNBOzs7QUFHQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUywwQ0FBMEM7QUFDbkQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUywwQ0FBMEM7QUFDbkQsU0FBUywwQ0FBMEM7QUFDbkQsU0FBUywwQ0FBMEM7QUFDbkQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFDakUsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx5Q0FBeUM7QUFDbEQsU0FBUyx3REFBd0Q7QUFD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RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFD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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRkFBbUY7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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QUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtFQUErRTtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFD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Q0E7QUFDQTs7O0FBR0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7O0FBR0EsT0FBTzs7QUFFUCxVQUFVO0FBQ1YsQ0FBQztBQUNELDJDQUEyQyxjQUFjLDJqMGUiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIHtcblx0XHR2YXIgYSA9IGZhY3RvcnkoKTtcblx0XHRmb3IodmFyIGkgaW4gYSkgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyA/IGV4cG9ydHMgOiByb290KVtpXSA9IGFbaV07XG5cdH1cbn0pKHdpbmRvdywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gIiwiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi9iZW5jaG1hcmtzL2luZGV4LmpzXCIpO1xuIiwiLyoqXG4gKiBAYXV0aG9yIEppYWNoZW5nIFBhbiA8cGFuamlhY2hlbmdAemp1LmVkdS5jbj5cbiAqIEBkZXNjcmlwdGlvblxuICovXG5cbmltcG9ydCBTdGF0cyBmcm9tICcuL2xpYi9zdGF0cy5tb2R1bGUnXG5pbXBvcnQgKiBhcyBkMyBmcm9tICcuL2xpYi9kMy52NS5taW4uanMnXG5pbXBvcnQgeyBnZXRGcmFtZVJhdGUsIGluaXRQYWdlLCByZWxvYWRQYWdlIH0gZnJvbSAnLi9saWIvdXRpbHMnXG5pbXBvcnQgeyBkcmF3TGluZUNoYXJ0IH0gZnJvbSAnLi9saWIvbGluZWNoYXJ0J1xuaW1wb3J0IHsgZ2VuZXJhdGVSYW5kb21HcmFwaCB9IGZyb20gJy4vbGliL2dyYXBoR2VuZXJhdG9yJ1xuXG5jb25zdCBTVEVQID0gJ3N0ZXAnXG5cbmZ1bmN0aW9uIHNsZWVwKHRpbWUpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dChyZXNvbHZlLCB0aW1lKVxuICAgIH0pXG59XG5cbmV4cG9ydCBjbGFzcyBUZXN0Q2FzZSB7XG4gICAgY29uc3RydWN0b3IoeyB3aWR0aCA9IDUwMCwgaGVpZ2h0ID0gNTAwLCBudW1iZXJzT2ZOb2RlcywgbnVtYmVyc09mTGlua3MsIG5hbWUgfSkge1xuICAgICAgICAvLyBkb2VzIGl0IG5lZWQgdG8gY2xlYXIgbG9jYWwgc3RvcmFnZT9cbiAgICAgICAgaW5pdFBhZ2UoKVxuXG4gICAgICAgIC8vIGZwcyBzdGF0cyBwYW5lbFxuICAgICAgICB0aGlzLnN0YXRzID0gU3RhdHMoKVxuICAgICAgICB0aGlzLnN0YXRzLnNob3dQYW5lbCgwKVxuICAgICAgICB0aGlzLnN0YXRzLmRvbS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3N0YXR1cycpXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5zdGF0cy5kb20pXG5cbiAgICAgICAgLy8gc3RlcCBtZWFucyB0aGUgaW5kZXggb2YgbnVtYmVyc09mTm9kZXNcbiAgICAgICAgdGhpcy5zdGVwID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oU1RFUClcbiAgICAgICAgaWYgKHRoaXMuc3RlcCA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuc3RlcCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5zdGVwID0gMFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zdGVwID0gTnVtYmVyKHRoaXMuc3RlcClcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMud2lkdGggPSB3aWR0aFxuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodFxuXG4gICAgICAgIHRoaXMuTnNvTm9kZXMgPSBudW1iZXJzT2ZOb2Rlc1xuICAgICAgICB0aGlzLk5zb0xpbmtzID0gbnVtYmVyc09mTGlua3NcbiAgICAgICAgdGhpcy5Ob05vZGVzID0gdGhpcy5Oc29Ob2Rlc1t0aGlzLnN0ZXBdXG4gICAgICAgIHRoaXMuTm9MaW5rcyA9IHRoaXMuTnNvTGlua3NbdGhpcy5zdGVwXVxuXG4gICAgICAgIHRoaXMuZGF0YSA9IGdlbmVyYXRlUmFuZG9tR3JhcGgoe1xuICAgICAgICAgICAgbm9kZU51bTogdGhpcy5Ob05vZGVzLFxuICAgICAgICAgICAgbGlua051bTogdGhpcy5Ob0xpbmtzLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHRcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lXG5cbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICB0aGlzLmNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgYGRpc3BsYXk6IGlubGluZS1ibG9jaztgKVxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuY29udGFpbmVyKVxuXG4gICAgICAgIHRoaXMucmVwb3J0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgdGhpcy5yZXBvcnREaXYuc2V0QXR0cmlidXRlKCdzdHlsZScsIGBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHZlcnRpY2FsLWFsaWduOiB0b3A7YClcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLnJlcG9ydERpdilcblxuICAgICAgICB0aGlzLnRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKVxuICAgICAgICB0aGlzLnRpdGxlLnRleHRDb250ZW50ID0gYCR7bmFtZX0sICNub2RlczogJHt0aGlzLk5vTm9kZXN9LCAjZWRnZTogJHt0aGlzLk5vTGlua3N9YFxuICAgICAgICB0aGlzLnJlcG9ydERpdi5hcHBlbmRDaGlsZCh0aGlzLnRpdGxlKVxuXG4gICAgICAgIHRoaXMubG9jYWxTdG9yYWdlTmFtZSA9IHRoaXMubmFtZSArICdfYmVuY2htYXJrX3Jlc3VsdCdcbiAgICAgICAgdGhpcy50ZXN0UmVzdWx0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5sb2NhbFN0b3JhZ2VOYW1lKVxuICAgIH1cblxuICAgIGFzeW5jIHJ1bih1cGRhdGUsIGR1cmF0aW9uKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGdldEZyYW1lUmF0ZSgpKVxuICAgICAgICBjb25zdCByZWZyZXNoID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zdGF0cy5iZWdpbigpXG4gICAgICAgICAgICB1cGRhdGUoKVxuICAgICAgICAgICAgdGhpcy5zdGF0cy5lbmQoKVxuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlZnJlc2gpXG4gICAgICAgIH1cbiAgICAgICAgcmVmcmVzaCh1cGRhdGUpXG4gICAgICAgIGF3YWl0IHNsZWVwKGR1cmF0aW9uKVxuICAgICAgICBjb25zdCBGUFNIaXN0b3J5ID0gdGhpcy5zdGF0cy5nZXRGUFNIaXN0b3J5KClcbiAgICAgICAgdGhpcy5GUFMgPSBkMy5tZWFuKEZQU0hpc3RvcnkpXG4gICAgICAgIHRoaXMuc3RvcmVGUFNSZXN1bHQoKVxuICAgICAgICByZXR1cm4gdGhpcy5GUFNcbiAgICB9XG5cbiAgICBzdG9yZUZQU1Jlc3VsdCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnRlc3RSZXN1bHQpIHtcbiAgICAgICAgICAgIHRoaXMudGVzdFJlc3VsdCA9IFtdXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnRlc3RSZXN1bHQgPSBKU09OLnBhcnNlKHRoaXMudGVzdFJlc3VsdClcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRlc3RSZXN1bHQucHVzaCh7XG4gICAgICAgICAgICBzaXplOiB0aGlzLk5vTm9kZXMsIC8vICsgdGhpcy5Ob0xpbmtzLFxuICAgICAgICAgICAgdmFsdWU6IHRoaXMuRlBTXG4gICAgICAgIH0pXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMubG9jYWxTdG9yYWdlTmFtZSwgSlNPTi5zdHJpbmdpZnkodGhpcy50ZXN0UmVzdWx0KSlcbiAgICAgICAgY29uc29sZS5sb2codGhpcy50ZXN0UmVzdWx0KVxuICAgIH1cblxuICAgIGZpbmlzaCgpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oU1RFUCwgKHRoaXMuc3RlcCArIDEpLnRvU3RyaW5nKCkpXG5cbiAgICAgICAgY29uc3QgY2FudmFzID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcignY2FudmFzJylcbiAgICAgICAgaWYgKGNhbnZhcylcbiAgICAgICAgICAgIGNhbnZhc1xuICAgICAgICAgICAgICAgIC5nZXRDb250ZXh0KCd3ZWJnbDInKVxuICAgICAgICAgICAgICAgIC5nZXRFeHRlbnNpb24oJ1dFQkdMX2xvc2VfY29udGV4dCcpXG4gICAgICAgICAgICAgICAgLmxvc2VDb250ZXh0KClcbiAgICAgICAgQXJyYXkuZnJvbSh0aGlzLmNvbnRhaW5lci5jaGlsZHJlbikuZm9yRWFjaCgoY2hpbGQpID0+XG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5yZW1vdmVDaGlsZC5iaW5kKHRoaXMuY29udGFpbmVyKShjaGlsZClcbiAgICAgICAgKVxuXG4gICAgICAgIGlmICh0aGlzLnN0ZXAgKyAxIDwgdGhpcy5Oc29Ob2Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJlbG9hZFBhZ2UoKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZHJhd0xpbmVDaGFydCh0aGlzLnJlcG9ydERpdiwgdGhpcy50ZXN0UmVzdWx0KVxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmNsZWFyKClcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi8qKlxuICogQGF1dGhvciBYaWFvZG9uZyBaaGFvPHpoYW94aWFvZG9uZ0B6anUuZWR1LmNuPiBhbmQgSmlhY2hlbmcgUGFuIDxwYW5qaWFjaGVuZ0B6anUuZWR1LmNuPlxuICogQGRlc2NyaXB0aW9uIGJlbmNobWFyaywgRlBTIG9mIE5ldFYuanNcbiAqL1xuaW1wb3J0IHsgTmV0ViB9IGZyb20gJy4uL2J1aWxkL05ldFYnXG5pbXBvcnQgeyBpbml0UGFnZSwgaXNGaXJzdFRpbWUgfSBmcm9tICcuL2xpYi91dGlscydcbmltcG9ydCB7IFRlc3RDYXNlIH0gZnJvbSAnLi9UZXN0Q2FzZSdcblxuY29uc3QgbnVtYmVyc09mTm9kZXMgPSBbMWUyLCA1ZTIsIDFlM10ucmV2ZXJzZSgpIC8vICwgMmUzLCA0ZTMsIDhlM1xuY29uc3QgZGVuc2l0eSA9IDIwXG5cbmlmIChpc0ZpcnN0VGltZSgpKSB7XG4gICAgaW5pdFBhZ2UoKSAvLyB0byBnZXQgdGhlIGZyYW1lIHJhdGUgKGZwcylcbn0gZWxzZSB7XG4gICAgY29uc3QgdGVzdENhc2UgPSBuZXcgVGVzdENhc2Uoe1xuICAgICAgICBudW1iZXJzT2ZOb2RlcyxcbiAgICAgICAgbnVtYmVyc09mTGlua3M6IG51bWJlcnNPZk5vZGVzLm1hcCgobikgPT4gbiAqIGRlbnNpdHkpLFxuICAgICAgICBuYW1lOiAnTmV0VidcbiAgICB9KVxuICAgIHRlc3QodGVzdENhc2UpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHRlc3QodGVzdENhc2UpIHtcbiAgICBjb25zdCBuZXR2ID0gbmV3IE5ldFYoe1xuICAgICAgICBjb250YWluZXI6IHRlc3RDYXNlLmNvbnRhaW5lcixcbiAgICAgICAgd2lkdGg6IHRlc3RDYXNlLndpZHRoLFxuICAgICAgICBoZWlnaHQ6IHRlc3RDYXNlLmhlaWdodCxcbiAgICAgICAgbm9kZUxpbWl0OiB0ZXN0Q2FzZS5kYXRhLm5vZGVzLmxlbmd0aCxcbiAgICAgICAgbGlua0xpbWl0OiB0ZXN0Q2FzZS5kYXRhLmxpbmtzLmxlbmd0aFxuICAgIH0pXG5cbiAgICBuZXR2LmRhdGEodGVzdENhc2UuZGF0YSlcblxuICAgIGF3YWl0IHRlc3RDYXNlLnJ1bigoKSA9PiB7XG4gICAgICAgIG5ldHYubm9kZXMoKS5mb3JFYWNoKChuKSA9PiB7XG4gICAgICAgICAgICBuLnBvc2l0aW9uKHtcbiAgICAgICAgICAgICAgICB4OiBNYXRoLnJhbmRvbSgpICogdGVzdENhc2Uud2lkdGgsXG4gICAgICAgICAgICAgICAgeTogTWF0aC5yYW5kb20oKSAqIHRlc3RDYXNlLmhlaWdodFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgICAgbmV0di5kcmF3KClcbiAgICB9LCAxMDAwMClcblxuICAgIHRlc3RDYXNlLmZpbmlzaCgpXG59XG4iLCIvLyBodHRwczovL2QzanMub3JnIHY1LjE2LjAgQ29weXJpZ2h0IDIwMjAgTWlrZSBCb3N0b2NrXG4hZnVuY3Rpb24odCxuKXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9uKGV4cG9ydHMpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW1wiZXhwb3J0c1wiXSxuKTpuKCh0PXR8fHNlbGYpLmQzPXQuZDN8fHt9KX0odGhpcyxmdW5jdGlvbih0KXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKHQsbil7cmV0dXJuIHQ8bj8tMTp0Pm4/MTp0Pj1uPzA6TmFOfWZ1bmN0aW9uIGUodCl7dmFyIGU7cmV0dXJuIDE9PT10Lmxlbmd0aCYmKGU9dCx0PWZ1bmN0aW9uKHQscil7cmV0dXJuIG4oZSh0KSxyKX0pLHtsZWZ0OmZ1bmN0aW9uKG4sZSxyLGkpe2ZvcihudWxsPT1yJiYocj0wKSxudWxsPT1pJiYoaT1uLmxlbmd0aCk7cjxpOyl7dmFyIG89citpPj4+MTt0KG5bb10sZSk8MD9yPW8rMTppPW99cmV0dXJuIHJ9LHJpZ2h0OmZ1bmN0aW9uKG4sZSxyLGkpe2ZvcihudWxsPT1yJiYocj0wKSxudWxsPT1pJiYoaT1uLmxlbmd0aCk7cjxpOyl7dmFyIG89citpPj4+MTt0KG5bb10sZSk+MD9pPW86cj1vKzF9cmV0dXJuIHJ9fX12YXIgcj1lKG4pLGk9ci5yaWdodCxvPXIubGVmdDtmdW5jdGlvbiBhKHQsbil7cmV0dXJuW3Qsbl19ZnVuY3Rpb24gdSh0KXtyZXR1cm4gbnVsbD09PXQ/TmFOOit0fWZ1bmN0aW9uIGModCxuKXt2YXIgZSxyLGk9dC5sZW5ndGgsbz0wLGE9LTEsYz0wLGY9MDtpZihudWxsPT1uKWZvcig7KythPGk7KWlzTmFOKGU9dSh0W2FdKSl8fChmKz0ocj1lLWMpKihlLShjKz1yLysrbykpKTtlbHNlIGZvcig7KythPGk7KWlzTmFOKGU9dShuKHRbYV0sYSx0KSkpfHwoZis9KHI9ZS1jKSooZS0oYys9ci8rK28pKSk7aWYobz4xKXJldHVybiBmLyhvLTEpfWZ1bmN0aW9uIGYodCxuKXt2YXIgZT1jKHQsbik7cmV0dXJuIGU/TWF0aC5zcXJ0KGUpOmV9ZnVuY3Rpb24gcyh0LG4pe3ZhciBlLHIsaSxvPXQubGVuZ3RoLGE9LTE7aWYobnVsbD09bil7Zm9yKDsrK2E8bzspaWYobnVsbCE9KGU9dFthXSkmJmU+PWUpZm9yKHI9aT1lOysrYTxvOyludWxsIT0oZT10W2FdKSYmKHI+ZSYmKHI9ZSksaTxlJiYoaT1lKSl9ZWxzZSBmb3IoOysrYTxvOylpZihudWxsIT0oZT1uKHRbYV0sYSx0KSkmJmU+PWUpZm9yKHI9aT1lOysrYTxvOyludWxsIT0oZT1uKHRbYV0sYSx0KSkmJihyPmUmJihyPWUpLGk8ZSYmKGk9ZSkpO3JldHVybltyLGldfXZhciBsPUFycmF5LnByb3RvdHlwZSxoPWwuc2xpY2UsZD1sLm1hcDtmdW5jdGlvbiBwKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiB2KHQpe3JldHVybiB0fWZ1bmN0aW9uIGcodCxuLGUpe3Q9K3Qsbj0rbixlPShpPWFyZ3VtZW50cy5sZW5ndGgpPDI/KG49dCx0PTAsMSk6aTwzPzE6K2U7Zm9yKHZhciByPS0xLGk9MHxNYXRoLm1heCgwLE1hdGguY2VpbCgobi10KS9lKSksbz1uZXcgQXJyYXkoaSk7KytyPGk7KW9bcl09dCtyKmU7cmV0dXJuIG99dmFyIHk9TWF0aC5zcXJ0KDUwKSxfPU1hdGguc3FydCgxMCksYj1NYXRoLnNxcnQoMik7ZnVuY3Rpb24gbSh0LG4sZSl7dmFyIHIsaSxvLGEsdT0tMTtpZihlPStlLCh0PSt0KT09PShuPStuKSYmZT4wKXJldHVyblt0XTtpZigocj1uPHQpJiYoaT10LHQ9bixuPWkpLDA9PT0oYT14KHQsbixlKSl8fCFpc0Zpbml0ZShhKSlyZXR1cm5bXTtpZihhPjApZm9yKHQ9TWF0aC5jZWlsKHQvYSksbj1NYXRoLmZsb29yKG4vYSksbz1uZXcgQXJyYXkoaT1NYXRoLmNlaWwobi10KzEpKTsrK3U8aTspb1t1XT0odCt1KSphO2Vsc2UgZm9yKHQ9TWF0aC5mbG9vcih0KmEpLG49TWF0aC5jZWlsKG4qYSksbz1uZXcgQXJyYXkoaT1NYXRoLmNlaWwodC1uKzEpKTsrK3U8aTspb1t1XT0odC11KS9hO3JldHVybiByJiZvLnJldmVyc2UoKSxvfWZ1bmN0aW9uIHgodCxuLGUpe3ZhciByPShuLXQpL01hdGgubWF4KDAsZSksaT1NYXRoLmZsb29yKE1hdGgubG9nKHIpL01hdGguTE4xMCksbz1yL01hdGgucG93KDEwLGkpO3JldHVybiBpPj0wPyhvPj15PzEwOm8+PV8/NTpvPj1iPzI6MSkqTWF0aC5wb3coMTAsaSk6LU1hdGgucG93KDEwLC1pKS8obz49eT8xMDpvPj1fPzU6bz49Yj8yOjEpfWZ1bmN0aW9uIHcodCxuLGUpe3ZhciByPU1hdGguYWJzKG4tdCkvTWF0aC5tYXgoMCxlKSxpPU1hdGgucG93KDEwLE1hdGguZmxvb3IoTWF0aC5sb2cocikvTWF0aC5MTjEwKSksbz1yL2k7cmV0dXJuIG8+PXk/aSo9MTA6bz49Xz9pKj01Om8+PWImJihpKj0yKSxuPHQ/LWk6aX1mdW5jdGlvbiBNKHQpe3JldHVybiBNYXRoLmNlaWwoTWF0aC5sb2codC5sZW5ndGgpL01hdGguTE4yKSsxfWZ1bmN0aW9uIE4odCxuLGUpe2lmKG51bGw9PWUmJihlPXUpLHI9dC5sZW5ndGgpe2lmKChuPStuKTw9MHx8cjwyKXJldHVybitlKHRbMF0sMCx0KTtpZihuPj0xKXJldHVybitlKHRbci0xXSxyLTEsdCk7dmFyIHIsaT0oci0xKSpuLG89TWF0aC5mbG9vcihpKSxhPStlKHRbb10sbyx0KTtyZXR1cm4gYSsoK2UodFtvKzFdLG8rMSx0KS1hKSooaS1vKX19ZnVuY3Rpb24gVCh0LG4pe3ZhciBlLHIsaT10Lmxlbmd0aCxvPS0xO2lmKG51bGw9PW4pe2Zvcig7KytvPGk7KWlmKG51bGwhPShlPXRbb10pJiZlPj1lKWZvcihyPWU7KytvPGk7KW51bGwhPShlPXRbb10pJiZlPnImJihyPWUpfWVsc2UgZm9yKDsrK288aTspaWYobnVsbCE9KGU9bih0W29dLG8sdCkpJiZlPj1lKWZvcihyPWU7KytvPGk7KW51bGwhPShlPW4odFtvXSxvLHQpKSYmZT5yJiYocj1lKTtyZXR1cm4gcn1mdW5jdGlvbiBBKHQpe2Zvcih2YXIgbixlLHIsaT10Lmxlbmd0aCxvPS0xLGE9MDsrK288aTspYSs9dFtvXS5sZW5ndGg7Zm9yKGU9bmV3IEFycmF5KGEpOy0taT49MDspZm9yKG49KHI9dFtpXSkubGVuZ3RoOy0tbj49MDspZVstLWFdPXJbbl07cmV0dXJuIGV9ZnVuY3Rpb24gUyh0LG4pe3ZhciBlLHIsaT10Lmxlbmd0aCxvPS0xO2lmKG51bGw9PW4pe2Zvcig7KytvPGk7KWlmKG51bGwhPShlPXRbb10pJiZlPj1lKWZvcihyPWU7KytvPGk7KW51bGwhPShlPXRbb10pJiZyPmUmJihyPWUpfWVsc2UgZm9yKDsrK288aTspaWYobnVsbCE9KGU9bih0W29dLG8sdCkpJiZlPj1lKWZvcihyPWU7KytvPGk7KW51bGwhPShlPW4odFtvXSxvLHQpKSYmcj5lJiYocj1lKTtyZXR1cm4gcn1mdW5jdGlvbiBrKHQpe2lmKCEoaT10Lmxlbmd0aCkpcmV0dXJuW107Zm9yKHZhciBuPS0xLGU9Uyh0LEUpLHI9bmV3IEFycmF5KGUpOysrbjxlOylmb3IodmFyIGksbz0tMSxhPXJbbl09bmV3IEFycmF5KGkpOysrbzxpOylhW29dPXRbb11bbl07cmV0dXJuIHJ9ZnVuY3Rpb24gRSh0KXtyZXR1cm4gdC5sZW5ndGh9dmFyIEM9QXJyYXkucHJvdG90eXBlLnNsaWNlO2Z1bmN0aW9uIFAodCl7cmV0dXJuIHR9dmFyIHo9MSxSPTIsRD0zLHE9NCxMPTFlLTY7ZnVuY3Rpb24gVSh0KXtyZXR1cm5cInRyYW5zbGF0ZShcIisodCsuNSkrXCIsMClcIn1mdW5jdGlvbiBPKHQpe3JldHVyblwidHJhbnNsYXRlKDAsXCIrKHQrLjUpK1wiKVwifWZ1bmN0aW9uIEIoKXtyZXR1cm4hdGhpcy5fX2F4aXN9ZnVuY3Rpb24gRih0LG4pe3ZhciBlPVtdLHI9bnVsbCxpPW51bGwsbz02LGE9Nix1PTMsYz10PT09enx8dD09PXE/LTE6MSxmPXQ9PT1xfHx0PT09Uj9cInhcIjpcInlcIixzPXQ9PT16fHx0PT09RD9VOk87ZnVuY3Rpb24gbChsKXt2YXIgaD1udWxsPT1yP24udGlja3M/bi50aWNrcy5hcHBseShuLGUpOm4uZG9tYWluKCk6cixkPW51bGw9PWk/bi50aWNrRm9ybWF0P24udGlja0Zvcm1hdC5hcHBseShuLGUpOlA6aSxwPU1hdGgubWF4KG8sMCkrdSx2PW4ucmFuZ2UoKSxnPSt2WzBdKy41LHk9K3Zbdi5sZW5ndGgtMV0rLjUsXz0obi5iYW5kd2lkdGg/ZnVuY3Rpb24odCl7dmFyIG49TWF0aC5tYXgoMCx0LmJhbmR3aWR0aCgpLTEpLzI7cmV0dXJuIHQucm91bmQoKSYmKG49TWF0aC5yb3VuZChuKSksZnVuY3Rpb24oZSl7cmV0dXJuK3QoZSkrbn19OmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4rdChuKX19KShuLmNvcHkoKSksYj1sLnNlbGVjdGlvbj9sLnNlbGVjdGlvbigpOmwsbT1iLnNlbGVjdEFsbChcIi5kb21haW5cIikuZGF0YShbbnVsbF0pLHg9Yi5zZWxlY3RBbGwoXCIudGlja1wiKS5kYXRhKGgsbikub3JkZXIoKSx3PXguZXhpdCgpLE09eC5lbnRlcigpLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsXCJ0aWNrXCIpLE49eC5zZWxlY3QoXCJsaW5lXCIpLFQ9eC5zZWxlY3QoXCJ0ZXh0XCIpO209bS5tZXJnZShtLmVudGVyKCkuaW5zZXJ0KFwicGF0aFwiLFwiLnRpY2tcIikuYXR0cihcImNsYXNzXCIsXCJkb21haW5cIikuYXR0cihcInN0cm9rZVwiLFwiY3VycmVudENvbG9yXCIpKSx4PXgubWVyZ2UoTSksTj1OLm1lcmdlKE0uYXBwZW5kKFwibGluZVwiKS5hdHRyKFwic3Ryb2tlXCIsXCJjdXJyZW50Q29sb3JcIikuYXR0cihmK1wiMlwiLGMqbykpLFQ9VC5tZXJnZShNLmFwcGVuZChcInRleHRcIikuYXR0cihcImZpbGxcIixcImN1cnJlbnRDb2xvclwiKS5hdHRyKGYsYypwKS5hdHRyKFwiZHlcIix0PT09ej9cIjBlbVwiOnQ9PT1EP1wiMC43MWVtXCI6XCIwLjMyZW1cIikpLGwhPT1iJiYobT1tLnRyYW5zaXRpb24obCkseD14LnRyYW5zaXRpb24obCksTj1OLnRyYW5zaXRpb24obCksVD1ULnRyYW5zaXRpb24obCksdz13LnRyYW5zaXRpb24obCkuYXR0cihcIm9wYWNpdHlcIixMKS5hdHRyKFwidHJhbnNmb3JtXCIsZnVuY3Rpb24odCl7cmV0dXJuIGlzRmluaXRlKHQ9Xyh0KSk/cyh0KTp0aGlzLmdldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiKX0pLE0uYXR0cihcIm9wYWNpdHlcIixMKS5hdHRyKFwidHJhbnNmb3JtXCIsZnVuY3Rpb24odCl7dmFyIG49dGhpcy5wYXJlbnROb2RlLl9fYXhpcztyZXR1cm4gcyhuJiZpc0Zpbml0ZShuPW4odCkpP246Xyh0KSl9KSksdy5yZW1vdmUoKSxtLmF0dHIoXCJkXCIsdD09PXF8fHQ9PVI/YT9cIk1cIitjKmErXCIsXCIrZytcIkgwLjVWXCIreStcIkhcIitjKmE6XCJNMC41LFwiK2crXCJWXCIreTphP1wiTVwiK2crXCIsXCIrYyphK1wiVjAuNUhcIit5K1wiVlwiK2MqYTpcIk1cIitnK1wiLDAuNUhcIit5KSx4LmF0dHIoXCJvcGFjaXR5XCIsMSkuYXR0cihcInRyYW5zZm9ybVwiLGZ1bmN0aW9uKHQpe3JldHVybiBzKF8odCkpfSksTi5hdHRyKGYrXCIyXCIsYypvKSxULmF0dHIoZixjKnApLnRleHQoZCksYi5maWx0ZXIoQikuYXR0cihcImZpbGxcIixcIm5vbmVcIikuYXR0cihcImZvbnQtc2l6ZVwiLDEwKS5hdHRyKFwiZm9udC1mYW1pbHlcIixcInNhbnMtc2VyaWZcIikuYXR0cihcInRleHQtYW5jaG9yXCIsdD09PVI/XCJzdGFydFwiOnQ9PT1xP1wiZW5kXCI6XCJtaWRkbGVcIiksYi5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5fX2F4aXM9X30pfXJldHVybiBsLnNjYWxlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPXQsbCk6bn0sbC50aWNrcz1mdW5jdGlvbigpe3JldHVybiBlPUMuY2FsbChhcmd1bWVudHMpLGx9LGwudGlja0FyZ3VtZW50cz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1udWxsPT10P1tdOkMuY2FsbCh0KSxsKTplLnNsaWNlKCl9LGwudGlja1ZhbHVlcz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj1udWxsPT10P251bGw6Qy5jYWxsKHQpLGwpOnImJnIuc2xpY2UoKX0sbC50aWNrRm9ybWF0PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPXQsbCk6aX0sbC50aWNrU2l6ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz1hPSt0LGwpOm99LGwudGlja1NpemVJbm5lcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz0rdCxsKTpvfSxsLnRpY2tTaXplT3V0ZXI9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9K3QsbCk6YX0sbC50aWNrUGFkZGluZz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT0rdCxsKTp1fSxsfXZhciBZPXt2YWx1ZTpmdW5jdGlvbigpe319O2Z1bmN0aW9uIEkoKXtmb3IodmFyIHQsbj0wLGU9YXJndW1lbnRzLmxlbmd0aCxyPXt9O248ZTsrK24pe2lmKCEodD1hcmd1bWVudHNbbl0rXCJcIil8fHQgaW4gcnx8L1tcXHMuXS8udGVzdCh0KSl0aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIHR5cGU6IFwiK3QpO3JbdF09W119cmV0dXJuIG5ldyBIKHIpfWZ1bmN0aW9uIEgodCl7dGhpcy5fPXR9ZnVuY3Rpb24gaih0LG4pe3JldHVybiB0LnRyaW0oKS5zcGxpdCgvXnxcXHMrLykubWFwKGZ1bmN0aW9uKHQpe3ZhciBlPVwiXCIscj10LmluZGV4T2YoXCIuXCIpO2lmKHI+PTAmJihlPXQuc2xpY2UocisxKSx0PXQuc2xpY2UoMCxyKSksdCYmIW4uaGFzT3duUHJvcGVydHkodCkpdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIit0KTtyZXR1cm57dHlwZTp0LG5hbWU6ZX19KX1mdW5jdGlvbiBYKHQsbil7Zm9yKHZhciBlLHI9MCxpPXQubGVuZ3RoO3I8aTsrK3IpaWYoKGU9dFtyXSkubmFtZT09PW4pcmV0dXJuIGUudmFsdWV9ZnVuY3Rpb24gVih0LG4sZSl7Zm9yKHZhciByPTAsaT10Lmxlbmd0aDtyPGk7KytyKWlmKHRbcl0ubmFtZT09PW4pe3Rbcl09WSx0PXQuc2xpY2UoMCxyKS5jb25jYXQodC5zbGljZShyKzEpKTticmVha31yZXR1cm4gbnVsbCE9ZSYmdC5wdXNoKHtuYW1lOm4sdmFsdWU6ZX0pLHR9SC5wcm90b3R5cGU9SS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkgsb246ZnVuY3Rpb24odCxuKXt2YXIgZSxyPXRoaXMuXyxpPWoodCtcIlwiLHIpLG89LTEsYT1pLmxlbmd0aDtpZighKGFyZ3VtZW50cy5sZW5ndGg8Mikpe2lmKG51bGwhPW4mJlwiZnVuY3Rpb25cIiE9dHlwZW9mIG4pdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBjYWxsYmFjazogXCIrbik7Zm9yKDsrK288YTspaWYoZT0odD1pW29dKS50eXBlKXJbZV09VihyW2VdLHQubmFtZSxuKTtlbHNlIGlmKG51bGw9PW4pZm9yKGUgaW4gcilyW2VdPVYocltlXSx0Lm5hbWUsbnVsbCk7cmV0dXJuIHRoaXN9Zm9yKDsrK288YTspaWYoKGU9KHQ9aVtvXSkudHlwZSkmJihlPVgocltlXSx0Lm5hbWUpKSlyZXR1cm4gZX0sY29weTpmdW5jdGlvbigpe3ZhciB0PXt9LG49dGhpcy5fO2Zvcih2YXIgZSBpbiBuKXRbZV09bltlXS5zbGljZSgpO3JldHVybiBuZXcgSCh0KX0sY2FsbDpmdW5jdGlvbih0LG4pe2lmKChlPWFyZ3VtZW50cy5sZW5ndGgtMik+MClmb3IodmFyIGUscixpPW5ldyBBcnJheShlKSxvPTA7bzxlOysrbylpW29dPWFyZ3VtZW50c1tvKzJdO2lmKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodCkpdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIit0KTtmb3Iobz0wLGU9KHI9dGhpcy5fW3RdKS5sZW5ndGg7bzxlOysrbylyW29dLnZhbHVlLmFwcGx5KG4saSl9LGFwcGx5OmZ1bmN0aW9uKHQsbixlKXtpZighdGhpcy5fLmhhc093blByb3BlcnR5KHQpKXRocm93IG5ldyBFcnJvcihcInVua25vd24gdHlwZTogXCIrdCk7Zm9yKHZhciByPXRoaXMuX1t0XSxpPTAsbz1yLmxlbmd0aDtpPG87KytpKXJbaV0udmFsdWUuYXBwbHkobixlKX19O3ZhciBHPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLCQ9e3N2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIseGh0bWw6Ryx4bGluazpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIix4bWw6XCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIix4bWxuczpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAveG1sbnMvXCJ9O2Z1bmN0aW9uIFcodCl7dmFyIG49dCs9XCJcIixlPW4uaW5kZXhPZihcIjpcIik7cmV0dXJuIGU+PTAmJlwieG1sbnNcIiE9PShuPXQuc2xpY2UoMCxlKSkmJih0PXQuc2xpY2UoZSsxKSksJC5oYXNPd25Qcm9wZXJ0eShuKT97c3BhY2U6JFtuXSxsb2NhbDp0fTp0fWZ1bmN0aW9uIFoodCl7dmFyIG49Vyh0KTtyZXR1cm4obi5sb2NhbD9mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh0LnNwYWNlLHQubG9jYWwpfX06ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dGhpcy5vd25lckRvY3VtZW50LGU9dGhpcy5uYW1lc3BhY2VVUkk7cmV0dXJuIGU9PT1HJiZuLmRvY3VtZW50RWxlbWVudC5uYW1lc3BhY2VVUkk9PT1HP24uY3JlYXRlRWxlbWVudCh0KTpuLmNyZWF0ZUVsZW1lbnROUyhlLHQpfX0pKG4pfWZ1bmN0aW9uIFEoKXt9ZnVuY3Rpb24gSyh0KXtyZXR1cm4gbnVsbD09dD9ROmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucXVlcnlTZWxlY3Rvcih0KX19ZnVuY3Rpb24gSigpe3JldHVybltdfWZ1bmN0aW9uIHR0KHQpe3JldHVybiBudWxsPT10P0o6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKHQpfX1mdW5jdGlvbiBudCh0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXRjaGVzKHQpfX1mdW5jdGlvbiBldCh0KXtyZXR1cm4gbmV3IEFycmF5KHQubGVuZ3RoKX1mdW5jdGlvbiBydCh0LG4pe3RoaXMub3duZXJEb2N1bWVudD10Lm93bmVyRG9jdW1lbnQsdGhpcy5uYW1lc3BhY2VVUkk9dC5uYW1lc3BhY2VVUkksdGhpcy5fbmV4dD1udWxsLHRoaXMuX3BhcmVudD10LHRoaXMuX19kYXRhX189bn1ydC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOnJ0LGFwcGVuZENoaWxkOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9wYXJlbnQuaW5zZXJ0QmVmb3JlKHQsdGhpcy5fbmV4dCl9LGluc2VydEJlZm9yZTpmdW5jdGlvbih0LG4pe3JldHVybiB0aGlzLl9wYXJlbnQuaW5zZXJ0QmVmb3JlKHQsbil9LHF1ZXJ5U2VsZWN0b3I6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yKHQpfSxxdWVyeVNlbGVjdG9yQWxsOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9wYXJlbnQucXVlcnlTZWxlY3RvckFsbCh0KX19O3ZhciBpdD1cIiRcIjtmdW5jdGlvbiBvdCh0LG4sZSxyLGksbyl7Zm9yKHZhciBhLHU9MCxjPW4ubGVuZ3RoLGY9by5sZW5ndGg7dTxmOysrdSkoYT1uW3VdKT8oYS5fX2RhdGFfXz1vW3VdLHJbdV09YSk6ZVt1XT1uZXcgcnQodCxvW3VdKTtmb3IoO3U8YzsrK3UpKGE9blt1XSkmJihpW3VdPWEpfWZ1bmN0aW9uIGF0KHQsbixlLHIsaSxvLGEpe3ZhciB1LGMsZixzPXt9LGw9bi5sZW5ndGgsaD1vLmxlbmd0aCxkPW5ldyBBcnJheShsKTtmb3IodT0wO3U8bDsrK3UpKGM9blt1XSkmJihkW3VdPWY9aXQrYS5jYWxsKGMsYy5fX2RhdGFfXyx1LG4pLGYgaW4gcz9pW3VdPWM6c1tmXT1jKTtmb3IodT0wO3U8aDsrK3UpKGM9c1tmPWl0K2EuY2FsbCh0LG9bdV0sdSxvKV0pPyhyW3VdPWMsYy5fX2RhdGFfXz1vW3VdLHNbZl09bnVsbCk6ZVt1XT1uZXcgcnQodCxvW3VdKTtmb3IodT0wO3U8bDsrK3UpKGM9blt1XSkmJnNbZFt1XV09PT1jJiYoaVt1XT1jKX1mdW5jdGlvbiB1dCh0LG4pe3JldHVybiB0PG4/LTE6dD5uPzE6dD49bj8wOk5hTn1mdW5jdGlvbiBjdCh0KXtyZXR1cm4gdC5vd25lckRvY3VtZW50JiZ0Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHQuZG9jdW1lbnQmJnR8fHQuZGVmYXVsdFZpZXd9ZnVuY3Rpb24gZnQodCxuKXtyZXR1cm4gdC5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKG4pfHxjdCh0KS5nZXRDb21wdXRlZFN0eWxlKHQsbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShuKX1mdW5jdGlvbiBzdCh0KXtyZXR1cm4gdC50cmltKCkuc3BsaXQoL158XFxzKy8pfWZ1bmN0aW9uIGx0KHQpe3JldHVybiB0LmNsYXNzTGlzdHx8bmV3IGh0KHQpfWZ1bmN0aW9uIGh0KHQpe3RoaXMuX25vZGU9dCx0aGlzLl9uYW1lcz1zdCh0LmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwiKX1mdW5jdGlvbiBkdCh0LG4pe2Zvcih2YXIgZT1sdCh0KSxyPS0xLGk9bi5sZW5ndGg7KytyPGk7KWUuYWRkKG5bcl0pfWZ1bmN0aW9uIHB0KHQsbil7Zm9yKHZhciBlPWx0KHQpLHI9LTEsaT1uLmxlbmd0aDsrK3I8aTspZS5yZW1vdmUobltyXSl9ZnVuY3Rpb24gdnQoKXt0aGlzLnRleHRDb250ZW50PVwiXCJ9ZnVuY3Rpb24gZ3QoKXt0aGlzLmlubmVySFRNTD1cIlwifWZ1bmN0aW9uIHl0KCl7dGhpcy5uZXh0U2libGluZyYmdGhpcy5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHRoaXMpfWZ1bmN0aW9uIF90KCl7dGhpcy5wcmV2aW91c1NpYmxpbmcmJnRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcyx0aGlzLnBhcmVudE5vZGUuZmlyc3RDaGlsZCl9ZnVuY3Rpb24gYnQoKXtyZXR1cm4gbnVsbH1mdW5jdGlvbiBtdCgpe3ZhciB0PXRoaXMucGFyZW50Tm9kZTt0JiZ0LnJlbW92ZUNoaWxkKHRoaXMpfWZ1bmN0aW9uIHh0KCl7dmFyIHQ9dGhpcy5jbG9uZU5vZGUoITEpLG49dGhpcy5wYXJlbnROb2RlO3JldHVybiBuP24uaW5zZXJ0QmVmb3JlKHQsdGhpcy5uZXh0U2libGluZyk6dH1mdW5jdGlvbiB3dCgpe3ZhciB0PXRoaXMuY2xvbmVOb2RlKCEwKSxuPXRoaXMucGFyZW50Tm9kZTtyZXR1cm4gbj9uLmluc2VydEJlZm9yZSh0LHRoaXMubmV4dFNpYmxpbmcpOnR9aHQucHJvdG90eXBlPXthZGQ6ZnVuY3Rpb24odCl7dGhpcy5fbmFtZXMuaW5kZXhPZih0KTwwJiYodGhpcy5fbmFtZXMucHVzaCh0KSx0aGlzLl9ub2RlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsdGhpcy5fbmFtZXMuam9pbihcIiBcIikpKX0scmVtb3ZlOmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMuX25hbWVzLmluZGV4T2YodCk7bj49MCYmKHRoaXMuX25hbWVzLnNwbGljZShuLDEpLHRoaXMuX25vZGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIix0aGlzLl9uYW1lcy5qb2luKFwiIFwiKSkpfSxjb250YWluczpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fbmFtZXMuaW5kZXhPZih0KT49MH19O3ZhciBNdD17fTsodC5ldmVudD1udWxsLFwidW5kZWZpbmVkXCIhPXR5cGVvZiBkb2N1bWVudCkmJihcIm9ubW91c2VlbnRlclwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50fHwoTXQ9e21vdXNlZW50ZXI6XCJtb3VzZW92ZXJcIixtb3VzZWxlYXZlOlwibW91c2VvdXRcIn0pKTtmdW5jdGlvbiBOdCh0LG4sZSl7cmV0dXJuIHQ9VHQodCxuLGUpLGZ1bmN0aW9uKG4pe3ZhciBlPW4ucmVsYXRlZFRhcmdldDtlJiYoZT09PXRoaXN8fDgmZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbih0aGlzKSl8fHQuY2FsbCh0aGlzLG4pfX1mdW5jdGlvbiBUdChuLGUscil7cmV0dXJuIGZ1bmN0aW9uKGkpe3ZhciBvPXQuZXZlbnQ7dC5ldmVudD1pO3RyeXtuLmNhbGwodGhpcyx0aGlzLl9fZGF0YV9fLGUscil9ZmluYWxseXt0LmV2ZW50PW99fX1mdW5jdGlvbiBBdCh0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj10aGlzLl9fb247aWYobil7Zm9yKHZhciBlLHI9MCxpPS0xLG89bi5sZW5ndGg7cjxvOysrcillPW5bcl0sdC50eXBlJiZlLnR5cGUhPT10LnR5cGV8fGUubmFtZSE9PXQubmFtZT9uWysraV09ZTp0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZS50eXBlLGUubGlzdGVuZXIsZS5jYXB0dXJlKTsrK2k/bi5sZW5ndGg9aTpkZWxldGUgdGhpcy5fX29ufX19ZnVuY3Rpb24gU3QodCxuLGUpe3ZhciByPU10Lmhhc093blByb3BlcnR5KHQudHlwZSk/TnQ6VHQ7cmV0dXJuIGZ1bmN0aW9uKGksbyxhKXt2YXIgdSxjPXRoaXMuX19vbixmPXIobixvLGEpO2lmKGMpZm9yKHZhciBzPTAsbD1jLmxlbmd0aDtzPGw7KytzKWlmKCh1PWNbc10pLnR5cGU9PT10LnR5cGUmJnUubmFtZT09PXQubmFtZSlyZXR1cm4gdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKHUudHlwZSx1Lmxpc3RlbmVyLHUuY2FwdHVyZSksdGhpcy5hZGRFdmVudExpc3RlbmVyKHUudHlwZSx1Lmxpc3RlbmVyPWYsdS5jYXB0dXJlPWUpLHZvaWQodS52YWx1ZT1uKTt0aGlzLmFkZEV2ZW50TGlzdGVuZXIodC50eXBlLGYsZSksdT17dHlwZTp0LnR5cGUsbmFtZTp0Lm5hbWUsdmFsdWU6bixsaXN0ZW5lcjpmLGNhcHR1cmU6ZX0sYz9jLnB1c2godSk6dGhpcy5fX29uPVt1XX19ZnVuY3Rpb24ga3QobixlLHIsaSl7dmFyIG89dC5ldmVudDtuLnNvdXJjZUV2ZW50PXQuZXZlbnQsdC5ldmVudD1uO3RyeXtyZXR1cm4gZS5hcHBseShyLGkpfWZpbmFsbHl7dC5ldmVudD1vfX1mdW5jdGlvbiBFdCh0LG4sZSl7dmFyIHI9Y3QodCksaT1yLkN1c3RvbUV2ZW50O1wiZnVuY3Rpb25cIj09dHlwZW9mIGk/aT1uZXcgaShuLGUpOihpPXIuZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJFdmVudFwiKSxlPyhpLmluaXRFdmVudChuLGUuYnViYmxlcyxlLmNhbmNlbGFibGUpLGkuZGV0YWlsPWUuZGV0YWlsKTppLmluaXRFdmVudChuLCExLCExKSksdC5kaXNwYXRjaEV2ZW50KGkpfXZhciBDdD1bbnVsbF07ZnVuY3Rpb24gUHQodCxuKXt0aGlzLl9ncm91cHM9dCx0aGlzLl9wYXJlbnRzPW59ZnVuY3Rpb24genQoKXtyZXR1cm4gbmV3IFB0KFtbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XV0sQ3QpfWZ1bmN0aW9uIFJ0KHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0P25ldyBQdChbW2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCldXSxbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XSk6bmV3IFB0KFtbdF1dLEN0KX1QdC5wcm90b3R5cGU9enQucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpQdCxzZWxlY3Q6ZnVuY3Rpb24odCl7XCJmdW5jdGlvblwiIT10eXBlb2YgdCYmKHQ9Syh0KSk7Zm9yKHZhciBuPXRoaXMuX2dyb3VwcyxlPW4ubGVuZ3RoLHI9bmV3IEFycmF5KGUpLGk9MDtpPGU7KytpKWZvcih2YXIgbyxhLHU9bltpXSxjPXUubGVuZ3RoLGY9cltpXT1uZXcgQXJyYXkoYykscz0wO3M8YzsrK3MpKG89dVtzXSkmJihhPXQuY2FsbChvLG8uX19kYXRhX18scyx1KSkmJihcIl9fZGF0YV9fXCJpbiBvJiYoYS5fX2RhdGFfXz1vLl9fZGF0YV9fKSxmW3NdPWEpO3JldHVybiBuZXcgUHQocix0aGlzLl9wYXJlbnRzKX0sc2VsZWN0QWxsOmZ1bmN0aW9uKHQpe1wiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJih0PXR0KHQpKTtmb3IodmFyIG49dGhpcy5fZ3JvdXBzLGU9bi5sZW5ndGgscj1bXSxpPVtdLG89MDtvPGU7KytvKWZvcih2YXIgYSx1PW5bb10sYz11Lmxlbmd0aCxmPTA7ZjxjOysrZikoYT11W2ZdKSYmKHIucHVzaCh0LmNhbGwoYSxhLl9fZGF0YV9fLGYsdSkpLGkucHVzaChhKSk7cmV0dXJuIG5ldyBQdChyLGkpfSxmaWx0ZXI6ZnVuY3Rpb24odCl7XCJmdW5jdGlvblwiIT10eXBlb2YgdCYmKHQ9bnQodCkpO2Zvcih2YXIgbj10aGlzLl9ncm91cHMsZT1uLmxlbmd0aCxyPW5ldyBBcnJheShlKSxpPTA7aTxlOysraSlmb3IodmFyIG8sYT1uW2ldLHU9YS5sZW5ndGgsYz1yW2ldPVtdLGY9MDtmPHU7KytmKShvPWFbZl0pJiZ0LmNhbGwobyxvLl9fZGF0YV9fLGYsYSkmJmMucHVzaChvKTtyZXR1cm4gbmV3IFB0KHIsdGhpcy5fcGFyZW50cyl9LGRhdGE6ZnVuY3Rpb24odCxuKXtpZighdClyZXR1cm4gZD1uZXcgQXJyYXkodGhpcy5zaXplKCkpLGY9LTEsdGhpcy5lYWNoKGZ1bmN0aW9uKHQpe2RbKytmXT10fSksZDt2YXIgZT1uP2F0Om90LHI9dGhpcy5fcGFyZW50cyxpPXRoaXMuX2dyb3VwcztcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiYodD1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdH19KHQpKTtmb3IodmFyIG89aS5sZW5ndGgsYT1uZXcgQXJyYXkobyksdT1uZXcgQXJyYXkobyksYz1uZXcgQXJyYXkobyksZj0wO2Y8bzsrK2Ype3ZhciBzPXJbZl0sbD1pW2ZdLGg9bC5sZW5ndGgsZD10LmNhbGwocyxzJiZzLl9fZGF0YV9fLGYscikscD1kLmxlbmd0aCx2PXVbZl09bmV3IEFycmF5KHApLGc9YVtmXT1uZXcgQXJyYXkocCk7ZShzLGwsdixnLGNbZl09bmV3IEFycmF5KGgpLGQsbik7Zm9yKHZhciB5LF8sYj0wLG09MDtiPHA7KytiKWlmKHk9dltiXSl7Zm9yKGI+PW0mJihtPWIrMSk7IShfPWdbbV0pJiYrK208cDspO3kuX25leHQ9X3x8bnVsbH19cmV0dXJuKGE9bmV3IFB0KGEscikpLl9lbnRlcj11LGEuX2V4aXQ9YyxhfSxlbnRlcjpmdW5jdGlvbigpe3JldHVybiBuZXcgUHQodGhpcy5fZW50ZXJ8fHRoaXMuX2dyb3Vwcy5tYXAoZXQpLHRoaXMuX3BhcmVudHMpfSxleGl0OmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBQdCh0aGlzLl9leGl0fHx0aGlzLl9ncm91cHMubWFwKGV0KSx0aGlzLl9wYXJlbnRzKX0sam9pbjpmdW5jdGlvbih0LG4sZSl7dmFyIHI9dGhpcy5lbnRlcigpLGk9dGhpcyxvPXRoaXMuZXhpdCgpO3JldHVybiByPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dChyKTpyLmFwcGVuZCh0K1wiXCIpLG51bGwhPW4mJihpPW4oaSkpLG51bGw9PWU/by5yZW1vdmUoKTplKG8pLHImJmk/ci5tZXJnZShpKS5vcmRlcigpOml9LG1lcmdlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgbj10aGlzLl9ncm91cHMsZT10Ll9ncm91cHMscj1uLmxlbmd0aCxpPWUubGVuZ3RoLG89TWF0aC5taW4ocixpKSxhPW5ldyBBcnJheShyKSx1PTA7dTxvOysrdSlmb3IodmFyIGMsZj1uW3VdLHM9ZVt1XSxsPWYubGVuZ3RoLGg9YVt1XT1uZXcgQXJyYXkobCksZD0wO2Q8bDsrK2QpKGM9ZltkXXx8c1tkXSkmJihoW2RdPWMpO2Zvcig7dTxyOysrdSlhW3VdPW5bdV07cmV0dXJuIG5ldyBQdChhLHRoaXMuX3BhcmVudHMpfSxvcmRlcjpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLl9ncm91cHMsbj0tMSxlPXQubGVuZ3RoOysrbjxlOylmb3IodmFyIHIsaT10W25dLG89aS5sZW5ndGgtMSxhPWlbb107LS1vPj0wOykocj1pW29dKSYmKGEmJjReci5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihhKSYmYS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShyLGEpLGE9cik7cmV0dXJuIHRoaXN9LHNvcnQ6ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbihuLGUpe3JldHVybiBuJiZlP3Qobi5fX2RhdGFfXyxlLl9fZGF0YV9fKTohbi0hZX10fHwodD11dCk7Zm9yKHZhciBlPXRoaXMuX2dyb3VwcyxyPWUubGVuZ3RoLGk9bmV3IEFycmF5KHIpLG89MDtvPHI7KytvKXtmb3IodmFyIGEsdT1lW29dLGM9dS5sZW5ndGgsZj1pW29dPW5ldyBBcnJheShjKSxzPTA7czxjOysrcykoYT11W3NdKSYmKGZbc109YSk7Zi5zb3J0KG4pfXJldHVybiBuZXcgUHQoaSx0aGlzLl9wYXJlbnRzKS5vcmRlcigpfSxjYWxsOmZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzWzBdO3JldHVybiBhcmd1bWVudHNbMF09dGhpcyx0LmFwcGx5KG51bGwsYXJndW1lbnRzKSx0aGlzfSxub2RlczpmdW5jdGlvbigpe3ZhciB0PW5ldyBBcnJheSh0aGlzLnNpemUoKSksbj0tMTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dFsrK25dPXRoaXN9KSx0fSxub2RlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX2dyb3VwcyxuPTAsZT10Lmxlbmd0aDtuPGU7KytuKWZvcih2YXIgcj10W25dLGk9MCxvPXIubGVuZ3RoO2k8bzsrK2kpe3ZhciBhPXJbaV07aWYoYSlyZXR1cm4gYX1yZXR1cm4gbnVsbH0sc2l6ZTpmdW5jdGlvbigpe3ZhciB0PTA7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpeysrdH0pLHR9LGVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMubm9kZSgpfSxlYWNoOmZ1bmN0aW9uKHQpe2Zvcih2YXIgbj10aGlzLl9ncm91cHMsZT0wLHI9bi5sZW5ndGg7ZTxyOysrZSlmb3IodmFyIGksbz1uW2VdLGE9MCx1PW8ubGVuZ3RoO2E8dTsrK2EpKGk9b1thXSkmJnQuY2FsbChpLGkuX19kYXRhX18sYSxvKTtyZXR1cm4gdGhpc30sYXR0cjpmdW5jdGlvbih0LG4pe3ZhciBlPVcodCk7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXt2YXIgcj10aGlzLm5vZGUoKTtyZXR1cm4gZS5sb2NhbD9yLmdldEF0dHJpYnV0ZU5TKGUuc3BhY2UsZS5sb2NhbCk6ci5nZXRBdHRyaWJ1dGUoZSl9cmV0dXJuIHRoaXMuZWFjaCgobnVsbD09bj9lLmxvY2FsP2Z1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3RoaXMucmVtb3ZlQXR0cmlidXRlTlModC5zcGFjZSx0LmxvY2FsKX19OmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3RoaXMucmVtb3ZlQXR0cmlidXRlKHQpfX06XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9lLmxvY2FsP2Z1bmN0aW9uKHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9bi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7bnVsbD09ZT90aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKHQuc3BhY2UsdC5sb2NhbCk6dGhpcy5zZXRBdHRyaWJ1dGVOUyh0LnNwYWNlLHQubG9jYWwsZSl9fTpmdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpe3ZhciBlPW4uYXBwbHkodGhpcyxhcmd1bWVudHMpO251bGw9PWU/dGhpcy5yZW1vdmVBdHRyaWJ1dGUodCk6dGhpcy5zZXRBdHRyaWJ1dGUodCxlKX19OmUubG9jYWw/ZnVuY3Rpb24odCxuKXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnNldEF0dHJpYnV0ZU5TKHQuc3BhY2UsdC5sb2NhbCxuKX19OmZ1bmN0aW9uKHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5zZXRBdHRyaWJ1dGUodCxuKX19KShlLG4pKX0sc3R5bGU6ZnVuY3Rpb24odCxuLGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPjE/dGhpcy5lYWNoKChudWxsPT1uP2Z1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3RoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCl9fTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBuP2Z1bmN0aW9uKHQsbixlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgcj1uLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtudWxsPT1yP3RoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCk6dGhpcy5zdHlsZS5zZXRQcm9wZXJ0eSh0LHIsZSl9fTpmdW5jdGlvbih0LG4sZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5zdHlsZS5zZXRQcm9wZXJ0eSh0LG4sZSl9fSkodCxuLG51bGw9PWU/XCJcIjplKSk6ZnQodGhpcy5ub2RlKCksdCl9LHByb3BlcnR5OmZ1bmN0aW9uKHQsbil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+MT90aGlzLmVhY2goKG51bGw9PW4/ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXNbdF19fTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBuP2Z1bmN0aW9uKHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9bi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7bnVsbD09ZT9kZWxldGUgdGhpc1t0XTp0aGlzW3RdPWV9fTpmdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpe3RoaXNbdF09bn19KSh0LG4pKTp0aGlzLm5vZGUoKVt0XX0sY2xhc3NlZDpmdW5jdGlvbih0LG4pe3ZhciBlPXN0KHQrXCJcIik7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXtmb3IodmFyIHI9bHQodGhpcy5ub2RlKCkpLGk9LTEsbz1lLmxlbmd0aDsrK2k8bzspaWYoIXIuY29udGFpbnMoZVtpXSkpcmV0dXJuITE7cmV0dXJuITB9cmV0dXJuIHRoaXMuZWFjaCgoXCJmdW5jdGlvblwiPT10eXBlb2Ygbj9mdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpeyhuLmFwcGx5KHRoaXMsYXJndW1lbnRzKT9kdDpwdCkodGhpcyx0KX19Om4/ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7ZHQodGhpcyx0KX19OmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3B0KHRoaXMsdCl9fSkoZSxuKSl9LHRleHQ6ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lYWNoKG51bGw9PXQ/dnQ6KFwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy50ZXh0Q29udGVudD1udWxsPT1uP1wiXCI6bn19OmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3RoaXMudGV4dENvbnRlbnQ9dH19KSh0KSk6dGhpcy5ub2RlKCkudGV4dENvbnRlbnR9LGh0bWw6ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lYWNoKG51bGw9PXQ/Z3Q6KFwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5pbm5lckhUTUw9bnVsbD09bj9cIlwiOm59fTpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLmlubmVySFRNTD10fX0pKHQpKTp0aGlzLm5vZGUoKS5pbm5lckhUTUx9LHJhaXNlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaCh5dCl9LGxvd2VyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChfdCl9LGFwcGVuZDpmdW5jdGlvbih0KXt2YXIgbj1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6Wih0KTtyZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hcHBlbmRDaGlsZChuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9KX0saW5zZXJ0OmZ1bmN0aW9uKHQsbil7dmFyIGU9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OloodCkscj1udWxsPT1uP2J0OlwiZnVuY3Rpb25cIj09dHlwZW9mIG4/bjpLKG4pO3JldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbigpe3JldHVybiB0aGlzLmluc2VydEJlZm9yZShlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxyLmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8bnVsbCl9KX0scmVtb3ZlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChtdCl9LGNsb25lOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNlbGVjdCh0P3d0Onh0KX0sZGF0dW06ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5wcm9wZXJ0eShcIl9fZGF0YV9fXCIsdCk6dGhpcy5ub2RlKCkuX19kYXRhX199LG9uOmZ1bmN0aW9uKHQsbixlKXt2YXIgcixpLG89ZnVuY3Rpb24odCl7cmV0dXJuIHQudHJpbSgpLnNwbGl0KC9efFxccysvKS5tYXAoZnVuY3Rpb24odCl7dmFyIG49XCJcIixlPXQuaW5kZXhPZihcIi5cIik7cmV0dXJuIGU+PTAmJihuPXQuc2xpY2UoZSsxKSx0PXQuc2xpY2UoMCxlKSkse3R5cGU6dCxuYW1lOm59fSl9KHQrXCJcIiksYT1vLmxlbmd0aDtpZighKGFyZ3VtZW50cy5sZW5ndGg8Mikpe2Zvcih1PW4/U3Q6QXQsbnVsbD09ZSYmKGU9ITEpLHI9MDtyPGE7KytyKXRoaXMuZWFjaCh1KG9bcl0sbixlKSk7cmV0dXJuIHRoaXN9dmFyIHU9dGhpcy5ub2RlKCkuX19vbjtpZih1KWZvcih2YXIgYyxmPTAscz11Lmxlbmd0aDtmPHM7KytmKWZvcihyPTAsYz11W2ZdO3I8YTsrK3IpaWYoKGk9b1tyXSkudHlwZT09PWMudHlwZSYmaS5uYW1lPT09Yy5uYW1lKXJldHVybiBjLnZhbHVlfSxkaXNwYXRjaDpmdW5jdGlvbih0LG4pe3JldHVybiB0aGlzLmVhY2goKFwiZnVuY3Rpb25cIj09dHlwZW9mIG4/ZnVuY3Rpb24odCxuKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gRXQodGhpcyx0LG4uYXBwbHkodGhpcyxhcmd1bWVudHMpKX19OmZ1bmN0aW9uKHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIEV0KHRoaXMsdCxuKX19KSh0LG4pKX19O3ZhciBEdD0wO2Z1bmN0aW9uIHF0KCl7cmV0dXJuIG5ldyBMdH1mdW5jdGlvbiBMdCgpe3RoaXMuXz1cIkBcIisoKytEdCkudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFV0KCl7Zm9yKHZhciBuLGU9dC5ldmVudDtuPWUuc291cmNlRXZlbnQ7KWU9bjtyZXR1cm4gZX1mdW5jdGlvbiBPdCh0LG4pe3ZhciBlPXQub3duZXJTVkdFbGVtZW50fHx0O2lmKGUuY3JlYXRlU1ZHUG9pbnQpe3ZhciByPWUuY3JlYXRlU1ZHUG9pbnQoKTtyZXR1cm4gci54PW4uY2xpZW50WCxyLnk9bi5jbGllbnRZLFsocj1yLm1hdHJpeFRyYW5zZm9ybSh0LmdldFNjcmVlbkNUTSgpLmludmVyc2UoKSkpLngsci55XX12YXIgaT10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3JldHVybltuLmNsaWVudFgtaS5sZWZ0LXQuY2xpZW50TGVmdCxuLmNsaWVudFktaS50b3AtdC5jbGllbnRUb3BdfWZ1bmN0aW9uIEJ0KHQpe3ZhciBuPVV0KCk7cmV0dXJuIG4uY2hhbmdlZFRvdWNoZXMmJihuPW4uY2hhbmdlZFRvdWNoZXNbMF0pLE90KHQsbil9ZnVuY3Rpb24gRnQodCxuLGUpe2FyZ3VtZW50cy5sZW5ndGg8MyYmKGU9bixuPVV0KCkuY2hhbmdlZFRvdWNoZXMpO2Zvcih2YXIgcixpPTAsbz1uP24ubGVuZ3RoOjA7aTxvOysraSlpZigocj1uW2ldKS5pZGVudGlmaWVyPT09ZSlyZXR1cm4gT3QodCxyKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBZdCgpe3QuZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl9ZnVuY3Rpb24gSXQoKXt0LmV2ZW50LnByZXZlbnREZWZhdWx0KCksdC5ldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKX1mdW5jdGlvbiBIdCh0KXt2YXIgbj10LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxlPVJ0KHQpLm9uKFwiZHJhZ3N0YXJ0LmRyYWdcIixJdCwhMCk7XCJvbnNlbGVjdHN0YXJ0XCJpbiBuP2Uub24oXCJzZWxlY3RzdGFydC5kcmFnXCIsSXQsITApOihuLl9fbm9zZWxlY3Q9bi5zdHlsZS5Nb3pVc2VyU2VsZWN0LG4uc3R5bGUuTW96VXNlclNlbGVjdD1cIm5vbmVcIil9ZnVuY3Rpb24ganQodCxuKXt2YXIgZT10LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxyPVJ0KHQpLm9uKFwiZHJhZ3N0YXJ0LmRyYWdcIixudWxsKTtuJiYoci5vbihcImNsaWNrLmRyYWdcIixJdCwhMCksc2V0VGltZW91dChmdW5jdGlvbigpe3Iub24oXCJjbGljay5kcmFnXCIsbnVsbCl9LDApKSxcIm9uc2VsZWN0c3RhcnRcImluIGU/ci5vbihcInNlbGVjdHN0YXJ0LmRyYWdcIixudWxsKTooZS5zdHlsZS5Nb3pVc2VyU2VsZWN0PWUuX19ub3NlbGVjdCxkZWxldGUgZS5fX25vc2VsZWN0KX1mdW5jdGlvbiBYdCh0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdH19ZnVuY3Rpb24gVnQodCxuLGUscixpLG8sYSx1LGMsZil7dGhpcy50YXJnZXQ9dCx0aGlzLnR5cGU9bix0aGlzLnN1YmplY3Q9ZSx0aGlzLmlkZW50aWZpZXI9cix0aGlzLmFjdGl2ZT1pLHRoaXMueD1vLHRoaXMueT1hLHRoaXMuZHg9dSx0aGlzLmR5PWMsdGhpcy5fPWZ9ZnVuY3Rpb24gR3QoKXtyZXR1cm4hdC5ldmVudC5jdHJsS2V5JiYhdC5ldmVudC5idXR0b259ZnVuY3Rpb24gJHQoKXtyZXR1cm4gdGhpcy5wYXJlbnROb2RlfWZ1bmN0aW9uIFd0KG4pe3JldHVybiBudWxsPT1uP3t4OnQuZXZlbnQueCx5OnQuZXZlbnQueX06bn1mdW5jdGlvbiBadCgpe3JldHVybiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHN8fFwib250b3VjaHN0YXJ0XCJpbiB0aGlzfWZ1bmN0aW9uIFF0KHQsbixlKXt0LnByb3RvdHlwZT1uLnByb3RvdHlwZT1lLGUuY29uc3RydWN0b3I9dH1mdW5jdGlvbiBLdCh0LG4pe3ZhciBlPU9iamVjdC5jcmVhdGUodC5wcm90b3R5cGUpO2Zvcih2YXIgciBpbiBuKWVbcl09bltyXTtyZXR1cm4gZX1mdW5jdGlvbiBKdCgpe31MdC5wcm90b3R5cGU9cXQucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpMdCxnZXQ6ZnVuY3Rpb24odCl7Zm9yKHZhciBuPXRoaXMuXzshKG4gaW4gdCk7KWlmKCEodD10LnBhcmVudE5vZGUpKXJldHVybjtyZXR1cm4gdFtuXX0sc2V0OmZ1bmN0aW9uKHQsbil7cmV0dXJuIHRbdGhpcy5fXT1ufSxyZW1vdmU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuXyBpbiB0JiZkZWxldGUgdFt0aGlzLl9dfSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiB0aGlzLl99fSxWdC5wcm90b3R5cGUub249ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl8ub24uYXBwbHkodGhpcy5fLGFyZ3VtZW50cyk7cmV0dXJuIHQ9PT10aGlzLl8/dGhpczp0fTt2YXIgdG49XCJcXFxccyooWystXT9cXFxcZCspXFxcXHMqXCIsbm49XCJcXFxccyooWystXT9cXFxcZCpcXFxcLj9cXFxcZCsoPzpbZUVdWystXT9cXFxcZCspPylcXFxccypcIixlbj1cIlxcXFxzKihbKy1dP1xcXFxkKlxcXFwuP1xcXFxkKyg/OltlRV1bKy1dP1xcXFxkKyk/KSVcXFxccypcIixybj0vXiMoWzAtOWEtZl17Myw4fSkkLyxvbj1uZXcgUmVnRXhwKFwiXnJnYlxcXFwoXCIrW3RuLHRuLHRuXStcIlxcXFwpJFwiKSxhbj1uZXcgUmVnRXhwKFwiXnJnYlxcXFwoXCIrW2VuLGVuLGVuXStcIlxcXFwpJFwiKSx1bj1uZXcgUmVnRXhwKFwiXnJnYmFcXFxcKFwiK1t0bix0bix0bixubl0rXCJcXFxcKSRcIiksY249bmV3IFJlZ0V4cChcIl5yZ2JhXFxcXChcIitbZW4sZW4sZW4sbm5dK1wiXFxcXCkkXCIpLGZuPW5ldyBSZWdFeHAoXCJeaHNsXFxcXChcIitbbm4sZW4sZW5dK1wiXFxcXCkkXCIpLHNuPW5ldyBSZWdFeHAoXCJeaHNsYVxcXFwoXCIrW25uLGVuLGVuLG5uXStcIlxcXFwpJFwiKSxsbj17YWxpY2VibHVlOjE1NzkyMzgzLGFudGlxdWV3aGl0ZToxNjQ0NDM3NSxhcXVhOjY1NTM1LGFxdWFtYXJpbmU6ODM4ODU2NCxhenVyZToxNTc5NDE3NSxiZWlnZToxNjExOTI2MCxiaXNxdWU6MTY3NzAyNDQsYmxhY2s6MCxibGFuY2hlZGFsbW9uZDoxNjc3MjA0NSxibHVlOjI1NSxibHVldmlvbGV0OjkwNTUyMDIsYnJvd246MTA4MjQyMzQsYnVybHl3b29kOjE0NTk2MjMxLGNhZGV0Ymx1ZTo2MjY2NTI4LGNoYXJ0cmV1c2U6ODM4ODM1MixjaG9jb2xhdGU6MTM3ODk0NzAsY29yYWw6MTY3NDQyNzIsY29ybmZsb3dlcmJsdWU6NjU5MTk4MSxjb3Juc2lsazoxNjc3NTM4OCxjcmltc29uOjE0NDIzMTAwLGN5YW46NjU1MzUsZGFya2JsdWU6MTM5LGRhcmtjeWFuOjM1NzIzLGRhcmtnb2xkZW5yb2Q6MTIwOTI5MzksZGFya2dyYXk6MTExMTkwMTcsZGFya2dyZWVuOjI1NjAwLGRhcmtncmV5OjExMTE5MDE3LGRhcmtraGFraToxMjQzMzI1OSxkYXJrbWFnZW50YTo5MTA5NjQzLGRhcmtvbGl2ZWdyZWVuOjU1OTc5OTksZGFya29yYW5nZToxNjc0NzUyMCxkYXJrb3JjaGlkOjEwMDQwMDEyLGRhcmtyZWQ6OTEwOTUwNCxkYXJrc2FsbW9uOjE1MzA4NDEwLGRhcmtzZWFncmVlbjo5NDE5OTE5LGRhcmtzbGF0ZWJsdWU6NDczNDM0NyxkYXJrc2xhdGVncmF5OjMxMDA0OTUsZGFya3NsYXRlZ3JleTozMTAwNDk1LGRhcmt0dXJxdW9pc2U6NTI5NDUsZGFya3Zpb2xldDo5Njk5NTM5LGRlZXBwaW5rOjE2NzE2OTQ3LGRlZXBza3libHVlOjQ5MTUxLGRpbWdyYXk6NjkwODI2NSxkaW1ncmV5OjY5MDgyNjUsZG9kZ2VyYmx1ZToyMDAzMTk5LGZpcmVicmljazoxMTY3NDE0NixmbG9yYWx3aGl0ZToxNjc3NTkyMCxmb3Jlc3RncmVlbjoyMjYzODQyLGZ1Y2hzaWE6MTY3MTE5MzUsZ2FpbnNib3JvOjE0NDc0NDYwLGdob3N0d2hpdGU6MTYzMTY2NzEsZ29sZDoxNjc2NjcyMCxnb2xkZW5yb2Q6MTQzMjkxMjAsZ3JheTo4NDIxNTA0LGdyZWVuOjMyNzY4LGdyZWVueWVsbG93OjExNDAzMDU1LGdyZXk6ODQyMTUwNCxob25leWRldzoxNTc5NDE2MCxob3RwaW5rOjE2NzM4NzQwLGluZGlhbnJlZDoxMzQ1ODUyNCxpbmRpZ286NDkxNTMzMCxpdm9yeToxNjc3NzIwMCxraGFraToxNTc4NzY2MCxsYXZlbmRlcjoxNTEzMjQxMCxsYXZlbmRlcmJsdXNoOjE2NzczMzY1LGxhd25ncmVlbjo4MTkwOTc2LGxlbW9uY2hpZmZvbjoxNjc3NTg4NSxsaWdodGJsdWU6MTEzOTMyNTQsbGlnaHRjb3JhbDoxNTc2MTUzNixsaWdodGN5YW46MTQ3NDU1OTksbGlnaHRnb2xkZW5yb2R5ZWxsb3c6MTY0NDgyMTAsbGlnaHRncmF5OjEzODgyMzIzLGxpZ2h0Z3JlZW46OTQ5ODI1NixsaWdodGdyZXk6MTM4ODIzMjMsbGlnaHRwaW5rOjE2NzU4NDY1LGxpZ2h0c2FsbW9uOjE2NzUyNzYyLGxpZ2h0c2VhZ3JlZW46MjE0Mjg5MCxsaWdodHNreWJsdWU6ODkwMDM0NixsaWdodHNsYXRlZ3JheTo3ODMzNzUzLGxpZ2h0c2xhdGVncmV5Ojc4MzM3NTMsbGlnaHRzdGVlbGJsdWU6MTE1ODQ3MzQsbGlnaHR5ZWxsb3c6MTY3NzcxODQsbGltZTo2NTI4MCxsaW1lZ3JlZW46MzMyOTMzMCxsaW5lbjoxNjQ0NTY3MCxtYWdlbnRhOjE2NzExOTM1LG1hcm9vbjo4Mzg4NjA4LG1lZGl1bWFxdWFtYXJpbmU6NjczNzMyMixtZWRpdW1ibHVlOjIwNSxtZWRpdW1vcmNoaWQ6MTIyMTE2NjcsbWVkaXVtcHVycGxlOjk2NjI2ODMsbWVkaXVtc2VhZ3JlZW46Mzk3ODA5NyxtZWRpdW1zbGF0ZWJsdWU6ODA4Nzc5MCxtZWRpdW1zcHJpbmdncmVlbjo2NDE1NCxtZWRpdW10dXJxdW9pc2U6NDc3MjMwMCxtZWRpdW12aW9sZXRyZWQ6MTMwNDcxNzMsbWlkbmlnaHRibHVlOjE2NDQ5MTIsbWludGNyZWFtOjE2MTIxODUwLG1pc3R5cm9zZToxNjc3MDI3Myxtb2NjYXNpbjoxNjc3MDIyOSxuYXZham93aGl0ZToxNjc2ODY4NSxuYXZ5OjEyOCxvbGRsYWNlOjE2NjQzNTU4LG9saXZlOjg0MjEzNzYsb2xpdmVkcmFiOjcwNDg3Mzksb3JhbmdlOjE2NzUzOTIwLG9yYW5nZXJlZDoxNjcyOTM0NCxvcmNoaWQ6MTQzMTU3MzQscGFsZWdvbGRlbnJvZDoxNTY1NzEzMCxwYWxlZ3JlZW46MTAwMjU4ODAscGFsZXR1cnF1b2lzZToxMTUyOTk2NixwYWxldmlvbGV0cmVkOjE0MzgxMjAzLHBhcGF5YXdoaXA6MTY3NzMwNzcscGVhY2hwdWZmOjE2NzY3NjczLHBlcnU6MTM0Njg5OTEscGluazoxNjc2MTAzNSxwbHVtOjE0NTI0NjM3LHBvd2RlcmJsdWU6MTE1OTE5MTAscHVycGxlOjgzODg3MzYscmViZWNjYXB1cnBsZTo2Njk3ODgxLHJlZDoxNjcxMTY4MCxyb3N5YnJvd246MTIzNTc1MTkscm95YWxibHVlOjQyODY5NDUsc2FkZGxlYnJvd246OTEyNzE4NyxzYWxtb246MTY0MTY4ODIsc2FuZHlicm93bjoxNjAzMjg2NCxzZWFncmVlbjozMDUwMzI3LHNlYXNoZWxsOjE2Nzc0NjM4LHNpZW5uYToxMDUwNjc5NyxzaWx2ZXI6MTI2MzIyNTYsc2t5Ymx1ZTo4OTAwMzMxLHNsYXRlYmx1ZTo2OTcwMDYxLHNsYXRlZ3JheTo3MzcyOTQ0LHNsYXRlZ3JleTo3MzcyOTQ0LHNub3c6MTY3NzU5MzAsc3ByaW5nZ3JlZW46NjU0MDcsc3RlZWxibHVlOjQ2MjA5ODAsdGFuOjEzODA4NzgwLHRlYWw6MzI4OTYsdGhpc3RsZToxNDIwNDg4OCx0b21hdG86MTY3MzcwOTUsdHVycXVvaXNlOjQyNTE4NTYsdmlvbGV0OjE1NjMxMDg2LHdoZWF0OjE2MTEzMzMxLHdoaXRlOjE2Nzc3MjE1LHdoaXRlc21va2U6MTYxMTkyODUseWVsbG93OjE2Nzc2OTYwLHllbGxvd2dyZWVuOjEwMTQ1MDc0fTtmdW5jdGlvbiBobigpe3JldHVybiB0aGlzLnJnYigpLmZvcm1hdEhleCgpfWZ1bmN0aW9uIGRuKCl7cmV0dXJuIHRoaXMucmdiKCkuZm9ybWF0UmdiKCl9ZnVuY3Rpb24gcG4odCl7dmFyIG4sZTtyZXR1cm4gdD0odCtcIlwiKS50cmltKCkudG9Mb3dlckNhc2UoKSwobj1ybi5leGVjKHQpKT8oZT1uWzFdLmxlbmd0aCxuPXBhcnNlSW50KG5bMV0sMTYpLDY9PT1lP3ZuKG4pOjM9PT1lP25ldyBibihuPj44JjE1fG4+PjQmMjQwLG4+PjQmMTV8MjQwJm4sKDE1Jm4pPDw0fDE1Jm4sMSk6OD09PWU/Z24obj4+MjQmMjU1LG4+PjE2JjI1NSxuPj44JjI1NSwoMjU1Jm4pLzI1NSk6ND09PWU/Z24obj4+MTImMTV8bj4+OCYyNDAsbj4+OCYxNXxuPj40JjI0MCxuPj40JjE1fDI0MCZuLCgoMTUmbik8PDR8MTUmbikvMjU1KTpudWxsKToobj1vbi5leGVjKHQpKT9uZXcgYm4oblsxXSxuWzJdLG5bM10sMSk6KG49YW4uZXhlYyh0KSk/bmV3IGJuKDI1NSpuWzFdLzEwMCwyNTUqblsyXS8xMDAsMjU1Km5bM10vMTAwLDEpOihuPXVuLmV4ZWModCkpP2duKG5bMV0sblsyXSxuWzNdLG5bNF0pOihuPWNuLmV4ZWModCkpP2duKDI1NSpuWzFdLzEwMCwyNTUqblsyXS8xMDAsMjU1Km5bM10vMTAwLG5bNF0pOihuPWZuLmV4ZWModCkpP01uKG5bMV0sblsyXS8xMDAsblszXS8xMDAsMSk6KG49c24uZXhlYyh0KSk/TW4oblsxXSxuWzJdLzEwMCxuWzNdLzEwMCxuWzRdKTpsbi5oYXNPd25Qcm9wZXJ0eSh0KT92bihsblt0XSk6XCJ0cmFuc3BhcmVudFwiPT09dD9uZXcgYm4oTmFOLE5hTixOYU4sMCk6bnVsbH1mdW5jdGlvbiB2bih0KXtyZXR1cm4gbmV3IGJuKHQ+PjE2JjI1NSx0Pj44JjI1NSwyNTUmdCwxKX1mdW5jdGlvbiBnbih0LG4sZSxyKXtyZXR1cm4gcjw9MCYmKHQ9bj1lPU5hTiksbmV3IGJuKHQsbixlLHIpfWZ1bmN0aW9uIHluKHQpe3JldHVybiB0IGluc3RhbmNlb2YgSnR8fCh0PXBuKHQpKSx0P25ldyBibigodD10LnJnYigpKS5yLHQuZyx0LmIsdC5vcGFjaXR5KTpuZXcgYm59ZnVuY3Rpb24gX24odCxuLGUscil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP3luKHQpOm5ldyBibih0LG4sZSxudWxsPT1yPzE6cil9ZnVuY3Rpb24gYm4odCxuLGUscil7dGhpcy5yPSt0LHRoaXMuZz0rbix0aGlzLmI9K2UsdGhpcy5vcGFjaXR5PStyfWZ1bmN0aW9uIG1uKCl7cmV0dXJuXCIjXCIrd24odGhpcy5yKSt3bih0aGlzLmcpK3duKHRoaXMuYil9ZnVuY3Rpb24geG4oKXt2YXIgdD10aGlzLm9wYWNpdHk7cmV0dXJuKDE9PT0odD1pc05hTih0KT8xOk1hdGgubWF4KDAsTWF0aC5taW4oMSx0KSkpP1wicmdiKFwiOlwicmdiYShcIikrTWF0aC5tYXgoMCxNYXRoLm1pbigyNTUsTWF0aC5yb3VuZCh0aGlzLnIpfHwwKSkrXCIsIFwiK01hdGgubWF4KDAsTWF0aC5taW4oMjU1LE1hdGgucm91bmQodGhpcy5nKXx8MCkpK1wiLCBcIitNYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKHRoaXMuYil8fDApKSsoMT09PXQ/XCIpXCI6XCIsIFwiK3QrXCIpXCIpfWZ1bmN0aW9uIHduKHQpe3JldHVybigodD1NYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKHQpfHwwKSkpPDE2P1wiMFwiOlwiXCIpK3QudG9TdHJpbmcoMTYpfWZ1bmN0aW9uIE1uKHQsbixlLHIpe3JldHVybiByPD0wP3Q9bj1lPU5hTjplPD0wfHxlPj0xP3Q9bj1OYU46bjw9MCYmKHQ9TmFOKSxuZXcgQW4odCxuLGUscil9ZnVuY3Rpb24gTm4odCl7aWYodCBpbnN0YW5jZW9mIEFuKXJldHVybiBuZXcgQW4odC5oLHQucyx0LmwsdC5vcGFjaXR5KTtpZih0IGluc3RhbmNlb2YgSnR8fCh0PXBuKHQpKSwhdClyZXR1cm4gbmV3IEFuO2lmKHQgaW5zdGFuY2VvZiBBbilyZXR1cm4gdDt2YXIgbj0odD10LnJnYigpKS5yLzI1NSxlPXQuZy8yNTUscj10LmIvMjU1LGk9TWF0aC5taW4obixlLHIpLG89TWF0aC5tYXgobixlLHIpLGE9TmFOLHU9by1pLGM9KG8raSkvMjtyZXR1cm4gdT8oYT1uPT09bz8oZS1yKS91KzYqKGU8cik6ZT09PW8/KHItbikvdSsyOihuLWUpL3UrNCx1Lz1jPC41P28raToyLW8taSxhKj02MCk6dT1jPjAmJmM8MT8wOmEsbmV3IEFuKGEsdSxjLHQub3BhY2l0eSl9ZnVuY3Rpb24gVG4odCxuLGUscil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP05uKHQpOm5ldyBBbih0LG4sZSxudWxsPT1yPzE6cil9ZnVuY3Rpb24gQW4odCxuLGUscil7dGhpcy5oPSt0LHRoaXMucz0rbix0aGlzLmw9K2UsdGhpcy5vcGFjaXR5PStyfWZ1bmN0aW9uIFNuKHQsbixlKXtyZXR1cm4gMjU1Kih0PDYwP24rKGUtbikqdC82MDp0PDE4MD9lOnQ8MjQwP24rKGUtbikqKDI0MC10KS82MDpuKX1RdChKdCxwbix7Y29weTpmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgdGhpcy5jb25zdHJ1Y3Rvcix0aGlzLHQpfSxkaXNwbGF5YWJsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnJnYigpLmRpc3BsYXlhYmxlKCl9LGhleDpobixmb3JtYXRIZXg6aG4sZm9ybWF0SHNsOmZ1bmN0aW9uKCl7cmV0dXJuIE5uKHRoaXMpLmZvcm1hdEhzbCgpfSxmb3JtYXRSZ2I6ZG4sdG9TdHJpbmc6ZG59KSxRdChibixfbixLdChKdCx7YnJpZ2h0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9bnVsbD09dD8xLy43Ok1hdGgucG93KDEvLjcsdCksbmV3IGJuKHRoaXMucip0LHRoaXMuZyp0LHRoaXMuYip0LHRoaXMub3BhY2l0eSl9LGRhcmtlcjpmdW5jdGlvbih0KXtyZXR1cm4gdD1udWxsPT10Py43Ok1hdGgucG93KC43LHQpLG5ldyBibih0aGlzLnIqdCx0aGlzLmcqdCx0aGlzLmIqdCx0aGlzLm9wYWNpdHkpfSxyZ2I6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sZGlzcGxheWFibGU6ZnVuY3Rpb24oKXtyZXR1cm4tLjU8PXRoaXMuciYmdGhpcy5yPDI1NS41JiYtLjU8PXRoaXMuZyYmdGhpcy5nPDI1NS41JiYtLjU8PXRoaXMuYiYmdGhpcy5iPDI1NS41JiYwPD10aGlzLm9wYWNpdHkmJnRoaXMub3BhY2l0eTw9MX0saGV4Om1uLGZvcm1hdEhleDptbixmb3JtYXRSZ2I6eG4sdG9TdHJpbmc6eG59KSksUXQoQW4sVG4sS3QoSnQse2JyaWdodGVyOmZ1bmN0aW9uKHQpe3JldHVybiB0PW51bGw9PXQ/MS8uNzpNYXRoLnBvdygxLy43LHQpLG5ldyBBbih0aGlzLmgsdGhpcy5zLHRoaXMubCp0LHRoaXMub3BhY2l0eSl9LGRhcmtlcjpmdW5jdGlvbih0KXtyZXR1cm4gdD1udWxsPT10Py43Ok1hdGgucG93KC43LHQpLG5ldyBBbih0aGlzLmgsdGhpcy5zLHRoaXMubCp0LHRoaXMub3BhY2l0eSl9LHJnYjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuaCUzNjArMzYwKih0aGlzLmg8MCksbj1pc05hTih0KXx8aXNOYU4odGhpcy5zKT8wOnRoaXMucyxlPXRoaXMubCxyPWUrKGU8LjU/ZToxLWUpKm4saT0yKmUtcjtyZXR1cm4gbmV3IGJuKFNuKHQ+PTI0MD90LTI0MDp0KzEyMCxpLHIpLFNuKHQsaSxyKSxTbih0PDEyMD90KzI0MDp0LTEyMCxpLHIpLHRoaXMub3BhY2l0eSl9LGRpc3BsYXlhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuKDA8PXRoaXMucyYmdGhpcy5zPD0xfHxpc05hTih0aGlzLnMpKSYmMDw9dGhpcy5sJiZ0aGlzLmw8PTEmJjA8PXRoaXMub3BhY2l0eSYmdGhpcy5vcGFjaXR5PD0xfSxmb3JtYXRIc2w6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wYWNpdHk7cmV0dXJuKDE9PT0odD1pc05hTih0KT8xOk1hdGgubWF4KDAsTWF0aC5taW4oMSx0KSkpP1wiaHNsKFwiOlwiaHNsYShcIikrKHRoaXMuaHx8MCkrXCIsIFwiKzEwMCoodGhpcy5zfHwwKStcIiUsIFwiKzEwMCoodGhpcy5sfHwwKStcIiVcIisoMT09PXQ/XCIpXCI6XCIsIFwiK3QrXCIpXCIpfX0pKTt2YXIga249TWF0aC5QSS8xODAsRW49MTgwL01hdGguUEksQ249Ljk2NDIyLFBuPTEsem49LjgyNTIxLFJuPTQvMjksRG49Ni8yOSxxbj0zKkRuKkRuLExuPURuKkRuKkRuO2Z1bmN0aW9uIFVuKHQpe2lmKHQgaW5zdGFuY2VvZiBCbilyZXR1cm4gbmV3IEJuKHQubCx0LmEsdC5iLHQub3BhY2l0eSk7aWYodCBpbnN0YW5jZW9mIFZuKXJldHVybiBHbih0KTt0IGluc3RhbmNlb2YgYm58fCh0PXluKHQpKTt2YXIgbixlLHI9SG4odC5yKSxpPUhuKHQuZyksbz1Ibih0LmIpLGE9Rm4oKC4yMjI1MDQ1KnIrLjcxNjg3ODYqaSsuMDYwNjE2OSpvKS9Qbik7cmV0dXJuIHI9PT1pJiZpPT09bz9uPWU9YToobj1GbigoLjQzNjA3NDcqcisuMzg1MDY0OSppKy4xNDMwODA0Km8pL0NuKSxlPUZuKCguMDEzOTMyMipyKy4wOTcxMDQ1KmkrLjcxNDE3MzMqbykvem4pKSxuZXcgQm4oMTE2KmEtMTYsNTAwKihuLWEpLDIwMCooYS1lKSx0Lm9wYWNpdHkpfWZ1bmN0aW9uIE9uKHQsbixlLHIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9Vbih0KTpuZXcgQm4odCxuLGUsbnVsbD09cj8xOnIpfWZ1bmN0aW9uIEJuKHQsbixlLHIpe3RoaXMubD0rdCx0aGlzLmE9K24sdGhpcy5iPStlLHRoaXMub3BhY2l0eT0rcn1mdW5jdGlvbiBGbih0KXtyZXR1cm4gdD5Mbj9NYXRoLnBvdyh0LDEvMyk6dC9xbitSbn1mdW5jdGlvbiBZbih0KXtyZXR1cm4gdD5Ebj90KnQqdDpxbioodC1Sbil9ZnVuY3Rpb24gSW4odCl7cmV0dXJuIDI1NSoodDw9LjAwMzEzMDg/MTIuOTIqdDoxLjA1NSpNYXRoLnBvdyh0LDEvMi40KS0uMDU1KX1mdW5jdGlvbiBIbih0KXtyZXR1cm4odC89MjU1KTw9LjA0MDQ1P3QvMTIuOTI6TWF0aC5wb3coKHQrLjA1NSkvMS4wNTUsMi40KX1mdW5jdGlvbiBqbih0KXtpZih0IGluc3RhbmNlb2YgVm4pcmV0dXJuIG5ldyBWbih0LmgsdC5jLHQubCx0Lm9wYWNpdHkpO2lmKHQgaW5zdGFuY2VvZiBCbnx8KHQ9VW4odCkpLDA9PT10LmEmJjA9PT10LmIpcmV0dXJuIG5ldyBWbihOYU4sMDx0LmwmJnQubDwxMDA/MDpOYU4sdC5sLHQub3BhY2l0eSk7dmFyIG49TWF0aC5hdGFuMih0LmIsdC5hKSpFbjtyZXR1cm4gbmV3IFZuKG48MD9uKzM2MDpuLE1hdGguc3FydCh0LmEqdC5hK3QuYip0LmIpLHQubCx0Lm9wYWNpdHkpfWZ1bmN0aW9uIFhuKHQsbixlLHIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9qbih0KTpuZXcgVm4odCxuLGUsbnVsbD09cj8xOnIpfWZ1bmN0aW9uIFZuKHQsbixlLHIpe3RoaXMuaD0rdCx0aGlzLmM9K24sdGhpcy5sPStlLHRoaXMub3BhY2l0eT0rcn1mdW5jdGlvbiBHbih0KXtpZihpc05hTih0LmgpKXJldHVybiBuZXcgQm4odC5sLDAsMCx0Lm9wYWNpdHkpO3ZhciBuPXQuaCprbjtyZXR1cm4gbmV3IEJuKHQubCxNYXRoLmNvcyhuKSp0LmMsTWF0aC5zaW4obikqdC5jLHQub3BhY2l0eSl9UXQoQm4sT24sS3QoSnQse2JyaWdodGVyOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgQm4odGhpcy5sKzE4KihudWxsPT10PzE6dCksdGhpcy5hLHRoaXMuYix0aGlzLm9wYWNpdHkpfSxkYXJrZXI6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBCbih0aGlzLmwtMTgqKG51bGw9PXQ/MTp0KSx0aGlzLmEsdGhpcy5iLHRoaXMub3BhY2l0eSl9LHJnYjpmdW5jdGlvbigpe3ZhciB0PSh0aGlzLmwrMTYpLzExNixuPWlzTmFOKHRoaXMuYSk/dDp0K3RoaXMuYS81MDAsZT1pc05hTih0aGlzLmIpP3Q6dC10aGlzLmIvMjAwO3JldHVybiBuZXcgYm4oSW4oMy4xMzM4NTYxKihuPUNuKlluKG4pKS0xLjYxNjg2NjcqKHQ9UG4qWW4odCkpLS40OTA2MTQ2KihlPXpuKlluKGUpKSksSW4oLS45Nzg3Njg0Km4rMS45MTYxNDE1KnQrLjAzMzQ1NCplKSxJbiguMDcxOTQ1MypuLS4yMjg5OTE0KnQrMS40MDUyNDI3KmUpLHRoaXMub3BhY2l0eSl9fSkpLFF0KFZuLFhuLEt0KEp0LHticmlnaHRlcjpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IFZuKHRoaXMuaCx0aGlzLmMsdGhpcy5sKzE4KihudWxsPT10PzE6dCksdGhpcy5vcGFjaXR5KX0sZGFya2VyOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgVm4odGhpcy5oLHRoaXMuYyx0aGlzLmwtMTgqKG51bGw9PXQ/MTp0KSx0aGlzLm9wYWNpdHkpfSxyZ2I6ZnVuY3Rpb24oKXtyZXR1cm4gR24odGhpcykucmdiKCl9fSkpO3ZhciAkbj0tLjE0ODYxLFduPTEuNzgyNzcsWm49LS4yOTIyNyxRbj0tLjkwNjQ5LEtuPTEuOTcyOTQsSm49S24qUW4sdGU9S24qV24sbmU9V24qWm4tUW4qJG47ZnVuY3Rpb24gZWUodCxuLGUscil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2Z1bmN0aW9uKHQpe2lmKHQgaW5zdGFuY2VvZiByZSlyZXR1cm4gbmV3IHJlKHQuaCx0LnMsdC5sLHQub3BhY2l0eSk7dCBpbnN0YW5jZW9mIGJufHwodD15bih0KSk7dmFyIG49dC5yLzI1NSxlPXQuZy8yNTUscj10LmIvMjU1LGk9KG5lKnIrSm4qbi10ZSplKS8obmUrSm4tdGUpLG89ci1pLGE9KEtuKihlLWkpLVpuKm8pL1FuLHU9TWF0aC5zcXJ0KGEqYStvKm8pLyhLbippKigxLWkpKSxjPXU/TWF0aC5hdGFuMihhLG8pKkVuLTEyMDpOYU47cmV0dXJuIG5ldyByZShjPDA/YyszNjA6Yyx1LGksdC5vcGFjaXR5KX0odCk6bmV3IHJlKHQsbixlLG51bGw9PXI/MTpyKX1mdW5jdGlvbiByZSh0LG4sZSxyKXt0aGlzLmg9K3QsdGhpcy5zPStuLHRoaXMubD0rZSx0aGlzLm9wYWNpdHk9K3J9ZnVuY3Rpb24gaWUodCxuLGUscixpKXt2YXIgbz10KnQsYT1vKnQ7cmV0dXJuKCgxLTMqdCszKm8tYSkqbisoNC02Km8rMyphKSplKygxKzMqdCszKm8tMyphKSpyK2EqaSkvNn1mdW5jdGlvbiBvZSh0KXt2YXIgbj10Lmxlbmd0aC0xO3JldHVybiBmdW5jdGlvbihlKXt2YXIgcj1lPD0wP2U9MDplPj0xPyhlPTEsbi0xKTpNYXRoLmZsb29yKGUqbiksaT10W3JdLG89dFtyKzFdLGE9cj4wP3Rbci0xXToyKmktbyx1PXI8bi0xP3RbcisyXToyKm8taTtyZXR1cm4gaWUoKGUtci9uKSpuLGEsaSxvLHUpfX1mdW5jdGlvbiBhZSh0KXt2YXIgbj10Lmxlbmd0aDtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHI9TWF0aC5mbG9vcigoKGUlPTEpPDA/KytlOmUpKm4pLGk9dFsocituLTEpJW5dLG89dFtyJW5dLGE9dFsocisxKSVuXSx1PXRbKHIrMiklbl07cmV0dXJuIGllKChlLXIvbikqbixpLG8sYSx1KX19ZnVuY3Rpb24gdWUodCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHR9fWZ1bmN0aW9uIGNlKHQsbil7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiB0K2Uqbn19ZnVuY3Rpb24gZmUodCxuKXt2YXIgZT1uLXQ7cmV0dXJuIGU/Y2UodCxlPjE4MHx8ZTwtMTgwP2UtMzYwKk1hdGgucm91bmQoZS8zNjApOmUpOnVlKGlzTmFOKHQpP246dCl9ZnVuY3Rpb24gc2UodCl7cmV0dXJuIDE9PSh0PSt0KT9sZTpmdW5jdGlvbihuLGUpe3JldHVybiBlLW4/ZnVuY3Rpb24odCxuLGUpe3JldHVybiB0PU1hdGgucG93KHQsZSksbj1NYXRoLnBvdyhuLGUpLXQsZT0xL2UsZnVuY3Rpb24ocil7cmV0dXJuIE1hdGgucG93KHQrcipuLGUpfX0obixlLHQpOnVlKGlzTmFOKG4pP2U6bil9fWZ1bmN0aW9uIGxlKHQsbil7dmFyIGU9bi10O3JldHVybiBlP2NlKHQsZSk6dWUoaXNOYU4odCk/bjp0KX1RdChyZSxlZSxLdChKdCx7YnJpZ2h0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9bnVsbD09dD8xLy43Ok1hdGgucG93KDEvLjcsdCksbmV3IHJlKHRoaXMuaCx0aGlzLnMsdGhpcy5sKnQsdGhpcy5vcGFjaXR5KX0sZGFya2VyOmZ1bmN0aW9uKHQpe3JldHVybiB0PW51bGw9PXQ/Ljc6TWF0aC5wb3coLjcsdCksbmV3IHJlKHRoaXMuaCx0aGlzLnMsdGhpcy5sKnQsdGhpcy5vcGFjaXR5KX0scmdiOmZ1bmN0aW9uKCl7dmFyIHQ9aXNOYU4odGhpcy5oKT8wOih0aGlzLmgrMTIwKSprbixuPSt0aGlzLmwsZT1pc05hTih0aGlzLnMpPzA6dGhpcy5zKm4qKDEtbikscj1NYXRoLmNvcyh0KSxpPU1hdGguc2luKHQpO3JldHVybiBuZXcgYm4oMjU1KihuK2UqKCRuKnIrV24qaSkpLDI1NSoobitlKihabipyK1FuKmkpKSwyNTUqKG4rZSooS24qcikpLHRoaXMub3BhY2l0eSl9fSkpO3ZhciBoZT1mdW5jdGlvbiB0KG4pe3ZhciBlPXNlKG4pO2Z1bmN0aW9uIHIodCxuKXt2YXIgcj1lKCh0PV9uKHQpKS5yLChuPV9uKG4pKS5yKSxpPWUodC5nLG4uZyksbz1lKHQuYixuLmIpLGE9bGUodC5vcGFjaXR5LG4ub3BhY2l0eSk7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiB0LnI9cihuKSx0Lmc9aShuKSx0LmI9byhuKSx0Lm9wYWNpdHk9YShuKSx0K1wiXCJ9fXJldHVybiByLmdhbW1hPXQscn0oMSk7ZnVuY3Rpb24gZGUodCl7cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBlLHIsaT1uLmxlbmd0aCxvPW5ldyBBcnJheShpKSxhPW5ldyBBcnJheShpKSx1PW5ldyBBcnJheShpKTtmb3IoZT0wO2U8aTsrK2Upcj1fbihuW2VdKSxvW2VdPXIucnx8MCxhW2VdPXIuZ3x8MCx1W2VdPXIuYnx8MDtyZXR1cm4gbz10KG8pLGE9dChhKSx1PXQodSksci5vcGFjaXR5PTEsZnVuY3Rpb24odCl7cmV0dXJuIHIucj1vKHQpLHIuZz1hKHQpLHIuYj11KHQpLHIrXCJcIn19fXZhciBwZT1kZShvZSksdmU9ZGUoYWUpO2Z1bmN0aW9uIGdlKHQsbil7bnx8KG49W10pO3ZhciBlLHI9dD9NYXRoLm1pbihuLmxlbmd0aCx0Lmxlbmd0aCk6MCxpPW4uc2xpY2UoKTtyZXR1cm4gZnVuY3Rpb24obyl7Zm9yKGU9MDtlPHI7KytlKWlbZV09dFtlXSooMS1vKStuW2VdKm87cmV0dXJuIGl9fWZ1bmN0aW9uIHllKHQpe3JldHVybiBBcnJheUJ1ZmZlci5pc1ZpZXcodCkmJiEodCBpbnN0YW5jZW9mIERhdGFWaWV3KX1mdW5jdGlvbiBfZSh0LG4pe3ZhciBlLHI9bj9uLmxlbmd0aDowLGk9dD9NYXRoLm1pbihyLHQubGVuZ3RoKTowLG89bmV3IEFycmF5KGkpLGE9bmV3IEFycmF5KHIpO2ZvcihlPTA7ZTxpOysrZSlvW2VdPVRlKHRbZV0sbltlXSk7Zm9yKDtlPHI7KytlKWFbZV09bltlXTtyZXR1cm4gZnVuY3Rpb24odCl7Zm9yKGU9MDtlPGk7KytlKWFbZV09b1tlXSh0KTtyZXR1cm4gYX19ZnVuY3Rpb24gYmUodCxuKXt2YXIgZT1uZXcgRGF0ZTtyZXR1cm4gdD0rdCxuPStuLGZ1bmN0aW9uKHIpe3JldHVybiBlLnNldFRpbWUodCooMS1yKStuKnIpLGV9fWZ1bmN0aW9uIG1lKHQsbil7cmV0dXJuIHQ9K3Qsbj0rbixmdW5jdGlvbihlKXtyZXR1cm4gdCooMS1lKStuKmV9fWZ1bmN0aW9uIHhlKHQsbil7dmFyIGUscj17fSxpPXt9O2ZvcihlIGluIG51bGwhPT10JiZcIm9iamVjdFwiPT10eXBlb2YgdHx8KHQ9e30pLG51bGwhPT1uJiZcIm9iamVjdFwiPT10eXBlb2Ygbnx8KG49e30pLG4pZSBpbiB0P3JbZV09VGUodFtlXSxuW2VdKTppW2VdPW5bZV07cmV0dXJuIGZ1bmN0aW9uKHQpe2ZvcihlIGluIHIpaVtlXT1yW2VdKHQpO3JldHVybiBpfX12YXIgd2U9L1stK10/KD86XFxkK1xcLj9cXGQqfFxcLj9cXGQrKSg/OltlRV1bLStdP1xcZCspPy9nLE1lPW5ldyBSZWdFeHAod2Uuc291cmNlLFwiZ1wiKTtmdW5jdGlvbiBOZSh0LG4pe3ZhciBlLHIsaSxvPXdlLmxhc3RJbmRleD1NZS5sYXN0SW5kZXg9MCxhPS0xLHU9W10sYz1bXTtmb3IodCs9XCJcIixuKz1cIlwiOyhlPXdlLmV4ZWModCkpJiYocj1NZS5leGVjKG4pKTspKGk9ci5pbmRleCk+byYmKGk9bi5zbGljZShvLGkpLHVbYV0/dVthXSs9aTp1WysrYV09aSksKGU9ZVswXSk9PT0ocj1yWzBdKT91W2FdP3VbYV0rPXI6dVsrK2FdPXI6KHVbKythXT1udWxsLGMucHVzaCh7aTphLHg6bWUoZSxyKX0pKSxvPU1lLmxhc3RJbmRleDtyZXR1cm4gbzxuLmxlbmd0aCYmKGk9bi5zbGljZShvKSx1W2FdP3VbYV0rPWk6dVsrK2FdPWkpLHUubGVuZ3RoPDI/Y1swXT9mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIHQobikrXCJcIn19KGNbMF0ueCk6ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHR9fShuKToobj1jLmxlbmd0aCxmdW5jdGlvbih0KXtmb3IodmFyIGUscj0wO3I8bjsrK3IpdVsoZT1jW3JdKS5pXT1lLngodCk7cmV0dXJuIHUuam9pbihcIlwiKX0pfWZ1bmN0aW9uIFRlKHQsbil7dmFyIGUscj10eXBlb2YgbjtyZXR1cm4gbnVsbD09bnx8XCJib29sZWFuXCI9PT1yP3VlKG4pOihcIm51bWJlclwiPT09cj9tZTpcInN0cmluZ1wiPT09cj8oZT1wbihuKSk/KG49ZSxoZSk6TmU6biBpbnN0YW5jZW9mIHBuP2hlOm4gaW5zdGFuY2VvZiBEYXRlP2JlOnllKG4pP2dlOkFycmF5LmlzQXJyYXkobik/X2U6XCJmdW5jdGlvblwiIT10eXBlb2Ygbi52YWx1ZU9mJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBuLnRvU3RyaW5nfHxpc05hTihuKT94ZTptZSkodCxuKX1mdW5jdGlvbiBBZSh0LG4pe3JldHVybiB0PSt0LG49K24sZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgucm91bmQodCooMS1lKStuKmUpfX12YXIgU2Usa2UsRWUsQ2UsUGU9MTgwL01hdGguUEksemU9e3RyYW5zbGF0ZVg6MCx0cmFuc2xhdGVZOjAscm90YXRlOjAsc2tld1g6MCxzY2FsZVg6MSxzY2FsZVk6MX07ZnVuY3Rpb24gUmUodCxuLGUscixpLG8pe3ZhciBhLHUsYztyZXR1cm4oYT1NYXRoLnNxcnQodCp0K24qbikpJiYodC89YSxuLz1hKSwoYz10KmUrbipyKSYmKGUtPXQqYyxyLT1uKmMpLCh1PU1hdGguc3FydChlKmUrcipyKSkmJihlLz11LHIvPXUsYy89dSksdCpyPG4qZSYmKHQ9LXQsbj0tbixjPS1jLGE9LWEpLHt0cmFuc2xhdGVYOmksdHJhbnNsYXRlWTpvLHJvdGF0ZTpNYXRoLmF0YW4yKG4sdCkqUGUsc2tld1g6TWF0aC5hdGFuKGMpKlBlLHNjYWxlWDphLHNjYWxlWTp1fX1mdW5jdGlvbiBEZSh0LG4sZSxyKXtmdW5jdGlvbiBpKHQpe3JldHVybiB0Lmxlbmd0aD90LnBvcCgpK1wiIFwiOlwiXCJ9cmV0dXJuIGZ1bmN0aW9uKG8sYSl7dmFyIHU9W10sYz1bXTtyZXR1cm4gbz10KG8pLGE9dChhKSxmdW5jdGlvbih0LHIsaSxvLGEsdSl7aWYodCE9PWl8fHIhPT1vKXt2YXIgYz1hLnB1c2goXCJ0cmFuc2xhdGUoXCIsbnVsbCxuLG51bGwsZSk7dS5wdXNoKHtpOmMtNCx4Om1lKHQsaSl9LHtpOmMtMix4Om1lKHIsbyl9KX1lbHNlKGl8fG8pJiZhLnB1c2goXCJ0cmFuc2xhdGUoXCIraStuK28rZSl9KG8udHJhbnNsYXRlWCxvLnRyYW5zbGF0ZVksYS50cmFuc2xhdGVYLGEudHJhbnNsYXRlWSx1LGMpLGZ1bmN0aW9uKHQsbixlLG8pe3QhPT1uPyh0LW4+MTgwP24rPTM2MDpuLXQ+MTgwJiYodCs9MzYwKSxvLnB1c2goe2k6ZS5wdXNoKGkoZSkrXCJyb3RhdGUoXCIsbnVsbCxyKS0yLHg6bWUodCxuKX0pKTpuJiZlLnB1c2goaShlKStcInJvdGF0ZShcIituK3IpfShvLnJvdGF0ZSxhLnJvdGF0ZSx1LGMpLGZ1bmN0aW9uKHQsbixlLG8pe3QhPT1uP28ucHVzaCh7aTplLnB1c2goaShlKStcInNrZXdYKFwiLG51bGwsciktMix4Om1lKHQsbil9KTpuJiZlLnB1c2goaShlKStcInNrZXdYKFwiK24rcil9KG8uc2tld1gsYS5za2V3WCx1LGMpLGZ1bmN0aW9uKHQsbixlLHIsbyxhKXtpZih0IT09ZXx8biE9PXIpe3ZhciB1PW8ucHVzaChpKG8pK1wic2NhbGUoXCIsbnVsbCxcIixcIixudWxsLFwiKVwiKTthLnB1c2goe2k6dS00LHg6bWUodCxlKX0se2k6dS0yLHg6bWUobixyKX0pfWVsc2UgMT09PWUmJjE9PT1yfHxvLnB1c2goaShvKStcInNjYWxlKFwiK2UrXCIsXCIrcitcIilcIil9KG8uc2NhbGVYLG8uc2NhbGVZLGEuc2NhbGVYLGEuc2NhbGVZLHUsYyksbz1hPW51bGwsZnVuY3Rpb24odCl7Zm9yKHZhciBuLGU9LTEscj1jLmxlbmd0aDsrK2U8cjspdVsobj1jW2VdKS5pXT1uLngodCk7cmV0dXJuIHUuam9pbihcIlwiKX19fXZhciBxZT1EZShmdW5jdGlvbih0KXtyZXR1cm5cIm5vbmVcIj09PXQ/emU6KFNlfHwoU2U9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIkRJVlwiKSxrZT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsRWU9ZG9jdW1lbnQuZGVmYXVsdFZpZXcpLFNlLnN0eWxlLnRyYW5zZm9ybT10LHQ9RWUuZ2V0Q29tcHV0ZWRTdHlsZShrZS5hcHBlbmRDaGlsZChTZSksbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShcInRyYW5zZm9ybVwiKSxrZS5yZW1vdmVDaGlsZChTZSksUmUoKyh0PXQuc2xpY2UoNywtMSkuc3BsaXQoXCIsXCIpKVswXSwrdFsxXSwrdFsyXSwrdFszXSwrdFs0XSwrdFs1XSkpfSxcInB4LCBcIixcInB4KVwiLFwiZGVnKVwiKSxMZT1EZShmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD96ZTooQ2V8fChDZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwiZ1wiKSksQ2Uuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsdCksKHQ9Q2UudHJhbnNmb3JtLmJhc2VWYWwuY29uc29saWRhdGUoKSk/UmUoKHQ9dC5tYXRyaXgpLmEsdC5iLHQuYyx0LmQsdC5lLHQuZik6emUpfSxcIiwgXCIsXCIpXCIsXCIpXCIpLFVlPU1hdGguU1FSVDIsT2U9MixCZT00LEZlPTFlLTEyO2Z1bmN0aW9uIFllKHQpe3JldHVybigodD1NYXRoLmV4cCh0KSkrMS90KS8yfWZ1bmN0aW9uIEllKHQsbil7dmFyIGUscixpPXRbMF0sbz10WzFdLGE9dFsyXSx1PW5bMF0sYz1uWzFdLGY9blsyXSxzPXUtaSxsPWMtbyxoPXMqcytsKmw7aWYoaDxGZSlyPU1hdGgubG9nKGYvYSkvVWUsZT1mdW5jdGlvbih0KXtyZXR1cm5baSt0KnMsbyt0KmwsYSpNYXRoLmV4cChVZSp0KnIpXX07ZWxzZXt2YXIgZD1NYXRoLnNxcnQoaCkscD0oZipmLWEqYStCZSpoKS8oMiphKk9lKmQpLHY9KGYqZi1hKmEtQmUqaCkvKDIqZipPZSpkKSxnPU1hdGgubG9nKE1hdGguc3FydChwKnArMSktcCkseT1NYXRoLmxvZyhNYXRoLnNxcnQodip2KzEpLXYpO3I9KHktZykvVWUsZT1mdW5jdGlvbih0KXt2YXIgbj10KnIsZT1ZZShnKSx1PWEvKE9lKmQpKihlKmZ1bmN0aW9uKHQpe3JldHVybigodD1NYXRoLmV4cCgyKnQpKS0xKS8odCsxKX0oVWUqbitnKS1mdW5jdGlvbih0KXtyZXR1cm4oKHQ9TWF0aC5leHAodCkpLTEvdCkvMn0oZykpO3JldHVybltpK3UqcyxvK3UqbCxhKmUvWWUoVWUqbitnKV19fXJldHVybiBlLmR1cmF0aW9uPTFlMypyLGV9ZnVuY3Rpb24gSGUodCl7cmV0dXJuIGZ1bmN0aW9uKG4sZSl7dmFyIHI9dCgobj1UbihuKSkuaCwoZT1UbihlKSkuaCksaT1sZShuLnMsZS5zKSxvPWxlKG4ubCxlLmwpLGE9bGUobi5vcGFjaXR5LGUub3BhY2l0eSk7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBuLmg9cih0KSxuLnM9aSh0KSxuLmw9byh0KSxuLm9wYWNpdHk9YSh0KSxuK1wiXCJ9fX12YXIgamU9SGUoZmUpLFhlPUhlKGxlKTtmdW5jdGlvbiBWZSh0KXtyZXR1cm4gZnVuY3Rpb24obixlKXt2YXIgcj10KChuPVhuKG4pKS5oLChlPVhuKGUpKS5oKSxpPWxlKG4uYyxlLmMpLG89bGUobi5sLGUubCksYT1sZShuLm9wYWNpdHksZS5vcGFjaXR5KTtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIG4uaD1yKHQpLG4uYz1pKHQpLG4ubD1vKHQpLG4ub3BhY2l0eT1hKHQpLG4rXCJcIn19fXZhciBHZT1WZShmZSksJGU9VmUobGUpO2Z1bmN0aW9uIFdlKHQpe3JldHVybiBmdW5jdGlvbiBuKGUpe2Z1bmN0aW9uIHIobixyKXt2YXIgaT10KChuPWVlKG4pKS5oLChyPWVlKHIpKS5oKSxvPWxlKG4ucyxyLnMpLGE9bGUobi5sLHIubCksdT1sZShuLm9wYWNpdHksci5vcGFjaXR5KTtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIG4uaD1pKHQpLG4ucz1vKHQpLG4ubD1hKE1hdGgucG93KHQsZSkpLG4ub3BhY2l0eT11KHQpLG4rXCJcIn19cmV0dXJuIGU9K2Usci5nYW1tYT1uLHJ9KDEpfXZhciBaZT1XZShmZSksUWU9V2UobGUpO3ZhciBLZSxKZSx0cj0wLG5yPTAsZXI9MCxycj0xZTMsaXI9MCxvcj0wLGFyPTAsdXI9XCJvYmplY3RcIj09dHlwZW9mIHBlcmZvcm1hbmNlJiZwZXJmb3JtYW5jZS5ub3c/cGVyZm9ybWFuY2U6RGF0ZSxjcj1cIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lP3dpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuYmluZCh3aW5kb3cpOmZ1bmN0aW9uKHQpe3NldFRpbWVvdXQodCwxNyl9O2Z1bmN0aW9uIGZyKCl7cmV0dXJuIG9yfHwoY3Ioc3IpLG9yPXVyLm5vdygpK2FyKX1mdW5jdGlvbiBzcigpe29yPTB9ZnVuY3Rpb24gbHIoKXt0aGlzLl9jYWxsPXRoaXMuX3RpbWU9dGhpcy5fbmV4dD1udWxsfWZ1bmN0aW9uIGhyKHQsbixlKXt2YXIgcj1uZXcgbHI7cmV0dXJuIHIucmVzdGFydCh0LG4sZSkscn1mdW5jdGlvbiBkcigpe2ZyKCksKyt0cjtmb3IodmFyIHQsbj1LZTtuOykodD1vci1uLl90aW1lKT49MCYmbi5fY2FsbC5jYWxsKG51bGwsdCksbj1uLl9uZXh0Oy0tdHJ9ZnVuY3Rpb24gcHIoKXtvcj0oaXI9dXIubm93KCkpK2FyLHRyPW5yPTA7dHJ5e2RyKCl9ZmluYWxseXt0cj0wLGZ1bmN0aW9uKCl7dmFyIHQsbixlPUtlLHI9MS8wO2Zvcig7ZTspZS5fY2FsbD8ocj5lLl90aW1lJiYocj1lLl90aW1lKSx0PWUsZT1lLl9uZXh0KToobj1lLl9uZXh0LGUuX25leHQ9bnVsbCxlPXQ/dC5fbmV4dD1uOktlPW4pO0plPXQsZ3Iocil9KCksb3I9MH19ZnVuY3Rpb24gdnIoKXt2YXIgdD11ci5ub3coKSxuPXQtaXI7bj5yciYmKGFyLT1uLGlyPXQpfWZ1bmN0aW9uIGdyKHQpe3RyfHwobnImJihucj1jbGVhclRpbWVvdXQobnIpKSx0LW9yPjI0Pyh0PDEvMCYmKG5yPXNldFRpbWVvdXQocHIsdC11ci5ub3coKS1hcikpLGVyJiYoZXI9Y2xlYXJJbnRlcnZhbChlcikpKTooZXJ8fChpcj11ci5ub3coKSxlcj1zZXRJbnRlcnZhbCh2cixycikpLHRyPTEsY3IocHIpKSl9ZnVuY3Rpb24geXIodCxuLGUpe3ZhciByPW5ldyBscjtyZXR1cm4gbj1udWxsPT1uPzA6K24sci5yZXN0YXJ0KGZ1bmN0aW9uKGUpe3Iuc3RvcCgpLHQoZStuKX0sbixlKSxyfWxyLnByb3RvdHlwZT1oci5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmxyLHJlc3RhcnQ6ZnVuY3Rpb24odCxuLGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcihcImNhbGxiYWNrIGlzIG5vdCBhIGZ1bmN0aW9uXCIpO2U9KG51bGw9PWU/ZnIoKTorZSkrKG51bGw9PW4/MDorbiksdGhpcy5fbmV4dHx8SmU9PT10aGlzfHwoSmU/SmUuX25leHQ9dGhpczpLZT10aGlzLEplPXRoaXMpLHRoaXMuX2NhbGw9dCx0aGlzLl90aW1lPWUsZ3IoKX0sc3RvcDpmdW5jdGlvbigpe3RoaXMuX2NhbGwmJih0aGlzLl9jYWxsPW51bGwsdGhpcy5fdGltZT0xLzAsZ3IoKSl9fTt2YXIgX3I9SShcInN0YXJ0XCIsXCJlbmRcIixcImNhbmNlbFwiLFwiaW50ZXJydXB0XCIpLGJyPVtdLG1yPTAseHI9MSx3cj0yLE1yPTMsTnI9NCxUcj01LEFyPTY7ZnVuY3Rpb24gU3IodCxuLGUscixpLG8pe3ZhciBhPXQuX190cmFuc2l0aW9uO2lmKGEpe2lmKGUgaW4gYSlyZXR1cm59ZWxzZSB0Ll9fdHJhbnNpdGlvbj17fTshZnVuY3Rpb24odCxuLGUpe3ZhciByLGk9dC5fX3RyYW5zaXRpb247ZnVuY3Rpb24gbyhjKXt2YXIgZixzLGwsaDtpZihlLnN0YXRlIT09eHIpcmV0dXJuIHUoKTtmb3IoZiBpbiBpKWlmKChoPWlbZl0pLm5hbWU9PT1lLm5hbWUpe2lmKGguc3RhdGU9PT1NcilyZXR1cm4geXIobyk7aC5zdGF0ZT09PU5yPyhoLnN0YXRlPUFyLGgudGltZXIuc3RvcCgpLGgub24uY2FsbChcImludGVycnVwdFwiLHQsdC5fX2RhdGFfXyxoLmluZGV4LGguZ3JvdXApLGRlbGV0ZSBpW2ZdKTorZjxuJiYoaC5zdGF0ZT1BcixoLnRpbWVyLnN0b3AoKSxoLm9uLmNhbGwoXCJjYW5jZWxcIix0LHQuX19kYXRhX18saC5pbmRleCxoLmdyb3VwKSxkZWxldGUgaVtmXSl9aWYoeXIoZnVuY3Rpb24oKXtlLnN0YXRlPT09TXImJihlLnN0YXRlPU5yLGUudGltZXIucmVzdGFydChhLGUuZGVsYXksZS50aW1lKSxhKGMpKX0pLGUuc3RhdGU9d3IsZS5vbi5jYWxsKFwic3RhcnRcIix0LHQuX19kYXRhX18sZS5pbmRleCxlLmdyb3VwKSxlLnN0YXRlPT09d3Ipe2ZvcihlLnN0YXRlPU1yLHI9bmV3IEFycmF5KGw9ZS50d2Vlbi5sZW5ndGgpLGY9MCxzPS0xO2Y8bDsrK2YpKGg9ZS50d2VlbltmXS52YWx1ZS5jYWxsKHQsdC5fX2RhdGFfXyxlLmluZGV4LGUuZ3JvdXApKSYmKHJbKytzXT1oKTtyLmxlbmd0aD1zKzF9fWZ1bmN0aW9uIGEobil7Zm9yKHZhciBpPW48ZS5kdXJhdGlvbj9lLmVhc2UuY2FsbChudWxsLG4vZS5kdXJhdGlvbik6KGUudGltZXIucmVzdGFydCh1KSxlLnN0YXRlPVRyLDEpLG89LTEsYT1yLmxlbmd0aDsrK288YTspcltvXS5jYWxsKHQsaSk7ZS5zdGF0ZT09PVRyJiYoZS5vbi5jYWxsKFwiZW5kXCIsdCx0Ll9fZGF0YV9fLGUuaW5kZXgsZS5ncm91cCksdSgpKX1mdW5jdGlvbiB1KCl7Zm9yKHZhciByIGluIGUuc3RhdGU9QXIsZS50aW1lci5zdG9wKCksZGVsZXRlIGlbbl0saSlyZXR1cm47ZGVsZXRlIHQuX190cmFuc2l0aW9ufWlbbl09ZSxlLnRpbWVyPWhyKGZ1bmN0aW9uKHQpe2Uuc3RhdGU9eHIsZS50aW1lci5yZXN0YXJ0KG8sZS5kZWxheSxlLnRpbWUpLGUuZGVsYXk8PXQmJm8odC1lLmRlbGF5KX0sMCxlLnRpbWUpfSh0LGUse25hbWU6bixpbmRleDpyLGdyb3VwOmksb246X3IsdHdlZW46YnIsdGltZTpvLnRpbWUsZGVsYXk6by5kZWxheSxkdXJhdGlvbjpvLmR1cmF0aW9uLGVhc2U6by5lYXNlLHRpbWVyOm51bGwsc3RhdGU6bXJ9KX1mdW5jdGlvbiBrcih0LG4pe3ZhciBlPUNyKHQsbik7aWYoZS5zdGF0ZT5tcil0aHJvdyBuZXcgRXJyb3IoXCJ0b28gbGF0ZTsgYWxyZWFkeSBzY2hlZHVsZWRcIik7cmV0dXJuIGV9ZnVuY3Rpb24gRXIodCxuKXt2YXIgZT1Dcih0LG4pO2lmKGUuc3RhdGU+TXIpdGhyb3cgbmV3IEVycm9yKFwidG9vIGxhdGU7IGFscmVhZHkgcnVubmluZ1wiKTtyZXR1cm4gZX1mdW5jdGlvbiBDcih0LG4pe3ZhciBlPXQuX190cmFuc2l0aW9uO2lmKCFlfHwhKGU9ZVtuXSkpdGhyb3cgbmV3IEVycm9yKFwidHJhbnNpdGlvbiBub3QgZm91bmRcIik7cmV0dXJuIGV9ZnVuY3Rpb24gUHIodCxuKXt2YXIgZSxyLGksbz10Ll9fdHJhbnNpdGlvbixhPSEwO2lmKG8pe2ZvcihpIGluIG49bnVsbD09bj9udWxsOm4rXCJcIixvKShlPW9baV0pLm5hbWU9PT1uPyhyPWUuc3RhdGU+d3ImJmUuc3RhdGU8VHIsZS5zdGF0ZT1BcixlLnRpbWVyLnN0b3AoKSxlLm9uLmNhbGwocj9cImludGVycnVwdFwiOlwiY2FuY2VsXCIsdCx0Ll9fZGF0YV9fLGUuaW5kZXgsZS5ncm91cCksZGVsZXRlIG9baV0pOmE9ITE7YSYmZGVsZXRlIHQuX190cmFuc2l0aW9ufX1mdW5jdGlvbiB6cih0LG4sZSl7dmFyIHI9dC5faWQ7cmV0dXJuIHQuZWFjaChmdW5jdGlvbigpe3ZhciB0PUVyKHRoaXMscik7KHQudmFsdWV8fCh0LnZhbHVlPXt9KSlbbl09ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KSxmdW5jdGlvbih0KXtyZXR1cm4gQ3IodCxyKS52YWx1ZVtuXX19ZnVuY3Rpb24gUnIodCxuKXt2YXIgZTtyZXR1cm4oXCJudW1iZXJcIj09dHlwZW9mIG4/bWU6biBpbnN0YW5jZW9mIHBuP2hlOihlPXBuKG4pKT8obj1lLGhlKTpOZSkodCxuKX12YXIgRHI9enQucHJvdG90eXBlLmNvbnN0cnVjdG9yO2Z1bmN0aW9uIHFyKHQpe3JldHVybiBmdW5jdGlvbigpe3RoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCl9fXZhciBMcj0wO2Z1bmN0aW9uIFVyKHQsbixlLHIpe3RoaXMuX2dyb3Vwcz10LHRoaXMuX3BhcmVudHM9bix0aGlzLl9uYW1lPWUsdGhpcy5faWQ9cn1mdW5jdGlvbiBPcih0KXtyZXR1cm4genQoKS50cmFuc2l0aW9uKHQpfWZ1bmN0aW9uIEJyKCl7cmV0dXJuKytMcn12YXIgRnI9enQucHJvdG90eXBlO2Z1bmN0aW9uIFlyKHQpe3JldHVybigodCo9Mik8PTE/dCp0Oi0tdCooMi10KSsxKS8yfWZ1bmN0aW9uIElyKHQpe3JldHVybigodCo9Mik8PTE/dCp0KnQ6KHQtPTIpKnQqdCsyKS8yfVVyLnByb3RvdHlwZT1Pci5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlVyLHNlbGVjdDpmdW5jdGlvbih0KXt2YXIgbj10aGlzLl9uYW1lLGU9dGhpcy5faWQ7XCJmdW5jdGlvblwiIT10eXBlb2YgdCYmKHQ9Syh0KSk7Zm9yKHZhciByPXRoaXMuX2dyb3VwcyxpPXIubGVuZ3RoLG89bmV3IEFycmF5KGkpLGE9MDthPGk7KythKWZvcih2YXIgdSxjLGY9clthXSxzPWYubGVuZ3RoLGw9b1thXT1uZXcgQXJyYXkocyksaD0wO2g8czsrK2gpKHU9ZltoXSkmJihjPXQuY2FsbCh1LHUuX19kYXRhX18saCxmKSkmJihcIl9fZGF0YV9fXCJpbiB1JiYoYy5fX2RhdGFfXz11Ll9fZGF0YV9fKSxsW2hdPWMsU3IobFtoXSxuLGUsaCxsLENyKHUsZSkpKTtyZXR1cm4gbmV3IFVyKG8sdGhpcy5fcGFyZW50cyxuLGUpfSxzZWxlY3RBbGw6ZnVuY3Rpb24odCl7dmFyIG49dGhpcy5fbmFtZSxlPXRoaXMuX2lkO1wiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJih0PXR0KHQpKTtmb3IodmFyIHI9dGhpcy5fZ3JvdXBzLGk9ci5sZW5ndGgsbz1bXSxhPVtdLHU9MDt1PGk7Kyt1KWZvcih2YXIgYyxmPXJbdV0scz1mLmxlbmd0aCxsPTA7bDxzOysrbClpZihjPWZbbF0pe2Zvcih2YXIgaCxkPXQuY2FsbChjLGMuX19kYXRhX18sbCxmKSxwPUNyKGMsZSksdj0wLGc9ZC5sZW5ndGg7djxnOysrdikoaD1kW3ZdKSYmU3IoaCxuLGUsdixkLHApO28ucHVzaChkKSxhLnB1c2goYyl9cmV0dXJuIG5ldyBVcihvLGEsbixlKX0sZmlsdGVyOmZ1bmN0aW9uKHQpe1wiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJih0PW50KHQpKTtmb3IodmFyIG49dGhpcy5fZ3JvdXBzLGU9bi5sZW5ndGgscj1uZXcgQXJyYXkoZSksaT0wO2k8ZTsrK2kpZm9yKHZhciBvLGE9bltpXSx1PWEubGVuZ3RoLGM9cltpXT1bXSxmPTA7Zjx1OysrZikobz1hW2ZdKSYmdC5jYWxsKG8sby5fX2RhdGFfXyxmLGEpJiZjLnB1c2gobyk7cmV0dXJuIG5ldyBVcihyLHRoaXMuX3BhcmVudHMsdGhpcy5fbmFtZSx0aGlzLl9pZCl9LG1lcmdlOmZ1bmN0aW9uKHQpe2lmKHQuX2lkIT09dGhpcy5faWQpdGhyb3cgbmV3IEVycm9yO2Zvcih2YXIgbj10aGlzLl9ncm91cHMsZT10Ll9ncm91cHMscj1uLmxlbmd0aCxpPWUubGVuZ3RoLG89TWF0aC5taW4ocixpKSxhPW5ldyBBcnJheShyKSx1PTA7dTxvOysrdSlmb3IodmFyIGMsZj1uW3VdLHM9ZVt1XSxsPWYubGVuZ3RoLGg9YVt1XT1uZXcgQXJyYXkobCksZD0wO2Q8bDsrK2QpKGM9ZltkXXx8c1tkXSkmJihoW2RdPWMpO2Zvcig7dTxyOysrdSlhW3VdPW5bdV07cmV0dXJuIG5ldyBVcihhLHRoaXMuX3BhcmVudHMsdGhpcy5fbmFtZSx0aGlzLl9pZCl9LHNlbGVjdGlvbjpmdW5jdGlvbigpe3JldHVybiBuZXcgRHIodGhpcy5fZ3JvdXBzLHRoaXMuX3BhcmVudHMpfSx0cmFuc2l0aW9uOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX25hbWUsbj10aGlzLl9pZCxlPUJyKCkscj10aGlzLl9ncm91cHMsaT1yLmxlbmd0aCxvPTA7bzxpOysrbylmb3IodmFyIGEsdT1yW29dLGM9dS5sZW5ndGgsZj0wO2Y8YzsrK2YpaWYoYT11W2ZdKXt2YXIgcz1DcihhLG4pO1NyKGEsdCxlLGYsdSx7dGltZTpzLnRpbWUrcy5kZWxheStzLmR1cmF0aW9uLGRlbGF5OjAsZHVyYXRpb246cy5kdXJhdGlvbixlYXNlOnMuZWFzZX0pfXJldHVybiBuZXcgVXIocix0aGlzLl9wYXJlbnRzLHQsZSl9LGNhbGw6RnIuY2FsbCxub2RlczpGci5ub2Rlcyxub2RlOkZyLm5vZGUsc2l6ZTpGci5zaXplLGVtcHR5OkZyLmVtcHR5LGVhY2g6RnIuZWFjaCxvbjpmdW5jdGlvbih0LG4pe3ZhciBlPXRoaXMuX2lkO3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDI/Q3IodGhpcy5ub2RlKCksZSkub24ub24odCk6dGhpcy5lYWNoKGZ1bmN0aW9uKHQsbixlKXt2YXIgcixpLG89ZnVuY3Rpb24odCl7cmV0dXJuKHQrXCJcIikudHJpbSgpLnNwbGl0KC9efFxccysvKS5ldmVyeShmdW5jdGlvbih0KXt2YXIgbj10LmluZGV4T2YoXCIuXCIpO3JldHVybiBuPj0wJiYodD10LnNsaWNlKDAsbikpLCF0fHxcInN0YXJ0XCI9PT10fSl9KG4pP2tyOkVyO3JldHVybiBmdW5jdGlvbigpe3ZhciBhPW8odGhpcyx0KSx1PWEub247dSE9PXImJihpPShyPXUpLmNvcHkoKSkub24obixlKSxhLm9uPWl9fShlLHQsbikpfSxhdHRyOmZ1bmN0aW9uKHQsbil7dmFyIGU9Vyh0KSxyPVwidHJhbnNmb3JtXCI9PT1lP0xlOlJyO3JldHVybiB0aGlzLmF0dHJUd2Vlbih0LFwiZnVuY3Rpb25cIj09dHlwZW9mIG4/KGUubG9jYWw/ZnVuY3Rpb24odCxuLGUpe3ZhciByLGksbztyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYSx1LGM9ZSh0aGlzKTtpZihudWxsIT1jKXJldHVybihhPXRoaXMuZ2V0QXR0cmlidXRlTlModC5zcGFjZSx0LmxvY2FsKSk9PT0odT1jK1wiXCIpP251bGw6YT09PXImJnU9PT1pP286KGk9dSxvPW4ocj1hLGMpKTt0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKHQuc3BhY2UsdC5sb2NhbCl9fTpmdW5jdGlvbih0LG4sZSl7dmFyIHIsaSxvO3JldHVybiBmdW5jdGlvbigpe3ZhciBhLHUsYz1lKHRoaXMpO2lmKG51bGwhPWMpcmV0dXJuKGE9dGhpcy5nZXRBdHRyaWJ1dGUodCkpPT09KHU9YytcIlwiKT9udWxsOmE9PT1yJiZ1PT09aT9vOihpPXUsbz1uKHI9YSxjKSk7dGhpcy5yZW1vdmVBdHRyaWJ1dGUodCl9fSkoZSxyLHpyKHRoaXMsXCJhdHRyLlwiK3QsbikpOm51bGw9PW4/KGUubG9jYWw/ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyh0LnNwYWNlLHQubG9jYWwpfX06ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVBdHRyaWJ1dGUodCl9fSkoZSk6KGUubG9jYWw/ZnVuY3Rpb24odCxuLGUpe3ZhciByLGksbz1lK1wiXCI7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5nZXRBdHRyaWJ1dGVOUyh0LnNwYWNlLHQubG9jYWwpO3JldHVybiBhPT09bz9udWxsOmE9PT1yP2k6aT1uKHI9YSxlKX19OmZ1bmN0aW9uKHQsbixlKXt2YXIgcixpLG89ZStcIlwiO3JldHVybiBmdW5jdGlvbigpe3ZhciBhPXRoaXMuZ2V0QXR0cmlidXRlKHQpO3JldHVybiBhPT09bz9udWxsOmE9PT1yP2k6aT1uKHI9YSxlKX19KShlLHIsbikpfSxhdHRyVHdlZW46ZnVuY3Rpb24odCxuKXt2YXIgZT1cImF0dHIuXCIrdDtpZihhcmd1bWVudHMubGVuZ3RoPDIpcmV0dXJuKGU9dGhpcy50d2VlbihlKSkmJmUuX3ZhbHVlO2lmKG51bGw9PW4pcmV0dXJuIHRoaXMudHdlZW4oZSxudWxsKTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuKXRocm93IG5ldyBFcnJvcjt2YXIgcj1XKHQpO3JldHVybiB0aGlzLnR3ZWVuKGUsKHIubG9jYWw/ZnVuY3Rpb24odCxuKXt2YXIgZSxyO2Z1bmN0aW9uIGkoKXt2YXIgaT1uLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gaSE9PXImJihlPShyPWkpJiZmdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbihlKXt0aGlzLnNldEF0dHJpYnV0ZU5TKHQuc3BhY2UsdC5sb2NhbCxuLmNhbGwodGhpcyxlKSl9fSh0LGkpKSxlfXJldHVybiBpLl92YWx1ZT1uLGl9OmZ1bmN0aW9uKHQsbil7dmFyIGUscjtmdW5jdGlvbiBpKCl7dmFyIGk9bi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGkhPT1yJiYoZT0ocj1pKSYmZnVuY3Rpb24odCxuKXtyZXR1cm4gZnVuY3Rpb24oZSl7dGhpcy5zZXRBdHRyaWJ1dGUodCxuLmNhbGwodGhpcyxlKSl9fSh0LGkpKSxlfXJldHVybiBpLl92YWx1ZT1uLGl9KShyLG4pKX0sc3R5bGU6ZnVuY3Rpb24odCxuLGUpe3ZhciByPVwidHJhbnNmb3JtXCI9PSh0Kz1cIlwiKT9xZTpScjtyZXR1cm4gbnVsbD09bj90aGlzLnN0eWxlVHdlZW4odCxmdW5jdGlvbih0LG4pe3ZhciBlLHIsaTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbz1mdCh0aGlzLHQpLGE9KHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCksZnQodGhpcyx0KSk7cmV0dXJuIG89PT1hP251bGw6bz09PWUmJmE9PT1yP2k6aT1uKGU9byxyPWEpfX0odCxyKSkub24oXCJlbmQuc3R5bGUuXCIrdCxxcih0KSk6XCJmdW5jdGlvblwiPT10eXBlb2Ygbj90aGlzLnN0eWxlVHdlZW4odCxmdW5jdGlvbih0LG4sZSl7dmFyIHIsaSxvO3JldHVybiBmdW5jdGlvbigpe3ZhciBhPWZ0KHRoaXMsdCksdT1lKHRoaXMpLGM9dStcIlwiO3JldHVybiBudWxsPT11JiYodGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eSh0KSxjPXU9ZnQodGhpcyx0KSksYT09PWM/bnVsbDphPT09ciYmYz09PWk/bzooaT1jLG89bihyPWEsdSkpfX0odCxyLHpyKHRoaXMsXCJzdHlsZS5cIit0LG4pKSkuZWFjaChmdW5jdGlvbih0LG4pe3ZhciBlLHIsaSxvLGE9XCJzdHlsZS5cIituLHU9XCJlbmQuXCIrYTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1Fcih0aGlzLHQpLGY9Yy5vbixzPW51bGw9PWMudmFsdWVbYV0/b3x8KG89cXIobikpOnZvaWQgMDtmPT09ZSYmaT09PXN8fChyPShlPWYpLmNvcHkoKSkub24odSxpPXMpLGMub249cn19KHRoaXMuX2lkLHQpKTp0aGlzLnN0eWxlVHdlZW4odCxmdW5jdGlvbih0LG4sZSl7dmFyIHIsaSxvPWUrXCJcIjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYT1mdCh0aGlzLHQpO3JldHVybiBhPT09bz9udWxsOmE9PT1yP2k6aT1uKHI9YSxlKX19KHQscixuKSxlKS5vbihcImVuZC5zdHlsZS5cIit0LG51bGwpfSxzdHlsZVR3ZWVuOmZ1bmN0aW9uKHQsbixlKXt2YXIgcj1cInN0eWxlLlwiKyh0Kz1cIlwiKTtpZihhcmd1bWVudHMubGVuZ3RoPDIpcmV0dXJuKHI9dGhpcy50d2VlbihyKSkmJnIuX3ZhbHVlO2lmKG51bGw9PW4pcmV0dXJuIHRoaXMudHdlZW4ocixudWxsKTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuKXRocm93IG5ldyBFcnJvcjtyZXR1cm4gdGhpcy50d2VlbihyLGZ1bmN0aW9uKHQsbixlKXt2YXIgcixpO2Z1bmN0aW9uIG8oKXt2YXIgbz1uLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gbyE9PWkmJihyPShpPW8pJiZmdW5jdGlvbih0LG4sZSl7cmV0dXJuIGZ1bmN0aW9uKHIpe3RoaXMuc3R5bGUuc2V0UHJvcGVydHkodCxuLmNhbGwodGhpcyxyKSxlKX19KHQsbyxlKSkscn1yZXR1cm4gby5fdmFsdWU9bixvfSh0LG4sbnVsbD09ZT9cIlwiOmUpKX0sdGV4dDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50d2VlbihcInRleHRcIixcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P2Z1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXQodGhpcyk7dGhpcy50ZXh0Q29udGVudD1udWxsPT1uP1wiXCI6bn19KHpyKHRoaXMsXCJ0ZXh0XCIsdCkpOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3RoaXMudGV4dENvbnRlbnQ9dH19KG51bGw9PXQ/XCJcIjp0K1wiXCIpKX0sdGV4dFR3ZWVuOmZ1bmN0aW9uKHQpe3ZhciBuPVwidGV4dFwiO2lmKGFyZ3VtZW50cy5sZW5ndGg8MSlyZXR1cm4obj10aGlzLnR3ZWVuKG4pKSYmbi5fdmFsdWU7aWYobnVsbD09dClyZXR1cm4gdGhpcy50d2VlbihuLG51bGwpO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgbmV3IEVycm9yO3JldHVybiB0aGlzLnR3ZWVuKG4sZnVuY3Rpb24odCl7dmFyIG4sZTtmdW5jdGlvbiByKCl7dmFyIHI9dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIHIhPT1lJiYobj0oZT1yKSYmZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKG4pe3RoaXMudGV4dENvbnRlbnQ9dC5jYWxsKHRoaXMsbil9fShyKSksbn1yZXR1cm4gci5fdmFsdWU9dCxyfSh0KSl9LHJlbW92ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9uKFwiZW5kLnJlbW92ZVwiLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXMucGFyZW50Tm9kZTtmb3IodmFyIGUgaW4gdGhpcy5fX3RyYW5zaXRpb24paWYoK2UhPT10KXJldHVybjtuJiZuLnJlbW92ZUNoaWxkKHRoaXMpfX0odGhpcy5faWQpKX0sdHdlZW46ZnVuY3Rpb24odCxuKXt2YXIgZT10aGlzLl9pZDtpZih0Kz1cIlwiLGFyZ3VtZW50cy5sZW5ndGg8Mil7Zm9yKHZhciByLGk9Q3IodGhpcy5ub2RlKCksZSkudHdlZW4sbz0wLGE9aS5sZW5ndGg7bzxhOysrbylpZigocj1pW29dKS5uYW1lPT09dClyZXR1cm4gci52YWx1ZTtyZXR1cm4gbnVsbH1yZXR1cm4gdGhpcy5lYWNoKChudWxsPT1uP2Z1bmN0aW9uKHQsbil7dmFyIGUscjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgaT1Fcih0aGlzLHQpLG89aS50d2VlbjtpZihvIT09ZSlmb3IodmFyIGE9MCx1PShyPWU9bykubGVuZ3RoO2E8dTsrK2EpaWYoclthXS5uYW1lPT09bil7KHI9ci5zbGljZSgpKS5zcGxpY2UoYSwxKTticmVha31pLnR3ZWVuPXJ9fTpmdW5jdGlvbih0LG4sZSl7dmFyIHIsaTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXRocm93IG5ldyBFcnJvcjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbz1Fcih0aGlzLHQpLGE9by50d2VlbjtpZihhIT09cil7aT0ocj1hKS5zbGljZSgpO2Zvcih2YXIgdT17bmFtZTpuLHZhbHVlOmV9LGM9MCxmPWkubGVuZ3RoO2M8ZjsrK2MpaWYoaVtjXS5uYW1lPT09bil7aVtjXT11O2JyZWFrfWM9PT1mJiZpLnB1c2godSl9by50d2Vlbj1pfX0pKGUsdCxuKSl9LGRlbGF5OmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMuX2lkO3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMuZWFjaCgoXCJmdW5jdGlvblwiPT10eXBlb2YgdD9mdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpe2tyKHRoaXMsdCkuZGVsYXk9K24uYXBwbHkodGhpcyxhcmd1bWVudHMpfX06ZnVuY3Rpb24odCxuKXtyZXR1cm4gbj0rbixmdW5jdGlvbigpe2tyKHRoaXMsdCkuZGVsYXk9bn19KShuLHQpKTpDcih0aGlzLm5vZGUoKSxuKS5kZWxheX0sZHVyYXRpb246ZnVuY3Rpb24odCl7dmFyIG49dGhpcy5faWQ7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lYWNoKChcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P2Z1bmN0aW9uKHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7RXIodGhpcyx0KS5kdXJhdGlvbj0rbi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fTpmdW5jdGlvbih0LG4pe3JldHVybiBuPStuLGZ1bmN0aW9uKCl7RXIodGhpcyx0KS5kdXJhdGlvbj1ufX0pKG4sdCkpOkNyKHRoaXMubm9kZSgpLG4pLmR1cmF0aW9ufSxlYXNlOmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMuX2lkO3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMuZWFjaChmdW5jdGlvbih0LG4pe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4pdGhyb3cgbmV3IEVycm9yO3JldHVybiBmdW5jdGlvbigpe0VyKHRoaXMsdCkuZWFzZT1ufX0obix0KSk6Q3IodGhpcy5ub2RlKCksbikuZWFzZX0sZW5kOmZ1bmN0aW9uKCl7dmFyIHQsbixlPXRoaXMscj1lLl9pZCxpPWUuc2l6ZSgpO3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihvLGEpe3ZhciB1PXt2YWx1ZTphfSxjPXt2YWx1ZTpmdW5jdGlvbigpezA9PS0taSYmbygpfX07ZS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9RXIodGhpcyxyKSxpPWUub247aSE9PXQmJigobj0odD1pKS5jb3B5KCkpLl8uY2FuY2VsLnB1c2godSksbi5fLmludGVycnVwdC5wdXNoKHUpLG4uXy5lbmQucHVzaChjKSksZS5vbj1ufSl9KX19O3ZhciBIcj1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIE1hdGgucG93KHQsbil9cmV0dXJuIG49K24sZS5leHBvbmVudD10LGV9KDMpLGpyPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gMS1NYXRoLnBvdygxLXQsbil9cmV0dXJuIG49K24sZS5leHBvbmVudD10LGV9KDMpLFhyPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4oKHQqPTIpPD0xP01hdGgucG93KHQsbik6Mi1NYXRoLnBvdygyLXQsbikpLzJ9cmV0dXJuIG49K24sZS5leHBvbmVudD10LGV9KDMpLFZyPU1hdGguUEksR3I9VnIvMjtmdW5jdGlvbiAkcih0KXtyZXR1cm4oMS1NYXRoLmNvcyhWcip0KSkvMn1mdW5jdGlvbiBXcih0KXtyZXR1cm4oKHQqPTIpPD0xP01hdGgucG93KDIsMTAqdC0xMCk6Mi1NYXRoLnBvdygyLDEwLTEwKnQpKS8yfWZ1bmN0aW9uIFpyKHQpe3JldHVybigodCo9Mik8PTE/MS1NYXRoLnNxcnQoMS10KnQpOk1hdGguc3FydCgxLSh0LT0yKSp0KSsxKS8yfXZhciBRcj00LzExLEtyPTYvMTEsSnI9OC8xMSx0aT0uNzUsbmk9OS8xMSxlaT0xMC8xMSxyaT0uOTM3NSxpaT0yMS8yMixvaT02My82NCxhaT0xL1FyL1FyO2Z1bmN0aW9uIHVpKHQpe3JldHVybih0PSt0KTxRcj9haSp0KnQ6dDxKcj9haSoodC09S3IpKnQrdGk6dDxlaT9haSoodC09bmkpKnQrcmk6YWkqKHQtPWlpKSp0K29pfXZhciBjaT1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIHQqdCooKG4rMSkqdC1uKX1yZXR1cm4gbj0rbixlLm92ZXJzaG9vdD10LGV9KDEuNzAxNTgpLGZpPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4tLXQqdCooKG4rMSkqdCtuKSsxfXJldHVybiBuPStuLGUub3ZlcnNob290PXQsZX0oMS43MDE1OCksc2k9ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQpe3JldHVybigodCo9Mik8MT90KnQqKChuKzEpKnQtbik6KHQtPTIpKnQqKChuKzEpKnQrbikrMikvMn1yZXR1cm4gbj0rbixlLm92ZXJzaG9vdD10LGV9KDEuNzAxNTgpLGxpPTIqTWF0aC5QSSxoaT1mdW5jdGlvbiB0KG4sZSl7dmFyIHI9TWF0aC5hc2luKDEvKG49TWF0aC5tYXgoMSxuKSkpKihlLz1saSk7ZnVuY3Rpb24gaSh0KXtyZXR1cm4gbipNYXRoLnBvdygyLDEwKi0tdCkqTWF0aC5zaW4oKHItdCkvZSl9cmV0dXJuIGkuYW1wbGl0dWRlPWZ1bmN0aW9uKG4pe3JldHVybiB0KG4sZSpsaSl9LGkucGVyaW9kPWZ1bmN0aW9uKGUpe3JldHVybiB0KG4sZSl9LGl9KDEsLjMpLGRpPWZ1bmN0aW9uIHQobixlKXt2YXIgcj1NYXRoLmFzaW4oMS8obj1NYXRoLm1heCgxLG4pKSkqKGUvPWxpKTtmdW5jdGlvbiBpKHQpe3JldHVybiAxLW4qTWF0aC5wb3coMiwtMTAqKHQ9K3QpKSpNYXRoLnNpbigodCtyKS9lKX1yZXR1cm4gaS5hbXBsaXR1ZGU9ZnVuY3Rpb24obil7cmV0dXJuIHQobixlKmxpKX0saS5wZXJpb2Q9ZnVuY3Rpb24oZSl7cmV0dXJuIHQobixlKX0saX0oMSwuMykscGk9ZnVuY3Rpb24gdChuLGUpe3ZhciByPU1hdGguYXNpbigxLyhuPU1hdGgubWF4KDEsbikpKSooZS89bGkpO2Z1bmN0aW9uIGkodCl7cmV0dXJuKCh0PTIqdC0xKTwwP24qTWF0aC5wb3coMiwxMCp0KSpNYXRoLnNpbigoci10KS9lKToyLW4qTWF0aC5wb3coMiwtMTAqdCkqTWF0aC5zaW4oKHIrdCkvZSkpLzJ9cmV0dXJuIGkuYW1wbGl0dWRlPWZ1bmN0aW9uKG4pe3JldHVybiB0KG4sZSpsaSl9LGkucGVyaW9kPWZ1bmN0aW9uKGUpe3JldHVybiB0KG4sZSl9LGl9KDEsLjMpLHZpPXt0aW1lOm51bGwsZGVsYXk6MCxkdXJhdGlvbjoyNTAsZWFzZTpJcn07ZnVuY3Rpb24gZ2kodCxuKXtmb3IodmFyIGU7IShlPXQuX190cmFuc2l0aW9uKXx8IShlPWVbbl0pOylpZighKHQ9dC5wYXJlbnROb2RlKSlyZXR1cm4gdmkudGltZT1mcigpLHZpO3JldHVybiBlfXp0LnByb3RvdHlwZS5pbnRlcnJ1cHQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe1ByKHRoaXMsdCl9KX0senQucHJvdG90eXBlLnRyYW5zaXRpb249ZnVuY3Rpb24odCl7dmFyIG4sZTt0IGluc3RhbmNlb2YgVXI/KG49dC5faWQsdD10Ll9uYW1lKToobj1CcigpLChlPXZpKS50aW1lPWZyKCksdD1udWxsPT10P251bGw6dCtcIlwiKTtmb3IodmFyIHI9dGhpcy5fZ3JvdXBzLGk9ci5sZW5ndGgsbz0wO288aTsrK28pZm9yKHZhciBhLHU9cltvXSxjPXUubGVuZ3RoLGY9MDtmPGM7KytmKShhPXVbZl0pJiZTcihhLHQsbixmLHUsZXx8Z2koYSxuKSk7cmV0dXJuIG5ldyBVcihyLHRoaXMuX3BhcmVudHMsdCxuKX07dmFyIHlpPVtudWxsXTtmdW5jdGlvbiBfaSh0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdH19ZnVuY3Rpb24gYmkodCxuLGUpe3RoaXMudGFyZ2V0PXQsdGhpcy50eXBlPW4sdGhpcy5zZWxlY3Rpb249ZX1mdW5jdGlvbiBtaSgpe3QuZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl9ZnVuY3Rpb24geGkoKXt0LmV2ZW50LnByZXZlbnREZWZhdWx0KCksdC5ldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKX12YXIgd2k9e25hbWU6XCJkcmFnXCJ9LE1pPXtuYW1lOlwic3BhY2VcIn0sTmk9e25hbWU6XCJoYW5kbGVcIn0sVGk9e25hbWU6XCJjZW50ZXJcIn07ZnVuY3Rpb24gQWkodCl7cmV0dXJuWyt0WzBdLCt0WzFdXX1mdW5jdGlvbiBTaSh0KXtyZXR1cm5bQWkodFswXSksQWkodFsxXSldfXZhciBraT17bmFtZTpcInhcIixoYW5kbGVzOltcIndcIixcImVcIl0ubWFwKExpKSxpbnB1dDpmdW5jdGlvbih0LG4pe3JldHVybiBudWxsPT10P251bGw6W1srdFswXSxuWzBdWzFdXSxbK3RbMV0sblsxXVsxXV1dfSxvdXRwdXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlt0WzBdWzBdLHRbMV1bMF1dfX0sRWk9e25hbWU6XCJ5XCIsaGFuZGxlczpbXCJuXCIsXCJzXCJdLm1hcChMaSksaW5wdXQ6ZnVuY3Rpb24odCxuKXtyZXR1cm4gbnVsbD09dD9udWxsOltbblswXVswXSwrdFswXV0sW25bMV1bMF0sK3RbMV1dXX0sb3V0cHV0OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZbdFswXVsxXSx0WzFdWzFdXX19LENpPXtuYW1lOlwieHlcIixoYW5kbGVzOltcIm5cIixcIndcIixcImVcIixcInNcIixcIm53XCIsXCJuZVwiLFwic3dcIixcInNlXCJdLm1hcChMaSksaW5wdXQ6ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXQ/bnVsbDpTaSh0KX0sb3V0cHV0OmZ1bmN0aW9uKHQpe3JldHVybiB0fX0sUGk9e292ZXJsYXk6XCJjcm9zc2hhaXJcIixzZWxlY3Rpb246XCJtb3ZlXCIsbjpcIm5zLXJlc2l6ZVwiLGU6XCJldy1yZXNpemVcIixzOlwibnMtcmVzaXplXCIsdzpcImV3LXJlc2l6ZVwiLG53OlwibndzZS1yZXNpemVcIixuZTpcIm5lc3ctcmVzaXplXCIsc2U6XCJud3NlLXJlc2l6ZVwiLHN3OlwibmVzdy1yZXNpemVcIn0semk9e2U6XCJ3XCIsdzpcImVcIixudzpcIm5lXCIsbmU6XCJud1wiLHNlOlwic3dcIixzdzpcInNlXCJ9LFJpPXtuOlwic1wiLHM6XCJuXCIsbnc6XCJzd1wiLG5lOlwic2VcIixzZTpcIm5lXCIsc3c6XCJud1wifSxEaT17b3ZlcmxheToxLHNlbGVjdGlvbjoxLG46bnVsbCxlOjEsczpudWxsLHc6LTEsbnc6LTEsbmU6MSxzZToxLHN3Oi0xfSxxaT17b3ZlcmxheToxLHNlbGVjdGlvbjoxLG46LTEsZTpudWxsLHM6MSx3Om51bGwsbnc6LTEsbmU6LTEsc2U6MSxzdzoxfTtmdW5jdGlvbiBMaSh0KXtyZXR1cm57dHlwZTp0fX1mdW5jdGlvbiBVaSgpe3JldHVybiF0LmV2ZW50LmN0cmxLZXkmJiF0LmV2ZW50LmJ1dHRvbn1mdW5jdGlvbiBPaSgpe3ZhciB0PXRoaXMub3duZXJTVkdFbGVtZW50fHx0aGlzO3JldHVybiB0Lmhhc0F0dHJpYnV0ZShcInZpZXdCb3hcIik/W1sodD10LnZpZXdCb3guYmFzZVZhbCkueCx0LnldLFt0LngrdC53aWR0aCx0LnkrdC5oZWlnaHRdXTpbWzAsMF0sW3Qud2lkdGguYmFzZVZhbC52YWx1ZSx0LmhlaWdodC5iYXNlVmFsLnZhbHVlXV19ZnVuY3Rpb24gQmkoKXtyZXR1cm4gbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzfHxcIm9udG91Y2hzdGFydFwiaW4gdGhpc31mdW5jdGlvbiBGaSh0KXtmb3IoOyF0Ll9fYnJ1c2g7KWlmKCEodD10LnBhcmVudE5vZGUpKXJldHVybjtyZXR1cm4gdC5fX2JydXNofWZ1bmN0aW9uIFlpKG4pe3ZhciBlLHI9T2ksaT1VaSxvPUJpLGE9ITAsdT1JKFwic3RhcnRcIixcImJydXNoXCIsXCJlbmRcIiksYz02O2Z1bmN0aW9uIGYodCl7dmFyIGU9dC5wcm9wZXJ0eShcIl9fYnJ1c2hcIixnKS5zZWxlY3RBbGwoXCIub3ZlcmxheVwiKS5kYXRhKFtMaShcIm92ZXJsYXlcIildKTtlLmVudGVyKCkuYXBwZW5kKFwicmVjdFwiKS5hdHRyKFwiY2xhc3NcIixcIm92ZXJsYXlcIikuYXR0cihcInBvaW50ZXItZXZlbnRzXCIsXCJhbGxcIikuYXR0cihcImN1cnNvclwiLFBpLm92ZXJsYXkpLm1lcmdlKGUpLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1GaSh0aGlzKS5leHRlbnQ7UnQodGhpcykuYXR0cihcInhcIix0WzBdWzBdKS5hdHRyKFwieVwiLHRbMF1bMV0pLmF0dHIoXCJ3aWR0aFwiLHRbMV1bMF0tdFswXVswXSkuYXR0cihcImhlaWdodFwiLHRbMV1bMV0tdFswXVsxXSl9KSx0LnNlbGVjdEFsbChcIi5zZWxlY3Rpb25cIikuZGF0YShbTGkoXCJzZWxlY3Rpb25cIildKS5lbnRlcigpLmFwcGVuZChcInJlY3RcIikuYXR0cihcImNsYXNzXCIsXCJzZWxlY3Rpb25cIikuYXR0cihcImN1cnNvclwiLFBpLnNlbGVjdGlvbikuYXR0cihcImZpbGxcIixcIiM3NzdcIikuYXR0cihcImZpbGwtb3BhY2l0eVwiLC4zKS5hdHRyKFwic3Ryb2tlXCIsXCIjZmZmXCIpLmF0dHIoXCJzaGFwZS1yZW5kZXJpbmdcIixcImNyaXNwRWRnZXNcIik7dmFyIHI9dC5zZWxlY3RBbGwoXCIuaGFuZGxlXCIpLmRhdGEobi5oYW5kbGVzLGZ1bmN0aW9uKHQpe3JldHVybiB0LnR5cGV9KTtyLmV4aXQoKS5yZW1vdmUoKSxyLmVudGVyKCkuYXBwZW5kKFwicmVjdFwiKS5hdHRyKFwiY2xhc3NcIixmdW5jdGlvbih0KXtyZXR1cm5cImhhbmRsZSBoYW5kbGUtLVwiK3QudHlwZX0pLmF0dHIoXCJjdXJzb3JcIixmdW5jdGlvbih0KXtyZXR1cm4gUGlbdC50eXBlXX0pLHQuZWFjaChzKS5hdHRyKFwiZmlsbFwiLFwibm9uZVwiKS5hdHRyKFwicG9pbnRlci1ldmVudHNcIixcImFsbFwiKS5vbihcIm1vdXNlZG93bi5icnVzaFwiLGQpLmZpbHRlcihvKS5vbihcInRvdWNoc3RhcnQuYnJ1c2hcIixkKS5vbihcInRvdWNobW92ZS5icnVzaFwiLHApLm9uKFwidG91Y2hlbmQuYnJ1c2ggdG91Y2hjYW5jZWwuYnJ1c2hcIix2KS5zdHlsZShcInRvdWNoLWFjdGlvblwiLFwibm9uZVwiKS5zdHlsZShcIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvclwiLFwicmdiYSgwLDAsMCwwKVwiKX1mdW5jdGlvbiBzKCl7dmFyIHQ9UnQodGhpcyksbj1GaSh0aGlzKS5zZWxlY3Rpb247bj8odC5zZWxlY3RBbGwoXCIuc2VsZWN0aW9uXCIpLnN0eWxlKFwiZGlzcGxheVwiLG51bGwpLmF0dHIoXCJ4XCIsblswXVswXSkuYXR0cihcInlcIixuWzBdWzFdKS5hdHRyKFwid2lkdGhcIixuWzFdWzBdLW5bMF1bMF0pLmF0dHIoXCJoZWlnaHRcIixuWzFdWzFdLW5bMF1bMV0pLHQuc2VsZWN0QWxsKFwiLmhhbmRsZVwiKS5zdHlsZShcImRpc3BsYXlcIixudWxsKS5hdHRyKFwieFwiLGZ1bmN0aW9uKHQpe3JldHVyblwiZVwiPT09dC50eXBlW3QudHlwZS5sZW5ndGgtMV0/blsxXVswXS1jLzI6blswXVswXS1jLzJ9KS5hdHRyKFwieVwiLGZ1bmN0aW9uKHQpe3JldHVyblwic1wiPT09dC50eXBlWzBdP25bMV1bMV0tYy8yOm5bMF1bMV0tYy8yfSkuYXR0cihcIndpZHRoXCIsZnVuY3Rpb24odCl7cmV0dXJuXCJuXCI9PT10LnR5cGV8fFwic1wiPT09dC50eXBlP25bMV1bMF0tblswXVswXStjOmN9KS5hdHRyKFwiaGVpZ2h0XCIsZnVuY3Rpb24odCl7cmV0dXJuXCJlXCI9PT10LnR5cGV8fFwid1wiPT09dC50eXBlP25bMV1bMV0tblswXVsxXStjOmN9KSk6dC5zZWxlY3RBbGwoXCIuc2VsZWN0aW9uLC5oYW5kbGVcIikuc3R5bGUoXCJkaXNwbGF5XCIsXCJub25lXCIpLmF0dHIoXCJ4XCIsbnVsbCkuYXR0cihcInlcIixudWxsKS5hdHRyKFwid2lkdGhcIixudWxsKS5hdHRyKFwiaGVpZ2h0XCIsbnVsbCl9ZnVuY3Rpb24gbCh0LG4sZSl7cmV0dXJuIWUmJnQuX19icnVzaC5lbWl0dGVyfHxuZXcgaCh0LG4pfWZ1bmN0aW9uIGgodCxuKXt0aGlzLnRoYXQ9dCx0aGlzLmFyZ3M9bix0aGlzLnN0YXRlPXQuX19icnVzaCx0aGlzLmFjdGl2ZT0wfWZ1bmN0aW9uIGQoKXtpZigoIWV8fHQuZXZlbnQudG91Y2hlcykmJmkuYXBwbHkodGhpcyxhcmd1bWVudHMpKXt2YXIgcixvLHUsYyxmLGgsZCxwLHYsZyx5LF8sYj10aGlzLG09dC5ldmVudC50YXJnZXQuX19kYXRhX18udHlwZSx4PVwic2VsZWN0aW9uXCI9PT0oYSYmdC5ldmVudC5tZXRhS2V5P209XCJvdmVybGF5XCI6bSk/d2k6YSYmdC5ldmVudC5hbHRLZXk/VGk6Tmksdz1uPT09RWk/bnVsbDpEaVttXSxNPW49PT1raT9udWxsOnFpW21dLE49RmkoYiksVD1OLmV4dGVudCxBPU4uc2VsZWN0aW9uLFM9VFswXVswXSxrPVRbMF1bMV0sRT1UWzFdWzBdLEM9VFsxXVsxXSxQPTAsej0wLFI9dyYmTSYmYSYmdC5ldmVudC5zaGlmdEtleSxEPXQuZXZlbnQudG91Y2hlcz8oXz10LmV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmlkZW50aWZpZXIsZnVuY3Rpb24obil7cmV0dXJuIEZ0KG4sdC5ldmVudC50b3VjaGVzLF8pfSk6QnQscT1EKGIpLEw9cSxVPWwoYixhcmd1bWVudHMsITApLmJlZm9yZXN0YXJ0KCk7XCJvdmVybGF5XCI9PT1tPyhBJiYodj0hMCksTi5zZWxlY3Rpb249QT1bW3I9bj09PUVpP1M6cVswXSx1PW49PT1raT9rOnFbMV1dLFtmPW49PT1FaT9FOnIsZD1uPT09a2k/Qzp1XV0pOihyPUFbMF1bMF0sdT1BWzBdWzFdLGY9QVsxXVswXSxkPUFbMV1bMV0pLG89cixjPXUsaD1mLHA9ZDt2YXIgTz1SdChiKS5hdHRyKFwicG9pbnRlci1ldmVudHNcIixcIm5vbmVcIiksQj1PLnNlbGVjdEFsbChcIi5vdmVybGF5XCIpLmF0dHIoXCJjdXJzb3JcIixQaVttXSk7aWYodC5ldmVudC50b3VjaGVzKVUubW92ZWQ9WSxVLmVuZGVkPUg7ZWxzZXt2YXIgRj1SdCh0LmV2ZW50LnZpZXcpLm9uKFwibW91c2Vtb3ZlLmJydXNoXCIsWSwhMCkub24oXCJtb3VzZXVwLmJydXNoXCIsSCwhMCk7YSYmRi5vbihcImtleWRvd24uYnJ1c2hcIixmdW5jdGlvbigpe3N3aXRjaCh0LmV2ZW50LmtleUNvZGUpe2Nhc2UgMTY6Uj13JiZNO2JyZWFrO2Nhc2UgMTg6eD09PU5pJiYodyYmKGY9aC1QKncscj1vK1AqdyksTSYmKGQ9cC16Kk0sdT1jK3oqTSkseD1UaSxJKCkpO2JyZWFrO2Nhc2UgMzI6eCE9PU5pJiZ4IT09VGl8fCh3PDA/Zj1oLVA6dz4wJiYocj1vLVApLE08MD9kPXAtejpNPjAmJih1PWMteikseD1NaSxCLmF0dHIoXCJjdXJzb3JcIixQaS5zZWxlY3Rpb24pLEkoKSk7YnJlYWs7ZGVmYXVsdDpyZXR1cm59eGkoKX0sITApLm9uKFwia2V5dXAuYnJ1c2hcIixmdW5jdGlvbigpe3N3aXRjaCh0LmV2ZW50LmtleUNvZGUpe2Nhc2UgMTY6UiYmKGc9eT1SPSExLEkoKSk7YnJlYWs7Y2FzZSAxODp4PT09VGkmJih3PDA/Zj1oOnc+MCYmKHI9byksTTwwP2Q9cDpNPjAmJih1PWMpLHg9TmksSSgpKTticmVhaztjYXNlIDMyOng9PT1NaSYmKHQuZXZlbnQuYWx0S2V5Pyh3JiYoZj1oLVAqdyxyPW8rUCp3KSxNJiYoZD1wLXoqTSx1PWMreipNKSx4PVRpKToodzwwP2Y9aDp3PjAmJihyPW8pLE08MD9kPXA6TT4wJiYodT1jKSx4PU5pKSxCLmF0dHIoXCJjdXJzb3JcIixQaVttXSksSSgpKTticmVhaztkZWZhdWx0OnJldHVybn14aSgpfSwhMCksSHQodC5ldmVudC52aWV3KX1taSgpLFByKGIpLHMuY2FsbChiKSxVLnN0YXJ0KCl9ZnVuY3Rpb24gWSgpe3ZhciB0PUQoYik7IVJ8fGd8fHl8fChNYXRoLmFicyh0WzBdLUxbMF0pPk1hdGguYWJzKHRbMV0tTFsxXSk/eT0hMDpnPSEwKSxMPXQsdj0hMCx4aSgpLEkoKX1mdW5jdGlvbiBJKCl7dmFyIHQ7c3dpdGNoKFA9TFswXS1xWzBdLHo9TFsxXS1xWzFdLHgpe2Nhc2UgTWk6Y2FzZSB3aTp3JiYoUD1NYXRoLm1heChTLXIsTWF0aC5taW4oRS1mLFApKSxvPXIrUCxoPWYrUCksTSYmKHo9TWF0aC5tYXgoay11LE1hdGgubWluKEMtZCx6KSksYz11K3oscD1kK3opO2JyZWFrO2Nhc2UgTmk6dzwwPyhQPU1hdGgubWF4KFMtcixNYXRoLm1pbihFLXIsUCkpLG89citQLGg9Zik6dz4wJiYoUD1NYXRoLm1heChTLWYsTWF0aC5taW4oRS1mLFApKSxvPXIsaD1mK1ApLE08MD8oej1NYXRoLm1heChrLXUsTWF0aC5taW4oQy11LHopKSxjPXUreixwPWQpOk0+MCYmKHo9TWF0aC5tYXgoay1kLE1hdGgubWluKEMtZCx6KSksYz11LHA9ZCt6KTticmVhaztjYXNlIFRpOncmJihvPU1hdGgubWF4KFMsTWF0aC5taW4oRSxyLVAqdykpLGg9TWF0aC5tYXgoUyxNYXRoLm1pbihFLGYrUCp3KSkpLE0mJihjPU1hdGgubWF4KGssTWF0aC5taW4oQyx1LXoqTSkpLHA9TWF0aC5tYXgoayxNYXRoLm1pbihDLGQreipNKSkpfWg8byYmKHcqPS0xLHQ9cixyPWYsZj10LHQ9byxvPWgsaD10LG0gaW4gemkmJkIuYXR0cihcImN1cnNvclwiLFBpW209emlbbV1dKSkscDxjJiYoTSo9LTEsdD11LHU9ZCxkPXQsdD1jLGM9cCxwPXQsbSBpbiBSaSYmQi5hdHRyKFwiY3Vyc29yXCIsUGlbbT1SaVttXV0pKSxOLnNlbGVjdGlvbiYmKEE9Ti5zZWxlY3Rpb24pLGcmJihvPUFbMF1bMF0saD1BWzFdWzBdKSx5JiYoYz1BWzBdWzFdLHA9QVsxXVsxXSksQVswXVswXT09PW8mJkFbMF1bMV09PT1jJiZBWzFdWzBdPT09aCYmQVsxXVsxXT09PXB8fChOLnNlbGVjdGlvbj1bW28sY10sW2gscF1dLHMuY2FsbChiKSxVLmJydXNoKCkpfWZ1bmN0aW9uIEgoKXtpZihtaSgpLHQuZXZlbnQudG91Y2hlcyl7aWYodC5ldmVudC50b3VjaGVzLmxlbmd0aClyZXR1cm47ZSYmY2xlYXJUaW1lb3V0KGUpLGU9c2V0VGltZW91dChmdW5jdGlvbigpe2U9bnVsbH0sNTAwKX1lbHNlIGp0KHQuZXZlbnQudmlldyx2KSxGLm9uKFwia2V5ZG93bi5icnVzaCBrZXl1cC5icnVzaCBtb3VzZW1vdmUuYnJ1c2ggbW91c2V1cC5icnVzaFwiLG51bGwpO08uYXR0cihcInBvaW50ZXItZXZlbnRzXCIsXCJhbGxcIiksQi5hdHRyKFwiY3Vyc29yXCIsUGkub3ZlcmxheSksTi5zZWxlY3Rpb24mJihBPU4uc2VsZWN0aW9uKSxmdW5jdGlvbih0KXtyZXR1cm4gdFswXVswXT09PXRbMV1bMF18fHRbMF1bMV09PT10WzFdWzFdfShBKSYmKE4uc2VsZWN0aW9uPW51bGwscy5jYWxsKGIpKSxVLmVuZCgpfX1mdW5jdGlvbiBwKCl7bCh0aGlzLGFyZ3VtZW50cykubW92ZWQoKX1mdW5jdGlvbiB2KCl7bCh0aGlzLGFyZ3VtZW50cykuZW5kZWQoKX1mdW5jdGlvbiBnKCl7dmFyIHQ9dGhpcy5fX2JydXNofHx7c2VsZWN0aW9uOm51bGx9O3JldHVybiB0LmV4dGVudD1TaShyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSksdC5kaW09bix0fXJldHVybiBmLm1vdmU9ZnVuY3Rpb24odCxlKXt0LnNlbGVjdGlvbj90Lm9uKFwic3RhcnQuYnJ1c2hcIixmdW5jdGlvbigpe2wodGhpcyxhcmd1bWVudHMpLmJlZm9yZXN0YXJ0KCkuc3RhcnQoKX0pLm9uKFwiaW50ZXJydXB0LmJydXNoIGVuZC5icnVzaFwiLGZ1bmN0aW9uKCl7bCh0aGlzLGFyZ3VtZW50cykuZW5kKCl9KS50d2VlbihcImJydXNoXCIsZnVuY3Rpb24oKXt2YXIgdD10aGlzLHI9dC5fX2JydXNoLGk9bCh0LGFyZ3VtZW50cyksbz1yLnNlbGVjdGlvbixhPW4uaW5wdXQoXCJmdW5jdGlvblwiPT10eXBlb2YgZT9lLmFwcGx5KHRoaXMsYXJndW1lbnRzKTplLHIuZXh0ZW50KSx1PVRlKG8sYSk7ZnVuY3Rpb24gYyhuKXtyLnNlbGVjdGlvbj0xPT09biYmbnVsbD09PWE/bnVsbDp1KG4pLHMuY2FsbCh0KSxpLmJydXNoKCl9cmV0dXJuIG51bGwhPT1vJiZudWxsIT09YT9jOmMoMSl9KTp0LmVhY2goZnVuY3Rpb24oKXt2YXIgdD10aGlzLHI9YXJndW1lbnRzLGk9dC5fX2JydXNoLG89bi5pbnB1dChcImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2UuYXBwbHkodCxyKTplLGkuZXh0ZW50KSxhPWwodCxyKS5iZWZvcmVzdGFydCgpO1ByKHQpLGkuc2VsZWN0aW9uPW51bGw9PT1vP251bGw6byxzLmNhbGwodCksYS5zdGFydCgpLmJydXNoKCkuZW5kKCl9KX0sZi5jbGVhcj1mdW5jdGlvbih0KXtmLm1vdmUodCxudWxsKX0saC5wcm90b3R5cGU9e2JlZm9yZXN0YXJ0OmZ1bmN0aW9uKCl7cmV0dXJuIDE9PSsrdGhpcy5hY3RpdmUmJih0aGlzLnN0YXRlLmVtaXR0ZXI9dGhpcyx0aGlzLnN0YXJ0aW5nPSEwKSx0aGlzfSxzdGFydDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnN0YXJ0aW5nPyh0aGlzLnN0YXJ0aW5nPSExLHRoaXMuZW1pdChcInN0YXJ0XCIpKTp0aGlzLmVtaXQoXCJicnVzaFwiKSx0aGlzfSxicnVzaDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVtaXQoXCJicnVzaFwiKSx0aGlzfSxlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gMD09LS10aGlzLmFjdGl2ZSYmKGRlbGV0ZSB0aGlzLnN0YXRlLmVtaXR0ZXIsdGhpcy5lbWl0KFwiZW5kXCIpKSx0aGlzfSxlbWl0OmZ1bmN0aW9uKHQpe2t0KG5ldyBiaShmLHQsbi5vdXRwdXQodGhpcy5zdGF0ZS5zZWxlY3Rpb24pKSx1LmFwcGx5LHUsW3QsdGhpcy50aGF0LHRoaXMuYXJnc10pfX0sZi5leHRlbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Ol9pKFNpKHQpKSxmKTpyfSxmLmZpbHRlcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6X2koISF0KSxmKTppfSxmLnRvdWNoYWJsZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6X2koISF0KSxmKTpvfSxmLmhhbmRsZVNpemU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGM9K3QsZik6Y30sZi5rZXlNb2RpZmllcnM9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9ISF0LGYpOmF9LGYub249ZnVuY3Rpb24oKXt2YXIgdD11Lm9uLmFwcGx5KHUsYXJndW1lbnRzKTtyZXR1cm4gdD09PXU/Zjp0fSxmfXZhciBJaT1NYXRoLmNvcyxIaT1NYXRoLnNpbixqaT1NYXRoLlBJLFhpPWppLzIsVmk9MipqaSxHaT1NYXRoLm1heDtmdW5jdGlvbiAkaSh0KXtyZXR1cm4gZnVuY3Rpb24obixlKXtyZXR1cm4gdChuLnNvdXJjZS52YWx1ZStuLnRhcmdldC52YWx1ZSxlLnNvdXJjZS52YWx1ZStlLnRhcmdldC52YWx1ZSl9fXZhciBXaT1BcnJheS5wcm90b3R5cGUuc2xpY2U7ZnVuY3Rpb24gWmkodCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHR9fXZhciBRaT1NYXRoLlBJLEtpPTIqUWksSmk9S2ktMWUtNjtmdW5jdGlvbiB0bygpe3RoaXMuX3gwPXRoaXMuX3kwPXRoaXMuX3gxPXRoaXMuX3kxPW51bGwsdGhpcy5fPVwiXCJ9ZnVuY3Rpb24gbm8oKXtyZXR1cm4gbmV3IHRvfWZ1bmN0aW9uIGVvKHQpe3JldHVybiB0LnNvdXJjZX1mdW5jdGlvbiBybyh0KXtyZXR1cm4gdC50YXJnZXR9ZnVuY3Rpb24gaW8odCl7cmV0dXJuIHQucmFkaXVzfWZ1bmN0aW9uIG9vKHQpe3JldHVybiB0LnN0YXJ0QW5nbGV9ZnVuY3Rpb24gYW8odCl7cmV0dXJuIHQuZW5kQW5nbGV9dG8ucHJvdG90eXBlPW5vLnByb3RvdHlwZT17Y29uc3RydWN0b3I6dG8sbW92ZVRvOmZ1bmN0aW9uKHQsbil7dGhpcy5fKz1cIk1cIisodGhpcy5feDA9dGhpcy5feDE9K3QpK1wiLFwiKyh0aGlzLl95MD10aGlzLl95MT0rbil9LGNsb3NlUGF0aDpmdW5jdGlvbigpe251bGwhPT10aGlzLl94MSYmKHRoaXMuX3gxPXRoaXMuX3gwLHRoaXMuX3kxPXRoaXMuX3kwLHRoaXMuXys9XCJaXCIpfSxsaW5lVG86ZnVuY3Rpb24odCxuKXt0aGlzLl8rPVwiTFwiKyh0aGlzLl94MT0rdCkrXCIsXCIrKHRoaXMuX3kxPStuKX0scXVhZHJhdGljQ3VydmVUbzpmdW5jdGlvbih0LG4sZSxyKXt0aGlzLl8rPVwiUVwiKyArdCtcIixcIisgK24rXCIsXCIrKHRoaXMuX3gxPStlKStcIixcIisodGhpcy5feTE9K3IpfSxiZXppZXJDdXJ2ZVRvOmZ1bmN0aW9uKHQsbixlLHIsaSxvKXt0aGlzLl8rPVwiQ1wiKyArdCtcIixcIisgK24rXCIsXCIrICtlK1wiLFwiKyArcitcIixcIisodGhpcy5feDE9K2kpK1wiLFwiKyh0aGlzLl95MT0rbyl9LGFyY1RvOmZ1bmN0aW9uKHQsbixlLHIsaSl7dD0rdCxuPStuLGU9K2Uscj0rcixpPStpO3ZhciBvPXRoaXMuX3gxLGE9dGhpcy5feTEsdT1lLXQsYz1yLW4sZj1vLXQscz1hLW4sbD1mKmYrcypzO2lmKGk8MCl0aHJvdyBuZXcgRXJyb3IoXCJuZWdhdGl2ZSByYWRpdXM6IFwiK2kpO2lmKG51bGw9PT10aGlzLl94MSl0aGlzLl8rPVwiTVwiKyh0aGlzLl94MT10KStcIixcIisodGhpcy5feTE9bik7ZWxzZSBpZihsPjFlLTYpaWYoTWF0aC5hYnMocyp1LWMqZik+MWUtNiYmaSl7dmFyIGg9ZS1vLGQ9ci1hLHA9dSp1K2MqYyx2PWgqaCtkKmQsZz1NYXRoLnNxcnQocCkseT1NYXRoLnNxcnQobCksXz1pKk1hdGgudGFuKChRaS1NYXRoLmFjb3MoKHArbC12KS8oMipnKnkpKSkvMiksYj1fL3ksbT1fL2c7TWF0aC5hYnMoYi0xKT4xZS02JiYodGhpcy5fKz1cIkxcIisodCtiKmYpK1wiLFwiKyhuK2IqcykpLHRoaXMuXys9XCJBXCIraStcIixcIitpK1wiLDAsMCxcIisgKyhzKmg+ZipkKStcIixcIisodGhpcy5feDE9dCttKnUpK1wiLFwiKyh0aGlzLl95MT1uK20qYyl9ZWxzZSB0aGlzLl8rPVwiTFwiKyh0aGlzLl94MT10KStcIixcIisodGhpcy5feTE9bik7ZWxzZTt9LGFyYzpmdW5jdGlvbih0LG4sZSxyLGksbyl7dD0rdCxuPStuLG89ISFvO3ZhciBhPShlPStlKSpNYXRoLmNvcyhyKSx1PWUqTWF0aC5zaW4ociksYz10K2EsZj1uK3Uscz0xXm8sbD1vP3ItaTppLXI7aWYoZTwwKXRocm93IG5ldyBFcnJvcihcIm5lZ2F0aXZlIHJhZGl1czogXCIrZSk7bnVsbD09PXRoaXMuX3gxP3RoaXMuXys9XCJNXCIrYytcIixcIitmOihNYXRoLmFicyh0aGlzLl94MS1jKT4xZS02fHxNYXRoLmFicyh0aGlzLl95MS1mKT4xZS02KSYmKHRoaXMuXys9XCJMXCIrYytcIixcIitmKSxlJiYobDwwJiYobD1sJUtpK0tpKSxsPkppP3RoaXMuXys9XCJBXCIrZStcIixcIitlK1wiLDAsMSxcIitzK1wiLFwiKyh0LWEpK1wiLFwiKyhuLXUpK1wiQVwiK2UrXCIsXCIrZStcIiwwLDEsXCIrcytcIixcIisodGhpcy5feDE9YykrXCIsXCIrKHRoaXMuX3kxPWYpOmw+MWUtNiYmKHRoaXMuXys9XCJBXCIrZStcIixcIitlK1wiLDAsXCIrICsobD49UWkpK1wiLFwiK3MrXCIsXCIrKHRoaXMuX3gxPXQrZSpNYXRoLmNvcyhpKSkrXCIsXCIrKHRoaXMuX3kxPW4rZSpNYXRoLnNpbihpKSkpKX0scmVjdDpmdW5jdGlvbih0LG4sZSxyKXt0aGlzLl8rPVwiTVwiKyh0aGlzLl94MD10aGlzLl94MT0rdCkrXCIsXCIrKHRoaXMuX3kwPXRoaXMuX3kxPStuKStcImhcIisgK2UrXCJ2XCIrICtyK1wiaFwiKy1lK1wiWlwifSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiB0aGlzLl99fTtmdW5jdGlvbiB1bygpe31mdW5jdGlvbiBjbyh0LG4pe3ZhciBlPW5ldyB1bztpZih0IGluc3RhbmNlb2YgdW8pdC5lYWNoKGZ1bmN0aW9uKHQsbil7ZS5zZXQobix0KX0pO2Vsc2UgaWYoQXJyYXkuaXNBcnJheSh0KSl7dmFyIHIsaT0tMSxvPXQubGVuZ3RoO2lmKG51bGw9PW4pZm9yKDsrK2k8bzspZS5zZXQoaSx0W2ldKTtlbHNlIGZvcig7KytpPG87KWUuc2V0KG4ocj10W2ldLGksdCkscil9ZWxzZSBpZih0KWZvcih2YXIgYSBpbiB0KWUuc2V0KGEsdFthXSk7cmV0dXJuIGV9ZnVuY3Rpb24gZm8oKXtyZXR1cm57fX1mdW5jdGlvbiBzbyh0LG4sZSl7dFtuXT1lfWZ1bmN0aW9uIGxvKCl7cmV0dXJuIGNvKCl9ZnVuY3Rpb24gaG8odCxuLGUpe3Quc2V0KG4sZSl9ZnVuY3Rpb24gcG8oKXt9dW8ucHJvdG90eXBlPWNvLnByb3RvdHlwZT17Y29uc3RydWN0b3I6dW8saGFzOmZ1bmN0aW9uKHQpe3JldHVyblwiJFwiK3QgaW4gdGhpc30sZ2V0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzW1wiJFwiK3RdfSxzZXQ6ZnVuY3Rpb24odCxuKXtyZXR1cm4gdGhpc1tcIiRcIit0XT1uLHRoaXN9LHJlbW92ZTpmdW5jdGlvbih0KXt2YXIgbj1cIiRcIit0O3JldHVybiBuIGluIHRoaXMmJmRlbGV0ZSB0aGlzW25dfSxjbGVhcjpmdW5jdGlvbigpe2Zvcih2YXIgdCBpbiB0aGlzKVwiJFwiPT09dFswXSYmZGVsZXRlIHRoaXNbdF19LGtleXM6ZnVuY3Rpb24oKXt2YXIgdD1bXTtmb3IodmFyIG4gaW4gdGhpcylcIiRcIj09PW5bMF0mJnQucHVzaChuLnNsaWNlKDEpKTtyZXR1cm4gdH0sdmFsdWVzOmZ1bmN0aW9uKCl7dmFyIHQ9W107Zm9yKHZhciBuIGluIHRoaXMpXCIkXCI9PT1uWzBdJiZ0LnB1c2godGhpc1tuXSk7cmV0dXJuIHR9LGVudHJpZXM6ZnVuY3Rpb24oKXt2YXIgdD1bXTtmb3IodmFyIG4gaW4gdGhpcylcIiRcIj09PW5bMF0mJnQucHVzaCh7a2V5Om4uc2xpY2UoMSksdmFsdWU6dGhpc1tuXX0pO3JldHVybiB0fSxzaXplOmZ1bmN0aW9uKCl7dmFyIHQ9MDtmb3IodmFyIG4gaW4gdGhpcylcIiRcIj09PW5bMF0mJisrdDtyZXR1cm4gdH0sZW1wdHk6ZnVuY3Rpb24oKXtmb3IodmFyIHQgaW4gdGhpcylpZihcIiRcIj09PXRbMF0pcmV0dXJuITE7cmV0dXJuITB9LGVhY2g6ZnVuY3Rpb24odCl7Zm9yKHZhciBuIGluIHRoaXMpXCIkXCI9PT1uWzBdJiZ0KHRoaXNbbl0sbi5zbGljZSgxKSx0aGlzKX19O3ZhciB2bz1jby5wcm90b3R5cGU7ZnVuY3Rpb24gZ28odCxuKXt2YXIgZT1uZXcgcG87aWYodCBpbnN0YW5jZW9mIHBvKXQuZWFjaChmdW5jdGlvbih0KXtlLmFkZCh0KX0pO2Vsc2UgaWYodCl7dmFyIHI9LTEsaT10Lmxlbmd0aDtpZihudWxsPT1uKWZvcig7KytyPGk7KWUuYWRkKHRbcl0pO2Vsc2UgZm9yKDsrK3I8aTspZS5hZGQobih0W3JdLHIsdCkpfXJldHVybiBlfXBvLnByb3RvdHlwZT1nby5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOnBvLGhhczp2by5oYXMsYWRkOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzW1wiJFwiKyh0Kz1cIlwiKV09dCx0aGlzfSxyZW1vdmU6dm8ucmVtb3ZlLGNsZWFyOnZvLmNsZWFyLHZhbHVlczp2by5rZXlzLHNpemU6dm8uc2l6ZSxlbXB0eTp2by5lbXB0eSxlYWNoOnZvLmVhY2h9O3ZhciB5bz1BcnJheS5wcm90b3R5cGUuc2xpY2U7ZnVuY3Rpb24gX28odCxuKXtyZXR1cm4gdC1ufWZ1bmN0aW9uIGJvKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiBtbyh0LG4pe2Zvcih2YXIgZSxyPS0xLGk9bi5sZW5ndGg7KytyPGk7KWlmKGU9eG8odCxuW3JdKSlyZXR1cm4gZTtyZXR1cm4gMH1mdW5jdGlvbiB4byh0LG4pe2Zvcih2YXIgZT1uWzBdLHI9blsxXSxpPS0xLG89MCxhPXQubGVuZ3RoLHU9YS0xO288YTt1PW8rKyl7dmFyIGM9dFtvXSxmPWNbMF0scz1jWzFdLGw9dFt1XSxoPWxbMF0sZD1sWzFdO2lmKHdvKGMsbCxuKSlyZXR1cm4gMDtzPnIhPWQ+ciYmZTwoaC1mKSooci1zKS8oZC1zKStmJiYoaT0taSl9cmV0dXJuIGl9ZnVuY3Rpb24gd28odCxuLGUpe3ZhciByLGksbyxhO3JldHVybiBmdW5jdGlvbih0LG4sZSl7cmV0dXJuKG5bMF0tdFswXSkqKGVbMV0tdFsxXSk9PShlWzBdLXRbMF0pKihuWzFdLXRbMV0pfSh0LG4sZSkmJihpPXRbcj0rKHRbMF09PT1uWzBdKV0sbz1lW3JdLGE9bltyXSxpPD1vJiZvPD1hfHxhPD1vJiZvPD1pKX1mdW5jdGlvbiBNbygpe312YXIgTm89W1tdLFtbWzEsMS41XSxbLjUsMV1dXSxbW1sxLjUsMV0sWzEsMS41XV1dLFtbWzEuNSwxXSxbLjUsMV1dXSxbW1sxLC41XSxbMS41LDFdXV0sW1tbMSwxLjVdLFsuNSwxXV0sW1sxLC41XSxbMS41LDFdXV0sW1tbMSwuNV0sWzEsMS41XV1dLFtbWzEsLjVdLFsuNSwxXV1dLFtbWy41LDFdLFsxLC41XV1dLFtbWzEsMS41XSxbMSwuNV1dXSxbW1suNSwxXSxbMSwuNV1dLFtbMS41LDFdLFsxLDEuNV1dXSxbW1sxLjUsMV0sWzEsLjVdXV0sW1tbLjUsMV0sWzEuNSwxXV1dLFtbWzEsMS41XSxbMS41LDFdXV0sW1tbLjUsMV0sWzEsMS41XV1dLFtdXTtmdW5jdGlvbiBUbygpe3ZhciB0PTEsbj0xLGU9TSxyPXU7ZnVuY3Rpb24gaSh0KXt2YXIgbj1lKHQpO2lmKEFycmF5LmlzQXJyYXkobikpbj1uLnNsaWNlKCkuc29ydChfbyk7ZWxzZXt2YXIgcj1zKHQpLGk9clswXSxhPXJbMV07bj13KGksYSxuKSxuPWcoTWF0aC5mbG9vcihpL24pKm4sTWF0aC5mbG9vcihhL24pKm4sbil9cmV0dXJuIG4ubWFwKGZ1bmN0aW9uKG4pe3JldHVybiBvKHQsbil9KX1mdW5jdGlvbiBvKGUsaSl7dmFyIG89W10sdT1bXTtyZXR1cm4gZnVuY3Rpb24oZSxyLGkpe3ZhciBvLHUsYyxmLHMsbCxoPW5ldyBBcnJheSxkPW5ldyBBcnJheTtvPXU9LTEsZj1lWzBdPj1yLE5vW2Y8PDFdLmZvckVhY2gocCk7Zm9yKDsrK288dC0xOyljPWYsZj1lW28rMV0+PXIsTm9bY3xmPDwxXS5mb3JFYWNoKHApO05vW2Y8PDBdLmZvckVhY2gocCk7Zm9yKDsrK3U8bi0xOyl7Zm9yKG89LTEsZj1lW3UqdCt0XT49cixzPWVbdSp0XT49cixOb1tmPDwxfHM8PDJdLmZvckVhY2gocCk7KytvPHQtMTspYz1mLGY9ZVt1KnQrdCtvKzFdPj1yLGw9cyxzPWVbdSp0K28rMV0+PXIsTm9bY3xmPDwxfHM8PDJ8bDw8M10uZm9yRWFjaChwKTtOb1tmfHM8PDNdLmZvckVhY2gocCl9bz0tMSxzPWVbdSp0XT49cixOb1tzPDwyXS5mb3JFYWNoKHApO2Zvcig7KytvPHQtMTspbD1zLHM9ZVt1KnQrbysxXT49cixOb1tzPDwyfGw8PDNdLmZvckVhY2gocCk7ZnVuY3Rpb24gcCh0KXt2YXIgbixlLHI9W3RbMF1bMF0rbyx0WzBdWzFdK3VdLGM9W3RbMV1bMF0rbyx0WzFdWzFdK3VdLGY9YShyKSxzPWEoYyk7KG49ZFtmXSk/KGU9aFtzXSk/KGRlbGV0ZSBkW24uZW5kXSxkZWxldGUgaFtlLnN0YXJ0XSxuPT09ZT8obi5yaW5nLnB1c2goYyksaShuLnJpbmcpKTpoW24uc3RhcnRdPWRbZS5lbmRdPXtzdGFydDpuLnN0YXJ0LGVuZDplLmVuZCxyaW5nOm4ucmluZy5jb25jYXQoZS5yaW5nKX0pOihkZWxldGUgZFtuLmVuZF0sbi5yaW5nLnB1c2goYyksZFtuLmVuZD1zXT1uKToobj1oW3NdKT8oZT1kW2ZdKT8oZGVsZXRlIGhbbi5zdGFydF0sZGVsZXRlIGRbZS5lbmRdLG49PT1lPyhuLnJpbmcucHVzaChjKSxpKG4ucmluZykpOmhbZS5zdGFydF09ZFtuLmVuZF09e3N0YXJ0OmUuc3RhcnQsZW5kOm4uZW5kLHJpbmc6ZS5yaW5nLmNvbmNhdChuLnJpbmcpfSk6KGRlbGV0ZSBoW24uc3RhcnRdLG4ucmluZy51bnNoaWZ0KHIpLGhbbi5zdGFydD1mXT1uKTpoW2ZdPWRbc109e3N0YXJ0OmYsZW5kOnMscmluZzpbcixjXX19Tm9bczw8M10uZm9yRWFjaChwKX0oZSxpLGZ1bmN0aW9uKHQpe3IodCxlLGkpLGZ1bmN0aW9uKHQpe2Zvcih2YXIgbj0wLGU9dC5sZW5ndGgscj10W2UtMV1bMV0qdFswXVswXS10W2UtMV1bMF0qdFswXVsxXTsrK248ZTspcis9dFtuLTFdWzFdKnRbbl1bMF0tdFtuLTFdWzBdKnRbbl1bMV07cmV0dXJuIHJ9KHQpPjA/by5wdXNoKFt0XSk6dS5wdXNoKHQpfSksdS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2Zvcih2YXIgbixlPTAscj1vLmxlbmd0aDtlPHI7KytlKWlmKC0xIT09bW8oKG49b1tlXSlbMF0sdCkpcmV0dXJuIHZvaWQgbi5wdXNoKHQpfSkse3R5cGU6XCJNdWx0aVBvbHlnb25cIix2YWx1ZTppLGNvb3JkaW5hdGVzOm99fWZ1bmN0aW9uIGEobil7cmV0dXJuIDIqblswXStuWzFdKih0KzEpKjR9ZnVuY3Rpb24gdShlLHIsaSl7ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBvLGE9ZVswXSx1PWVbMV0sYz0wfGEsZj0wfHUscz1yW2YqdCtjXTthPjAmJmE8dCYmYz09PWEmJihvPXJbZip0K2MtMV0sZVswXT1hKyhpLW8pLyhzLW8pLS41KSx1PjAmJnU8biYmZj09PXUmJihvPXJbKGYtMSkqdCtjXSxlWzFdPXUrKGktbykvKHMtbyktLjUpfSl9cmV0dXJuIGkuY29udG91cj1vLGkuc2l6ZT1mdW5jdGlvbihlKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm5bdCxuXTt2YXIgcj1NYXRoLmNlaWwoZVswXSksbz1NYXRoLmNlaWwoZVsxXSk7aWYoIShyPjAmJm8+MCkpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaXplXCIpO3JldHVybiB0PXIsbj1vLGl9LGkudGhyZXNob2xkcz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6QXJyYXkuaXNBcnJheSh0KT9ibyh5by5jYWxsKHQpKTpibyh0KSxpKTplfSxpLnNtb290aD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj10P3U6TW8saSk6cj09PXV9LGl9ZnVuY3Rpb24gQW8odCxuLGUpe2Zvcih2YXIgcj10LndpZHRoLGk9dC5oZWlnaHQsbz0xKyhlPDwxKSxhPTA7YTxpOysrYSlmb3IodmFyIHU9MCxjPTA7dTxyK2U7Kyt1KXU8ciYmKGMrPXQuZGF0YVt1K2Eqcl0pLHU+PWUmJih1Pj1vJiYoYy09dC5kYXRhW3UtbythKnJdKSxuLmRhdGFbdS1lK2Eqcl09Yy9NYXRoLm1pbih1KzEsci0xK28tdSxvKSl9ZnVuY3Rpb24gU28odCxuLGUpe2Zvcih2YXIgcj10LndpZHRoLGk9dC5oZWlnaHQsbz0xKyhlPDwxKSxhPTA7YTxyOysrYSlmb3IodmFyIHU9MCxjPTA7dTxpK2U7Kyt1KXU8aSYmKGMrPXQuZGF0YVthK3Uqcl0pLHU+PWUmJih1Pj1vJiYoYy09dC5kYXRhW2ErKHUtbykqcl0pLG4uZGF0YVthKyh1LWUpKnJdPWMvTWF0aC5taW4odSsxLGktMStvLXUsbykpfWZ1bmN0aW9uIGtvKHQpe3JldHVybiB0WzBdfWZ1bmN0aW9uIEVvKHQpe3JldHVybiB0WzFdfWZ1bmN0aW9uIENvKCl7cmV0dXJuIDF9dmFyIFBvPXt9LHpvPXt9LFJvPTM0LERvPTEwLHFvPTEzO2Z1bmN0aW9uIExvKHQpe3JldHVybiBuZXcgRnVuY3Rpb24oXCJkXCIsXCJyZXR1cm4ge1wiK3QubWFwKGZ1bmN0aW9uKHQsbil7cmV0dXJuIEpTT04uc3RyaW5naWZ5KHQpK1wiOiBkW1wiK24rJ10gfHwgXCJcIid9KS5qb2luKFwiLFwiKStcIn1cIil9ZnVuY3Rpb24gVW8odCl7dmFyIG49T2JqZWN0LmNyZWF0ZShudWxsKSxlPVtdO3JldHVybiB0LmZvckVhY2goZnVuY3Rpb24odCl7Zm9yKHZhciByIGluIHQpciBpbiBufHxlLnB1c2gobltyXT1yKX0pLGV9ZnVuY3Rpb24gT28odCxuKXt2YXIgZT10K1wiXCIscj1lLmxlbmd0aDtyZXR1cm4gcjxuP25ldyBBcnJheShuLXIrMSkuam9pbigwKStlOmV9ZnVuY3Rpb24gQm8odCl7dmFyIG49dC5nZXRVVENIb3VycygpLGU9dC5nZXRVVENNaW51dGVzKCkscj10LmdldFVUQ1NlY29uZHMoKSxpPXQuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7cmV0dXJuIGlzTmFOKHQpP1wiSW52YWxpZCBEYXRlXCI6ZnVuY3Rpb24odCl7cmV0dXJuIHQ8MD9cIi1cIitPbygtdCw2KTp0Pjk5OTk/XCIrXCIrT28odCw2KTpPbyh0LDQpfSh0LmdldFVUQ0Z1bGxZZWFyKCkpK1wiLVwiK09vKHQuZ2V0VVRDTW9udGgoKSsxLDIpK1wiLVwiK09vKHQuZ2V0VVRDRGF0ZSgpLDIpKyhpP1wiVFwiK09vKG4sMikrXCI6XCIrT28oZSwyKStcIjpcIitPbyhyLDIpK1wiLlwiK09vKGksMykrXCJaXCI6cj9cIlRcIitPbyhuLDIpK1wiOlwiK09vKGUsMikrXCI6XCIrT28ociwyKStcIlpcIjplfHxuP1wiVFwiK09vKG4sMikrXCI6XCIrT28oZSwyKStcIlpcIjpcIlwiKX1mdW5jdGlvbiBGbyh0KXt2YXIgbj1uZXcgUmVnRXhwKCdbXCInK3QrXCJcXG5cXHJdXCIpLGU9dC5jaGFyQ29kZUF0KDApO2Z1bmN0aW9uIHIodCxuKXt2YXIgcixpPVtdLG89dC5sZW5ndGgsYT0wLHU9MCxjPW88PTAsZj0hMTtmdW5jdGlvbiBzKCl7aWYoYylyZXR1cm4gem87aWYoZilyZXR1cm4gZj0hMSxQbzt2YXIgbixyLGk9YTtpZih0LmNoYXJDb2RlQXQoaSk9PT1Sbyl7Zm9yKDthKys8byYmdC5jaGFyQ29kZUF0KGEpIT09Um98fHQuY2hhckNvZGVBdCgrK2EpPT09Um87KTtyZXR1cm4obj1hKT49bz9jPSEwOihyPXQuY2hhckNvZGVBdChhKyspKT09PURvP2Y9ITA6cj09PXFvJiYoZj0hMCx0LmNoYXJDb2RlQXQoYSk9PT1EbyYmKythKSx0LnNsaWNlKGkrMSxuLTEpLnJlcGxhY2UoL1wiXCIvZywnXCInKX1mb3IoO2E8bzspe2lmKChyPXQuY2hhckNvZGVBdChuPWErKykpPT09RG8pZj0hMDtlbHNlIGlmKHI9PT1xbylmPSEwLHQuY2hhckNvZGVBdChhKT09PURvJiYrK2E7ZWxzZSBpZihyIT09ZSljb250aW51ZTtyZXR1cm4gdC5zbGljZShpLG4pfXJldHVybiBjPSEwLHQuc2xpY2UoaSxvKX1mb3IodC5jaGFyQ29kZUF0KG8tMSk9PT1EbyYmLS1vLHQuY2hhckNvZGVBdChvLTEpPT09cW8mJi0tbzsocj1zKCkpIT09em87KXtmb3IodmFyIGw9W107ciE9PVBvJiZyIT09em87KWwucHVzaChyKSxyPXMoKTtuJiZudWxsPT0obD1uKGwsdSsrKSl8fGkucHVzaChsKX1yZXR1cm4gaX1mdW5jdGlvbiBpKG4sZSl7cmV0dXJuIG4ubWFwKGZ1bmN0aW9uKG4pe3JldHVybiBlLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gYShuW3RdKX0pLmpvaW4odCl9KX1mdW5jdGlvbiBvKG4pe3JldHVybiBuLm1hcChhKS5qb2luKHQpfWZ1bmN0aW9uIGEodCl7cmV0dXJuIG51bGw9PXQ/XCJcIjp0IGluc3RhbmNlb2YgRGF0ZT9Cbyh0KTpuLnRlc3QodCs9XCJcIik/J1wiJyt0LnJlcGxhY2UoL1wiL2csJ1wiXCInKSsnXCInOnR9cmV0dXJue3BhcnNlOmZ1bmN0aW9uKHQsbil7dmFyIGUsaSxvPXIodCxmdW5jdGlvbih0LHIpe2lmKGUpcmV0dXJuIGUodCxyLTEpO2k9dCxlPW4/ZnVuY3Rpb24odCxuKXt2YXIgZT1Mbyh0KTtyZXR1cm4gZnVuY3Rpb24ocixpKXtyZXR1cm4gbihlKHIpLGksdCl9fSh0LG4pOkxvKHQpfSk7cmV0dXJuIG8uY29sdW1ucz1pfHxbXSxvfSxwYXJzZVJvd3M6cixmb3JtYXQ6ZnVuY3Rpb24obixlKXtyZXR1cm4gbnVsbD09ZSYmKGU9VW8obikpLFtlLm1hcChhKS5qb2luKHQpXS5jb25jYXQoaShuLGUpKS5qb2luKFwiXFxuXCIpfSxmb3JtYXRCb2R5OmZ1bmN0aW9uKHQsbil7cmV0dXJuIG51bGw9PW4mJihuPVVvKHQpKSxpKHQsbikuam9pbihcIlxcblwiKX0sZm9ybWF0Um93czpmdW5jdGlvbih0KXtyZXR1cm4gdC5tYXAobykuam9pbihcIlxcblwiKX0sZm9ybWF0Um93Om8sZm9ybWF0VmFsdWU6YX19dmFyIFlvPUZvKFwiLFwiKSxJbz1Zby5wYXJzZSxIbz1Zby5wYXJzZVJvd3Msam89WW8uZm9ybWF0LFhvPVlvLmZvcm1hdEJvZHksVm89WW8uZm9ybWF0Um93cyxHbz1Zby5mb3JtYXRSb3csJG89WW8uZm9ybWF0VmFsdWUsV289Rm8oXCJcXHRcIiksWm89V28ucGFyc2UsUW89V28ucGFyc2VSb3dzLEtvPVdvLmZvcm1hdCxKbz1Xby5mb3JtYXRCb2R5LHRhPVdvLmZvcm1hdFJvd3MsbmE9V28uZm9ybWF0Um93LGVhPVdvLmZvcm1hdFZhbHVlO3ZhciByYT1uZXcgRGF0ZShcIjIwMTktMDEtMDFUMDA6MDBcIikuZ2V0SG91cnMoKXx8bmV3IERhdGUoXCIyMDE5LTA3LTAxVDAwOjAwXCIpLmdldEhvdXJzKCk7ZnVuY3Rpb24gaWEodCl7aWYoIXQub2spdGhyb3cgbmV3IEVycm9yKHQuc3RhdHVzK1wiIFwiK3Quc3RhdHVzVGV4dCk7cmV0dXJuIHQuYmxvYigpfWZ1bmN0aW9uIG9hKHQpe2lmKCF0Lm9rKXRocm93IG5ldyBFcnJvcih0LnN0YXR1cytcIiBcIit0LnN0YXR1c1RleHQpO3JldHVybiB0LmFycmF5QnVmZmVyKCl9ZnVuY3Rpb24gYWEodCl7aWYoIXQub2spdGhyb3cgbmV3IEVycm9yKHQuc3RhdHVzK1wiIFwiK3Quc3RhdHVzVGV4dCk7cmV0dXJuIHQudGV4dCgpfWZ1bmN0aW9uIHVhKHQsbil7cmV0dXJuIGZldGNoKHQsbikudGhlbihhYSl9ZnVuY3Rpb24gY2EodCl7cmV0dXJuIGZ1bmN0aW9uKG4sZSxyKXtyZXR1cm4gMj09PWFyZ3VtZW50cy5sZW5ndGgmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJihyPWUsZT12b2lkIDApLHVhKG4sZSkudGhlbihmdW5jdGlvbihuKXtyZXR1cm4gdChuLHIpfSl9fXZhciBmYT1jYShJbyksc2E9Y2EoWm8pO2Z1bmN0aW9uIGxhKHQpe2lmKCF0Lm9rKXRocm93IG5ldyBFcnJvcih0LnN0YXR1cytcIiBcIit0LnN0YXR1c1RleHQpO3JldHVybiB0Lmpzb24oKX1mdW5jdGlvbiBoYSh0KXtyZXR1cm4gZnVuY3Rpb24obixlKXtyZXR1cm4gdWEobixlKS50aGVuKGZ1bmN0aW9uKG4pe3JldHVybihuZXcgRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcobix0KX0pfX12YXIgZGE9aGEoXCJhcHBsaWNhdGlvbi94bWxcIikscGE9aGEoXCJ0ZXh0L2h0bWxcIiksdmE9aGEoXCJpbWFnZS9zdmcreG1sXCIpO2Z1bmN0aW9uIGdhKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiB5YSgpe3JldHVybiAxZS02KihNYXRoLnJhbmRvbSgpLS41KX1mdW5jdGlvbiBfYSh0LG4sZSxyKXtpZihpc05hTihuKXx8aXNOYU4oZSkpcmV0dXJuIHQ7dmFyIGksbyxhLHUsYyxmLHMsbCxoLGQ9dC5fcm9vdCxwPXtkYXRhOnJ9LHY9dC5feDAsZz10Ll95MCx5PXQuX3gxLF89dC5feTE7aWYoIWQpcmV0dXJuIHQuX3Jvb3Q9cCx0O2Zvcig7ZC5sZW5ndGg7KWlmKChmPW4+PShvPSh2K3kpLzIpKT92PW86eT1vLChzPWU+PShhPShnK18pLzIpKT9nPWE6Xz1hLGk9ZCwhKGQ9ZFtsPXM8PDF8Zl0pKXJldHVybiBpW2xdPXAsdDtpZih1PSt0Ll94LmNhbGwobnVsbCxkLmRhdGEpLGM9K3QuX3kuY2FsbChudWxsLGQuZGF0YSksbj09PXUmJmU9PT1jKXJldHVybiBwLm5leHQ9ZCxpP2lbbF09cDp0Ll9yb290PXAsdDtkb3tpPWk/aVtsXT1uZXcgQXJyYXkoNCk6dC5fcm9vdD1uZXcgQXJyYXkoNCksKGY9bj49KG89KHYreSkvMikpP3Y9bzp5PW8sKHM9ZT49KGE9KGcrXykvMikpP2c9YTpfPWF9d2hpbGUoKGw9czw8MXxmKT09KGg9KGM+PWEpPDwxfHU+PW8pKTtyZXR1cm4gaVtoXT1kLGlbbF09cCx0fWZ1bmN0aW9uIGJhKHQsbixlLHIsaSl7dGhpcy5ub2RlPXQsdGhpcy54MD1uLHRoaXMueTA9ZSx0aGlzLngxPXIsdGhpcy55MT1pfWZ1bmN0aW9uIG1hKHQpe3JldHVybiB0WzBdfWZ1bmN0aW9uIHhhKHQpe3JldHVybiB0WzFdfWZ1bmN0aW9uIHdhKHQsbixlKXt2YXIgcj1uZXcgTWEobnVsbD09bj9tYTpuLG51bGw9PWU/eGE6ZSxOYU4sTmFOLE5hTixOYU4pO3JldHVybiBudWxsPT10P3I6ci5hZGRBbGwodCl9ZnVuY3Rpb24gTWEodCxuLGUscixpLG8pe3RoaXMuX3g9dCx0aGlzLl95PW4sdGhpcy5feDA9ZSx0aGlzLl95MD1yLHRoaXMuX3gxPWksdGhpcy5feTE9byx0aGlzLl9yb290PXZvaWQgMH1mdW5jdGlvbiBOYSh0KXtmb3IodmFyIG49e2RhdGE6dC5kYXRhfSxlPW47dD10Lm5leHQ7KWU9ZS5uZXh0PXtkYXRhOnQuZGF0YX07cmV0dXJuIG59dmFyIFRhPXdhLnByb3RvdHlwZT1NYS5wcm90b3R5cGU7ZnVuY3Rpb24gQWEodCl7cmV0dXJuIHQueCt0LnZ4fWZ1bmN0aW9uIFNhKHQpe3JldHVybiB0LnkrdC52eX1mdW5jdGlvbiBrYSh0KXtyZXR1cm4gdC5pbmRleH1mdW5jdGlvbiBFYSh0LG4pe3ZhciBlPXQuZ2V0KG4pO2lmKCFlKXRocm93IG5ldyBFcnJvcihcIm1pc3Npbmc6IFwiK24pO3JldHVybiBlfWZ1bmN0aW9uIENhKHQpe3JldHVybiB0Lnh9ZnVuY3Rpb24gUGEodCl7cmV0dXJuIHQueX1UYS5jb3B5PWZ1bmN0aW9uKCl7dmFyIHQsbixlPW5ldyBNYSh0aGlzLl94LHRoaXMuX3ksdGhpcy5feDAsdGhpcy5feTAsdGhpcy5feDEsdGhpcy5feTEpLHI9dGhpcy5fcm9vdDtpZighcilyZXR1cm4gZTtpZighci5sZW5ndGgpcmV0dXJuIGUuX3Jvb3Q9TmEociksZTtmb3IodD1be3NvdXJjZTpyLHRhcmdldDplLl9yb290PW5ldyBBcnJheSg0KX1dO3I9dC5wb3AoKTspZm9yKHZhciBpPTA7aTw0OysraSkobj1yLnNvdXJjZVtpXSkmJihuLmxlbmd0aD90LnB1c2goe3NvdXJjZTpuLHRhcmdldDpyLnRhcmdldFtpXT1uZXcgQXJyYXkoNCl9KTpyLnRhcmdldFtpXT1OYShuKSk7cmV0dXJuIGV9LFRhLmFkZD1mdW5jdGlvbih0KXt2YXIgbj0rdGhpcy5feC5jYWxsKG51bGwsdCksZT0rdGhpcy5feS5jYWxsKG51bGwsdCk7cmV0dXJuIF9hKHRoaXMuY292ZXIobixlKSxuLGUsdCl9LFRhLmFkZEFsbD1mdW5jdGlvbih0KXt2YXIgbixlLHIsaSxvPXQubGVuZ3RoLGE9bmV3IEFycmF5KG8pLHU9bmV3IEFycmF5KG8pLGM9MS8wLGY9MS8wLHM9LTEvMCxsPS0xLzA7Zm9yKGU9MDtlPG87KytlKWlzTmFOKHI9K3RoaXMuX3guY2FsbChudWxsLG49dFtlXSkpfHxpc05hTihpPSt0aGlzLl95LmNhbGwobnVsbCxuKSl8fChhW2VdPXIsdVtlXT1pLHI8YyYmKGM9cikscj5zJiYocz1yKSxpPGYmJihmPWkpLGk+bCYmKGw9aSkpO2lmKGM+c3x8Zj5sKXJldHVybiB0aGlzO2Zvcih0aGlzLmNvdmVyKGMsZikuY292ZXIocyxsKSxlPTA7ZTxvOysrZSlfYSh0aGlzLGFbZV0sdVtlXSx0W2VdKTtyZXR1cm4gdGhpc30sVGEuY292ZXI9ZnVuY3Rpb24odCxuKXtpZihpc05hTih0PSt0KXx8aXNOYU4obj0rbikpcmV0dXJuIHRoaXM7dmFyIGU9dGhpcy5feDAscj10aGlzLl95MCxpPXRoaXMuX3gxLG89dGhpcy5feTE7aWYoaXNOYU4oZSkpaT0oZT1NYXRoLmZsb29yKHQpKSsxLG89KHI9TWF0aC5mbG9vcihuKSkrMTtlbHNle2Zvcih2YXIgYSx1LGM9aS1lLGY9dGhpcy5fcm9vdDtlPnR8fHQ+PWl8fHI+bnx8bj49bzspc3dpdGNoKHU9KG48cik8PDF8dDxlLChhPW5ldyBBcnJheSg0KSlbdV09ZixmPWEsYyo9Mix1KXtjYXNlIDA6aT1lK2Msbz1yK2M7YnJlYWs7Y2FzZSAxOmU9aS1jLG89citjO2JyZWFrO2Nhc2UgMjppPWUrYyxyPW8tYzticmVhaztjYXNlIDM6ZT1pLWMscj1vLWN9dGhpcy5fcm9vdCYmdGhpcy5fcm9vdC5sZW5ndGgmJih0aGlzLl9yb290PWYpfXJldHVybiB0aGlzLl94MD1lLHRoaXMuX3kwPXIsdGhpcy5feDE9aSx0aGlzLl95MT1vLHRoaXN9LFRhLmRhdGE9ZnVuY3Rpb24oKXt2YXIgdD1bXTtyZXR1cm4gdGhpcy52aXNpdChmdW5jdGlvbihuKXtpZighbi5sZW5ndGgpZG97dC5wdXNoKG4uZGF0YSl9d2hpbGUobj1uLm5leHQpfSksdH0sVGEuZXh0ZW50PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMuY292ZXIoK3RbMF1bMF0sK3RbMF1bMV0pLmNvdmVyKCt0WzFdWzBdLCt0WzFdWzFdKTppc05hTih0aGlzLl94MCk/dm9pZCAwOltbdGhpcy5feDAsdGhpcy5feTBdLFt0aGlzLl94MSx0aGlzLl95MV1dfSxUYS5maW5kPWZ1bmN0aW9uKHQsbixlKXt2YXIgcixpLG8sYSx1LGMsZixzPXRoaXMuX3gwLGw9dGhpcy5feTAsaD10aGlzLl94MSxkPXRoaXMuX3kxLHA9W10sdj10aGlzLl9yb290O2Zvcih2JiZwLnB1c2gobmV3IGJhKHYscyxsLGgsZCkpLG51bGw9PWU/ZT0xLzA6KHM9dC1lLGw9bi1lLGg9dCtlLGQ9bitlLGUqPWUpO2M9cC5wb3AoKTspaWYoISghKHY9Yy5ub2RlKXx8KGk9Yy54MCk+aHx8KG89Yy55MCk+ZHx8KGE9Yy54MSk8c3x8KHU9Yy55MSk8bCkpaWYodi5sZW5ndGgpe3ZhciBnPShpK2EpLzIseT0obyt1KS8yO3AucHVzaChuZXcgYmEodlszXSxnLHksYSx1KSxuZXcgYmEodlsyXSxpLHksZyx1KSxuZXcgYmEodlsxXSxnLG8sYSx5KSxuZXcgYmEodlswXSxpLG8sZyx5KSksKGY9KG4+PXkpPDwxfHQ+PWcpJiYoYz1wW3AubGVuZ3RoLTFdLHBbcC5sZW5ndGgtMV09cFtwLmxlbmd0aC0xLWZdLHBbcC5sZW5ndGgtMS1mXT1jKX1lbHNle3ZhciBfPXQtK3RoaXMuX3guY2FsbChudWxsLHYuZGF0YSksYj1uLSt0aGlzLl95LmNhbGwobnVsbCx2LmRhdGEpLG09XypfK2IqYjtpZihtPGUpe3ZhciB4PU1hdGguc3FydChlPW0pO3M9dC14LGw9bi14LGg9dCt4LGQ9bit4LHI9di5kYXRhfX1yZXR1cm4gcn0sVGEucmVtb3ZlPWZ1bmN0aW9uKHQpe2lmKGlzTmFOKG89K3RoaXMuX3guY2FsbChudWxsLHQpKXx8aXNOYU4oYT0rdGhpcy5feS5jYWxsKG51bGwsdCkpKXJldHVybiB0aGlzO3ZhciBuLGUscixpLG8sYSx1LGMsZixzLGwsaCxkPXRoaXMuX3Jvb3QscD10aGlzLl94MCx2PXRoaXMuX3kwLGc9dGhpcy5feDEseT10aGlzLl95MTtpZighZClyZXR1cm4gdGhpcztpZihkLmxlbmd0aClmb3IoOzspe2lmKChmPW8+PSh1PShwK2cpLzIpKT9wPXU6Zz11LChzPWE+PShjPSh2K3kpLzIpKT92PWM6eT1jLG49ZCwhKGQ9ZFtsPXM8PDF8Zl0pKXJldHVybiB0aGlzO2lmKCFkLmxlbmd0aClicmVhazsobltsKzEmM118fG5bbCsyJjNdfHxuW2wrMyYzXSkmJihlPW4saD1sKX1mb3IoO2QuZGF0YSE9PXQ7KWlmKHI9ZCwhKGQ9ZC5uZXh0KSlyZXR1cm4gdGhpcztyZXR1cm4oaT1kLm5leHQpJiZkZWxldGUgZC5uZXh0LHI/KGk/ci5uZXh0PWk6ZGVsZXRlIHIubmV4dCx0aGlzKTpuPyhpP25bbF09aTpkZWxldGUgbltsXSwoZD1uWzBdfHxuWzFdfHxuWzJdfHxuWzNdKSYmZD09PShuWzNdfHxuWzJdfHxuWzFdfHxuWzBdKSYmIWQubGVuZ3RoJiYoZT9lW2hdPWQ6dGhpcy5fcm9vdD1kKSx0aGlzKToodGhpcy5fcm9vdD1pLHRoaXMpfSxUYS5yZW1vdmVBbGw9ZnVuY3Rpb24odCl7Zm9yKHZhciBuPTAsZT10Lmxlbmd0aDtuPGU7KytuKXRoaXMucmVtb3ZlKHRbbl0pO3JldHVybiB0aGlzfSxUYS5yb290PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Jvb3R9LFRhLnNpemU9ZnVuY3Rpb24oKXt2YXIgdD0wO3JldHVybiB0aGlzLnZpc2l0KGZ1bmN0aW9uKG4pe2lmKCFuLmxlbmd0aClkb3srK3R9d2hpbGUobj1uLm5leHQpfSksdH0sVGEudmlzaXQ9ZnVuY3Rpb24odCl7dmFyIG4sZSxyLGksbyxhLHU9W10sYz10aGlzLl9yb290O2ZvcihjJiZ1LnB1c2gobmV3IGJhKGMsdGhpcy5feDAsdGhpcy5feTAsdGhpcy5feDEsdGhpcy5feTEpKTtuPXUucG9wKCk7KWlmKCF0KGM9bi5ub2RlLHI9bi54MCxpPW4ueTAsbz1uLngxLGE9bi55MSkmJmMubGVuZ3RoKXt2YXIgZj0ocitvKS8yLHM9KGkrYSkvMjsoZT1jWzNdKSYmdS5wdXNoKG5ldyBiYShlLGYscyxvLGEpKSwoZT1jWzJdKSYmdS5wdXNoKG5ldyBiYShlLHIscyxmLGEpKSwoZT1jWzFdKSYmdS5wdXNoKG5ldyBiYShlLGYsaSxvLHMpKSwoZT1jWzBdKSYmdS5wdXNoKG5ldyBiYShlLHIsaSxmLHMpKX1yZXR1cm4gdGhpc30sVGEudmlzaXRBZnRlcj1mdW5jdGlvbih0KXt2YXIgbixlPVtdLHI9W107Zm9yKHRoaXMuX3Jvb3QmJmUucHVzaChuZXcgYmEodGhpcy5fcm9vdCx0aGlzLl94MCx0aGlzLl95MCx0aGlzLl94MSx0aGlzLl95MSkpO249ZS5wb3AoKTspe3ZhciBpPW4ubm9kZTtpZihpLmxlbmd0aCl7dmFyIG8sYT1uLngwLHU9bi55MCxjPW4ueDEsZj1uLnkxLHM9KGErYykvMixsPSh1K2YpLzI7KG89aVswXSkmJmUucHVzaChuZXcgYmEobyxhLHUscyxsKSksKG89aVsxXSkmJmUucHVzaChuZXcgYmEobyxzLHUsYyxsKSksKG89aVsyXSkmJmUucHVzaChuZXcgYmEobyxhLGwscyxmKSksKG89aVszXSkmJmUucHVzaChuZXcgYmEobyxzLGwsYyxmKSl9ci5wdXNoKG4pfWZvcig7bj1yLnBvcCgpOyl0KG4ubm9kZSxuLngwLG4ueTAsbi54MSxuLnkxKTtyZXR1cm4gdGhpc30sVGEueD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5feD10LHRoaXMpOnRoaXMuX3h9LFRhLnk9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX3k9dCx0aGlzKTp0aGlzLl95fTt2YXIgemE9MTAsUmE9TWF0aC5QSSooMy1NYXRoLnNxcnQoNSkpO2Z1bmN0aW9uIERhKHQsbil7aWYoKGU9KHQ9bj90LnRvRXhwb25lbnRpYWwobi0xKTp0LnRvRXhwb25lbnRpYWwoKSkuaW5kZXhPZihcImVcIikpPDApcmV0dXJuIG51bGw7dmFyIGUscj10LnNsaWNlKDAsZSk7cmV0dXJuW3IubGVuZ3RoPjE/clswXStyLnNsaWNlKDIpOnIsK3Quc2xpY2UoZSsxKV19ZnVuY3Rpb24gcWEodCl7cmV0dXJuKHQ9RGEoTWF0aC5hYnModCkpKT90WzFdOk5hTn12YXIgTGEsVWE9L14oPzooLik/KFs8Pj1eXSkpPyhbK1xcLSggXSk/KFskI10pPygwKT8oXFxkKyk/KCwpPyhcXC5cXGQrKT8ofik/KFthLXolXSk/JC9pO2Z1bmN0aW9uIE9hKHQpe2lmKCEobj1VYS5leGVjKHQpKSl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGZvcm1hdDogXCIrdCk7dmFyIG47cmV0dXJuIG5ldyBCYSh7ZmlsbDpuWzFdLGFsaWduOm5bMl0sc2lnbjpuWzNdLHN5bWJvbDpuWzRdLHplcm86bls1XSx3aWR0aDpuWzZdLGNvbW1hOm5bN10scHJlY2lzaW9uOm5bOF0mJm5bOF0uc2xpY2UoMSksdHJpbTpuWzldLHR5cGU6blsxMF19KX1mdW5jdGlvbiBCYSh0KXt0aGlzLmZpbGw9dm9pZCAwPT09dC5maWxsP1wiIFwiOnQuZmlsbCtcIlwiLHRoaXMuYWxpZ249dm9pZCAwPT09dC5hbGlnbj9cIj5cIjp0LmFsaWduK1wiXCIsdGhpcy5zaWduPXZvaWQgMD09PXQuc2lnbj9cIi1cIjp0LnNpZ24rXCJcIix0aGlzLnN5bWJvbD12b2lkIDA9PT10LnN5bWJvbD9cIlwiOnQuc3ltYm9sK1wiXCIsdGhpcy56ZXJvPSEhdC56ZXJvLHRoaXMud2lkdGg9dm9pZCAwPT09dC53aWR0aD92b2lkIDA6K3Qud2lkdGgsdGhpcy5jb21tYT0hIXQuY29tbWEsdGhpcy5wcmVjaXNpb249dm9pZCAwPT09dC5wcmVjaXNpb24/dm9pZCAwOit0LnByZWNpc2lvbix0aGlzLnRyaW09ISF0LnRyaW0sdGhpcy50eXBlPXZvaWQgMD09PXQudHlwZT9cIlwiOnQudHlwZStcIlwifWZ1bmN0aW9uIEZhKHQsbil7dmFyIGU9RGEodCxuKTtpZighZSlyZXR1cm4gdCtcIlwiO3ZhciByPWVbMF0saT1lWzFdO3JldHVybiBpPDA/XCIwLlwiK25ldyBBcnJheSgtaSkuam9pbihcIjBcIikrcjpyLmxlbmd0aD5pKzE/ci5zbGljZSgwLGkrMSkrXCIuXCIrci5zbGljZShpKzEpOnIrbmV3IEFycmF5KGktci5sZW5ndGgrMikuam9pbihcIjBcIil9T2EucHJvdG90eXBlPUJhLnByb3RvdHlwZSxCYS5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5maWxsK3RoaXMuYWxpZ24rdGhpcy5zaWduK3RoaXMuc3ltYm9sKyh0aGlzLnplcm8/XCIwXCI6XCJcIikrKHZvaWQgMD09PXRoaXMud2lkdGg/XCJcIjpNYXRoLm1heCgxLDB8dGhpcy53aWR0aCkpKyh0aGlzLmNvbW1hP1wiLFwiOlwiXCIpKyh2b2lkIDA9PT10aGlzLnByZWNpc2lvbj9cIlwiOlwiLlwiK01hdGgubWF4KDAsMHx0aGlzLnByZWNpc2lvbikpKyh0aGlzLnRyaW0/XCJ+XCI6XCJcIikrdGhpcy50eXBlfTt2YXIgWWE9e1wiJVwiOmZ1bmN0aW9uKHQsbil7cmV0dXJuKDEwMCp0KS50b0ZpeGVkKG4pfSxiOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnJvdW5kKHQpLnRvU3RyaW5nKDIpfSxjOmZ1bmN0aW9uKHQpe3JldHVybiB0K1wiXCJ9LGQ6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgucm91bmQodCkudG9TdHJpbmcoMTApfSxlOmZ1bmN0aW9uKHQsbil7cmV0dXJuIHQudG9FeHBvbmVudGlhbChuKX0sZjpmdW5jdGlvbih0LG4pe3JldHVybiB0LnRvRml4ZWQobil9LGc6ZnVuY3Rpb24odCxuKXtyZXR1cm4gdC50b1ByZWNpc2lvbihuKX0sbzpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5yb3VuZCh0KS50b1N0cmluZyg4KX0scDpmdW5jdGlvbih0LG4pe3JldHVybiBGYSgxMDAqdCxuKX0scjpGYSxzOmZ1bmN0aW9uKHQsbil7dmFyIGU9RGEodCxuKTtpZighZSlyZXR1cm4gdCtcIlwiO3ZhciByPWVbMF0saT1lWzFdLG89aS0oTGE9MypNYXRoLm1heCgtOCxNYXRoLm1pbig4LE1hdGguZmxvb3IoaS8zKSkpKSsxLGE9ci5sZW5ndGg7cmV0dXJuIG89PT1hP3I6bz5hP3IrbmV3IEFycmF5KG8tYSsxKS5qb2luKFwiMFwiKTpvPjA/ci5zbGljZSgwLG8pK1wiLlwiK3Iuc2xpY2Uobyk6XCIwLlwiK25ldyBBcnJheSgxLW8pLmpvaW4oXCIwXCIpK0RhKHQsTWF0aC5tYXgoMCxuK28tMSkpWzBdfSxYOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnJvdW5kKHQpLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfSx4OmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnJvdW5kKHQpLnRvU3RyaW5nKDE2KX19O2Z1bmN0aW9uIElhKHQpe3JldHVybiB0fXZhciBIYSxqYT1BcnJheS5wcm90b3R5cGUubWFwLFhhPVtcInlcIixcInpcIixcImFcIixcImZcIixcInBcIixcIm5cIixcIsK1XCIsXCJtXCIsXCJcIixcImtcIixcIk1cIixcIkdcIixcIlRcIixcIlBcIixcIkVcIixcIlpcIixcIllcIl07ZnVuY3Rpb24gVmEodCl7dmFyIG4sZSxyPXZvaWQgMD09PXQuZ3JvdXBpbmd8fHZvaWQgMD09PXQudGhvdXNhbmRzP0lhOihuPWphLmNhbGwodC5ncm91cGluZyxOdW1iZXIpLGU9dC50aG91c2FuZHMrXCJcIixmdW5jdGlvbih0LHIpe2Zvcih2YXIgaT10Lmxlbmd0aCxvPVtdLGE9MCx1PW5bMF0sYz0wO2k+MCYmdT4wJiYoYyt1KzE+ciYmKHU9TWF0aC5tYXgoMSxyLWMpKSxvLnB1c2godC5zdWJzdHJpbmcoaS09dSxpK3UpKSwhKChjKz11KzEpPnIpKTspdT1uW2E9KGErMSklbi5sZW5ndGhdO3JldHVybiBvLnJldmVyc2UoKS5qb2luKGUpfSksaT12b2lkIDA9PT10LmN1cnJlbmN5P1wiXCI6dC5jdXJyZW5jeVswXStcIlwiLG89dm9pZCAwPT09dC5jdXJyZW5jeT9cIlwiOnQuY3VycmVuY3lbMV0rXCJcIixhPXZvaWQgMD09PXQuZGVjaW1hbD9cIi5cIjp0LmRlY2ltYWwrXCJcIix1PXZvaWQgMD09PXQubnVtZXJhbHM/SWE6ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiBuLnJlcGxhY2UoL1swLTldL2csZnVuY3Rpb24obil7cmV0dXJuIHRbK25dfSl9fShqYS5jYWxsKHQubnVtZXJhbHMsU3RyaW5nKSksYz12b2lkIDA9PT10LnBlcmNlbnQ/XCIlXCI6dC5wZXJjZW50K1wiXCIsZj12b2lkIDA9PT10Lm1pbnVzP1wiLVwiOnQubWludXMrXCJcIixzPXZvaWQgMD09PXQubmFuP1wiTmFOXCI6dC5uYW4rXCJcIjtmdW5jdGlvbiBsKHQpe3ZhciBuPSh0PU9hKHQpKS5maWxsLGU9dC5hbGlnbixsPXQuc2lnbixoPXQuc3ltYm9sLGQ9dC56ZXJvLHA9dC53aWR0aCx2PXQuY29tbWEsZz10LnByZWNpc2lvbix5PXQudHJpbSxfPXQudHlwZTtcIm5cIj09PV8/KHY9ITAsXz1cImdcIik6WWFbX118fCh2b2lkIDA9PT1nJiYoZz0xMikseT0hMCxfPVwiZ1wiKSwoZHx8XCIwXCI9PT1uJiZcIj1cIj09PWUpJiYoZD0hMCxuPVwiMFwiLGU9XCI9XCIpO3ZhciBiPVwiJFwiPT09aD9pOlwiI1wiPT09aCYmL1tib3hYXS8udGVzdChfKT9cIjBcIitfLnRvTG93ZXJDYXNlKCk6XCJcIixtPVwiJFwiPT09aD9vOi9bJXBdLy50ZXN0KF8pP2M6XCJcIix4PVlhW19dLHc9L1tkZWZncHJzJV0vLnRlc3QoXyk7ZnVuY3Rpb24gTSh0KXt2YXIgaSxvLGMsaD1iLE09bTtpZihcImNcIj09PV8pTT14KHQpK00sdD1cIlwiO2Vsc2V7dmFyIE49KHQ9K3QpPDB8fDEvdDwwO2lmKHQ9aXNOYU4odCk/czp4KE1hdGguYWJzKHQpLGcpLHkmJih0PWZ1bmN0aW9uKHQpe3Q6Zm9yKHZhciBuLGU9dC5sZW5ndGgscj0xLGk9LTE7cjxlOysrcilzd2l0Y2godFtyXSl7Y2FzZVwiLlwiOmk9bj1yO2JyZWFrO2Nhc2VcIjBcIjowPT09aSYmKGk9ciksbj1yO2JyZWFrO2RlZmF1bHQ6aWYoISt0W3JdKWJyZWFrIHQ7aT4wJiYoaT0wKX1yZXR1cm4gaT4wP3Quc2xpY2UoMCxpKSt0LnNsaWNlKG4rMSk6dH0odCkpLE4mJjA9PSt0JiZcIitcIiE9PWwmJihOPSExKSxoPShOP1wiKFwiPT09bD9sOmY6XCItXCI9PT1sfHxcIihcIj09PWw/XCJcIjpsKStoLE09KFwic1wiPT09Xz9YYVs4K0xhLzNdOlwiXCIpK00rKE4mJlwiKFwiPT09bD9cIilcIjpcIlwiKSx3KWZvcihpPS0xLG89dC5sZW5ndGg7KytpPG87KWlmKDQ4PihjPXQuY2hhckNvZGVBdChpKSl8fGM+NTcpe009KDQ2PT09Yz9hK3Quc2xpY2UoaSsxKTp0LnNsaWNlKGkpKStNLHQ9dC5zbGljZSgwLGkpO2JyZWFrfX12JiYhZCYmKHQ9cih0LDEvMCkpO3ZhciBUPWgubGVuZ3RoK3QubGVuZ3RoK00ubGVuZ3RoLEE9VDxwP25ldyBBcnJheShwLVQrMSkuam9pbihuKTpcIlwiO3N3aXRjaCh2JiZkJiYodD1yKEErdCxBLmxlbmd0aD9wLU0ubGVuZ3RoOjEvMCksQT1cIlwiKSxlKXtjYXNlXCI8XCI6dD1oK3QrTStBO2JyZWFrO2Nhc2VcIj1cIjp0PWgrQSt0K007YnJlYWs7Y2FzZVwiXlwiOnQ9QS5zbGljZSgwLFQ9QS5sZW5ndGg+PjEpK2grdCtNK0Euc2xpY2UoVCk7YnJlYWs7ZGVmYXVsdDp0PUEraCt0K019cmV0dXJuIHUodCl9cmV0dXJuIGc9dm9pZCAwPT09Zz82Oi9bZ3Byc10vLnRlc3QoXyk/TWF0aC5tYXgoMSxNYXRoLm1pbigyMSxnKSk6TWF0aC5tYXgoMCxNYXRoLm1pbigyMCxnKSksTS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0K1wiXCJ9LE19cmV0dXJue2Zvcm1hdDpsLGZvcm1hdFByZWZpeDpmdW5jdGlvbih0LG4pe3ZhciBlPWwoKCh0PU9hKHQpKS50eXBlPVwiZlwiLHQpKSxyPTMqTWF0aC5tYXgoLTgsTWF0aC5taW4oOCxNYXRoLmZsb29yKHFhKG4pLzMpKSksaT1NYXRoLnBvdygxMCwtciksbz1YYVs4K3IvM107cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBlKGkqdCkrb319fX1mdW5jdGlvbiBHYShuKXtyZXR1cm4gSGE9VmEobiksdC5mb3JtYXQ9SGEuZm9ybWF0LHQuZm9ybWF0UHJlZml4PUhhLmZvcm1hdFByZWZpeCxIYX1mdW5jdGlvbiAkYSh0KXtyZXR1cm4gTWF0aC5tYXgoMCwtcWEoTWF0aC5hYnModCkpKX1mdW5jdGlvbiBXYSh0LG4pe3JldHVybiBNYXRoLm1heCgwLDMqTWF0aC5tYXgoLTgsTWF0aC5taW4oOCxNYXRoLmZsb29yKHFhKG4pLzMpKSktcWEoTWF0aC5hYnModCkpKX1mdW5jdGlvbiBaYSh0LG4pe3JldHVybiB0PU1hdGguYWJzKHQpLG49TWF0aC5hYnMobiktdCxNYXRoLm1heCgwLHFhKG4pLXFhKHQpKSsxfWZ1bmN0aW9uIFFhKCl7cmV0dXJuIG5ldyBLYX1mdW5jdGlvbiBLYSgpe3RoaXMucmVzZXQoKX1HYSh7ZGVjaW1hbDpcIi5cIix0aG91c2FuZHM6XCIsXCIsZ3JvdXBpbmc6WzNdLGN1cnJlbmN5OltcIiRcIixcIlwiXSxtaW51czpcIi1cIn0pLEthLnByb3RvdHlwZT17Y29uc3RydWN0b3I6S2EscmVzZXQ6ZnVuY3Rpb24oKXt0aGlzLnM9dGhpcy50PTB9LGFkZDpmdW5jdGlvbih0KXt0dShKYSx0LHRoaXMudCksdHUodGhpcyxKYS5zLHRoaXMucyksdGhpcy5zP3RoaXMudCs9SmEudDp0aGlzLnM9SmEudH0sdmFsdWVPZjpmdW5jdGlvbigpe3JldHVybiB0aGlzLnN9fTt2YXIgSmE9bmV3IEthO2Z1bmN0aW9uIHR1KHQsbixlKXt2YXIgcj10LnM9bitlLGk9ci1uLG89ci1pO3QudD1uLW8rKGUtaSl9dmFyIG51PTFlLTYsZXU9MWUtMTIscnU9TWF0aC5QSSxpdT1ydS8yLG91PXJ1LzQsYXU9MipydSx1dT0xODAvcnUsY3U9cnUvMTgwLGZ1PU1hdGguYWJzLHN1PU1hdGguYXRhbixsdT1NYXRoLmF0YW4yLGh1PU1hdGguY29zLGR1PU1hdGguY2VpbCxwdT1NYXRoLmV4cCx2dT1NYXRoLmxvZyxndT1NYXRoLnBvdyx5dT1NYXRoLnNpbixfdT1NYXRoLnNpZ258fGZ1bmN0aW9uKHQpe3JldHVybiB0PjA/MTp0PDA/LTE6MH0sYnU9TWF0aC5zcXJ0LG11PU1hdGgudGFuO2Z1bmN0aW9uIHh1KHQpe3JldHVybiB0PjE/MDp0PC0xP3J1Ok1hdGguYWNvcyh0KX1mdW5jdGlvbiB3dSh0KXtyZXR1cm4gdD4xP2l1OnQ8LTE/LWl1Ok1hdGguYXNpbih0KX1mdW5jdGlvbiBNdSh0KXtyZXR1cm4odD15dSh0LzIpKSp0fWZ1bmN0aW9uIE51KCl7fWZ1bmN0aW9uIFR1KHQsbil7dCYmU3UuaGFzT3duUHJvcGVydHkodC50eXBlKSYmU3VbdC50eXBlXSh0LG4pfXZhciBBdT17RmVhdHVyZTpmdW5jdGlvbih0LG4pe1R1KHQuZ2VvbWV0cnksbil9LEZlYXR1cmVDb2xsZWN0aW9uOmZ1bmN0aW9uKHQsbil7Zm9yKHZhciBlPXQuZmVhdHVyZXMscj0tMSxpPWUubGVuZ3RoOysrcjxpOylUdShlW3JdLmdlb21ldHJ5LG4pfX0sU3U9e1NwaGVyZTpmdW5jdGlvbih0LG4pe24uc3BoZXJlKCl9LFBvaW50OmZ1bmN0aW9uKHQsbil7dD10LmNvb3JkaW5hdGVzLG4ucG9pbnQodFswXSx0WzFdLHRbMl0pfSxNdWx0aVBvaW50OmZ1bmN0aW9uKHQsbil7Zm9yKHZhciBlPXQuY29vcmRpbmF0ZXMscj0tMSxpPWUubGVuZ3RoOysrcjxpOyl0PWVbcl0sbi5wb2ludCh0WzBdLHRbMV0sdFsyXSl9LExpbmVTdHJpbmc6ZnVuY3Rpb24odCxuKXtrdSh0LmNvb3JkaW5hdGVzLG4sMCl9LE11bHRpTGluZVN0cmluZzpmdW5jdGlvbih0LG4pe2Zvcih2YXIgZT10LmNvb3JkaW5hdGVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspa3UoZVtyXSxuLDApfSxQb2x5Z29uOmZ1bmN0aW9uKHQsbil7RXUodC5jb29yZGluYXRlcyxuKX0sTXVsdGlQb2x5Z29uOmZ1bmN0aW9uKHQsbil7Zm9yKHZhciBlPXQuY29vcmRpbmF0ZXMscj0tMSxpPWUubGVuZ3RoOysrcjxpOylFdShlW3JdLG4pfSxHZW9tZXRyeUNvbGxlY3Rpb246ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9dC5nZW9tZXRyaWVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspVHUoZVtyXSxuKX19O2Z1bmN0aW9uIGt1KHQsbixlKXt2YXIgcixpPS0xLG89dC5sZW5ndGgtZTtmb3Iobi5saW5lU3RhcnQoKTsrK2k8bzspcj10W2ldLG4ucG9pbnQoclswXSxyWzFdLHJbMl0pO24ubGluZUVuZCgpfWZ1bmN0aW9uIEV1KHQsbil7dmFyIGU9LTEscj10Lmxlbmd0aDtmb3Iobi5wb2x5Z29uU3RhcnQoKTsrK2U8cjspa3UodFtlXSxuLDEpO24ucG9seWdvbkVuZCgpfWZ1bmN0aW9uIEN1KHQsbil7dCYmQXUuaGFzT3duUHJvcGVydHkodC50eXBlKT9BdVt0LnR5cGVdKHQsbik6VHUodCxuKX12YXIgUHUsenUsUnUsRHUscXUsTHU9UWEoKSxVdT1RYSgpLE91PXtwb2ludDpOdSxsaW5lU3RhcnQ6TnUsbGluZUVuZDpOdSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtMdS5yZXNldCgpLE91LmxpbmVTdGFydD1CdSxPdS5saW5lRW5kPUZ1fSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7dmFyIHQ9K0x1O1V1LmFkZCh0PDA/YXUrdDp0KSx0aGlzLmxpbmVTdGFydD10aGlzLmxpbmVFbmQ9dGhpcy5wb2ludD1OdX0sc3BoZXJlOmZ1bmN0aW9uKCl7VXUuYWRkKGF1KX19O2Z1bmN0aW9uIEJ1KCl7T3UucG9pbnQ9WXV9ZnVuY3Rpb24gRnUoKXtJdShQdSx6dSl9ZnVuY3Rpb24gWXUodCxuKXtPdS5wb2ludD1JdSxQdT10LHp1PW4sUnU9dCo9Y3UsRHU9aHUobj0obio9Y3UpLzIrb3UpLHF1PXl1KG4pfWZ1bmN0aW9uIEl1KHQsbil7dmFyIGU9KHQqPWN1KS1SdSxyPWU+PTA/MTotMSxpPXIqZSxvPWh1KG49KG4qPWN1KS8yK291KSxhPXl1KG4pLHU9cXUqYSxjPUR1Km8rdSpodShpKSxmPXUqcip5dShpKTtMdS5hZGQobHUoZixjKSksUnU9dCxEdT1vLHF1PWF9ZnVuY3Rpb24gSHUodCl7cmV0dXJuW2x1KHRbMV0sdFswXSksd3UodFsyXSldfWZ1bmN0aW9uIGp1KHQpe3ZhciBuPXRbMF0sZT10WzFdLHI9aHUoZSk7cmV0dXJuW3IqaHUobikscip5dShuKSx5dShlKV19ZnVuY3Rpb24gWHUodCxuKXtyZXR1cm4gdFswXSpuWzBdK3RbMV0qblsxXSt0WzJdKm5bMl19ZnVuY3Rpb24gVnUodCxuKXtyZXR1cm5bdFsxXSpuWzJdLXRbMl0qblsxXSx0WzJdKm5bMF0tdFswXSpuWzJdLHRbMF0qblsxXS10WzFdKm5bMF1dfWZ1bmN0aW9uIEd1KHQsbil7dFswXSs9blswXSx0WzFdKz1uWzFdLHRbMl0rPW5bMl19ZnVuY3Rpb24gJHUodCxuKXtyZXR1cm5bdFswXSpuLHRbMV0qbix0WzJdKm5dfWZ1bmN0aW9uIFd1KHQpe3ZhciBuPWJ1KHRbMF0qdFswXSt0WzFdKnRbMV0rdFsyXSp0WzJdKTt0WzBdLz1uLHRbMV0vPW4sdFsyXS89bn12YXIgWnUsUXUsS3UsSnUsdGMsbmMsZWMscmMsaWMsb2MsYWMsdWMsY2MsZmMsc2MsbGMsaGMsZGMscGMsdmMsZ2MseWMsX2MsYmMsbWMseGMsd2M9UWEoKSxNYz17cG9pbnQ6TmMsbGluZVN0YXJ0OkFjLGxpbmVFbmQ6U2MscG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7TWMucG9pbnQ9a2MsTWMubGluZVN0YXJ0PUVjLE1jLmxpbmVFbmQ9Q2Msd2MucmVzZXQoKSxPdS5wb2x5Z29uU3RhcnQoKX0scG9seWdvbkVuZDpmdW5jdGlvbigpe091LnBvbHlnb25FbmQoKSxNYy5wb2ludD1OYyxNYy5saW5lU3RhcnQ9QWMsTWMubGluZUVuZD1TYyxMdTwwPyhadT0tKEt1PTE4MCksUXU9LShKdT05MCkpOndjPm51P0p1PTkwOndjPC1udSYmKFF1PS05MCksb2NbMF09WnUsb2NbMV09S3V9LHNwaGVyZTpmdW5jdGlvbigpe1p1PS0oS3U9MTgwKSxRdT0tKEp1PTkwKX19O2Z1bmN0aW9uIE5jKHQsbil7aWMucHVzaChvYz1bWnU9dCxLdT10XSksbjxRdSYmKFF1PW4pLG4+SnUmJihKdT1uKX1mdW5jdGlvbiBUYyh0LG4pe3ZhciBlPWp1KFt0KmN1LG4qY3VdKTtpZihyYyl7dmFyIHI9VnUocmMsZSksaT1WdShbclsxXSwtclswXSwwXSxyKTtXdShpKSxpPUh1KGkpO3ZhciBvLGE9dC10Yyx1PWE+MD8xOi0xLGM9aVswXSp1dSp1LGY9ZnUoYSk+MTgwO2ZeKHUqdGM8YyYmYzx1KnQpPyhvPWlbMV0qdXUpPkp1JiYoSnU9byk6Zl4odSp0YzwoYz0oYyszNjApJTM2MC0xODApJiZjPHUqdCk/KG89LWlbMV0qdXUpPFF1JiYoUXU9byk6KG48UXUmJihRdT1uKSxuPkp1JiYoSnU9bikpLGY/dDx0Yz9QYyhadSx0KT5QYyhadSxLdSkmJihLdT10KTpQYyh0LEt1KT5QYyhadSxLdSkmJihadT10KTpLdT49WnU/KHQ8WnUmJihadT10KSx0Pkt1JiYoS3U9dCkpOnQ+dGM/UGMoWnUsdCk+UGMoWnUsS3UpJiYoS3U9dCk6UGModCxLdSk+UGMoWnUsS3UpJiYoWnU9dCl9ZWxzZSBpYy5wdXNoKG9jPVtadT10LEt1PXRdKTtuPFF1JiYoUXU9biksbj5KdSYmKEp1PW4pLHJjPWUsdGM9dH1mdW5jdGlvbiBBYygpe01jLnBvaW50PVRjfWZ1bmN0aW9uIFNjKCl7b2NbMF09WnUsb2NbMV09S3UsTWMucG9pbnQ9TmMscmM9bnVsbH1mdW5jdGlvbiBrYyh0LG4pe2lmKHJjKXt2YXIgZT10LXRjO3djLmFkZChmdShlKT4xODA/ZSsoZT4wPzM2MDotMzYwKTplKX1lbHNlIG5jPXQsZWM9bjtPdS5wb2ludCh0LG4pLFRjKHQsbil9ZnVuY3Rpb24gRWMoKXtPdS5saW5lU3RhcnQoKX1mdW5jdGlvbiBDYygpe2tjKG5jLGVjKSxPdS5saW5lRW5kKCksZnUod2MpPm51JiYoWnU9LShLdT0xODApKSxvY1swXT1adSxvY1sxXT1LdSxyYz1udWxsfWZ1bmN0aW9uIFBjKHQsbil7cmV0dXJuKG4tPXQpPDA/biszNjA6bn1mdW5jdGlvbiB6Yyh0LG4pe3JldHVybiB0WzBdLW5bMF19ZnVuY3Rpb24gUmModCxuKXtyZXR1cm4gdFswXTw9dFsxXT90WzBdPD1uJiZuPD10WzFdOm48dFswXXx8dFsxXTxufXZhciBEYz17c3BoZXJlOk51LHBvaW50OnFjLGxpbmVTdGFydDpVYyxsaW5lRW5kOkZjLHBvbHlnb25TdGFydDpmdW5jdGlvbigpe0RjLmxpbmVTdGFydD1ZYyxEYy5saW5lRW5kPUljfSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7RGMubGluZVN0YXJ0PVVjLERjLmxpbmVFbmQ9RmN9fTtmdW5jdGlvbiBxYyh0LG4pe3QqPWN1O3ZhciBlPWh1KG4qPWN1KTtMYyhlKmh1KHQpLGUqeXUodCkseXUobikpfWZ1bmN0aW9uIExjKHQsbixlKXtjYys9KHQtY2MpLysrYWMsZmMrPShuLWZjKS9hYyxzYys9KGUtc2MpL2FjfWZ1bmN0aW9uIFVjKCl7RGMucG9pbnQ9T2N9ZnVuY3Rpb24gT2ModCxuKXt0Kj1jdTt2YXIgZT1odShuKj1jdSk7YmM9ZSpodSh0KSxtYz1lKnl1KHQpLHhjPXl1KG4pLERjLnBvaW50PUJjLExjKGJjLG1jLHhjKX1mdW5jdGlvbiBCYyh0LG4pe3QqPWN1O3ZhciBlPWh1KG4qPWN1KSxyPWUqaHUodCksaT1lKnl1KHQpLG89eXUobiksYT1sdShidSgoYT1tYypvLXhjKmkpKmErKGE9eGMqci1iYypvKSphKyhhPWJjKmktbWMqcikqYSksYmMqcittYyppK3hjKm8pO3VjKz1hLGxjKz1hKihiYysoYmM9cikpLGhjKz1hKihtYysobWM9aSkpLGRjKz1hKih4YysoeGM9bykpLExjKGJjLG1jLHhjKX1mdW5jdGlvbiBGYygpe0RjLnBvaW50PXFjfWZ1bmN0aW9uIFljKCl7RGMucG9pbnQ9SGN9ZnVuY3Rpb24gSWMoKXtqYyh5YyxfYyksRGMucG9pbnQ9cWN9ZnVuY3Rpb24gSGModCxuKXt5Yz10LF9jPW4sdCo9Y3Usbio9Y3UsRGMucG9pbnQ9amM7dmFyIGU9aHUobik7YmM9ZSpodSh0KSxtYz1lKnl1KHQpLHhjPXl1KG4pLExjKGJjLG1jLHhjKX1mdW5jdGlvbiBqYyh0LG4pe3QqPWN1O3ZhciBlPWh1KG4qPWN1KSxyPWUqaHUodCksaT1lKnl1KHQpLG89eXUobiksYT1tYypvLXhjKmksdT14YypyLWJjKm8sYz1iYyppLW1jKnIsZj1idShhKmErdSp1K2MqYykscz13dShmKSxsPWYmJi1zL2Y7cGMrPWwqYSx2Yys9bCp1LGdjKz1sKmMsdWMrPXMsbGMrPXMqKGJjKyhiYz1yKSksaGMrPXMqKG1jKyhtYz1pKSksZGMrPXMqKHhjKyh4Yz1vKSksTGMoYmMsbWMseGMpfWZ1bmN0aW9uIFhjKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiBWYyh0LG4pe2Z1bmN0aW9uIGUoZSxyKXtyZXR1cm4gZT10KGUsciksbihlWzBdLGVbMV0pfXJldHVybiB0LmludmVydCYmbi5pbnZlcnQmJihlLmludmVydD1mdW5jdGlvbihlLHIpe3JldHVybihlPW4uaW52ZXJ0KGUscikpJiZ0LmludmVydChlWzBdLGVbMV0pfSksZX1mdW5jdGlvbiBHYyh0LG4pe3JldHVybltmdSh0KT5ydT90K01hdGgucm91bmQoLXQvYXUpKmF1OnQsbl19ZnVuY3Rpb24gJGModCxuLGUpe3JldHVybih0JT1hdSk/bnx8ZT9WYyhaYyh0KSxRYyhuLGUpKTpaYyh0KTpufHxlP1FjKG4sZSk6R2N9ZnVuY3Rpb24gV2ModCl7cmV0dXJuIGZ1bmN0aW9uKG4sZSl7cmV0dXJuWyhuKz10KT5ydT9uLWF1Om48LXJ1P24rYXU6bixlXX19ZnVuY3Rpb24gWmModCl7dmFyIG49V2ModCk7cmV0dXJuIG4uaW52ZXJ0PVdjKC10KSxufWZ1bmN0aW9uIFFjKHQsbil7dmFyIGU9aHUodCkscj15dSh0KSxpPWh1KG4pLG89eXUobik7ZnVuY3Rpb24gYSh0LG4pe3ZhciBhPWh1KG4pLHU9aHUodCkqYSxjPXl1KHQpKmEsZj15dShuKSxzPWYqZSt1KnI7cmV0dXJuW2x1KGMqaS1zKm8sdSplLWYqciksd3UocyppK2MqbyldfXJldHVybiBhLmludmVydD1mdW5jdGlvbih0LG4pe3ZhciBhPWh1KG4pLHU9aHUodCkqYSxjPXl1KHQpKmEsZj15dShuKSxzPWYqaS1jKm87cmV0dXJuW2x1KGMqaStmKm8sdSplK3Mqciksd3UocyplLXUqcildfSxhfWZ1bmN0aW9uIEtjKHQpe2Z1bmN0aW9uIG4obil7cmV0dXJuKG49dChuWzBdKmN1LG5bMV0qY3UpKVswXSo9dXUsblsxXSo9dXUsbn1yZXR1cm4gdD0kYyh0WzBdKmN1LHRbMV0qY3UsdC5sZW5ndGg+Mj90WzJdKmN1OjApLG4uaW52ZXJ0PWZ1bmN0aW9uKG4pe3JldHVybihuPXQuaW52ZXJ0KG5bMF0qY3UsblsxXSpjdSkpWzBdKj11dSxuWzFdKj11dSxufSxufWZ1bmN0aW9uIEpjKHQsbixlLHIsaSxvKXtpZihlKXt2YXIgYT1odShuKSx1PXl1KG4pLGM9ciplO251bGw9PWk/KGk9bityKmF1LG89bi1jLzIpOihpPXRmKGEsaSksbz10ZihhLG8pLChyPjA/aTxvOmk+bykmJihpKz1yKmF1KSk7Zm9yKHZhciBmLHM9aTtyPjA/cz5vOnM8bztzLT1jKWY9SHUoW2EsLXUqaHUocyksLXUqeXUocyldKSx0LnBvaW50KGZbMF0sZlsxXSl9fWZ1bmN0aW9uIHRmKHQsbil7KG49anUobikpWzBdLT10LFd1KG4pO3ZhciBlPXh1KC1uWzFdKTtyZXR1cm4oKC1uWzJdPDA/LWU6ZSkrYXUtbnUpJWF1fWZ1bmN0aW9uIG5mKCl7dmFyIHQsbj1bXTtyZXR1cm57cG9pbnQ6ZnVuY3Rpb24obixlKXt0LnB1c2goW24sZV0pfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXtuLnB1c2godD1bXSl9LGxpbmVFbmQ6TnUscmVqb2luOmZ1bmN0aW9uKCl7bi5sZW5ndGg+MSYmbi5wdXNoKG4ucG9wKCkuY29uY2F0KG4uc2hpZnQoKSkpfSxyZXN1bHQ6ZnVuY3Rpb24oKXt2YXIgZT1uO3JldHVybiBuPVtdLHQ9bnVsbCxlfX19ZnVuY3Rpb24gZWYodCxuKXtyZXR1cm4gZnUodFswXS1uWzBdKTxudSYmZnUodFsxXS1uWzFdKTxudX1mdW5jdGlvbiByZih0LG4sZSxyKXt0aGlzLng9dCx0aGlzLno9bix0aGlzLm89ZSx0aGlzLmU9cix0aGlzLnY9ITEsdGhpcy5uPXRoaXMucD1udWxsfWZ1bmN0aW9uIG9mKHQsbixlLHIsaSl7dmFyIG8sYSx1PVtdLGM9W107aWYodC5mb3JFYWNoKGZ1bmN0aW9uKHQpe2lmKCEoKG49dC5sZW5ndGgtMSk8PTApKXt2YXIgbixlLHI9dFswXSxhPXRbbl07aWYoZWYocixhKSl7Zm9yKGkubGluZVN0YXJ0KCksbz0wO288bjsrK28paS5wb2ludCgocj10W29dKVswXSxyWzFdKTtpLmxpbmVFbmQoKX1lbHNlIHUucHVzaChlPW5ldyByZihyLHQsbnVsbCwhMCkpLGMucHVzaChlLm89bmV3IHJmKHIsbnVsbCxlLCExKSksdS5wdXNoKGU9bmV3IHJmKGEsdCxudWxsLCExKSksYy5wdXNoKGUubz1uZXcgcmYoYSxudWxsLGUsITApKX19KSx1Lmxlbmd0aCl7Zm9yKGMuc29ydChuKSxhZih1KSxhZihjKSxvPTAsYT1jLmxlbmd0aDtvPGE7KytvKWNbb10uZT1lPSFlO2Zvcih2YXIgZixzLGw9dVswXTs7KXtmb3IodmFyIGg9bCxkPSEwO2gudjspaWYoKGg9aC5uKT09PWwpcmV0dXJuO2Y9aC56LGkubGluZVN0YXJ0KCk7ZG97aWYoaC52PWguby52PSEwLGguZSl7aWYoZClmb3Iobz0wLGE9Zi5sZW5ndGg7bzxhOysrbylpLnBvaW50KChzPWZbb10pWzBdLHNbMV0pO2Vsc2UgcihoLngsaC5uLngsMSxpKTtoPWgubn1lbHNle2lmKGQpZm9yKGY9aC5wLnosbz1mLmxlbmd0aC0xO28+PTA7LS1vKWkucG9pbnQoKHM9ZltvXSlbMF0sc1sxXSk7ZWxzZSByKGgueCxoLnAueCwtMSxpKTtoPWgucH1mPShoPWgubykueixkPSFkfXdoaWxlKCFoLnYpO2kubGluZUVuZCgpfX19ZnVuY3Rpb24gYWYodCl7aWYobj10Lmxlbmd0aCl7Zm9yKHZhciBuLGUscj0wLGk9dFswXTsrK3I8bjspaS5uPWU9dFtyXSxlLnA9aSxpPWU7aS5uPWU9dFswXSxlLnA9aX19R2MuaW52ZXJ0PUdjO3ZhciB1Zj1RYSgpO2Z1bmN0aW9uIGNmKHQpe3JldHVybiBmdSh0WzBdKTw9cnU/dFswXTpfdSh0WzBdKSooKGZ1KHRbMF0pK3J1KSVhdS1ydSl9ZnVuY3Rpb24gZmYodCxuKXt2YXIgZT1jZihuKSxyPW5bMV0saT15dShyKSxvPVt5dShlKSwtaHUoZSksMF0sYT0wLHU9MDt1Zi5yZXNldCgpLDE9PT1pP3I9aXUrbnU6LTE9PT1pJiYocj0taXUtbnUpO2Zvcih2YXIgYz0wLGY9dC5sZW5ndGg7YzxmOysrYylpZihsPShzPXRbY10pLmxlbmd0aClmb3IodmFyIHMsbCxoPXNbbC0xXSxkPWNmKGgpLHA9aFsxXS8yK291LHY9eXUocCksZz1odShwKSx5PTA7eTxsOysreSxkPWIsdj14LGc9dyxoPV8pe3ZhciBfPXNbeV0sYj1jZihfKSxtPV9bMV0vMitvdSx4PXl1KG0pLHc9aHUobSksTT1iLWQsTj1NPj0wPzE6LTEsVD1OKk0sQT1UPnJ1LFM9dip4O2lmKHVmLmFkZChsdShTKk4qeXUoVCksZyp3K1MqaHUoVCkpKSxhKz1BP00rTiphdTpNLEFeZD49ZV5iPj1lKXt2YXIgaz1WdShqdShoKSxqdShfKSk7V3Uoayk7dmFyIEU9VnUobyxrKTtXdShFKTt2YXIgQz0oQV5NPj0wPy0xOjEpKnd1KEVbMl0pOyhyPkN8fHI9PT1DJiYoa1swXXx8a1sxXSkpJiYodSs9QV5NPj0wPzE6LTEpfX1yZXR1cm4oYTwtbnV8fGE8bnUmJnVmPC1udSleMSZ1fWZ1bmN0aW9uIHNmKHQsbixlLHIpe3JldHVybiBmdW5jdGlvbihpKXt2YXIgbyxhLHUsYz1uKGkpLGY9bmYoKSxzPW4oZiksbD0hMSxoPXtwb2ludDpkLGxpbmVTdGFydDp2LGxpbmVFbmQ6Zyxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtoLnBvaW50PXksaC5saW5lU3RhcnQ9XyxoLmxpbmVFbmQ9YixhPVtdLG89W119LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXtoLnBvaW50PWQsaC5saW5lU3RhcnQ9dixoLmxpbmVFbmQ9ZyxhPUEoYSk7dmFyIHQ9ZmYobyxyKTthLmxlbmd0aD8obHx8KGkucG9seWdvblN0YXJ0KCksbD0hMCksb2YoYSxoZix0LGUsaSkpOnQmJihsfHwoaS5wb2x5Z29uU3RhcnQoKSxsPSEwKSxpLmxpbmVTdGFydCgpLGUobnVsbCxudWxsLDEsaSksaS5saW5lRW5kKCkpLGwmJihpLnBvbHlnb25FbmQoKSxsPSExKSxhPW89bnVsbH0sc3BoZXJlOmZ1bmN0aW9uKCl7aS5wb2x5Z29uU3RhcnQoKSxpLmxpbmVTdGFydCgpLGUobnVsbCxudWxsLDEsaSksaS5saW5lRW5kKCksaS5wb2x5Z29uRW5kKCl9fTtmdW5jdGlvbiBkKG4sZSl7dChuLGUpJiZpLnBvaW50KG4sZSl9ZnVuY3Rpb24gcCh0LG4pe2MucG9pbnQodCxuKX1mdW5jdGlvbiB2KCl7aC5wb2ludD1wLGMubGluZVN0YXJ0KCl9ZnVuY3Rpb24gZygpe2gucG9pbnQ9ZCxjLmxpbmVFbmQoKX1mdW5jdGlvbiB5KHQsbil7dS5wdXNoKFt0LG5dKSxzLnBvaW50KHQsbil9ZnVuY3Rpb24gXygpe3MubGluZVN0YXJ0KCksdT1bXX1mdW5jdGlvbiBiKCl7eSh1WzBdWzBdLHVbMF1bMV0pLHMubGluZUVuZCgpO3ZhciB0LG4sZSxyLGM9cy5jbGVhbigpLGg9Zi5yZXN1bHQoKSxkPWgubGVuZ3RoO2lmKHUucG9wKCksby5wdXNoKHUpLHU9bnVsbCxkKWlmKDEmYyl7aWYoKG49KGU9aFswXSkubGVuZ3RoLTEpPjApe2ZvcihsfHwoaS5wb2x5Z29uU3RhcnQoKSxsPSEwKSxpLmxpbmVTdGFydCgpLHQ9MDt0PG47Kyt0KWkucG9pbnQoKHI9ZVt0XSlbMF0sclsxXSk7aS5saW5lRW5kKCl9fWVsc2UgZD4xJiYyJmMmJmgucHVzaChoLnBvcCgpLmNvbmNhdChoLnNoaWZ0KCkpKSxhLnB1c2goaC5maWx0ZXIobGYpKX1yZXR1cm4gaH19ZnVuY3Rpb24gbGYodCl7cmV0dXJuIHQubGVuZ3RoPjF9ZnVuY3Rpb24gaGYodCxuKXtyZXR1cm4oKHQ9dC54KVswXTwwP3RbMV0taXUtbnU6aXUtdFsxXSktKChuPW4ueClbMF08MD9uWzFdLWl1LW51Oml1LW5bMV0pfXZhciBkZj1zZihmdW5jdGlvbigpe3JldHVybiEwfSxmdW5jdGlvbih0KXt2YXIgbixlPU5hTixyPU5hTixpPU5hTjtyZXR1cm57bGluZVN0YXJ0OmZ1bmN0aW9uKCl7dC5saW5lU3RhcnQoKSxuPTF9LHBvaW50OmZ1bmN0aW9uKG8sYSl7dmFyIHU9bz4wP3J1Oi1ydSxjPWZ1KG8tZSk7ZnUoYy1ydSk8bnU/KHQucG9pbnQoZSxyPShyK2EpLzI+MD9pdTotaXUpLHQucG9pbnQoaSxyKSx0LmxpbmVFbmQoKSx0LmxpbmVTdGFydCgpLHQucG9pbnQodSxyKSx0LnBvaW50KG8sciksbj0wKTppIT09dSYmYz49cnUmJihmdShlLWkpPG51JiYoZS09aSpudSksZnUoby11KTxudSYmKG8tPXUqbnUpLHI9ZnVuY3Rpb24odCxuLGUscil7dmFyIGksbyxhPXl1KHQtZSk7cmV0dXJuIGZ1KGEpPm51P3N1KCh5dShuKSoobz1odShyKSkqeXUoZSkteXUocikqKGk9aHUobikpKnl1KHQpKS8oaSpvKmEpKToobityKS8yfShlLHIsbyxhKSx0LnBvaW50KGksciksdC5saW5lRW5kKCksdC5saW5lU3RhcnQoKSx0LnBvaW50KHUsciksbj0wKSx0LnBvaW50KGU9byxyPWEpLGk9dX0sbGluZUVuZDpmdW5jdGlvbigpe3QubGluZUVuZCgpLGU9cj1OYU59LGNsZWFuOmZ1bmN0aW9uKCl7cmV0dXJuIDItbn19fSxmdW5jdGlvbih0LG4sZSxyKXt2YXIgaTtpZihudWxsPT10KWk9ZSppdSxyLnBvaW50KC1ydSxpKSxyLnBvaW50KDAsaSksci5wb2ludChydSxpKSxyLnBvaW50KHJ1LDApLHIucG9pbnQocnUsLWkpLHIucG9pbnQoMCwtaSksci5wb2ludCgtcnUsLWkpLHIucG9pbnQoLXJ1LDApLHIucG9pbnQoLXJ1LGkpO2Vsc2UgaWYoZnUodFswXS1uWzBdKT5udSl7dmFyIG89dFswXTxuWzBdP3J1Oi1ydTtpPWUqby8yLHIucG9pbnQoLW8saSksci5wb2ludCgwLGkpLHIucG9pbnQobyxpKX1lbHNlIHIucG9pbnQoblswXSxuWzFdKX0sWy1ydSwtaXVdKTtmdW5jdGlvbiBwZih0KXt2YXIgbj1odSh0KSxlPTYqY3Uscj1uPjAsaT1mdShuKT5udTtmdW5jdGlvbiBvKHQsZSl7cmV0dXJuIGh1KHQpKmh1KGUpPm59ZnVuY3Rpb24gYSh0LGUscil7dmFyIGk9WzEsMCwwXSxvPVZ1KGp1KHQpLGp1KGUpKSxhPVh1KG8sbyksdT1vWzBdLGM9YS11KnU7aWYoIWMpcmV0dXJuIXImJnQ7dmFyIGY9biphL2Mscz0tbip1L2MsbD1WdShpLG8pLGg9JHUoaSxmKTtHdShoLCR1KG8scykpO3ZhciBkPWwscD1YdShoLGQpLHY9WHUoZCxkKSxnPXAqcC12KihYdShoLGgpLTEpO2lmKCEoZzwwKSl7dmFyIHk9YnUoZyksXz0kdShkLCgtcC15KS92KTtpZihHdShfLGgpLF89SHUoXyksIXIpcmV0dXJuIF87dmFyIGIsbT10WzBdLHg9ZVswXSx3PXRbMV0sTT1lWzFdO3g8bSYmKGI9bSxtPXgseD1iKTt2YXIgTj14LW0sVD1mdShOLXJ1KTxudTtpZighVCYmTTx3JiYoYj13LHc9TSxNPWIpLFR8fE48bnU/VD93K00+MF5fWzFdPChmdShfWzBdLW0pPG51P3c6TSk6dzw9X1sxXSYmX1sxXTw9TTpOPnJ1XihtPD1fWzBdJiZfWzBdPD14KSl7dmFyIEE9JHUoZCwoLXAreSkvdik7cmV0dXJuIEd1KEEsaCksW18sSHUoQSldfX19ZnVuY3Rpb24gdShuLGUpe3ZhciBpPXI/dDpydS10LG89MDtyZXR1cm4gbjwtaT9vfD0xOm4+aSYmKG98PTIpLGU8LWk/b3w9NDplPmkmJihvfD04KSxvfXJldHVybiBzZihvLGZ1bmN0aW9uKHQpe3ZhciBuLGUsYyxmLHM7cmV0dXJue2xpbmVTdGFydDpmdW5jdGlvbigpe2Y9Yz0hMSxzPTF9LHBvaW50OmZ1bmN0aW9uKGwsaCl7dmFyIGQscD1bbCxoXSx2PW8obCxoKSxnPXI/dj8wOnUobCxoKTp2P3UobCsobDwwP3J1Oi1ydSksaCk6MDtpZighbiYmKGY9Yz12KSYmdC5saW5lU3RhcnQoKSx2IT09YyYmKCEoZD1hKG4scCkpfHxlZihuLGQpfHxlZihwLGQpKSYmKHBbMF0rPW51LHBbMV0rPW51LHY9byhwWzBdLHBbMV0pKSx2IT09YylzPTAsdj8odC5saW5lU3RhcnQoKSxkPWEocCxuKSx0LnBvaW50KGRbMF0sZFsxXSkpOihkPWEobixwKSx0LnBvaW50KGRbMF0sZFsxXSksdC5saW5lRW5kKCkpLG49ZDtlbHNlIGlmKGkmJm4mJnJedil7dmFyIHk7ZyZlfHwhKHk9YShwLG4sITApKXx8KHM9MCxyPyh0LmxpbmVTdGFydCgpLHQucG9pbnQoeVswXVswXSx5WzBdWzFdKSx0LnBvaW50KHlbMV1bMF0seVsxXVsxXSksdC5saW5lRW5kKCkpOih0LnBvaW50KHlbMV1bMF0seVsxXVsxXSksdC5saW5lRW5kKCksdC5saW5lU3RhcnQoKSx0LnBvaW50KHlbMF1bMF0seVswXVsxXSkpKX0hdnx8biYmZWYobixwKXx8dC5wb2ludChwWzBdLHBbMV0pLG49cCxjPXYsZT1nfSxsaW5lRW5kOmZ1bmN0aW9uKCl7YyYmdC5saW5lRW5kKCksbj1udWxsfSxjbGVhbjpmdW5jdGlvbigpe3JldHVybiBzfChmJiZjKTw8MX19fSxmdW5jdGlvbihuLHIsaSxvKXtKYyhvLHQsZSxpLG4scil9LHI/WzAsLXRdOlstcnUsdC1ydV0pfXZhciB2Zj0xZTksZ2Y9LXZmO2Z1bmN0aW9uIHlmKHQsbixlLHIpe2Z1bmN0aW9uIGkoaSxvKXtyZXR1cm4gdDw9aSYmaTw9ZSYmbjw9byYmbzw9cn1mdW5jdGlvbiBvKGksbyx1LGYpe3ZhciBzPTAsbD0wO2lmKG51bGw9PWl8fChzPWEoaSx1KSkhPT0obD1hKG8sdSkpfHxjKGksbyk8MF51PjApZG97Zi5wb2ludCgwPT09c3x8Mz09PXM/dDplLHM+MT9yOm4pfXdoaWxlKChzPShzK3UrNCklNCkhPT1sKTtlbHNlIGYucG9pbnQob1swXSxvWzFdKX1mdW5jdGlvbiBhKHIsaSl7cmV0dXJuIGZ1KHJbMF0tdCk8bnU/aT4wPzA6MzpmdShyWzBdLWUpPG51P2k+MD8yOjE6ZnUoclsxXS1uKTxudT9pPjA/MTowOmk+MD8zOjJ9ZnVuY3Rpb24gdSh0LG4pe3JldHVybiBjKHQueCxuLngpfWZ1bmN0aW9uIGModCxuKXt2YXIgZT1hKHQsMSkscj1hKG4sMSk7cmV0dXJuIGUhPT1yP2UtcjowPT09ZT9uWzFdLXRbMV06MT09PWU/dFswXS1uWzBdOjI9PT1lP3RbMV0tblsxXTpuWzBdLXRbMF19cmV0dXJuIGZ1bmN0aW9uKGEpe3ZhciBjLGYscyxsLGgsZCxwLHYsZyx5LF8sYj1hLG09bmYoKSx4PXtwb2ludDp3LGxpbmVTdGFydDpmdW5jdGlvbigpe3gucG9pbnQ9TSxmJiZmLnB1c2gocz1bXSk7eT0hMCxnPSExLHA9dj1OYU59LGxpbmVFbmQ6ZnVuY3Rpb24oKXtjJiYoTShsLGgpLGQmJmcmJm0ucmVqb2luKCksYy5wdXNoKG0ucmVzdWx0KCkpKTt4LnBvaW50PXcsZyYmYi5saW5lRW5kKCl9LHBvbHlnb25TdGFydDpmdW5jdGlvbigpe2I9bSxjPVtdLGY9W10sXz0hMH0scG9seWdvbkVuZDpmdW5jdGlvbigpe3ZhciBuPWZ1bmN0aW9uKCl7Zm9yKHZhciBuPTAsZT0wLGk9Zi5sZW5ndGg7ZTxpOysrZSlmb3IodmFyIG8sYSx1PWZbZV0sYz0xLHM9dS5sZW5ndGgsbD11WzBdLGg9bFswXSxkPWxbMV07YzxzOysrYylvPWgsYT1kLGw9dVtjXSxoPWxbMF0sZD1sWzFdLGE8PXI/ZD5yJiYoaC1vKSooci1hKT4oZC1hKSoodC1vKSYmKytuOmQ8PXImJihoLW8pKihyLWEpPChkLWEpKih0LW8pJiYtLW47cmV0dXJuIG59KCksZT1fJiZuLGk9KGM9QShjKSkubGVuZ3RoOyhlfHxpKSYmKGEucG9seWdvblN0YXJ0KCksZSYmKGEubGluZVN0YXJ0KCksbyhudWxsLG51bGwsMSxhKSxhLmxpbmVFbmQoKSksaSYmb2YoYyx1LG4sbyxhKSxhLnBvbHlnb25FbmQoKSk7Yj1hLGM9Zj1zPW51bGx9fTtmdW5jdGlvbiB3KHQsbil7aSh0LG4pJiZiLnBvaW50KHQsbil9ZnVuY3Rpb24gTShvLGEpe3ZhciB1PWkobyxhKTtpZihmJiZzLnB1c2goW28sYV0pLHkpbD1vLGg9YSxkPXUseT0hMSx1JiYoYi5saW5lU3RhcnQoKSxiLnBvaW50KG8sYSkpO2Vsc2UgaWYodSYmZyliLnBvaW50KG8sYSk7ZWxzZXt2YXIgYz1bcD1NYXRoLm1heChnZixNYXRoLm1pbih2ZixwKSksdj1NYXRoLm1heChnZixNYXRoLm1pbih2Zix2KSldLG09W289TWF0aC5tYXgoZ2YsTWF0aC5taW4odmYsbykpLGE9TWF0aC5tYXgoZ2YsTWF0aC5taW4odmYsYSkpXTshZnVuY3Rpb24odCxuLGUscixpLG8pe3ZhciBhLHU9dFswXSxjPXRbMV0sZj0wLHM9MSxsPW5bMF0tdSxoPW5bMV0tYztpZihhPWUtdSxsfHwhKGE+MCkpe2lmKGEvPWwsbDwwKXtpZihhPGYpcmV0dXJuO2E8cyYmKHM9YSl9ZWxzZSBpZihsPjApe2lmKGE+cylyZXR1cm47YT5mJiYoZj1hKX1pZihhPWktdSxsfHwhKGE8MCkpe2lmKGEvPWwsbDwwKXtpZihhPnMpcmV0dXJuO2E+ZiYmKGY9YSl9ZWxzZSBpZihsPjApe2lmKGE8ZilyZXR1cm47YTxzJiYocz1hKX1pZihhPXItYyxofHwhKGE+MCkpe2lmKGEvPWgsaDwwKXtpZihhPGYpcmV0dXJuO2E8cyYmKHM9YSl9ZWxzZSBpZihoPjApe2lmKGE+cylyZXR1cm47YT5mJiYoZj1hKX1pZihhPW8tYyxofHwhKGE8MCkpe2lmKGEvPWgsaDwwKXtpZihhPnMpcmV0dXJuO2E+ZiYmKGY9YSl9ZWxzZSBpZihoPjApe2lmKGE8ZilyZXR1cm47YTxzJiYocz1hKX1yZXR1cm4gZj4wJiYodFswXT11K2YqbCx0WzFdPWMrZipoKSxzPDEmJihuWzBdPXUrcypsLG5bMV09YytzKmgpLCEwfX19fX0oYyxtLHQsbixlLHIpP3UmJihiLmxpbmVTdGFydCgpLGIucG9pbnQobyxhKSxfPSExKTooZ3x8KGIubGluZVN0YXJ0KCksYi5wb2ludChjWzBdLGNbMV0pKSxiLnBvaW50KG1bMF0sbVsxXSksdXx8Yi5saW5lRW5kKCksXz0hMSl9cD1vLHY9YSxnPXV9cmV0dXJuIHh9fXZhciBfZixiZixtZix4Zj1RYSgpLHdmPXtzcGhlcmU6TnUscG9pbnQ6TnUsbGluZVN0YXJ0OmZ1bmN0aW9uKCl7d2YucG9pbnQ9TmYsd2YubGluZUVuZD1NZn0sbGluZUVuZDpOdSxwb2x5Z29uU3RhcnQ6TnUscG9seWdvbkVuZDpOdX07ZnVuY3Rpb24gTWYoKXt3Zi5wb2ludD13Zi5saW5lRW5kPU51fWZ1bmN0aW9uIE5mKHQsbil7X2Y9dCo9Y3UsYmY9eXUobio9Y3UpLG1mPWh1KG4pLHdmLnBvaW50PVRmfWZ1bmN0aW9uIFRmKHQsbil7dCo9Y3U7dmFyIGU9eXUobio9Y3UpLHI9aHUobiksaT1mdSh0LV9mKSxvPWh1KGkpLGE9cip5dShpKSx1PW1mKmUtYmYqcipvLGM9YmYqZSttZipyKm87eGYuYWRkKGx1KGJ1KGEqYSt1KnUpLGMpKSxfZj10LGJmPWUsbWY9cn1mdW5jdGlvbiBBZih0KXtyZXR1cm4geGYucmVzZXQoKSxDdSh0LHdmKSwreGZ9dmFyIFNmPVtudWxsLG51bGxdLGtmPXt0eXBlOlwiTGluZVN0cmluZ1wiLGNvb3JkaW5hdGVzOlNmfTtmdW5jdGlvbiBFZih0LG4pe3JldHVybiBTZlswXT10LFNmWzFdPW4sQWYoa2YpfXZhciBDZj17RmVhdHVyZTpmdW5jdGlvbih0LG4pe3JldHVybiB6Zih0Lmdlb21ldHJ5LG4pfSxGZWF0dXJlQ29sbGVjdGlvbjpmdW5jdGlvbih0LG4pe2Zvcih2YXIgZT10LmZlYXR1cmVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspaWYoemYoZVtyXS5nZW9tZXRyeSxuKSlyZXR1cm4hMDtyZXR1cm4hMX19LFBmPXtTcGhlcmU6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sUG9pbnQ6ZnVuY3Rpb24odCxuKXtyZXR1cm4gUmYodC5jb29yZGluYXRlcyxuKX0sTXVsdGlQb2ludDpmdW5jdGlvbih0LG4pe2Zvcih2YXIgZT10LmNvb3JkaW5hdGVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspaWYoUmYoZVtyXSxuKSlyZXR1cm4hMDtyZXR1cm4hMX0sTGluZVN0cmluZzpmdW5jdGlvbih0LG4pe3JldHVybiBEZih0LmNvb3JkaW5hdGVzLG4pfSxNdWx0aUxpbmVTdHJpbmc6ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9dC5jb29yZGluYXRlcyxyPS0xLGk9ZS5sZW5ndGg7KytyPGk7KWlmKERmKGVbcl0sbikpcmV0dXJuITA7cmV0dXJuITF9LFBvbHlnb246ZnVuY3Rpb24odCxuKXtyZXR1cm4gcWYodC5jb29yZGluYXRlcyxuKX0sTXVsdGlQb2x5Z29uOmZ1bmN0aW9uKHQsbil7Zm9yKHZhciBlPXQuY29vcmRpbmF0ZXMscj0tMSxpPWUubGVuZ3RoOysrcjxpOylpZihxZihlW3JdLG4pKXJldHVybiEwO3JldHVybiExfSxHZW9tZXRyeUNvbGxlY3Rpb246ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9dC5nZW9tZXRyaWVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspaWYoemYoZVtyXSxuKSlyZXR1cm4hMDtyZXR1cm4hMX19O2Z1bmN0aW9uIHpmKHQsbil7cmV0dXJuISghdHx8IVBmLmhhc093blByb3BlcnR5KHQudHlwZSkpJiZQZlt0LnR5cGVdKHQsbil9ZnVuY3Rpb24gUmYodCxuKXtyZXR1cm4gMD09PUVmKHQsbil9ZnVuY3Rpb24gRGYodCxuKXtmb3IodmFyIGUscixpLG89MCxhPXQubGVuZ3RoO288YTtvKyspe2lmKDA9PT0ocj1FZih0W29dLG4pKSlyZXR1cm4hMDtpZihvPjAmJihpPUVmKHRbb10sdFtvLTFdKSk+MCYmZTw9aSYmcjw9aSYmKGUrci1pKSooMS1NYXRoLnBvdygoZS1yKS9pLDIpKTxldSppKXJldHVybiEwO2U9cn1yZXR1cm4hMX1mdW5jdGlvbiBxZih0LG4pe3JldHVybiEhZmYodC5tYXAoTGYpLFVmKG4pKX1mdW5jdGlvbiBMZih0KXtyZXR1cm4odD10Lm1hcChVZikpLnBvcCgpLHR9ZnVuY3Rpb24gVWYodCl7cmV0dXJuW3RbMF0qY3UsdFsxXSpjdV19ZnVuY3Rpb24gT2YodCxuLGUpe3ZhciByPWcodCxuLW51LGUpLmNvbmNhdChuKTtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHIubWFwKGZ1bmN0aW9uKG4pe3JldHVyblt0LG5dfSl9fWZ1bmN0aW9uIEJmKHQsbixlKXt2YXIgcj1nKHQsbi1udSxlKS5jb25jYXQobik7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiByLm1hcChmdW5jdGlvbihuKXtyZXR1cm5bbix0XX0pfX1mdW5jdGlvbiBGZigpe3ZhciB0LG4sZSxyLGksbyxhLHUsYyxmLHMsbCxoPTEwLGQ9aCxwPTkwLHY9MzYwLHk9Mi41O2Z1bmN0aW9uIF8oKXtyZXR1cm57dHlwZTpcIk11bHRpTGluZVN0cmluZ1wiLGNvb3JkaW5hdGVzOmIoKX19ZnVuY3Rpb24gYigpe3JldHVybiBnKGR1KHIvcCkqcCxlLHApLm1hcChzKS5jb25jYXQoZyhkdSh1L3YpKnYsYSx2KS5tYXAobCkpLmNvbmNhdChnKGR1KG4vaCkqaCx0LGgpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gZnUodCVwKT5udX0pLm1hcChjKSkuY29uY2F0KGcoZHUoby9kKSpkLGksZCkuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiBmdSh0JXYpPm51fSkubWFwKGYpKX1yZXR1cm4gXy5saW5lcz1mdW5jdGlvbigpe3JldHVybiBiKCkubWFwKGZ1bmN0aW9uKHQpe3JldHVybnt0eXBlOlwiTGluZVN0cmluZ1wiLGNvb3JkaW5hdGVzOnR9fSl9LF8ub3V0bGluZT1mdW5jdGlvbigpe3JldHVybnt0eXBlOlwiUG9seWdvblwiLGNvb3JkaW5hdGVzOltzKHIpLmNvbmNhdChsKGEpLnNsaWNlKDEpLHMoZSkucmV2ZXJzZSgpLnNsaWNlKDEpLGwodSkucmV2ZXJzZSgpLnNsaWNlKDEpKV19fSxfLmV4dGVudD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9fLmV4dGVudE1ham9yKHQpLmV4dGVudE1pbm9yKHQpOl8uZXh0ZW50TWlub3IoKX0sXy5leHRlbnRNYWpvcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj0rdFswXVswXSxlPSt0WzFdWzBdLHU9K3RbMF1bMV0sYT0rdFsxXVsxXSxyPmUmJih0PXIscj1lLGU9dCksdT5hJiYodD11LHU9YSxhPXQpLF8ucHJlY2lzaW9uKHkpKTpbW3IsdV0sW2UsYV1dfSxfLmV4dGVudE1pbm9yPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPStlWzBdWzBdLHQ9K2VbMV1bMF0sbz0rZVswXVsxXSxpPStlWzFdWzFdLG4+dCYmKGU9bixuPXQsdD1lKSxvPmkmJihlPW8sbz1pLGk9ZSksXy5wcmVjaXNpb24oeSkpOltbbixvXSxbdCxpXV19LF8uc3RlcD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9fLnN0ZXBNYWpvcih0KS5zdGVwTWlub3IodCk6Xy5zdGVwTWlub3IoKX0sXy5zdGVwTWFqb3I9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHA9K3RbMF0sdj0rdFsxXSxfKTpbcCx2XX0sXy5zdGVwTWlub3I9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGg9K3RbMF0sZD0rdFsxXSxfKTpbaCxkXX0sXy5wcmVjaXNpb249ZnVuY3Rpb24oaCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHk9K2gsYz1PZihvLGksOTApLGY9QmYobix0LHkpLHM9T2YodSxhLDkwKSxsPUJmKHIsZSx5KSxfKTp5fSxfLmV4dGVudE1ham9yKFtbLTE4MCwtOTArbnVdLFsxODAsOTAtbnVdXSkuZXh0ZW50TWlub3IoW1stMTgwLC04MC1udV0sWzE4MCw4MCtudV1dKX1mdW5jdGlvbiBZZih0KXtyZXR1cm4gdH12YXIgSWYsSGYsamYsWGYsVmY9UWEoKSxHZj1RYSgpLCRmPXtwb2ludDpOdSxsaW5lU3RhcnQ6TnUsbGluZUVuZDpOdSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXskZi5saW5lU3RhcnQ9V2YsJGYubGluZUVuZD1LZn0scG9seWdvbkVuZDpmdW5jdGlvbigpeyRmLmxpbmVTdGFydD0kZi5saW5lRW5kPSRmLnBvaW50PU51LFZmLmFkZChmdShHZikpLEdmLnJlc2V0KCl9LHJlc3VsdDpmdW5jdGlvbigpe3ZhciB0PVZmLzI7cmV0dXJuIFZmLnJlc2V0KCksdH19O2Z1bmN0aW9uIFdmKCl7JGYucG9pbnQ9WmZ9ZnVuY3Rpb24gWmYodCxuKXskZi5wb2ludD1RZixJZj1qZj10LEhmPVhmPW59ZnVuY3Rpb24gUWYodCxuKXtHZi5hZGQoWGYqdC1qZipuKSxqZj10LFhmPW59ZnVuY3Rpb24gS2YoKXtRZihJZixIZil9dmFyIEpmPTEvMCx0cz1KZixucz0tSmYsZXM9bnMscnM9e3BvaW50OmZ1bmN0aW9uKHQsbil7dDxKZiYmKEpmPXQpO3Q+bnMmJihucz10KTtuPHRzJiYodHM9bik7bj5lcyYmKGVzPW4pfSxsaW5lU3RhcnQ6TnUsbGluZUVuZDpOdSxwb2x5Z29uU3RhcnQ6TnUscG9seWdvbkVuZDpOdSxyZXN1bHQ6ZnVuY3Rpb24oKXt2YXIgdD1bW0pmLHRzXSxbbnMsZXNdXTtyZXR1cm4gbnM9ZXM9LSh0cz1KZj0xLzApLHR9fTt2YXIgaXMsb3MsYXMsdXMsY3M9MCxmcz0wLHNzPTAsbHM9MCxocz0wLGRzPTAscHM9MCx2cz0wLGdzPTAseXM9e3BvaW50Ol9zLGxpbmVTdGFydDpicyxsaW5lRW5kOndzLHBvbHlnb25TdGFydDpmdW5jdGlvbigpe3lzLmxpbmVTdGFydD1Ncyx5cy5saW5lRW5kPU5zfSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7eXMucG9pbnQ9X3MseXMubGluZVN0YXJ0PWJzLHlzLmxpbmVFbmQ9d3N9LHJlc3VsdDpmdW5jdGlvbigpe3ZhciB0PWdzP1twcy9ncyx2cy9nc106ZHM/W2xzL2RzLGhzL2RzXTpzcz9bY3Mvc3MsZnMvc3NdOltOYU4sTmFOXTtyZXR1cm4gY3M9ZnM9c3M9bHM9aHM9ZHM9cHM9dnM9Z3M9MCx0fX07ZnVuY3Rpb24gX3ModCxuKXtjcys9dCxmcys9biwrK3NzfWZ1bmN0aW9uIGJzKCl7eXMucG9pbnQ9bXN9ZnVuY3Rpb24gbXModCxuKXt5cy5wb2ludD14cyxfcyhhcz10LHVzPW4pfWZ1bmN0aW9uIHhzKHQsbil7dmFyIGU9dC1hcyxyPW4tdXMsaT1idShlKmUrcipyKTtscys9aSooYXMrdCkvMixocys9aSoodXMrbikvMixkcys9aSxfcyhhcz10LHVzPW4pfWZ1bmN0aW9uIHdzKCl7eXMucG9pbnQ9X3N9ZnVuY3Rpb24gTXMoKXt5cy5wb2ludD1Uc31mdW5jdGlvbiBOcygpe0FzKGlzLG9zKX1mdW5jdGlvbiBUcyh0LG4pe3lzLnBvaW50PUFzLF9zKGlzPWFzPXQsb3M9dXM9bil9ZnVuY3Rpb24gQXModCxuKXt2YXIgZT10LWFzLHI9bi11cyxpPWJ1KGUqZStyKnIpO2xzKz1pKihhcyt0KS8yLGhzKz1pKih1cytuKS8yLGRzKz1pLHBzKz0oaT11cyp0LWFzKm4pKihhcyt0KSx2cys9aSoodXMrbiksZ3MrPTMqaSxfcyhhcz10LHVzPW4pfWZ1bmN0aW9uIFNzKHQpe3RoaXMuX2NvbnRleHQ9dH1Tcy5wcm90b3R5cGU9e19yYWRpdXM6NC41LHBvaW50UmFkaXVzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9yYWRpdXM9dCx0aGlzfSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpezA9PT10aGlzLl9saW5lJiZ0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX3BvaW50PU5hTn0scG9pbnQ6ZnVuY3Rpb24odCxuKXtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LG4pLHRoaXMuX3BvaW50PTE7YnJlYWs7Y2FzZSAxOnRoaXMuX2NvbnRleHQubGluZVRvKHQsbik7YnJlYWs7ZGVmYXVsdDp0aGlzLl9jb250ZXh0Lm1vdmVUbyh0K3RoaXMuX3JhZGl1cyxuKSx0aGlzLl9jb250ZXh0LmFyYyh0LG4sdGhpcy5fcmFkaXVzLDAsYXUpfX0scmVzdWx0Ok51fTt2YXIga3MsRXMsQ3MsUHMsenMsUnM9UWEoKSxEcz17cG9pbnQ6TnUsbGluZVN0YXJ0OmZ1bmN0aW9uKCl7RHMucG9pbnQ9cXN9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtrcyYmTHMoRXMsQ3MpLERzLnBvaW50PU51fSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtrcz0hMH0scG9seWdvbkVuZDpmdW5jdGlvbigpe2tzPW51bGx9LHJlc3VsdDpmdW5jdGlvbigpe3ZhciB0PStScztyZXR1cm4gUnMucmVzZXQoKSx0fX07ZnVuY3Rpb24gcXModCxuKXtEcy5wb2ludD1McyxFcz1Qcz10LENzPXpzPW59ZnVuY3Rpb24gTHModCxuKXtQcy09dCx6cy09bixScy5hZGQoYnUoUHMqUHMrenMqenMpKSxQcz10LHpzPW59ZnVuY3Rpb24gVXMoKXt0aGlzLl9zdHJpbmc9W119ZnVuY3Rpb24gT3ModCl7cmV0dXJuXCJtMCxcIit0K1wiYVwiK3QrXCIsXCIrdCtcIiAwIDEsMSAwLFwiKy0yKnQrXCJhXCIrdCtcIixcIit0K1wiIDAgMSwxIDAsXCIrMip0K1wielwifWZ1bmN0aW9uIEJzKHQpe3JldHVybiBmdW5jdGlvbihuKXt2YXIgZT1uZXcgRnM7Zm9yKHZhciByIGluIHQpZVtyXT10W3JdO3JldHVybiBlLnN0cmVhbT1uLGV9fWZ1bmN0aW9uIEZzKCl7fWZ1bmN0aW9uIFlzKHQsbixlKXt2YXIgcj10LmNsaXBFeHRlbnQmJnQuY2xpcEV4dGVudCgpO3JldHVybiB0LnNjYWxlKDE1MCkudHJhbnNsYXRlKFswLDBdKSxudWxsIT1yJiZ0LmNsaXBFeHRlbnQobnVsbCksQ3UoZSx0LnN0cmVhbShycykpLG4ocnMucmVzdWx0KCkpLG51bGwhPXImJnQuY2xpcEV4dGVudChyKSx0fWZ1bmN0aW9uIElzKHQsbixlKXtyZXR1cm4gWXModCxmdW5jdGlvbihlKXt2YXIgcj1uWzFdWzBdLW5bMF1bMF0saT1uWzFdWzFdLW5bMF1bMV0sbz1NYXRoLm1pbihyLyhlWzFdWzBdLWVbMF1bMF0pLGkvKGVbMV1bMV0tZVswXVsxXSkpLGE9K25bMF1bMF0rKHItbyooZVsxXVswXStlWzBdWzBdKSkvMix1PStuWzBdWzFdKyhpLW8qKGVbMV1bMV0rZVswXVsxXSkpLzI7dC5zY2FsZSgxNTAqbykudHJhbnNsYXRlKFthLHVdKX0sZSl9ZnVuY3Rpb24gSHModCxuLGUpe3JldHVybiBJcyh0LFtbMCwwXSxuXSxlKX1mdW5jdGlvbiBqcyh0LG4sZSl7cmV0dXJuIFlzKHQsZnVuY3Rpb24oZSl7dmFyIHI9K24saT1yLyhlWzFdWzBdLWVbMF1bMF0pLG89KHItaSooZVsxXVswXStlWzBdWzBdKSkvMixhPS1pKmVbMF1bMV07dC5zY2FsZSgxNTAqaSkudHJhbnNsYXRlKFtvLGFdKX0sZSl9ZnVuY3Rpb24gWHModCxuLGUpe3JldHVybiBZcyh0LGZ1bmN0aW9uKGUpe3ZhciByPStuLGk9ci8oZVsxXVsxXS1lWzBdWzFdKSxvPS1pKmVbMF1bMF0sYT0oci1pKihlWzFdWzFdK2VbMF1bMV0pKS8yO3Quc2NhbGUoMTUwKmkpLnRyYW5zbGF0ZShbbyxhXSl9LGUpfVVzLnByb3RvdHlwZT17X3JhZGl1czo0LjUsX2NpcmNsZTpPcyg0LjUpLHBvaW50UmFkaXVzOmZ1bmN0aW9uKHQpe3JldHVybih0PSt0KSE9PXRoaXMuX3JhZGl1cyYmKHRoaXMuX3JhZGl1cz10LHRoaXMuX2NpcmNsZT1udWxsKSx0aGlzfSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpezA9PT10aGlzLl9saW5lJiZ0aGlzLl9zdHJpbmcucHVzaChcIlpcIiksdGhpcy5fcG9pbnQ9TmFOfSxwb2ludDpmdW5jdGlvbih0LG4pe3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3N0cmluZy5wdXNoKFwiTVwiLHQsXCIsXCIsbiksdGhpcy5fcG9pbnQ9MTticmVhaztjYXNlIDE6dGhpcy5fc3RyaW5nLnB1c2goXCJMXCIsdCxcIixcIixuKTticmVhaztkZWZhdWx0Om51bGw9PXRoaXMuX2NpcmNsZSYmKHRoaXMuX2NpcmNsZT1Pcyh0aGlzLl9yYWRpdXMpKSx0aGlzLl9zdHJpbmcucHVzaChcIk1cIix0LFwiLFwiLG4sdGhpcy5fY2lyY2xlKX19LHJlc3VsdDpmdW5jdGlvbigpe2lmKHRoaXMuX3N0cmluZy5sZW5ndGgpe3ZhciB0PXRoaXMuX3N0cmluZy5qb2luKFwiXCIpO3JldHVybiB0aGlzLl9zdHJpbmc9W10sdH1yZXR1cm4gbnVsbH19LEZzLnByb3RvdHlwZT17Y29uc3RydWN0b3I6RnMscG9pbnQ6ZnVuY3Rpb24odCxuKXt0aGlzLnN0cmVhbS5wb2ludCh0LG4pfSxzcGhlcmU6ZnVuY3Rpb24oKXt0aGlzLnN0cmVhbS5zcGhlcmUoKX0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5zdHJlYW0ubGluZVN0YXJ0KCl9LGxpbmVFbmQ6ZnVuY3Rpb24oKXt0aGlzLnN0cmVhbS5saW5lRW5kKCl9LHBvbHlnb25TdGFydDpmdW5jdGlvbigpe3RoaXMuc3RyZWFtLnBvbHlnb25TdGFydCgpfSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7dGhpcy5zdHJlYW0ucG9seWdvbkVuZCgpfX07dmFyIFZzPTE2LEdzPWh1KDMwKmN1KTtmdW5jdGlvbiAkcyh0LG4pe3JldHVybituP2Z1bmN0aW9uKHQsbil7ZnVuY3Rpb24gZShyLGksbyxhLHUsYyxmLHMsbCxoLGQscCx2LGcpe3ZhciB5PWYtcixfPXMtaSxiPXkqeStfKl87aWYoYj40Km4mJnYtLSl7dmFyIG09YStoLHg9dStkLHc9YytwLE09YnUobSptK3gqeCt3KncpLE49d3Uody89TSksVD1mdShmdSh3KS0xKTxudXx8ZnUoby1sKTxudT8obytsKS8yOmx1KHgsbSksQT10KFQsTiksUz1BWzBdLGs9QVsxXSxFPVMtcixDPWstaSxQPV8qRS15KkM7KFAqUC9iPm58fGZ1KCh5KkUrXypDKS9iLS41KT4uM3x8YSpoK3UqZCtjKnA8R3MpJiYoZShyLGksbyxhLHUsYyxTLGssVCxtLz1NLHgvPU0sdyx2LGcpLGcucG9pbnQoUyxrKSxlKFMsayxULG0seCx3LGYscyxsLGgsZCxwLHYsZykpfX1yZXR1cm4gZnVuY3Rpb24obil7dmFyIHIsaSxvLGEsdSxjLGYscyxsLGgsZCxwLHY9e3BvaW50OmcsbGluZVN0YXJ0OnksbGluZUVuZDpiLHBvbHlnb25TdGFydDpmdW5jdGlvbigpe24ucG9seWdvblN0YXJ0KCksdi5saW5lU3RhcnQ9bX0scG9seWdvbkVuZDpmdW5jdGlvbigpe24ucG9seWdvbkVuZCgpLHYubGluZVN0YXJ0PXl9fTtmdW5jdGlvbiBnKGUscil7ZT10KGUsciksbi5wb2ludChlWzBdLGVbMV0pfWZ1bmN0aW9uIHkoKXtzPU5hTix2LnBvaW50PV8sbi5saW5lU3RhcnQoKX1mdW5jdGlvbiBfKHIsaSl7dmFyIG89anUoW3IsaV0pLGE9dChyLGkpO2UocyxsLGYsaCxkLHAscz1hWzBdLGw9YVsxXSxmPXIsaD1vWzBdLGQ9b1sxXSxwPW9bMl0sVnMsbiksbi5wb2ludChzLGwpfWZ1bmN0aW9uIGIoKXt2LnBvaW50PWcsbi5saW5lRW5kKCl9ZnVuY3Rpb24gbSgpe3koKSx2LnBvaW50PXgsdi5saW5lRW5kPXd9ZnVuY3Rpb24geCh0LG4pe18ocj10LG4pLGk9cyxvPWwsYT1oLHU9ZCxjPXAsdi5wb2ludD1ffWZ1bmN0aW9uIHcoKXtlKHMsbCxmLGgsZCxwLGksbyxyLGEsdSxjLFZzLG4pLHYubGluZUVuZD1iLGIoKX1yZXR1cm4gdn19KHQsbik6ZnVuY3Rpb24odCl7cmV0dXJuIEJzKHtwb2ludDpmdW5jdGlvbihuLGUpe249dChuLGUpLHRoaXMuc3RyZWFtLnBvaW50KG5bMF0sblsxXSl9fSl9KHQpfXZhciBXcz1Ccyh7cG9pbnQ6ZnVuY3Rpb24odCxuKXt0aGlzLnN0cmVhbS5wb2ludCh0KmN1LG4qY3UpfX0pO2Z1bmN0aW9uIFpzKHQsbixlLHIsaSxvKXt2YXIgYT1odShvKSx1PXl1KG8pLGM9YSp0LGY9dSp0LHM9YS90LGw9dS90LGg9KHUqZS1hKm4pL3QsZD0odSpuK2EqZSkvdDtmdW5jdGlvbiBwKHQsbyl7cmV0dXJuW2MqKHQqPXIpLWYqKG8qPWkpK24sZS1mKnQtYypvXX1yZXR1cm4gcC5pbnZlcnQ9ZnVuY3Rpb24odCxuKXtyZXR1cm5bcioocyp0LWwqbitoKSxpKihkLWwqdC1zKm4pXX0scH1mdW5jdGlvbiBRcyh0KXtyZXR1cm4gS3MoZnVuY3Rpb24oKXtyZXR1cm4gdH0pKCl9ZnVuY3Rpb24gS3ModCl7dmFyIG4sZSxyLGksbyxhLHUsYyxmLHMsbD0xNTAsaD00ODAsZD0yNTAscD0wLHY9MCxnPTAseT0wLF89MCxiPTAsbT0xLHg9MSx3PW51bGwsTT1kZixOPW51bGwsVD1ZZixBPS41O2Z1bmN0aW9uIFModCl7cmV0dXJuIGModFswXSpjdSx0WzFdKmN1KX1mdW5jdGlvbiBrKHQpe3JldHVybih0PWMuaW52ZXJ0KHRbMF0sdFsxXSkpJiZbdFswXSp1dSx0WzFdKnV1XX1mdW5jdGlvbiBFKCl7dmFyIHQ9WnMobCwwLDAsbSx4LGIpLmFwcGx5KG51bGwsbihwLHYpKSxyPShiP1pzOmZ1bmN0aW9uKHQsbixlLHIsaSl7ZnVuY3Rpb24gbyhvLGEpe3JldHVybltuK3QqKG8qPXIpLGUtdCooYSo9aSldfXJldHVybiBvLmludmVydD1mdW5jdGlvbihvLGEpe3JldHVyblsoby1uKS90KnIsKGUtYSkvdCppXX0sb30pKGwsaC10WzBdLGQtdFsxXSxtLHgsYik7cmV0dXJuIGU9JGMoZyx5LF8pLHU9VmMobixyKSxjPVZjKGUsdSksYT0kcyh1LEEpLEMoKX1mdW5jdGlvbiBDKCl7cmV0dXJuIGY9cz1udWxsLFN9cmV0dXJuIFMuc3RyZWFtPWZ1bmN0aW9uKHQpe3JldHVybiBmJiZzPT09dD9mOmY9V3MoZnVuY3Rpb24odCl7cmV0dXJuIEJzKHtwb2ludDpmdW5jdGlvbihuLGUpe3ZhciByPXQobixlKTtyZXR1cm4gdGhpcy5zdHJlYW0ucG9pbnQoclswXSxyWzFdKX19KX0oZSkoTShhKFQocz10KSkpKSl9LFMucHJlY2xpcD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oTT10LHc9dm9pZCAwLEMoKSk6TX0sUy5wb3N0Y2xpcD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oVD10LE49cj1pPW89bnVsbCxDKCkpOlR9LFMuY2xpcEFuZ2xlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhNPSt0P3BmKHc9dCpjdSk6KHc9bnVsbCxkZiksQygpKTp3KnV1fSxTLmNsaXBFeHRlbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KFQ9bnVsbD09dD8oTj1yPWk9bz1udWxsLFlmKTp5ZihOPSt0WzBdWzBdLHI9K3RbMF1bMV0saT0rdFsxXVswXSxvPSt0WzFdWzFdKSxDKCkpOm51bGw9PU4/bnVsbDpbW04scl0sW2ksb11dfSxTLnNjYWxlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhsPSt0LEUoKSk6bH0sUy50cmFuc2xhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGg9K3RbMF0sZD0rdFsxXSxFKCkpOltoLGRdfSxTLmNlbnRlcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocD10WzBdJTM2MCpjdSx2PXRbMV0lMzYwKmN1LEUoKSk6W3AqdXUsdip1dV19LFMucm90YXRlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhnPXRbMF0lMzYwKmN1LHk9dFsxXSUzNjAqY3UsXz10Lmxlbmd0aD4yP3RbMl0lMzYwKmN1OjAsRSgpKTpbZyp1dSx5KnV1LF8qdXVdfSxTLmFuZ2xlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhiPXQlMzYwKmN1LEUoKSk6Yip1dX0sUy5yZWZsZWN0WD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obT10Py0xOjEsRSgpKTptPDB9LFMucmVmbGVjdFk9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHg9dD8tMToxLEUoKSk6eDwwfSxTLnByZWNpc2lvbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT0kcyh1LEE9dCp0KSxDKCkpOmJ1KEEpfSxTLmZpdEV4dGVudD1mdW5jdGlvbih0LG4pe3JldHVybiBJcyhTLHQsbil9LFMuZml0U2l6ZT1mdW5jdGlvbih0LG4pe3JldHVybiBIcyhTLHQsbil9LFMuZml0V2lkdGg9ZnVuY3Rpb24odCxuKXtyZXR1cm4ganMoUyx0LG4pfSxTLmZpdEhlaWdodD1mdW5jdGlvbih0LG4pe3JldHVybiBYcyhTLHQsbil9LGZ1bmN0aW9uKCl7cmV0dXJuIG49dC5hcHBseSh0aGlzLGFyZ3VtZW50cyksUy5pbnZlcnQ9bi5pbnZlcnQmJmssRSgpfX1mdW5jdGlvbiBKcyh0KXt2YXIgbj0wLGU9cnUvMyxyPUtzKHQpLGk9cihuLGUpO3JldHVybiBpLnBhcmFsbGVscz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9yKG49dFswXSpjdSxlPXRbMV0qY3UpOltuKnV1LGUqdXVdfSxpfWZ1bmN0aW9uIHRsKHQsbil7dmFyIGU9eXUodCkscj0oZSt5dShuKSkvMjtpZihmdShyKTxudSlyZXR1cm4gZnVuY3Rpb24odCl7dmFyIG49aHUodCk7ZnVuY3Rpb24gZSh0LGUpe3JldHVyblt0Km4seXUoZSkvbl19cmV0dXJuIGUuaW52ZXJ0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuW3Qvbix3dShlKm4pXX0sZX0odCk7dmFyIGk9MStlKigyKnItZSksbz1idShpKS9yO2Z1bmN0aW9uIGEodCxuKXt2YXIgZT1idShpLTIqcip5dShuKSkvcjtyZXR1cm5bZSp5dSh0Kj1yKSxvLWUqaHUodCldfXJldHVybiBhLmludmVydD1mdW5jdGlvbih0LG4pe3ZhciBlPW8tbixhPWx1KHQsZnUoZSkpKl91KGUpO3JldHVybiBlKnI8MCYmKGEtPXJ1Kl91KHQpKl91KGUpKSxbYS9yLHd1KChpLSh0KnQrZSplKSpyKnIpLygyKnIpKV19LGF9ZnVuY3Rpb24gbmwoKXtyZXR1cm4gSnModGwpLnNjYWxlKDE1NS40MjQpLmNlbnRlcihbMCwzMy42NDQyXSl9ZnVuY3Rpb24gZWwoKXtyZXR1cm4gbmwoKS5wYXJhbGxlbHMoWzI5LjUsNDUuNV0pLnNjYWxlKDEwNzApLnRyYW5zbGF0ZShbNDgwLDI1MF0pLnJvdGF0ZShbOTYsMF0pLmNlbnRlcihbLS42LDM4LjddKX1mdW5jdGlvbiBybCh0KXtyZXR1cm4gZnVuY3Rpb24obixlKXt2YXIgcj1odShuKSxpPWh1KGUpLG89dChyKmkpO3JldHVybltvKmkqeXUobiksbyp5dShlKV19fWZ1bmN0aW9uIGlsKHQpe3JldHVybiBmdW5jdGlvbihuLGUpe3ZhciByPWJ1KG4qbitlKmUpLGk9dChyKSxvPXl1KGkpLGE9aHUoaSk7cmV0dXJuW2x1KG4qbyxyKmEpLHd1KHImJmUqby9yKV19fXZhciBvbD1ybChmdW5jdGlvbih0KXtyZXR1cm4gYnUoMi8oMSt0KSl9KTtvbC5pbnZlcnQ9aWwoZnVuY3Rpb24odCl7cmV0dXJuIDIqd3UodC8yKX0pO3ZhciBhbD1ybChmdW5jdGlvbih0KXtyZXR1cm4odD14dSh0KSkmJnQveXUodCl9KTtmdW5jdGlvbiB1bCh0LG4pe3JldHVyblt0LHZ1KG11KChpdStuKS8yKSldfWZ1bmN0aW9uIGNsKHQpe3ZhciBuLGUscixpPVFzKHQpLG89aS5jZW50ZXIsYT1pLnNjYWxlLHU9aS50cmFuc2xhdGUsYz1pLmNsaXBFeHRlbnQsZj1udWxsO2Z1bmN0aW9uIHMoKXt2YXIgbz1ydSphKCksdT1pKEtjKGkucm90YXRlKCkpLmludmVydChbMCwwXSkpO3JldHVybiBjKG51bGw9PWY/W1t1WzBdLW8sdVsxXS1vXSxbdVswXStvLHVbMV0rb11dOnQ9PT11bD9bW01hdGgubWF4KHVbMF0tbyxmKSxuXSxbTWF0aC5taW4odVswXStvLGUpLHJdXTpbW2YsTWF0aC5tYXgodVsxXS1vLG4pXSxbZSxNYXRoLm1pbih1WzFdK28scildXSl9cmV0dXJuIGkuc2NhbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGEodCkscygpKTphKCl9LGkudHJhbnNsYXRlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1KHQpLHMoKSk6dSgpfSxpLmNlbnRlcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obyh0KSxzKCkpOm8oKX0saS5jbGlwRXh0ZW50PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhudWxsPT10P2Y9bj1lPXI9bnVsbDooZj0rdFswXVswXSxuPSt0WzBdWzFdLGU9K3RbMV1bMF0scj0rdFsxXVsxXSkscygpKTpudWxsPT1mP251bGw6W1tmLG5dLFtlLHJdXX0scygpfWZ1bmN0aW9uIGZsKHQpe3JldHVybiBtdSgoaXUrdCkvMil9ZnVuY3Rpb24gc2wodCxuKXt2YXIgZT1odSh0KSxyPXQ9PT1uP3l1KHQpOnZ1KGUvaHUobikpL3Z1KGZsKG4pL2ZsKHQpKSxpPWUqZ3UoZmwodCkscikvcjtpZighcilyZXR1cm4gdWw7ZnVuY3Rpb24gbyh0LG4pe2k+MD9uPC1pdStudSYmKG49LWl1K251KTpuPml1LW51JiYobj1pdS1udSk7dmFyIGU9aS9ndShmbChuKSxyKTtyZXR1cm5bZSp5dShyKnQpLGktZSpodShyKnQpXX1yZXR1cm4gby5pbnZlcnQ9ZnVuY3Rpb24odCxuKXt2YXIgZT1pLW4sbz1fdShyKSpidSh0KnQrZSplKSxhPWx1KHQsZnUoZSkpKl91KGUpO3JldHVybiBlKnI8MCYmKGEtPXJ1Kl91KHQpKl91KGUpKSxbYS9yLDIqc3UoZ3UoaS9vLDEvcikpLWl1XX0sb31mdW5jdGlvbiBsbCh0LG4pe3JldHVyblt0LG5dfWZ1bmN0aW9uIGhsKHQsbil7dmFyIGU9aHUodCkscj10PT09bj95dSh0KTooZS1odShuKSkvKG4tdCksaT1lL3IrdDtpZihmdShyKTxudSlyZXR1cm4gbGw7ZnVuY3Rpb24gbyh0LG4pe3ZhciBlPWktbixvPXIqdDtyZXR1cm5bZSp5dShvKSxpLWUqaHUobyldfXJldHVybiBvLmludmVydD1mdW5jdGlvbih0LG4pe3ZhciBlPWktbixvPWx1KHQsZnUoZSkpKl91KGUpO3JldHVybiBlKnI8MCYmKG8tPXJ1Kl91KHQpKl91KGUpKSxbby9yLGktX3UocikqYnUodCp0K2UqZSldfSxvfWFsLmludmVydD1pbChmdW5jdGlvbih0KXtyZXR1cm4gdH0pLHVsLmludmVydD1mdW5jdGlvbih0LG4pe3JldHVyblt0LDIqc3UocHUobikpLWl1XX0sbGwuaW52ZXJ0PWxsO3ZhciBkbD0xLjM0MDI2NCxwbD0tLjA4MTEwNix2bD04OTNlLTYsZ2w9LjAwMzc5Nix5bD1idSgzKS8yO2Z1bmN0aW9uIF9sKHQsbil7dmFyIGU9d3UoeWwqeXUobikpLHI9ZSplLGk9cipyKnI7cmV0dXJuW3QqaHUoZSkvKHlsKihkbCszKnBsKnIraSooNyp2bCs5KmdsKnIpKSksZSooZGwrcGwqcitpKih2bCtnbCpyKSldfWZ1bmN0aW9uIGJsKHQsbil7dmFyIGU9aHUobikscj1odSh0KSplO3JldHVybltlKnl1KHQpL3IseXUobikvcl19ZnVuY3Rpb24gbWwodCxuKXt2YXIgZT1uKm4scj1lKmU7cmV0dXJuW3QqKC44NzA3LS4xMzE5NzkqZStyKihyKiguMDAzOTcxKmUtLjAwMTUyOSpyKS0uMDEzNzkxKSksbiooMS4wMDcyMjYrZSooLjAxNTA4NStyKiguMDI4ODc0KmUtLjA0NDQ3NS0uMDA1OTE2KnIpKSldfWZ1bmN0aW9uIHhsKHQsbil7cmV0dXJuW2h1KG4pKnl1KHQpLHl1KG4pXX1mdW5jdGlvbiB3bCh0LG4pe3ZhciBlPWh1KG4pLHI9MStodSh0KSplO3JldHVybltlKnl1KHQpL3IseXUobikvcl19ZnVuY3Rpb24gTWwodCxuKXtyZXR1cm5bdnUobXUoKGl1K24pLzIpKSwtdF19ZnVuY3Rpb24gTmwodCxuKXtyZXR1cm4gdC5wYXJlbnQ9PT1uLnBhcmVudD8xOjJ9ZnVuY3Rpb24gVGwodCxuKXtyZXR1cm4gdCtuLnh9ZnVuY3Rpb24gQWwodCxuKXtyZXR1cm4gTWF0aC5tYXgodCxuLnkpfWZ1bmN0aW9uIFNsKHQpe3ZhciBuPTAsZT10LmNoaWxkcmVuLHI9ZSYmZS5sZW5ndGg7aWYocilmb3IoOy0tcj49MDspbis9ZVtyXS52YWx1ZTtlbHNlIG49MTt0LnZhbHVlPW59ZnVuY3Rpb24ga2wodCxuKXt2YXIgZSxyLGksbyxhLHU9bmV3IHpsKHQpLGM9K3QudmFsdWUmJih1LnZhbHVlPXQudmFsdWUpLGY9W3VdO2ZvcihudWxsPT1uJiYobj1FbCk7ZT1mLnBvcCgpOylpZihjJiYoZS52YWx1ZT0rZS5kYXRhLnZhbHVlKSwoaT1uKGUuZGF0YSkpJiYoYT1pLmxlbmd0aCkpZm9yKGUuY2hpbGRyZW49bmV3IEFycmF5KGEpLG89YS0xO28+PTA7LS1vKWYucHVzaChyPWUuY2hpbGRyZW5bb109bmV3IHpsKGlbb10pKSxyLnBhcmVudD1lLHIuZGVwdGg9ZS5kZXB0aCsxO3JldHVybiB1LmVhY2hCZWZvcmUoUGwpfWZ1bmN0aW9uIEVsKHQpe3JldHVybiB0LmNoaWxkcmVufWZ1bmN0aW9uIENsKHQpe3QuZGF0YT10LmRhdGEuZGF0YX1mdW5jdGlvbiBQbCh0KXt2YXIgbj0wO2Rve3QuaGVpZ2h0PW59d2hpbGUoKHQ9dC5wYXJlbnQpJiZ0LmhlaWdodDwrK24pfWZ1bmN0aW9uIHpsKHQpe3RoaXMuZGF0YT10LHRoaXMuZGVwdGg9dGhpcy5oZWlnaHQ9MCx0aGlzLnBhcmVudD1udWxsfV9sLmludmVydD1mdW5jdGlvbih0LG4pe2Zvcih2YXIgZSxyPW4saT1yKnIsbz1pKmkqaSxhPTA7YTwxMiYmKG89KGk9KHItPWU9KHIqKGRsK3BsKmkrbyoodmwrZ2wqaSkpLW4pLyhkbCszKnBsKmkrbyooNyp2bCs5KmdsKmkpKSkqcikqaSppLCEoZnUoZSk8ZXUpKTsrK2EpO3JldHVyblt5bCp0KihkbCszKnBsKmkrbyooNyp2bCs5KmdsKmkpKS9odShyKSx3dSh5dShyKS95bCldfSxibC5pbnZlcnQ9aWwoc3UpLG1sLmludmVydD1mdW5jdGlvbih0LG4pe3ZhciBlLHI9bixpPTI1O2Rve3ZhciBvPXIqcixhPW8qbztyLT1lPShyKigxLjAwNzIyNitvKiguMDE1MDg1K2EqKC4wMjg4NzQqby0uMDQ0NDc1LS4wMDU5MTYqYSkpKS1uKS8oMS4wMDcyMjYrbyooLjA0NTI1NSthKiguMjU5ODY2Km8tLjMxMTMyNS0uMDA1OTE2KjExKmEpKSl9d2hpbGUoZnUoZSk+bnUmJi0taT4wKTtyZXR1cm5bdC8oLjg3MDcrKG89cipyKSoobyoobypvKm8qKC4wMDM5NzEtLjAwMTUyOSpvKS0uMDEzNzkxKS0uMTMxOTc5KSkscl19LHhsLmludmVydD1pbCh3dSksd2wuaW52ZXJ0PWlsKGZ1bmN0aW9uKHQpe3JldHVybiAyKnN1KHQpfSksTWwuaW52ZXJ0PWZ1bmN0aW9uKHQsbil7cmV0dXJuWy1uLDIqc3UocHUodCkpLWl1XX0semwucHJvdG90eXBlPWtsLnByb3RvdHlwZT17Y29uc3RydWN0b3I6emwsY291bnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lYWNoQWZ0ZXIoU2wpfSxlYWNoOmZ1bmN0aW9uKHQpe3ZhciBuLGUscixpLG89dGhpcyxhPVtvXTtkb3tmb3Iobj1hLnJldmVyc2UoKSxhPVtdO289bi5wb3AoKTspaWYodChvKSxlPW8uY2hpbGRyZW4pZm9yKHI9MCxpPWUubGVuZ3RoO3I8aTsrK3IpYS5wdXNoKGVbcl0pfXdoaWxlKGEubGVuZ3RoKTtyZXR1cm4gdGhpc30sZWFjaEFmdGVyOmZ1bmN0aW9uKHQpe2Zvcih2YXIgbixlLHIsaT10aGlzLG89W2ldLGE9W107aT1vLnBvcCgpOylpZihhLnB1c2goaSksbj1pLmNoaWxkcmVuKWZvcihlPTAscj1uLmxlbmd0aDtlPHI7KytlKW8ucHVzaChuW2VdKTtmb3IoO2k9YS5wb3AoKTspdChpKTtyZXR1cm4gdGhpc30sZWFjaEJlZm9yZTpmdW5jdGlvbih0KXtmb3IodmFyIG4sZSxyPXRoaXMsaT1bcl07cj1pLnBvcCgpOylpZih0KHIpLG49ci5jaGlsZHJlbilmb3IoZT1uLmxlbmd0aC0xO2U+PTA7LS1lKWkucHVzaChuW2VdKTtyZXR1cm4gdGhpc30sc3VtOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmVhY2hBZnRlcihmdW5jdGlvbihuKXtmb3IodmFyIGU9K3Qobi5kYXRhKXx8MCxyPW4uY2hpbGRyZW4saT1yJiZyLmxlbmd0aDstLWk+PTA7KWUrPXJbaV0udmFsdWU7bi52YWx1ZT1lfSl9LHNvcnQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZWFjaEJlZm9yZShmdW5jdGlvbihuKXtuLmNoaWxkcmVuJiZuLmNoaWxkcmVuLnNvcnQodCl9KX0scGF0aDpmdW5jdGlvbih0KXtmb3IodmFyIG49dGhpcyxlPWZ1bmN0aW9uKHQsbil7aWYodD09PW4pcmV0dXJuIHQ7dmFyIGU9dC5hbmNlc3RvcnMoKSxyPW4uYW5jZXN0b3JzKCksaT1udWxsO2Zvcih0PWUucG9wKCksbj1yLnBvcCgpO3Q9PT1uOylpPXQsdD1lLnBvcCgpLG49ci5wb3AoKTtyZXR1cm4gaX0obix0KSxyPVtuXTtuIT09ZTspbj1uLnBhcmVudCxyLnB1c2gobik7Zm9yKHZhciBpPXIubGVuZ3RoO3QhPT1lOylyLnNwbGljZShpLDAsdCksdD10LnBhcmVudDtyZXR1cm4gcn0sYW5jZXN0b3JzOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMsbj1bdF07dD10LnBhcmVudDspbi5wdXNoKHQpO3JldHVybiBufSxkZXNjZW5kYW50czpmdW5jdGlvbigpe3ZhciB0PVtdO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24obil7dC5wdXNoKG4pfSksdH0sbGVhdmVzOmZ1bmN0aW9uKCl7dmFyIHQ9W107cmV0dXJuIHRoaXMuZWFjaEJlZm9yZShmdW5jdGlvbihuKXtuLmNoaWxkcmVufHx0LnB1c2gobil9KSx0fSxsaW5rczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsbj1bXTtyZXR1cm4gdC5lYWNoKGZ1bmN0aW9uKGUpe2UhPT10JiZuLnB1c2goe3NvdXJjZTplLnBhcmVudCx0YXJnZXQ6ZX0pfSksbn0sY29weTpmdW5jdGlvbigpe3JldHVybiBrbCh0aGlzKS5lYWNoQmVmb3JlKENsKX19O3ZhciBSbD1BcnJheS5wcm90b3R5cGUuc2xpY2U7ZnVuY3Rpb24gRGwodCl7Zm9yKHZhciBuLGUscj0wLGk9KHQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBuLGUscj10Lmxlbmd0aDtyOyllPU1hdGgucmFuZG9tKCkqci0tfDAsbj10W3JdLHRbcl09dFtlXSx0W2VdPW47cmV0dXJuIHR9KFJsLmNhbGwodCkpKS5sZW5ndGgsbz1bXTtyPGk7KW49dFtyXSxlJiZVbChlLG4pPysrcjooZT1CbChvPXFsKG8sbikpLHI9MCk7cmV0dXJuIGV9ZnVuY3Rpb24gcWwodCxuKXt2YXIgZSxyO2lmKE9sKG4sdCkpcmV0dXJuW25dO2ZvcihlPTA7ZTx0Lmxlbmd0aDsrK2UpaWYoTGwobix0W2VdKSYmT2woRmwodFtlXSxuKSx0KSlyZXR1cm5bdFtlXSxuXTtmb3IoZT0wO2U8dC5sZW5ndGgtMTsrK2UpZm9yKHI9ZSsxO3I8dC5sZW5ndGg7KytyKWlmKExsKEZsKHRbZV0sdFtyXSksbikmJkxsKEZsKHRbZV0sbiksdFtyXSkmJkxsKEZsKHRbcl0sbiksdFtlXSkmJk9sKFlsKHRbZV0sdFtyXSxuKSx0KSlyZXR1cm5bdFtlXSx0W3JdLG5dO3Rocm93IG5ldyBFcnJvcn1mdW5jdGlvbiBMbCh0LG4pe3ZhciBlPXQuci1uLnIscj1uLngtdC54LGk9bi55LXQueTtyZXR1cm4gZTwwfHxlKmU8cipyK2kqaX1mdW5jdGlvbiBVbCh0LG4pe3ZhciBlPXQuci1uLnIrMWUtNixyPW4ueC10LngsaT1uLnktdC55O3JldHVybiBlPjAmJmUqZT5yKnIraSppfWZ1bmN0aW9uIE9sKHQsbil7Zm9yKHZhciBlPTA7ZTxuLmxlbmd0aDsrK2UpaWYoIVVsKHQsbltlXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gQmwodCl7c3dpdGNoKHQubGVuZ3RoKXtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybnt4OnQueCx5OnQueSxyOnQucn19KHRbMF0pO2Nhc2UgMjpyZXR1cm4gRmwodFswXSx0WzFdKTtjYXNlIDM6cmV0dXJuIFlsKHRbMF0sdFsxXSx0WzJdKX19ZnVuY3Rpb24gRmwodCxuKXt2YXIgZT10Lngscj10LnksaT10LnIsbz1uLngsYT1uLnksdT1uLnIsYz1vLWUsZj1hLXIscz11LWksbD1NYXRoLnNxcnQoYypjK2YqZik7cmV0dXJue3g6KGUrbytjL2wqcykvMix5OihyK2ErZi9sKnMpLzIscjoobCtpK3UpLzJ9fWZ1bmN0aW9uIFlsKHQsbixlKXt2YXIgcj10LngsaT10Lnksbz10LnIsYT1uLngsdT1uLnksYz1uLnIsZj1lLngscz1lLnksbD1lLnIsaD1yLWEsZD1yLWYscD1pLXUsdj1pLXMsZz1jLW8seT1sLW8sXz1yKnIraSppLW8qbyxiPV8tYSphLXUqdStjKmMsbT1fLWYqZi1zKnMrbCpsLHg9ZCpwLWgqdix3PShwKm0tdipiKS8oMip4KS1yLE09KHYqZy1wKnkpL3gsTj0oZCpiLWgqbSkvKDIqeCktaSxUPShoKnktZCpnKS94LEE9TSpNK1QqVC0xLFM9Mioobyt3Kk0rTipUKSxrPXcqdytOKk4tbypvLEU9LShBPyhTK01hdGguc3FydChTKlMtNCpBKmspKS8oMipBKTprL1MpO3JldHVybnt4OnIrdytNKkUseTppK04rVCpFLHI6RX19ZnVuY3Rpb24gSWwodCxuLGUpe3ZhciByLGksbyxhLHU9dC54LW4ueCxjPXQueS1uLnksZj11KnUrYypjO2Y/KGk9bi5yK2UucixpKj1pLGE9dC5yK2UucixpPihhKj1hKT8ocj0oZithLWkpLygyKmYpLG89TWF0aC5zcXJ0KE1hdGgubWF4KDAsYS9mLXIqcikpLGUueD10Lngtcip1LW8qYyxlLnk9dC55LXIqYytvKnUpOihyPShmK2ktYSkvKDIqZiksbz1NYXRoLnNxcnQoTWF0aC5tYXgoMCxpL2YtcipyKSksZS54PW4ueCtyKnUtbypjLGUueT1uLnkrcipjK28qdSkpOihlLng9bi54K2UucixlLnk9bi55KX1mdW5jdGlvbiBIbCh0LG4pe3ZhciBlPXQucituLnItMWUtNixyPW4ueC10LngsaT1uLnktdC55O3JldHVybiBlPjAmJmUqZT5yKnIraSppfWZ1bmN0aW9uIGpsKHQpe3ZhciBuPXQuXyxlPXQubmV4dC5fLHI9bi5yK2UucixpPShuLngqZS5yK2UueCpuLnIpL3Isbz0obi55KmUucitlLnkqbi5yKS9yO3JldHVybiBpKmkrbypvfWZ1bmN0aW9uIFhsKHQpe3RoaXMuXz10LHRoaXMubmV4dD1udWxsLHRoaXMucHJldmlvdXM9bnVsbH1mdW5jdGlvbiBWbCh0KXtpZighKGk9dC5sZW5ndGgpKXJldHVybiAwO3ZhciBuLGUscixpLG8sYSx1LGMsZixzLGw7aWYoKG49dFswXSkueD0wLG4ueT0wLCEoaT4xKSlyZXR1cm4gbi5yO2lmKGU9dFsxXSxuLng9LWUucixlLng9bi5yLGUueT0wLCEoaT4yKSlyZXR1cm4gbi5yK2UucjtJbChlLG4scj10WzJdKSxuPW5ldyBYbChuKSxlPW5ldyBYbChlKSxyPW5ldyBYbChyKSxuLm5leHQ9ci5wcmV2aW91cz1lLGUubmV4dD1uLnByZXZpb3VzPXIsci5uZXh0PWUucHJldmlvdXM9bjt0OmZvcih1PTM7dTxpOysrdSl7SWwobi5fLGUuXyxyPXRbdV0pLHI9bmV3IFhsKHIpLGM9ZS5uZXh0LGY9bi5wcmV2aW91cyxzPWUuXy5yLGw9bi5fLnI7ZG97aWYoczw9bCl7aWYoSGwoYy5fLHIuXykpe2U9YyxuLm5leHQ9ZSxlLnByZXZpb3VzPW4sLS11O2NvbnRpbnVlIHR9cys9Yy5fLnIsYz1jLm5leHR9ZWxzZXtpZihIbChmLl8sci5fKSl7KG49ZikubmV4dD1lLGUucHJldmlvdXM9biwtLXU7Y29udGludWUgdH1sKz1mLl8ucixmPWYucHJldmlvdXN9fXdoaWxlKGMhPT1mLm5leHQpO2ZvcihyLnByZXZpb3VzPW4sci5uZXh0PWUsbi5uZXh0PWUucHJldmlvdXM9ZT1yLG89amwobik7KHI9ci5uZXh0KSE9PWU7KShhPWpsKHIpKTxvJiYobj1yLG89YSk7ZT1uLm5leHR9Zm9yKG49W2UuX10scj1lOyhyPXIubmV4dCkhPT1lOyluLnB1c2goci5fKTtmb3Iocj1EbChuKSx1PTA7dTxpOysrdSkobj10W3VdKS54LT1yLngsbi55LT1yLnk7cmV0dXJuIHIucn1mdW5jdGlvbiBHbCh0KXtyZXR1cm4gbnVsbD09dD9udWxsOiRsKHQpfWZ1bmN0aW9uICRsKHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgbmV3IEVycm9yO3JldHVybiB0fWZ1bmN0aW9uIFdsKCl7cmV0dXJuIDB9ZnVuY3Rpb24gWmwodCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHR9fWZ1bmN0aW9uIFFsKHQpe3JldHVybiBNYXRoLnNxcnQodC52YWx1ZSl9ZnVuY3Rpb24gS2wodCl7cmV0dXJuIGZ1bmN0aW9uKG4pe24uY2hpbGRyZW58fChuLnI9TWF0aC5tYXgoMCwrdChuKXx8MCkpfX1mdW5jdGlvbiBKbCh0LG4pe3JldHVybiBmdW5jdGlvbihlKXtpZihyPWUuY2hpbGRyZW4pe3ZhciByLGksbyxhPXIubGVuZ3RoLHU9dChlKSpufHwwO2lmKHUpZm9yKGk9MDtpPGE7KytpKXJbaV0ucis9dTtpZihvPVZsKHIpLHUpZm9yKGk9MDtpPGE7KytpKXJbaV0uci09dTtlLnI9byt1fX19ZnVuY3Rpb24gdGgodCl7cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBlPW4ucGFyZW50O24ucio9dCxlJiYobi54PWUueCt0Km4ueCxuLnk9ZS55K3Qqbi55KX19ZnVuY3Rpb24gbmgodCl7dC54MD1NYXRoLnJvdW5kKHQueDApLHQueTA9TWF0aC5yb3VuZCh0LnkwKSx0LngxPU1hdGgucm91bmQodC54MSksdC55MT1NYXRoLnJvdW5kKHQueTEpfWZ1bmN0aW9uIGVoKHQsbixlLHIsaSl7Zm9yKHZhciBvLGE9dC5jaGlsZHJlbix1PS0xLGM9YS5sZW5ndGgsZj10LnZhbHVlJiYoci1uKS90LnZhbHVlOysrdTxjOykobz1hW3VdKS55MD1lLG8ueTE9aSxvLngwPW4sby54MT1uKz1vLnZhbHVlKmZ9dmFyIHJoPVwiJFwiLGloPXtkZXB0aDotMX0sb2g9e307ZnVuY3Rpb24gYWgodCl7cmV0dXJuIHQuaWR9ZnVuY3Rpb24gdWgodCl7cmV0dXJuIHQucGFyZW50SWR9ZnVuY3Rpb24gY2godCxuKXtyZXR1cm4gdC5wYXJlbnQ9PT1uLnBhcmVudD8xOjJ9ZnVuY3Rpb24gZmgodCl7dmFyIG49dC5jaGlsZHJlbjtyZXR1cm4gbj9uWzBdOnQudH1mdW5jdGlvbiBzaCh0KXt2YXIgbj10LmNoaWxkcmVuO3JldHVybiBuP25bbi5sZW5ndGgtMV06dC50fWZ1bmN0aW9uIGxoKHQsbixlKXt2YXIgcj1lLyhuLmktdC5pKTtuLmMtPXIsbi5zKz1lLHQuYys9cixuLnorPWUsbi5tKz1lfWZ1bmN0aW9uIGhoKHQsbixlKXtyZXR1cm4gdC5hLnBhcmVudD09PW4ucGFyZW50P3QuYTplfWZ1bmN0aW9uIGRoKHQsbil7dGhpcy5fPXQsdGhpcy5wYXJlbnQ9bnVsbCx0aGlzLmNoaWxkcmVuPW51bGwsdGhpcy5BPW51bGwsdGhpcy5hPXRoaXMsdGhpcy56PTAsdGhpcy5tPTAsdGhpcy5jPTAsdGhpcy5zPTAsdGhpcy50PW51bGwsdGhpcy5pPW59ZnVuY3Rpb24gcGgodCxuLGUscixpKXtmb3IodmFyIG8sYT10LmNoaWxkcmVuLHU9LTEsYz1hLmxlbmd0aCxmPXQudmFsdWUmJihpLWUpL3QudmFsdWU7Kyt1PGM7KShvPWFbdV0pLngwPW4sby54MT1yLG8ueTA9ZSxvLnkxPWUrPW8udmFsdWUqZn1kaC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh6bC5wcm90b3R5cGUpO3ZhciB2aD0oMStNYXRoLnNxcnQoNSkpLzI7ZnVuY3Rpb24gZ2godCxuLGUscixpLG8pe2Zvcih2YXIgYSx1LGMsZixzLGwsaCxkLHAsdixnLHk9W10sXz1uLmNoaWxkcmVuLGI9MCxtPTAseD1fLmxlbmd0aCx3PW4udmFsdWU7Yjx4Oyl7Yz1pLWUsZj1vLXI7ZG97cz1fW20rK10udmFsdWV9d2hpbGUoIXMmJm08eCk7Zm9yKGw9aD1zLGc9cypzKih2PU1hdGgubWF4KGYvYyxjL2YpLyh3KnQpKSxwPU1hdGgubWF4KGgvZyxnL2wpO208eDsrK20pe2lmKHMrPXU9X1ttXS52YWx1ZSx1PGwmJihsPXUpLHU+aCYmKGg9dSksZz1zKnMqdiwoZD1NYXRoLm1heChoL2csZy9sKSk+cCl7cy09dTticmVha31wPWR9eS5wdXNoKGE9e3ZhbHVlOnMsZGljZTpjPGYsY2hpbGRyZW46Xy5zbGljZShiLG0pfSksYS5kaWNlP2VoKGEsZSxyLGksdz9yKz1mKnMvdzpvKTpwaChhLGUscix3P2UrPWMqcy93Omksbyksdy09cyxiPW19cmV0dXJuIHl9dmFyIHloPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0LGUscixpLG8pe2doKG4sdCxlLHIsaSxvKX1yZXR1cm4gZS5yYXRpbz1mdW5jdGlvbihuKXtyZXR1cm4gdCgobj0rbik+MT9uOjEpfSxlfSh2aCk7dmFyIF9oPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0LGUscixpLG8pe2lmKChhPXQuX3NxdWFyaWZ5KSYmYS5yYXRpbz09PW4pZm9yKHZhciBhLHUsYyxmLHMsbD0tMSxoPWEubGVuZ3RoLGQ9dC52YWx1ZTsrK2w8aDspe2ZvcihjPSh1PWFbbF0pLmNoaWxkcmVuLGY9dS52YWx1ZT0wLHM9Yy5sZW5ndGg7ZjxzOysrZil1LnZhbHVlKz1jW2ZdLnZhbHVlO3UuZGljZT9laCh1LGUscixpLHIrPShvLXIpKnUudmFsdWUvZCk6cGgodSxlLHIsZSs9KGktZSkqdS52YWx1ZS9kLG8pLGQtPXUudmFsdWV9ZWxzZSB0Ll9zcXVhcmlmeT1hPWdoKG4sdCxlLHIsaSxvKSxhLnJhdGlvPW59cmV0dXJuIGUucmF0aW89ZnVuY3Rpb24obil7cmV0dXJuIHQoKG49K24pPjE/bjoxKX0sZX0odmgpO2Z1bmN0aW9uIGJoKHQsbixlKXtyZXR1cm4oblswXS10WzBdKSooZVsxXS10WzFdKS0oblsxXS10WzFdKSooZVswXS10WzBdKX1mdW5jdGlvbiBtaCh0LG4pe3JldHVybiB0WzBdLW5bMF18fHRbMV0tblsxXX1mdW5jdGlvbiB4aCh0KXtmb3IodmFyIG49dC5sZW5ndGgsZT1bMCwxXSxyPTIsaT0yO2k8bjsrK2kpe2Zvcig7cj4xJiZiaCh0W2Vbci0yXV0sdFtlW3ItMV1dLHRbaV0pPD0wOyktLXI7ZVtyKytdPWl9cmV0dXJuIGUuc2xpY2UoMCxyKX1mdW5jdGlvbiB3aCgpe3JldHVybiBNYXRoLnJhbmRvbSgpfXZhciBNaD1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCxlKXtyZXR1cm4gdD1udWxsPT10PzA6K3QsZT1udWxsPT1lPzE6K2UsMT09PWFyZ3VtZW50cy5sZW5ndGg/KGU9dCx0PTApOmUtPXQsZnVuY3Rpb24oKXtyZXR1cm4gbigpKmUrdH19cmV0dXJuIGUuc291cmNlPXQsZX0od2gpLE5oPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0LGUpe3ZhciByLGk7cmV0dXJuIHQ9bnVsbD09dD8wOit0LGU9bnVsbD09ZT8xOitlLGZ1bmN0aW9uKCl7dmFyIG87aWYobnVsbCE9cilvPXIscj1udWxsO2Vsc2UgZG97cj0yKm4oKS0xLG89MipuKCktMSxpPXIqcitvKm99d2hpbGUoIWl8fGk+MSk7cmV0dXJuIHQrZSpvKk1hdGguc3FydCgtMipNYXRoLmxvZyhpKS9pKX19cmV0dXJuIGUuc291cmNlPXQsZX0od2gpLFRoPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSgpe3ZhciB0PU5oLnNvdXJjZShuKS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguZXhwKHQoKSl9fXJldHVybiBlLnNvdXJjZT10LGV9KHdoKSxBaD1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciBlPTAscj0wO3I8dDsrK3IpZSs9bigpO3JldHVybiBlfX1yZXR1cm4gZS5zb3VyY2U9dCxlfSh3aCksU2g9ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQpe3ZhciBlPUFoLnNvdXJjZShuKSh0KTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZSgpL3R9fXJldHVybiBlLnNvdXJjZT10LGV9KHdoKSxraD1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuLU1hdGgubG9nKDEtbigpKS90fX1yZXR1cm4gZS5zb3VyY2U9dCxlfSh3aCk7ZnVuY3Rpb24gRWgodCxuKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOmJyZWFrO2Nhc2UgMTp0aGlzLnJhbmdlKHQpO2JyZWFrO2RlZmF1bHQ6dGhpcy5yYW5nZShuKS5kb21haW4odCl9cmV0dXJuIHRoaXN9ZnVuY3Rpb24gQ2godCxuKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOmJyZWFrO2Nhc2UgMTp0aGlzLmludGVycG9sYXRvcih0KTticmVhaztkZWZhdWx0OnRoaXMuaW50ZXJwb2xhdG9yKG4pLmRvbWFpbih0KX1yZXR1cm4gdGhpc312YXIgUGg9QXJyYXkucHJvdG90eXBlLHpoPVBoLm1hcCxSaD1QaC5zbGljZSxEaD17bmFtZTpcImltcGxpY2l0XCJ9O2Z1bmN0aW9uIHFoKCl7dmFyIHQ9Y28oKSxuPVtdLGU9W10scj1EaDtmdW5jdGlvbiBpKGkpe3ZhciBvPWkrXCJcIixhPXQuZ2V0KG8pO2lmKCFhKXtpZihyIT09RGgpcmV0dXJuIHI7dC5zZXQobyxhPW4ucHVzaChpKSl9cmV0dXJuIGVbKGEtMSklZS5sZW5ndGhdfXJldHVybiBpLmRvbWFpbj1mdW5jdGlvbihlKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gbi5zbGljZSgpO249W10sdD1jbygpO2Zvcih2YXIgcixvLGE9LTEsdT1lLmxlbmd0aDsrK2E8dTspdC5oYXMobz0ocj1lW2FdKStcIlwiKXx8dC5zZXQobyxuLnB1c2gocikpO3JldHVybiBpfSxpLnJhbmdlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPVJoLmNhbGwodCksaSk6ZS5zbGljZSgpfSxpLnVua25vd249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9dCxpKTpyfSxpLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gcWgobixlKS51bmtub3duKHIpfSxFaC5hcHBseShpLGFyZ3VtZW50cyksaX1mdW5jdGlvbiBMaCgpe3ZhciB0LG4sZT1xaCgpLnVua25vd24odm9pZCAwKSxyPWUuZG9tYWluLGk9ZS5yYW5nZSxvPVswLDFdLGE9ITEsdT0wLGM9MCxmPS41O2Z1bmN0aW9uIHMoKXt2YXIgZT1yKCkubGVuZ3RoLHM9b1sxXTxvWzBdLGw9b1tzLTBdLGg9b1sxLXNdO3Q9KGgtbCkvTWF0aC5tYXgoMSxlLXUrMipjKSxhJiYodD1NYXRoLmZsb29yKHQpKSxsKz0oaC1sLXQqKGUtdSkpKmYsbj10KigxLXUpLGEmJihsPU1hdGgucm91bmQobCksbj1NYXRoLnJvdW5kKG4pKTt2YXIgZD1nKGUpLm1hcChmdW5jdGlvbihuKXtyZXR1cm4gbCt0Km59KTtyZXR1cm4gaShzP2QucmV2ZXJzZSgpOmQpfXJldHVybiBkZWxldGUgZS51bmtub3duLGUuZG9tYWluPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyKHQpLHMoKSk6cigpfSxlLnJhbmdlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPVsrdFswXSwrdFsxXV0scygpKTpvLnNsaWNlKCl9LGUucmFuZ2VSb3VuZD1mdW5jdGlvbih0KXtyZXR1cm4gbz1bK3RbMF0sK3RbMV1dLGE9ITAscygpfSxlLmJhbmR3aWR0aD1mdW5jdGlvbigpe3JldHVybiBufSxlLnN0ZXA9ZnVuY3Rpb24oKXtyZXR1cm4gdH0sZS5yb3VuZD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT0hIXQscygpKTphfSxlLnBhZGRpbmc9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9TWF0aC5taW4oMSxjPSt0KSxzKCkpOnV9LGUucGFkZGluZ0lubmVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1PU1hdGgubWluKDEsdCkscygpKTp1fSxlLnBhZGRpbmdPdXRlcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz0rdCxzKCkpOmN9LGUuYWxpZ249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGY9TWF0aC5tYXgoMCxNYXRoLm1pbigxLHQpKSxzKCkpOmZ9LGUuY29weT1mdW5jdGlvbigpe3JldHVybiBMaChyKCksbykucm91bmQoYSkucGFkZGluZ0lubmVyKHUpLnBhZGRpbmdPdXRlcihjKS5hbGlnbihmKX0sRWguYXBwbHkocygpLGFyZ3VtZW50cyl9ZnVuY3Rpb24gVWgodCl7cmV0dXJuK3R9dmFyIE9oPVswLDFdO2Z1bmN0aW9uIEJoKHQpe3JldHVybiB0fWZ1bmN0aW9uIEZoKHQsbil7cmV0dXJuKG4tPXQ9K3QpP2Z1bmN0aW9uKGUpe3JldHVybihlLXQpL259OmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX0oaXNOYU4obik/TmFOOi41KX1mdW5jdGlvbiBZaCh0KXt2YXIgbixlPXRbMF0scj10W3QubGVuZ3RoLTFdO3JldHVybiBlPnImJihuPWUsZT1yLHI9biksZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgubWF4KGUsTWF0aC5taW4ocix0KSl9fWZ1bmN0aW9uIEloKHQsbixlKXt2YXIgcj10WzBdLGk9dFsxXSxvPW5bMF0sYT1uWzFdO3JldHVybiBpPHI/KHI9RmgoaSxyKSxvPWUoYSxvKSk6KHI9RmgocixpKSxvPWUobyxhKSksZnVuY3Rpb24odCl7cmV0dXJuIG8ocih0KSl9fWZ1bmN0aW9uIEhoKHQsbixlKXt2YXIgcj1NYXRoLm1pbih0Lmxlbmd0aCxuLmxlbmd0aCktMSxvPW5ldyBBcnJheShyKSxhPW5ldyBBcnJheShyKSx1PS0xO2Zvcih0W3JdPHRbMF0mJih0PXQuc2xpY2UoKS5yZXZlcnNlKCksbj1uLnNsaWNlKCkucmV2ZXJzZSgpKTsrK3U8cjspb1t1XT1GaCh0W3VdLHRbdSsxXSksYVt1XT1lKG5bdV0sblt1KzFdKTtyZXR1cm4gZnVuY3Rpb24obil7dmFyIGU9aSh0LG4sMSxyKS0xO3JldHVybiBhW2VdKG9bZV0obikpfX1mdW5jdGlvbiBqaCh0LG4pe3JldHVybiBuLmRvbWFpbih0LmRvbWFpbigpKS5yYW5nZSh0LnJhbmdlKCkpLmludGVycG9sYXRlKHQuaW50ZXJwb2xhdGUoKSkuY2xhbXAodC5jbGFtcCgpKS51bmtub3duKHQudW5rbm93bigpKX1mdW5jdGlvbiBYaCgpe3ZhciB0LG4sZSxyLGksbyxhPU9oLHU9T2gsYz1UZSxmPUJoO2Z1bmN0aW9uIHMoKXtyZXR1cm4gcj1NYXRoLm1pbihhLmxlbmd0aCx1Lmxlbmd0aCk+Mj9IaDpJaCxpPW89bnVsbCxsfWZ1bmN0aW9uIGwobil7cmV0dXJuIGlzTmFOKG49K24pP2U6KGl8fChpPXIoYS5tYXAodCksdSxjKSkpKHQoZihuKSkpfXJldHVybiBsLmludmVydD1mdW5jdGlvbihlKXtyZXR1cm4gZihuKChvfHwobz1yKHUsYS5tYXAodCksbWUpKSkoZSkpKX0sbC5kb21haW49ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9emguY2FsbCh0LFVoKSxmPT09Qmh8fChmPVloKGEpKSxzKCkpOmEuc2xpY2UoKX0sbC5yYW5nZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT1SaC5jYWxsKHQpLHMoKSk6dS5zbGljZSgpfSxsLnJhbmdlUm91bmQ9ZnVuY3Rpb24odCl7cmV0dXJuIHU9UmguY2FsbCh0KSxjPUFlLHMoKX0sbC5jbGFtcD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZj10P1loKGEpOkJoLGwpOmYhPT1CaH0sbC5pbnRlcnBvbGF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz10LHMoKSk6Y30sbC51bmtub3duPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPXQsbCk6ZX0sZnVuY3Rpb24oZSxyKXtyZXR1cm4gdD1lLG49cixzKCl9fWZ1bmN0aW9uIFZoKHQsbil7cmV0dXJuIFhoKCkodCxuKX1mdW5jdGlvbiBHaChuLGUscixpKXt2YXIgbyxhPXcobixlLHIpO3N3aXRjaCgoaT1PYShudWxsPT1pP1wiLGZcIjppKSkudHlwZSl7Y2FzZVwic1wiOnZhciB1PU1hdGgubWF4KE1hdGguYWJzKG4pLE1hdGguYWJzKGUpKTtyZXR1cm4gbnVsbCE9aS5wcmVjaXNpb258fGlzTmFOKG89V2EoYSx1KSl8fChpLnByZWNpc2lvbj1vKSx0LmZvcm1hdFByZWZpeChpLHUpO2Nhc2VcIlwiOmNhc2VcImVcIjpjYXNlXCJnXCI6Y2FzZVwicFwiOmNhc2VcInJcIjpudWxsIT1pLnByZWNpc2lvbnx8aXNOYU4obz1aYShhLE1hdGgubWF4KE1hdGguYWJzKG4pLE1hdGguYWJzKGUpKSkpfHwoaS5wcmVjaXNpb249by0oXCJlXCI9PT1pLnR5cGUpKTticmVhaztjYXNlXCJmXCI6Y2FzZVwiJVwiOm51bGwhPWkucHJlY2lzaW9ufHxpc05hTihvPSRhKGEpKXx8KGkucHJlY2lzaW9uPW8tMiooXCIlXCI9PT1pLnR5cGUpKX1yZXR1cm4gdC5mb3JtYXQoaSl9ZnVuY3Rpb24gJGgodCl7dmFyIG49dC5kb21haW47cmV0dXJuIHQudGlja3M9ZnVuY3Rpb24odCl7dmFyIGU9bigpO3JldHVybiBtKGVbMF0sZVtlLmxlbmd0aC0xXSxudWxsPT10PzEwOnQpfSx0LnRpY2tGb3JtYXQ9ZnVuY3Rpb24odCxlKXt2YXIgcj1uKCk7cmV0dXJuIEdoKHJbMF0scltyLmxlbmd0aC0xXSxudWxsPT10PzEwOnQsZSl9LHQubmljZT1mdW5jdGlvbihlKXtudWxsPT1lJiYoZT0xMCk7dmFyIHIsaT1uKCksbz0wLGE9aS5sZW5ndGgtMSx1PWlbb10sYz1pW2FdO3JldHVybiBjPHUmJihyPXUsdT1jLGM9cixyPW8sbz1hLGE9ciksKHI9eCh1LGMsZSkpPjA/cj14KHU9TWF0aC5mbG9vcih1L3IpKnIsYz1NYXRoLmNlaWwoYy9yKSpyLGUpOnI8MCYmKHI9eCh1PU1hdGguY2VpbCh1KnIpL3IsYz1NYXRoLmZsb29yKGMqcikvcixlKSkscj4wPyhpW29dPU1hdGguZmxvb3IodS9yKSpyLGlbYV09TWF0aC5jZWlsKGMvcikqcixuKGkpKTpyPDAmJihpW29dPU1hdGguY2VpbCh1KnIpL3IsaVthXT1NYXRoLmZsb29yKGMqcikvcixuKGkpKSx0fSx0fWZ1bmN0aW9uIFdoKHQsbil7dmFyIGUscj0wLGk9KHQ9dC5zbGljZSgpKS5sZW5ndGgtMSxvPXRbcl0sYT10W2ldO3JldHVybiBhPG8mJihlPXIscj1pLGk9ZSxlPW8sbz1hLGE9ZSksdFtyXT1uLmZsb29yKG8pLHRbaV09bi5jZWlsKGEpLHR9ZnVuY3Rpb24gWmgodCl7cmV0dXJuIE1hdGgubG9nKHQpfWZ1bmN0aW9uIFFoKHQpe3JldHVybiBNYXRoLmV4cCh0KX1mdW5jdGlvbiBLaCh0KXtyZXR1cm4tTWF0aC5sb2coLXQpfWZ1bmN0aW9uIEpoKHQpe3JldHVybi1NYXRoLmV4cCgtdCl9ZnVuY3Rpb24gdGQodCl7cmV0dXJuIGlzRmluaXRlKHQpPysoXCIxZVwiK3QpOnQ8MD8wOnR9ZnVuY3Rpb24gbmQodCl7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybi10KC1uKX19ZnVuY3Rpb24gZWQobil7dmFyIGUscixpPW4oWmgsUWgpLG89aS5kb21haW4sYT0xMDtmdW5jdGlvbiB1KCl7cmV0dXJuIGU9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1NYXRoLkU/TWF0aC5sb2c6MTA9PT10JiZNYXRoLmxvZzEwfHwyPT09dCYmTWF0aC5sb2cyfHwodD1NYXRoLmxvZyh0KSxmdW5jdGlvbihuKXtyZXR1cm4gTWF0aC5sb2cobikvdH0pfShhKSxyPWZ1bmN0aW9uKHQpe3JldHVybiAxMD09PXQ/dGQ6dD09PU1hdGguRT9NYXRoLmV4cDpmdW5jdGlvbihuKXtyZXR1cm4gTWF0aC5wb3codCxuKX19KGEpLG8oKVswXTwwPyhlPW5kKGUpLHI9bmQociksbihLaCxKaCkpOm4oWmgsUWgpLGl9cmV0dXJuIGkuYmFzZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT0rdCx1KCkpOmF9LGkuZG9tYWluPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvKHQpLHUoKSk6bygpfSxpLnRpY2tzPWZ1bmN0aW9uKHQpe3ZhciBuLGk9bygpLHU9aVswXSxjPWlbaS5sZW5ndGgtMV07KG49Yzx1KSYmKGg9dSx1PWMsYz1oKTt2YXIgZixzLGwsaD1lKHUpLGQ9ZShjKSxwPW51bGw9PXQ/MTA6K3Qsdj1bXTtpZighKGElMSkmJmQtaDxwKXtpZihoPU1hdGgucm91bmQoaCktMSxkPU1hdGgucm91bmQoZCkrMSx1PjApe2Zvcig7aDxkOysraClmb3Iocz0xLGY9cihoKTtzPGE7KytzKWlmKCEoKGw9ZipzKTx1KSl7aWYobD5jKWJyZWFrO3YucHVzaChsKX19ZWxzZSBmb3IoO2g8ZDsrK2gpZm9yKHM9YS0xLGY9cihoKTtzPj0xOy0tcylpZighKChsPWYqcyk8dSkpe2lmKGw+YylicmVhazt2LnB1c2gobCl9fWVsc2Ugdj1tKGgsZCxNYXRoLm1pbihkLWgscCkpLm1hcChyKTtyZXR1cm4gbj92LnJldmVyc2UoKTp2fSxpLnRpY2tGb3JtYXQ9ZnVuY3Rpb24obixvKXtpZihudWxsPT1vJiYobz0xMD09PWE/XCIuMGVcIjpcIixcIiksXCJmdW5jdGlvblwiIT10eXBlb2YgbyYmKG89dC5mb3JtYXQobykpLG49PT0xLzApcmV0dXJuIG87bnVsbD09biYmKG49MTApO3ZhciB1PU1hdGgubWF4KDEsYSpuL2kudGlja3MoKS5sZW5ndGgpO3JldHVybiBmdW5jdGlvbih0KXt2YXIgbj10L3IoTWF0aC5yb3VuZChlKHQpKSk7cmV0dXJuIG4qYTxhLS41JiYobio9YSksbjw9dT9vKHQpOlwiXCJ9fSxpLm5pY2U9ZnVuY3Rpb24oKXtyZXR1cm4gbyhXaChvKCkse2Zsb29yOmZ1bmN0aW9uKHQpe3JldHVybiByKE1hdGguZmxvb3IoZSh0KSkpfSxjZWlsOmZ1bmN0aW9uKHQpe3JldHVybiByKE1hdGguY2VpbChlKHQpKSl9fSkpfSxpfWZ1bmN0aW9uIHJkKHQpe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gTWF0aC5zaWduKG4pKk1hdGgubG9nMXAoTWF0aC5hYnMobi90KSl9fWZ1bmN0aW9uIGlkKHQpe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gTWF0aC5zaWduKG4pKk1hdGguZXhwbTEoTWF0aC5hYnMobikpKnR9fWZ1bmN0aW9uIG9kKHQpe3ZhciBuPTEsZT10KHJkKG4pLGlkKG4pKTtyZXR1cm4gZS5jb25zdGFudD1mdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90KHJkKG49K2UpLGlkKG4pKTpufSwkaChlKX1mdW5jdGlvbiBhZCh0KXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIG48MD8tTWF0aC5wb3coLW4sdCk6TWF0aC5wb3cobix0KX19ZnVuY3Rpb24gdWQodCl7cmV0dXJuIHQ8MD8tTWF0aC5zcXJ0KC10KTpNYXRoLnNxcnQodCl9ZnVuY3Rpb24gY2QodCl7cmV0dXJuIHQ8MD8tdCp0OnQqdH1mdW5jdGlvbiBmZCh0KXt2YXIgbj10KEJoLEJoKSxlPTE7ZnVuY3Rpb24gcigpe3JldHVybiAxPT09ZT90KEJoLEJoKTouNT09PWU/dCh1ZCxjZCk6dChhZChlKSxhZCgxL2UpKX1yZXR1cm4gbi5leHBvbmVudD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT0rdCxyKCkpOmV9LCRoKG4pfWZ1bmN0aW9uIHNkKCl7dmFyIHQ9ZmQoWGgoKSk7cmV0dXJuIHQuY29weT1mdW5jdGlvbigpe3JldHVybiBqaCh0LHNkKCkpLmV4cG9uZW50KHQuZXhwb25lbnQoKSl9LEVoLmFwcGx5KHQsYXJndW1lbnRzKSx0fXZhciBsZD1uZXcgRGF0ZSxoZD1uZXcgRGF0ZTtmdW5jdGlvbiBkZCh0LG4sZSxyKXtmdW5jdGlvbiBpKG4pe3JldHVybiB0KG49MD09PWFyZ3VtZW50cy5sZW5ndGg/bmV3IERhdGU6bmV3IERhdGUoK24pKSxufXJldHVybiBpLmZsb29yPWZ1bmN0aW9uKG4pe3JldHVybiB0KG49bmV3IERhdGUoK24pKSxufSxpLmNlaWw9ZnVuY3Rpb24oZSl7cmV0dXJuIHQoZT1uZXcgRGF0ZShlLTEpKSxuKGUsMSksdChlKSxlfSxpLnJvdW5kPWZ1bmN0aW9uKHQpe3ZhciBuPWkodCksZT1pLmNlaWwodCk7cmV0dXJuIHQtbjxlLXQ/bjplfSxpLm9mZnNldD1mdW5jdGlvbih0LGUpe3JldHVybiBuKHQ9bmV3IERhdGUoK3QpLG51bGw9PWU/MTpNYXRoLmZsb29yKGUpKSx0fSxpLnJhbmdlPWZ1bmN0aW9uKGUscixvKXt2YXIgYSx1PVtdO2lmKGU9aS5jZWlsKGUpLG89bnVsbD09bz8xOk1hdGguZmxvb3IobyksIShlPHImJm8+MCkpcmV0dXJuIHU7ZG97dS5wdXNoKGE9bmV3IERhdGUoK2UpKSxuKGUsbyksdChlKX13aGlsZShhPGUmJmU8cik7cmV0dXJuIHV9LGkuZmlsdGVyPWZ1bmN0aW9uKGUpe3JldHVybiBkZChmdW5jdGlvbihuKXtpZihuPj1uKWZvcig7dChuKSwhZShuKTspbi5zZXRUaW1lKG4tMSl9LGZ1bmN0aW9uKHQscil7aWYodD49dClpZihyPDApZm9yKDsrK3I8PTA7KWZvcig7bih0LC0xKSwhZSh0KTspO2Vsc2UgZm9yKDstLXI+PTA7KWZvcig7bih0LDEpLCFlKHQpOyk7fSl9LGUmJihpLmNvdW50PWZ1bmN0aW9uKG4scil7cmV0dXJuIGxkLnNldFRpbWUoK24pLGhkLnNldFRpbWUoK3IpLHQobGQpLHQoaGQpLE1hdGguZmxvb3IoZShsZCxoZCkpfSxpLmV2ZXJ5PWZ1bmN0aW9uKHQpe3JldHVybiB0PU1hdGguZmxvb3IodCksaXNGaW5pdGUodCkmJnQ+MD90PjE/aS5maWx0ZXIocj9mdW5jdGlvbihuKXtyZXR1cm4gcihuKSV0PT0wfTpmdW5jdGlvbihuKXtyZXR1cm4gaS5jb3VudCgwLG4pJXQ9PTB9KTppOm51bGx9KSxpfXZhciBwZD1kZChmdW5jdGlvbigpe30sZnVuY3Rpb24odCxuKXt0LnNldFRpbWUoK3Qrbil9LGZ1bmN0aW9uKHQsbil7cmV0dXJuIG4tdH0pO3BkLmV2ZXJ5PWZ1bmN0aW9uKHQpe3JldHVybiB0PU1hdGguZmxvb3IodCksaXNGaW5pdGUodCkmJnQ+MD90PjE/ZGQoZnVuY3Rpb24obil7bi5zZXRUaW1lKE1hdGguZmxvb3Iobi90KSp0KX0sZnVuY3Rpb24obixlKXtuLnNldFRpbWUoK24rZSp0KX0sZnVuY3Rpb24obixlKXtyZXR1cm4oZS1uKS90fSk6cGQ6bnVsbH07dmFyIHZkPXBkLnJhbmdlLGdkPTZlNCx5ZD02MDQ4ZTUsX2Q9ZGQoZnVuY3Rpb24odCl7dC5zZXRUaW1lKHQtdC5nZXRNaWxsaXNlY29uZHMoKSl9LGZ1bmN0aW9uKHQsbil7dC5zZXRUaW1lKCt0KzFlMypuKX0sZnVuY3Rpb24odCxuKXtyZXR1cm4obi10KS8xZTN9LGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldFVUQ1NlY29uZHMoKX0pLGJkPV9kLnJhbmdlLG1kPWRkKGZ1bmN0aW9uKHQpe3Quc2V0VGltZSh0LXQuZ2V0TWlsbGlzZWNvbmRzKCktMWUzKnQuZ2V0U2Vjb25kcygpKX0sZnVuY3Rpb24odCxuKXt0LnNldFRpbWUoK3QrbipnZCl9LGZ1bmN0aW9uKHQsbil7cmV0dXJuKG4tdCkvZ2R9LGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldE1pbnV0ZXMoKX0pLHhkPW1kLnJhbmdlLHdkPWRkKGZ1bmN0aW9uKHQpe3Quc2V0VGltZSh0LXQuZ2V0TWlsbGlzZWNvbmRzKCktMWUzKnQuZ2V0U2Vjb25kcygpLXQuZ2V0TWludXRlcygpKmdkKX0sZnVuY3Rpb24odCxuKXt0LnNldFRpbWUoK3QrMzZlNSpuKX0sZnVuY3Rpb24odCxuKXtyZXR1cm4obi10KS8zNmU1fSxmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRIb3VycygpfSksTWQ9d2QucmFuZ2UsTmQ9ZGQoZnVuY3Rpb24odCl7dC5zZXRIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24odCxuKXt0LnNldERhdGUodC5nZXREYXRlKCkrbil9LGZ1bmN0aW9uKHQsbil7cmV0dXJuKG4tdC0obi5nZXRUaW1lem9uZU9mZnNldCgpLXQuZ2V0VGltZXpvbmVPZmZzZXQoKSkqZ2QpLzg2NGU1fSxmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXREYXRlKCktMX0pLFRkPU5kLnJhbmdlO2Z1bmN0aW9uIEFkKHQpe3JldHVybiBkZChmdW5jdGlvbihuKXtuLnNldERhdGUobi5nZXREYXRlKCktKG4uZ2V0RGF5KCkrNy10KSU3KSxuLnNldEhvdXJzKDAsMCwwLDApfSxmdW5jdGlvbih0LG4pe3Quc2V0RGF0ZSh0LmdldERhdGUoKSs3Km4pfSxmdW5jdGlvbih0LG4pe3JldHVybihuLXQtKG4uZ2V0VGltZXpvbmVPZmZzZXQoKS10LmdldFRpbWV6b25lT2Zmc2V0KCkpKmdkKS95ZH0pfXZhciBTZD1BZCgwKSxrZD1BZCgxKSxFZD1BZCgyKSxDZD1BZCgzKSxQZD1BZCg0KSx6ZD1BZCg1KSxSZD1BZCg2KSxEZD1TZC5yYW5nZSxxZD1rZC5yYW5nZSxMZD1FZC5yYW5nZSxVZD1DZC5yYW5nZSxPZD1QZC5yYW5nZSxCZD16ZC5yYW5nZSxGZD1SZC5yYW5nZSxZZD1kZChmdW5jdGlvbih0KXt0LnNldERhdGUoMSksdC5zZXRIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24odCxuKXt0LnNldE1vbnRoKHQuZ2V0TW9udGgoKStuKX0sZnVuY3Rpb24odCxuKXtyZXR1cm4gbi5nZXRNb250aCgpLXQuZ2V0TW9udGgoKSsxMioobi5nZXRGdWxsWWVhcigpLXQuZ2V0RnVsbFllYXIoKSl9LGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldE1vbnRoKCl9KSxJZD1ZZC5yYW5nZSxIZD1kZChmdW5jdGlvbih0KXt0LnNldE1vbnRoKDAsMSksdC5zZXRIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24odCxuKXt0LnNldEZ1bGxZZWFyKHQuZ2V0RnVsbFllYXIoKStuKX0sZnVuY3Rpb24odCxuKXtyZXR1cm4gbi5nZXRGdWxsWWVhcigpLXQuZ2V0RnVsbFllYXIoKX0sZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0RnVsbFllYXIoKX0pO0hkLmV2ZXJ5PWZ1bmN0aW9uKHQpe3JldHVybiBpc0Zpbml0ZSh0PU1hdGguZmxvb3IodCkpJiZ0PjA/ZGQoZnVuY3Rpb24obil7bi5zZXRGdWxsWWVhcihNYXRoLmZsb29yKG4uZ2V0RnVsbFllYXIoKS90KSp0KSxuLnNldE1vbnRoKDAsMSksbi5zZXRIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24obixlKXtuLnNldEZ1bGxZZWFyKG4uZ2V0RnVsbFllYXIoKStlKnQpfSk6bnVsbH07dmFyIGpkPUhkLnJhbmdlLFhkPWRkKGZ1bmN0aW9uKHQpe3Quc2V0VVRDU2Vjb25kcygwLDApfSxmdW5jdGlvbih0LG4pe3Quc2V0VGltZSgrdCtuKmdkKX0sZnVuY3Rpb24odCxuKXtyZXR1cm4obi10KS9nZH0sZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0VVRDTWludXRlcygpfSksVmQ9WGQucmFuZ2UsR2Q9ZGQoZnVuY3Rpb24odCl7dC5zZXRVVENNaW51dGVzKDAsMCwwKX0sZnVuY3Rpb24odCxuKXt0LnNldFRpbWUoK3QrMzZlNSpuKX0sZnVuY3Rpb24odCxuKXtyZXR1cm4obi10KS8zNmU1fSxmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRVVENIb3VycygpfSksJGQ9R2QucmFuZ2UsV2Q9ZGQoZnVuY3Rpb24odCl7dC5zZXRVVENIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24odCxuKXt0LnNldFVUQ0RhdGUodC5nZXRVVENEYXRlKCkrbil9LGZ1bmN0aW9uKHQsbil7cmV0dXJuKG4tdCkvODY0ZTV9LGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldFVUQ0RhdGUoKS0xfSksWmQ9V2QucmFuZ2U7ZnVuY3Rpb24gUWQodCl7cmV0dXJuIGRkKGZ1bmN0aW9uKG4pe24uc2V0VVRDRGF0ZShuLmdldFVUQ0RhdGUoKS0obi5nZXRVVENEYXkoKSs3LXQpJTcpLG4uc2V0VVRDSG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKHQsbil7dC5zZXRVVENEYXRlKHQuZ2V0VVRDRGF0ZSgpKzcqbil9LGZ1bmN0aW9uKHQsbil7cmV0dXJuKG4tdCkveWR9KX12YXIgS2Q9UWQoMCksSmQ9UWQoMSksdHA9UWQoMiksbnA9UWQoMyksZXA9UWQoNCkscnA9UWQoNSksaXA9UWQoNiksb3A9S2QucmFuZ2UsYXA9SmQucmFuZ2UsdXA9dHAucmFuZ2UsY3A9bnAucmFuZ2UsZnA9ZXAucmFuZ2Usc3A9cnAucmFuZ2UsbHA9aXAucmFuZ2UsaHA9ZGQoZnVuY3Rpb24odCl7dC5zZXRVVENEYXRlKDEpLHQuc2V0VVRDSG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKHQsbil7dC5zZXRVVENNb250aCh0LmdldFVUQ01vbnRoKCkrbil9LGZ1bmN0aW9uKHQsbil7cmV0dXJuIG4uZ2V0VVRDTW9udGgoKS10LmdldFVUQ01vbnRoKCkrMTIqKG4uZ2V0VVRDRnVsbFllYXIoKS10LmdldFVUQ0Z1bGxZZWFyKCkpfSxmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRVVENNb250aCgpfSksZHA9aHAucmFuZ2UscHA9ZGQoZnVuY3Rpb24odCl7dC5zZXRVVENNb250aCgwLDEpLHQuc2V0VVRDSG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKHQsbil7dC5zZXRVVENGdWxsWWVhcih0LmdldFVUQ0Z1bGxZZWFyKCkrbil9LGZ1bmN0aW9uKHQsbil7cmV0dXJuIG4uZ2V0VVRDRnVsbFllYXIoKS10LmdldFVUQ0Z1bGxZZWFyKCl9LGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldFVUQ0Z1bGxZZWFyKCl9KTtwcC5ldmVyeT1mdW5jdGlvbih0KXtyZXR1cm4gaXNGaW5pdGUodD1NYXRoLmZsb29yKHQpKSYmdD4wP2RkKGZ1bmN0aW9uKG4pe24uc2V0VVRDRnVsbFllYXIoTWF0aC5mbG9vcihuLmdldFVUQ0Z1bGxZZWFyKCkvdCkqdCksbi5zZXRVVENNb250aCgwLDEpLG4uc2V0VVRDSG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKG4sZSl7bi5zZXRVVENGdWxsWWVhcihuLmdldFVUQ0Z1bGxZZWFyKCkrZSp0KX0pOm51bGx9O3ZhciB2cD1wcC5yYW5nZTtmdW5jdGlvbiBncCh0KXtpZigwPD10LnkmJnQueTwxMDApe3ZhciBuPW5ldyBEYXRlKC0xLHQubSx0LmQsdC5ILHQuTSx0LlMsdC5MKTtyZXR1cm4gbi5zZXRGdWxsWWVhcih0LnkpLG59cmV0dXJuIG5ldyBEYXRlKHQueSx0Lm0sdC5kLHQuSCx0Lk0sdC5TLHQuTCl9ZnVuY3Rpb24geXAodCl7aWYoMDw9dC55JiZ0Lnk8MTAwKXt2YXIgbj1uZXcgRGF0ZShEYXRlLlVUQygtMSx0Lm0sdC5kLHQuSCx0Lk0sdC5TLHQuTCkpO3JldHVybiBuLnNldFVUQ0Z1bGxZZWFyKHQueSksbn1yZXR1cm4gbmV3IERhdGUoRGF0ZS5VVEModC55LHQubSx0LmQsdC5ILHQuTSx0LlMsdC5MKSl9ZnVuY3Rpb24gX3AodCxuLGUpe3JldHVybnt5OnQsbTpuLGQ6ZSxIOjAsTTowLFM6MCxMOjB9fWZ1bmN0aW9uIGJwKHQpe3ZhciBuPXQuZGF0ZVRpbWUsZT10LmRhdGUscj10LnRpbWUsaT10LnBlcmlvZHMsbz10LmRheXMsYT10LnNob3J0RGF5cyx1PXQubW9udGhzLGM9dC5zaG9ydE1vbnRocyxmPVNwKGkpLHM9a3AoaSksbD1TcChvKSxoPWtwKG8pLGQ9U3AoYSkscD1rcChhKSx2PVNwKHUpLGc9a3AodSkseT1TcChjKSxfPWtwKGMpLGI9e2E6ZnVuY3Rpb24odCl7cmV0dXJuIGFbdC5nZXREYXkoKV19LEE6ZnVuY3Rpb24odCl7cmV0dXJuIG9bdC5nZXREYXkoKV19LGI6ZnVuY3Rpb24odCl7cmV0dXJuIGNbdC5nZXRNb250aCgpXX0sQjpmdW5jdGlvbih0KXtyZXR1cm4gdVt0LmdldE1vbnRoKCldfSxjOm51bGwsZDpXcCxlOldwLGY6dHYsSDpacCxJOlFwLGo6S3AsTDpKcCxtOm52LE06ZXYscDpmdW5jdGlvbih0KXtyZXR1cm4gaVsrKHQuZ2V0SG91cnMoKT49MTIpXX0scTpmdW5jdGlvbih0KXtyZXR1cm4gMSt+fih0LmdldE1vbnRoKCkvMyl9LFE6Q3YsczpQdixTOnJ2LHU6aXYsVTpvdixWOmF2LHc6dXYsVzpjdix4Om51bGwsWDpudWxsLHk6ZnYsWTpzdixaOmx2LFwiJVwiOkV2fSxtPXthOmZ1bmN0aW9uKHQpe3JldHVybiBhW3QuZ2V0VVRDRGF5KCldfSxBOmZ1bmN0aW9uKHQpe3JldHVybiBvW3QuZ2V0VVRDRGF5KCldfSxiOmZ1bmN0aW9uKHQpe3JldHVybiBjW3QuZ2V0VVRDTW9udGgoKV19LEI6ZnVuY3Rpb24odCl7cmV0dXJuIHVbdC5nZXRVVENNb250aCgpXX0sYzpudWxsLGQ6aHYsZTpodixmOnl2LEg6ZHYsSTpwdixqOnZ2LEw6Z3YsbTpfdixNOmJ2LHA6ZnVuY3Rpb24odCl7cmV0dXJuIGlbKyh0LmdldFVUQ0hvdXJzKCk+PTEyKV19LHE6ZnVuY3Rpb24odCl7cmV0dXJuIDErfn4odC5nZXRVVENNb250aCgpLzMpfSxROkN2LHM6UHYsUzptdix1Onh2LFU6d3YsVjpNdix3Ok52LFc6VHYseDpudWxsLFg6bnVsbCx5OkF2LFk6U3YsWjprdixcIiVcIjpFdn0seD17YTpmdW5jdGlvbih0LG4sZSl7dmFyIHI9ZC5leGVjKG4uc2xpY2UoZSkpO3JldHVybiByPyh0Lnc9cFtyWzBdLnRvTG93ZXJDYXNlKCldLGUrclswXS5sZW5ndGgpOi0xfSxBOmZ1bmN0aW9uKHQsbixlKXt2YXIgcj1sLmV4ZWMobi5zbGljZShlKSk7cmV0dXJuIHI/KHQudz1oW3JbMF0udG9Mb3dlckNhc2UoKV0sZStyWzBdLmxlbmd0aCk6LTF9LGI6ZnVuY3Rpb24odCxuLGUpe3ZhciByPXkuZXhlYyhuLnNsaWNlKGUpKTtyZXR1cm4gcj8odC5tPV9bclswXS50b0xvd2VyQ2FzZSgpXSxlK3JbMF0ubGVuZ3RoKTotMX0sQjpmdW5jdGlvbih0LG4sZSl7dmFyIHI9di5leGVjKG4uc2xpY2UoZSkpO3JldHVybiByPyh0Lm09Z1tyWzBdLnRvTG93ZXJDYXNlKCldLGUrclswXS5sZW5ndGgpOi0xfSxjOmZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gTih0LG4sZSxyKX0sZDpCcCxlOkJwLGY6WHAsSDpZcCxJOllwLGo6RnAsTDpqcCxtOk9wLE06SXAscDpmdW5jdGlvbih0LG4sZSl7dmFyIHI9Zi5leGVjKG4uc2xpY2UoZSkpO3JldHVybiByPyh0LnA9c1tyWzBdLnRvTG93ZXJDYXNlKCldLGUrclswXS5sZW5ndGgpOi0xfSxxOlVwLFE6R3AsczokcCxTOkhwLHU6Q3AsVTpQcCxWOnpwLHc6RXAsVzpScCx4OmZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gTih0LGUsbixyKX0sWDpmdW5jdGlvbih0LG4sZSl7cmV0dXJuIE4odCxyLG4sZSl9LHk6cXAsWTpEcCxaOkxwLFwiJVwiOlZwfTtmdW5jdGlvbiB3KHQsbil7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciByLGksbyxhPVtdLHU9LTEsYz0wLGY9dC5sZW5ndGg7Zm9yKGUgaW5zdGFuY2VvZiBEYXRlfHwoZT1uZXcgRGF0ZSgrZSkpOysrdTxmOykzNz09PXQuY2hhckNvZGVBdCh1KSYmKGEucHVzaCh0LnNsaWNlKGMsdSkpLG51bGwhPShpPXhwW3I9dC5jaGFyQXQoKyt1KV0pP3I9dC5jaGFyQXQoKyt1KTppPVwiZVwiPT09cj9cIiBcIjpcIjBcIiwobz1uW3JdKSYmKHI9byhlLGkpKSxhLnB1c2gociksYz11KzEpO3JldHVybiBhLnB1c2godC5zbGljZShjLHUpKSxhLmpvaW4oXCJcIil9fWZ1bmN0aW9uIE0odCxuKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHIsaSxvPV9wKDE5MDAsdm9pZCAwLDEpO2lmKE4obyx0LGUrPVwiXCIsMCkhPWUubGVuZ3RoKXJldHVybiBudWxsO2lmKFwiUVwiaW4gbylyZXR1cm4gbmV3IERhdGUoby5RKTtpZihcInNcImluIG8pcmV0dXJuIG5ldyBEYXRlKDFlMypvLnMrKFwiTFwiaW4gbz9vLkw6MCkpO2lmKCFufHxcIlpcImluIG98fChvLlo9MCksXCJwXCJpbiBvJiYoby5IPW8uSCUxMisxMipvLnApLHZvaWQgMD09PW8ubSYmKG8ubT1cInFcImluIG8/by5xOjApLFwiVlwiaW4gbyl7aWYoby5WPDF8fG8uVj41MylyZXR1cm4gbnVsbDtcIndcImluIG98fChvLnc9MSksXCJaXCJpbiBvPyhpPShyPXlwKF9wKG8ueSwwLDEpKSkuZ2V0VVRDRGF5KCkscj1pPjR8fDA9PT1pP0pkLmNlaWwocik6SmQocikscj1XZC5vZmZzZXQociw3KihvLlYtMSkpLG8ueT1yLmdldFVUQ0Z1bGxZZWFyKCksby5tPXIuZ2V0VVRDTW9udGgoKSxvLmQ9ci5nZXRVVENEYXRlKCkrKG8udys2KSU3KTooaT0ocj1ncChfcChvLnksMCwxKSkpLmdldERheSgpLHI9aT40fHwwPT09aT9rZC5jZWlsKHIpOmtkKHIpLHI9TmQub2Zmc2V0KHIsNyooby5WLTEpKSxvLnk9ci5nZXRGdWxsWWVhcigpLG8ubT1yLmdldE1vbnRoKCksby5kPXIuZ2V0RGF0ZSgpKyhvLncrNiklNyl9ZWxzZShcIldcImluIG98fFwiVVwiaW4gbykmJihcIndcImluIG98fChvLnc9XCJ1XCJpbiBvP28udSU3OlwiV1wiaW4gbz8xOjApLGk9XCJaXCJpbiBvP3lwKF9wKG8ueSwwLDEpKS5nZXRVVENEYXkoKTpncChfcChvLnksMCwxKSkuZ2V0RGF5KCksby5tPTAsby5kPVwiV1wiaW4gbz8oby53KzYpJTcrNypvLlctKGkrNSklNzpvLncrNypvLlUtKGkrNiklNyk7cmV0dXJuXCJaXCJpbiBvPyhvLkgrPW8uWi8xMDB8MCxvLk0rPW8uWiUxMDAseXAobykpOmdwKG8pfX1mdW5jdGlvbiBOKHQsbixlLHIpe2Zvcih2YXIgaSxvLGE9MCx1PW4ubGVuZ3RoLGM9ZS5sZW5ndGg7YTx1Oyl7aWYocj49YylyZXR1cm4tMTtpZigzNz09PShpPW4uY2hhckNvZGVBdChhKyspKSl7aWYoaT1uLmNoYXJBdChhKyspLCEobz14W2kgaW4geHA/bi5jaGFyQXQoYSsrKTppXSl8fChyPW8odCxlLHIpKTwwKXJldHVybi0xfWVsc2UgaWYoaSE9ZS5jaGFyQ29kZUF0KHIrKykpcmV0dXJuLTF9cmV0dXJuIHJ9cmV0dXJuIGIueD13KGUsYiksYi5YPXcocixiKSxiLmM9dyhuLGIpLG0ueD13KGUsbSksbS5YPXcocixtKSxtLmM9dyhuLG0pLHtmb3JtYXQ6ZnVuY3Rpb24odCl7dmFyIG49dyh0Kz1cIlwiLGIpO3JldHVybiBuLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHR9LG59LHBhcnNlOmZ1bmN0aW9uKHQpe3ZhciBuPU0odCs9XCJcIiwhMSk7cmV0dXJuIG4udG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdH0sbn0sdXRjRm9ybWF0OmZ1bmN0aW9uKHQpe3ZhciBuPXcodCs9XCJcIixtKTtyZXR1cm4gbi50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0fSxufSx1dGNQYXJzZTpmdW5jdGlvbih0KXt2YXIgbj1NKHQrPVwiXCIsITApO3JldHVybiBuLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHR9LG59fX12YXIgbXAseHA9e1wiLVwiOlwiXCIsXzpcIiBcIiwwOlwiMFwifSx3cD0vXlxccypcXGQrLyxNcD0vXiUvLE5wPS9bXFxcXF4kKis/fFtcXF0oKS57fV0vZztmdW5jdGlvbiBUcCh0LG4sZSl7dmFyIHI9dDwwP1wiLVwiOlwiXCIsaT0ocj8tdDp0KStcIlwiLG89aS5sZW5ndGg7cmV0dXJuIHIrKG88ZT9uZXcgQXJyYXkoZS1vKzEpLmpvaW4obikraTppKX1mdW5jdGlvbiBBcCh0KXtyZXR1cm4gdC5yZXBsYWNlKE5wLFwiXFxcXCQmXCIpfWZ1bmN0aW9uIFNwKHQpe3JldHVybiBuZXcgUmVnRXhwKFwiXig/OlwiK3QubWFwKEFwKS5qb2luKFwifFwiKStcIilcIixcImlcIil9ZnVuY3Rpb24ga3AodCl7Zm9yKHZhciBuPXt9LGU9LTEscj10Lmxlbmd0aDsrK2U8cjspblt0W2VdLnRvTG93ZXJDYXNlKCldPWU7cmV0dXJuIG59ZnVuY3Rpb24gRXAodCxuLGUpe3ZhciByPXdwLmV4ZWMobi5zbGljZShlLGUrMSkpO3JldHVybiByPyh0Lnc9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gQ3AodCxuLGUpe3ZhciByPXdwLmV4ZWMobi5zbGljZShlLGUrMSkpO3JldHVybiByPyh0LnU9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gUHAodCxuLGUpe3ZhciByPXdwLmV4ZWMobi5zbGljZShlLGUrMikpO3JldHVybiByPyh0LlU9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24genAodCxuLGUpe3ZhciByPXdwLmV4ZWMobi5zbGljZShlLGUrMikpO3JldHVybiByPyh0LlY9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gUnAodCxuLGUpe3ZhciByPXdwLmV4ZWMobi5zbGljZShlLGUrMikpO3JldHVybiByPyh0Llc9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gRHAodCxuLGUpe3ZhciByPXdwLmV4ZWMobi5zbGljZShlLGUrNCkpO3JldHVybiByPyh0Lnk9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gcXAodCxuLGUpe3ZhciByPXdwLmV4ZWMobi5zbGljZShlLGUrMikpO3JldHVybiByPyh0Lnk9K3JbMF0rKCtyWzBdPjY4PzE5MDA6MmUzKSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBMcCh0LG4sZSl7dmFyIHI9L14oWil8KFsrLV1cXGRcXGQpKD86Oj8oXFxkXFxkKSk/Ly5leGVjKG4uc2xpY2UoZSxlKzYpKTtyZXR1cm4gcj8odC5aPXJbMV0/MDotKHJbMl0rKHJbM118fFwiMDBcIikpLGUrclswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIFVwKHQsbixlKXt2YXIgcj13cC5leGVjKG4uc2xpY2UoZSxlKzEpKTtyZXR1cm4gcj8odC5xPTMqclswXS0zLGUrclswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIE9wKHQsbixlKXt2YXIgcj13cC5leGVjKG4uc2xpY2UoZSxlKzIpKTtyZXR1cm4gcj8odC5tPXJbMF0tMSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBCcCh0LG4sZSl7dmFyIHI9d3AuZXhlYyhuLnNsaWNlKGUsZSsyKSk7cmV0dXJuIHI/KHQuZD0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBGcCh0LG4sZSl7dmFyIHI9d3AuZXhlYyhuLnNsaWNlKGUsZSszKSk7cmV0dXJuIHI/KHQubT0wLHQuZD0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBZcCh0LG4sZSl7dmFyIHI9d3AuZXhlYyhuLnNsaWNlKGUsZSsyKSk7cmV0dXJuIHI/KHQuSD0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBJcCh0LG4sZSl7dmFyIHI9d3AuZXhlYyhuLnNsaWNlKGUsZSsyKSk7cmV0dXJuIHI/KHQuTT0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBIcCh0LG4sZSl7dmFyIHI9d3AuZXhlYyhuLnNsaWNlKGUsZSsyKSk7cmV0dXJuIHI/KHQuUz0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBqcCh0LG4sZSl7dmFyIHI9d3AuZXhlYyhuLnNsaWNlKGUsZSszKSk7cmV0dXJuIHI/KHQuTD0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBYcCh0LG4sZSl7dmFyIHI9d3AuZXhlYyhuLnNsaWNlKGUsZSs2KSk7cmV0dXJuIHI/KHQuTD1NYXRoLmZsb29yKHJbMF0vMWUzKSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBWcCh0LG4sZSl7dmFyIHI9TXAuZXhlYyhuLnNsaWNlKGUsZSsxKSk7cmV0dXJuIHI/ZStyWzBdLmxlbmd0aDotMX1mdW5jdGlvbiBHcCh0LG4sZSl7dmFyIHI9d3AuZXhlYyhuLnNsaWNlKGUpKTtyZXR1cm4gcj8odC5RPStyWzBdLGUrclswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uICRwKHQsbixlKXt2YXIgcj13cC5leGVjKG4uc2xpY2UoZSkpO3JldHVybiByPyh0LnM9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gV3AodCxuKXtyZXR1cm4gVHAodC5nZXREYXRlKCksbiwyKX1mdW5jdGlvbiBacCh0LG4pe3JldHVybiBUcCh0LmdldEhvdXJzKCksbiwyKX1mdW5jdGlvbiBRcCh0LG4pe3JldHVybiBUcCh0LmdldEhvdXJzKCklMTJ8fDEyLG4sMil9ZnVuY3Rpb24gS3AodCxuKXtyZXR1cm4gVHAoMStOZC5jb3VudChIZCh0KSx0KSxuLDMpfWZ1bmN0aW9uIEpwKHQsbil7cmV0dXJuIFRwKHQuZ2V0TWlsbGlzZWNvbmRzKCksbiwzKX1mdW5jdGlvbiB0dih0LG4pe3JldHVybiBKcCh0LG4pK1wiMDAwXCJ9ZnVuY3Rpb24gbnYodCxuKXtyZXR1cm4gVHAodC5nZXRNb250aCgpKzEsbiwyKX1mdW5jdGlvbiBldih0LG4pe3JldHVybiBUcCh0LmdldE1pbnV0ZXMoKSxuLDIpfWZ1bmN0aW9uIHJ2KHQsbil7cmV0dXJuIFRwKHQuZ2V0U2Vjb25kcygpLG4sMil9ZnVuY3Rpb24gaXYodCl7dmFyIG49dC5nZXREYXkoKTtyZXR1cm4gMD09PW4/NzpufWZ1bmN0aW9uIG92KHQsbil7cmV0dXJuIFRwKFNkLmNvdW50KEhkKHQpLTEsdCksbiwyKX1mdW5jdGlvbiBhdih0LG4pe3ZhciBlPXQuZ2V0RGF5KCk7cmV0dXJuIHQ9ZT49NHx8MD09PWU/UGQodCk6UGQuY2VpbCh0KSxUcChQZC5jb3VudChIZCh0KSx0KSsoND09PUhkKHQpLmdldERheSgpKSxuLDIpfWZ1bmN0aW9uIHV2KHQpe3JldHVybiB0LmdldERheSgpfWZ1bmN0aW9uIGN2KHQsbil7cmV0dXJuIFRwKGtkLmNvdW50KEhkKHQpLTEsdCksbiwyKX1mdW5jdGlvbiBmdih0LG4pe3JldHVybiBUcCh0LmdldEZ1bGxZZWFyKCklMTAwLG4sMil9ZnVuY3Rpb24gc3YodCxuKXtyZXR1cm4gVHAodC5nZXRGdWxsWWVhcigpJTFlNCxuLDQpfWZ1bmN0aW9uIGx2KHQpe3ZhciBuPXQuZ2V0VGltZXpvbmVPZmZzZXQoKTtyZXR1cm4obj4wP1wiLVwiOihuKj0tMSxcIitcIikpK1RwKG4vNjB8MCxcIjBcIiwyKStUcChuJTYwLFwiMFwiLDIpfWZ1bmN0aW9uIGh2KHQsbil7cmV0dXJuIFRwKHQuZ2V0VVRDRGF0ZSgpLG4sMil9ZnVuY3Rpb24gZHYodCxuKXtyZXR1cm4gVHAodC5nZXRVVENIb3VycygpLG4sMil9ZnVuY3Rpb24gcHYodCxuKXtyZXR1cm4gVHAodC5nZXRVVENIb3VycygpJTEyfHwxMixuLDIpfWZ1bmN0aW9uIHZ2KHQsbil7cmV0dXJuIFRwKDErV2QuY291bnQocHAodCksdCksbiwzKX1mdW5jdGlvbiBndih0LG4pe3JldHVybiBUcCh0LmdldFVUQ01pbGxpc2Vjb25kcygpLG4sMyl9ZnVuY3Rpb24geXYodCxuKXtyZXR1cm4gZ3YodCxuKStcIjAwMFwifWZ1bmN0aW9uIF92KHQsbil7cmV0dXJuIFRwKHQuZ2V0VVRDTW9udGgoKSsxLG4sMil9ZnVuY3Rpb24gYnYodCxuKXtyZXR1cm4gVHAodC5nZXRVVENNaW51dGVzKCksbiwyKX1mdW5jdGlvbiBtdih0LG4pe3JldHVybiBUcCh0LmdldFVUQ1NlY29uZHMoKSxuLDIpfWZ1bmN0aW9uIHh2KHQpe3ZhciBuPXQuZ2V0VVRDRGF5KCk7cmV0dXJuIDA9PT1uPzc6bn1mdW5jdGlvbiB3dih0LG4pe3JldHVybiBUcChLZC5jb3VudChwcCh0KS0xLHQpLG4sMil9ZnVuY3Rpb24gTXYodCxuKXt2YXIgZT10LmdldFVUQ0RheSgpO3JldHVybiB0PWU+PTR8fDA9PT1lP2VwKHQpOmVwLmNlaWwodCksVHAoZXAuY291bnQocHAodCksdCkrKDQ9PT1wcCh0KS5nZXRVVENEYXkoKSksbiwyKX1mdW5jdGlvbiBOdih0KXtyZXR1cm4gdC5nZXRVVENEYXkoKX1mdW5jdGlvbiBUdih0LG4pe3JldHVybiBUcChKZC5jb3VudChwcCh0KS0xLHQpLG4sMil9ZnVuY3Rpb24gQXYodCxuKXtyZXR1cm4gVHAodC5nZXRVVENGdWxsWWVhcigpJTEwMCxuLDIpfWZ1bmN0aW9uIFN2KHQsbil7cmV0dXJuIFRwKHQuZ2V0VVRDRnVsbFllYXIoKSUxZTQsbiw0KX1mdW5jdGlvbiBrdigpe3JldHVyblwiKzAwMDBcIn1mdW5jdGlvbiBFdigpe3JldHVyblwiJVwifWZ1bmN0aW9uIEN2KHQpe3JldHVybit0fWZ1bmN0aW9uIFB2KHQpe3JldHVybiBNYXRoLmZsb29yKCt0LzFlMyl9ZnVuY3Rpb24genYobil7cmV0dXJuIG1wPWJwKG4pLHQudGltZUZvcm1hdD1tcC5mb3JtYXQsdC50aW1lUGFyc2U9bXAucGFyc2UsdC51dGNGb3JtYXQ9bXAudXRjRm9ybWF0LHQudXRjUGFyc2U9bXAudXRjUGFyc2UsbXB9enYoe2RhdGVUaW1lOlwiJXgsICVYXCIsZGF0ZTpcIiUtbS8lLWQvJVlcIix0aW1lOlwiJS1JOiVNOiVTICVwXCIscGVyaW9kczpbXCJBTVwiLFwiUE1cIl0sZGF5czpbXCJTdW5kYXlcIixcIk1vbmRheVwiLFwiVHVlc2RheVwiLFwiV2VkbmVzZGF5XCIsXCJUaHVyc2RheVwiLFwiRnJpZGF5XCIsXCJTYXR1cmRheVwiXSxzaG9ydERheXM6W1wiU3VuXCIsXCJNb25cIixcIlR1ZVwiLFwiV2VkXCIsXCJUaHVcIixcIkZyaVwiLFwiU2F0XCJdLG1vbnRoczpbXCJKYW51YXJ5XCIsXCJGZWJydWFyeVwiLFwiTWFyY2hcIixcIkFwcmlsXCIsXCJNYXlcIixcIkp1bmVcIixcIkp1bHlcIixcIkF1Z3VzdFwiLFwiU2VwdGVtYmVyXCIsXCJPY3RvYmVyXCIsXCJOb3ZlbWJlclwiLFwiRGVjZW1iZXJcIl0sc2hvcnRNb250aHM6W1wiSmFuXCIsXCJGZWJcIixcIk1hclwiLFwiQXByXCIsXCJNYXlcIixcIkp1blwiLFwiSnVsXCIsXCJBdWdcIixcIlNlcFwiLFwiT2N0XCIsXCJOb3ZcIixcIkRlY1wiXX0pO3ZhciBSdj1EYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZz9mdW5jdGlvbih0KXtyZXR1cm4gdC50b0lTT1N0cmluZygpfTp0LnV0Y0Zvcm1hdChcIiVZLSVtLSVkVCVIOiVNOiVTLiVMWlwiKTt2YXIgRHY9K25ldyBEYXRlKFwiMjAwMC0wMS0wMVQwMDowMDowMC4wMDBaXCIpP2Z1bmN0aW9uKHQpe3ZhciBuPW5ldyBEYXRlKHQpO3JldHVybiBpc05hTihuKT9udWxsOm59OnQudXRjUGFyc2UoXCIlWS0lbS0lZFQlSDolTTolUy4lTFpcIikscXY9MWUzLEx2PTYwKnF2LFV2PTYwKkx2LE92PTI0KlV2LEJ2PTcqT3YsRnY9MzAqT3YsWXY9MzY1Kk92O2Z1bmN0aW9uIEl2KHQpe3JldHVybiBuZXcgRGF0ZSh0KX1mdW5jdGlvbiBIdih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIERhdGU/K3Q6K25ldyBEYXRlKCt0KX1mdW5jdGlvbiBqdih0LG4scixpLG8sYSx1LGMsZil7dmFyIHM9VmgoQmgsQmgpLGw9cy5pbnZlcnQsaD1zLmRvbWFpbixkPWYoXCIuJUxcIikscD1mKFwiOiVTXCIpLHY9ZihcIiVJOiVNXCIpLGc9ZihcIiVJICVwXCIpLHk9ZihcIiVhICVkXCIpLF89ZihcIiViICVkXCIpLGI9ZihcIiVCXCIpLG09ZihcIiVZXCIpLHg9W1t1LDEscXZdLFt1LDUsNSpxdl0sW3UsMTUsMTUqcXZdLFt1LDMwLDMwKnF2XSxbYSwxLEx2XSxbYSw1LDUqTHZdLFthLDE1LDE1Kkx2XSxbYSwzMCwzMCpMdl0sW28sMSxVdl0sW28sMywzKlV2XSxbbyw2LDYqVXZdLFtvLDEyLDEyKlV2XSxbaSwxLE92XSxbaSwyLDIqT3ZdLFtyLDEsQnZdLFtuLDEsRnZdLFtuLDMsMypGdl0sW3QsMSxZdl1dO2Z1bmN0aW9uIE0oZSl7cmV0dXJuKHUoZSk8ZT9kOmEoZSk8ZT9wOm8oZSk8ZT92OmkoZSk8ZT9nOm4oZSk8ZT9yKGUpPGU/eTpfOnQoZSk8ZT9iOm0pKGUpfWZ1bmN0aW9uIE4obixyLGksbyl7aWYobnVsbD09biYmKG49MTApLFwibnVtYmVyXCI9PXR5cGVvZiBuKXt2YXIgYT1NYXRoLmFicyhpLXIpL24sdT1lKGZ1bmN0aW9uKHQpe3JldHVybiB0WzJdfSkucmlnaHQoeCxhKTt1PT09eC5sZW5ndGg/KG89dyhyL1l2LGkvWXYsbiksbj10KTp1PyhvPSh1PXhbYS94W3UtMV1bMl08eFt1XVsyXS9hP3UtMTp1XSlbMV0sbj11WzBdKToobz1NYXRoLm1heCh3KHIsaSxuKSwxKSxuPWMpfXJldHVybiBudWxsPT1vP246bi5ldmVyeShvKX1yZXR1cm4gcy5pbnZlcnQ9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBEYXRlKGwodCkpfSxzLmRvbWFpbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9oKHpoLmNhbGwodCxIdikpOmgoKS5tYXAoSXYpfSxzLnRpY2tzPWZ1bmN0aW9uKHQsbil7dmFyIGUscj1oKCksaT1yWzBdLG89cltyLmxlbmd0aC0xXSxhPW88aTtyZXR1cm4gYSYmKGU9aSxpPW8sbz1lKSxlPShlPU4odCxpLG8sbikpP2UucmFuZ2UoaSxvKzEpOltdLGE/ZS5yZXZlcnNlKCk6ZX0scy50aWNrRm9ybWF0PWZ1bmN0aW9uKHQsbil7cmV0dXJuIG51bGw9PW4/TTpmKG4pfSxzLm5pY2U9ZnVuY3Rpb24odCxuKXt2YXIgZT1oKCk7cmV0dXJuKHQ9Tih0LGVbMF0sZVtlLmxlbmd0aC0xXSxuKSk/aChXaChlLHQpKTpzfSxzLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gamgocyxqdih0LG4scixpLG8sYSx1LGMsZikpfSxzfWZ1bmN0aW9uIFh2KCl7dmFyIHQsbixlLHIsaSxvPTAsYT0xLHU9QmgsYz0hMTtmdW5jdGlvbiBmKG4pe3JldHVybiBpc05hTihuPStuKT9pOnUoMD09PWU/LjU6KG49KHIobiktdCkqZSxjP01hdGgubWF4KDAsTWF0aC5taW4oMSxuKSk6bikpfXJldHVybiBmLmRvbWFpbj1mdW5jdGlvbihpKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1yKG89K2lbMF0pLG49cihhPStpWzFdKSxlPXQ9PT1uPzA6MS8obi10KSxmKTpbbyxhXX0sZi5jbGFtcD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz0hIXQsZik6Y30sZi5pbnRlcnBvbGF0b3I9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9dCxmKTp1fSxmLnVua25vd249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9dCxmKTppfSxmdW5jdGlvbihpKXtyZXR1cm4gcj1pLHQ9aShvKSxuPWkoYSksZT10PT09bj8wOjEvKG4tdCksZn19ZnVuY3Rpb24gVnYodCxuKXtyZXR1cm4gbi5kb21haW4odC5kb21haW4oKSkuaW50ZXJwb2xhdG9yKHQuaW50ZXJwb2xhdG9yKCkpLmNsYW1wKHQuY2xhbXAoKSkudW5rbm93bih0LnVua25vd24oKSl9ZnVuY3Rpb24gR3YoKXt2YXIgdD1mZChYdigpKTtyZXR1cm4gdC5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIFZ2KHQsR3YoKSkuZXhwb25lbnQodC5leHBvbmVudCgpKX0sQ2guYXBwbHkodCxhcmd1bWVudHMpfWZ1bmN0aW9uICR2KCl7dmFyIHQsbixlLHIsaSxvLGEsdT0wLGM9LjUsZj0xLHM9QmgsbD0hMTtmdW5jdGlvbiBoKHQpe3JldHVybiBpc05hTih0PSt0KT9hOih0PS41KygodD0rbyh0KSktbikqKHQ8bj9yOmkpLHMobD9NYXRoLm1heCgwLE1hdGgubWluKDEsdCkpOnQpKX1yZXR1cm4gaC5kb21haW49ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9byh1PSthWzBdKSxuPW8oYz0rYVsxXSksZT1vKGY9K2FbMl0pLHI9dD09PW4/MDouNS8obi10KSxpPW49PT1lPzA6LjUvKGUtbiksaCk6W3UsYyxmXX0saC5jbGFtcD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obD0hIXQsaCk6bH0saC5pbnRlcnBvbGF0b3I9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHM9dCxoKTpzfSxoLnVua25vd249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9dCxoKTphfSxmdW5jdGlvbihhKXtyZXR1cm4gbz1hLHQ9YSh1KSxuPWEoYyksZT1hKGYpLHI9dD09PW4/MDouNS8obi10KSxpPW49PT1lPzA6LjUvKGUtbiksaH19ZnVuY3Rpb24gV3YoKXt2YXIgdD1mZCgkdigpKTtyZXR1cm4gdC5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIFZ2KHQsV3YoKSkuZXhwb25lbnQodC5leHBvbmVudCgpKX0sQ2guYXBwbHkodCxhcmd1bWVudHMpfWZ1bmN0aW9uIFp2KHQpe2Zvcih2YXIgbj10Lmxlbmd0aC82fDAsZT1uZXcgQXJyYXkobikscj0wO3I8bjspZVtyXT1cIiNcIit0LnNsaWNlKDYqciw2Kisrcik7cmV0dXJuIGV9dmFyIFF2PVp2KFwiMWY3N2I0ZmY3ZjBlMmNhMDJjZDYyNzI4OTQ2N2JkOGM1NjRiZTM3N2MyN2Y3ZjdmYmNiZDIyMTdiZWNmXCIpLEt2PVp2KFwiN2ZjOTdmYmVhZWQ0ZmRjMDg2ZmZmZjk5Mzg2Y2IwZjAwMjdmYmY1YjE3NjY2NjY2XCIpLEp2PVp2KFwiMWI5ZTc3ZDk1ZjAyNzU3MGIzZTcyOThhNjZhNjFlZTZhYjAyYTY3NjFkNjY2NjY2XCIpLHRnPVp2KFwiYTZjZWUzMWY3OGI0YjJkZjhhMzNhMDJjZmI5YTk5ZTMxYTFjZmRiZjZmZmY3ZjAwY2FiMmQ2NmEzZDlhZmZmZjk5YjE1OTI4XCIpLG5nPVp2KFwiZmJiNGFlYjNjZGUzY2NlYmM1ZGVjYmU0ZmVkOWE2ZmZmZmNjZTVkOGJkZmRkYWVjZjJmMmYyXCIpLGVnPVp2KFwiYjNlMmNkZmRjZGFjY2JkNWU4ZjRjYWU0ZTZmNWM5ZmZmMmFlZjFlMmNjY2NjY2NjXCIpLHJnPVp2KFwiZTQxYTFjMzc3ZWI4NGRhZjRhOTg0ZWEzZmY3ZjAwZmZmZjMzYTY1NjI4Zjc4MWJmOTk5OTk5XCIpLGlnPVp2KFwiNjZjMmE1ZmM4ZDYyOGRhMGNiZTc4YWMzYTZkODU0ZmZkOTJmZTVjNDk0YjNiM2IzXCIpLG9nPVp2KFwiOGRkM2M3ZmZmZmIzYmViYWRhZmI4MDcyODBiMWQzZmRiNDYyYjNkZTY5ZmNjZGU1ZDlkOWQ5YmM4MGJkY2NlYmM1ZmZlZDZmXCIpLGFnPVp2KFwiNGU3OWE3ZjI4ZTJjZTE1NzU5NzZiN2IyNTlhMTRmZWRjOTQ5YWY3YWExZmY5ZGE3OWM3NTVmYmFiMGFiXCIpO2Z1bmN0aW9uIHVnKHQpe3JldHVybiBwZSh0W3QubGVuZ3RoLTFdKX12YXIgY2c9bmV3IEFycmF5KDMpLmNvbmNhdChcImQ4YjM2NWY1ZjVmNTVhYjRhY1wiLFwiYTY2MTFhZGZjMjdkODBjZGMxMDE4NTcxXCIsXCJhNjYxMWFkZmMyN2RmNWY1ZjU4MGNkYzEwMTg1NzFcIixcIjhjNTEwYWQ4YjM2NWY2ZThjM2M3ZWFlNTVhYjRhYzAxNjY1ZVwiLFwiOGM1MTBhZDhiMzY1ZjZlOGMzZjVmNWY1YzdlYWU1NWFiNGFjMDE2NjVlXCIsXCI4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWVcIixcIjhjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2Y1ZjVmNWM3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZVwiLFwiNTQzMDA1OGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzYzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlMDAzYzMwXCIsXCI1NDMwMDU4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNmNWY1ZjVjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWUwMDNjMzBcIikubWFwKFp2KSxmZz11ZyhjZyksc2c9bmV3IEFycmF5KDMpLmNvbmNhdChcImFmOGRjM2Y3ZjdmNzdmYmY3YlwiLFwiN2IzMjk0YzJhNWNmYTZkYmEwMDA4ODM3XCIsXCI3YjMyOTRjMmE1Y2ZmN2Y3ZjdhNmRiYTAwMDg4MzdcIixcIjc2MmE4M2FmOGRjM2U3ZDRlOGQ5ZjBkMzdmYmY3YjFiNzgzN1wiLFwiNzYyYTgzYWY4ZGMzZTdkNGU4ZjdmN2Y3ZDlmMGQzN2ZiZjdiMWI3ODM3XCIsXCI3NjJhODM5OTcwYWJjMmE1Y2ZlN2Q0ZThkOWYwZDNhNmRiYTA1YWFlNjExYjc4MzdcIixcIjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGY3ZjdmN2Q5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzN1wiLFwiNDAwMDRiNzYyYTgzOTk3MGFiYzJhNWNmZTdkNGU4ZDlmMGQzYTZkYmEwNWFhZTYxMWI3ODM3MDA0NDFiXCIsXCI0MDAwNGI3NjJhODM5OTcwYWJjMmE1Y2ZlN2Q0ZThmN2Y3ZjdkOWYwZDNhNmRiYTA1YWFlNjExYjc4MzcwMDQ0MWJcIikubWFwKFp2KSxsZz11ZyhzZyksaGc9bmV3IEFycmF5KDMpLmNvbmNhdChcImU5YTNjOWY3ZjdmN2ExZDc2YVwiLFwiZDAxYzhiZjFiNmRhYjhlMTg2NGRhYzI2XCIsXCJkMDFjOGJmMWI2ZGFmN2Y3ZjdiOGUxODY0ZGFjMjZcIixcImM1MWI3ZGU5YTNjOWZkZTBlZmU2ZjVkMGExZDc2YTRkOTIyMVwiLFwiYzUxYjdkZTlhM2M5ZmRlMGVmZjdmN2Y3ZTZmNWQwYTFkNzZhNGQ5MjIxXCIsXCJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjFcIixcImM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmY3ZjdmN2U2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMVwiLFwiOGUwMTUyYzUxYjdkZGU3N2FlZjFiNmRhZmRlMGVmZTZmNWQwYjhlMTg2N2ZiYzQxNGQ5MjIxMjc2NDE5XCIsXCI4ZTAxNTJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZmN2Y3ZjdlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEyNzY0MTlcIikubWFwKFp2KSxkZz11ZyhoZykscGc9bmV3IEFycmF5KDMpLmNvbmNhdChcIjk5OGVjM2Y3ZjdmN2YxYTM0MFwiLFwiNWUzYzk5YjJhYmQyZmRiODYzZTY2MTAxXCIsXCI1ZTNjOTliMmFiZDJmN2Y3ZjdmZGI4NjNlNjYxMDFcIixcIjU0Mjc4ODk5OGVjM2Q4ZGFlYmZlZTBiNmYxYTM0MGIzNTgwNlwiLFwiNTQyNzg4OTk4ZWMzZDhkYWViZjdmN2Y3ZmVlMGI2ZjFhMzQwYjM1ODA2XCIsXCI1NDI3ODg4MDczYWNiMmFiZDJkOGRhZWJmZWUwYjZmZGI4NjNlMDgyMTRiMzU4MDZcIixcIjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmY3ZjdmN2ZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNlwiLFwiMmQwMDRiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2N2YzYjA4XCIsXCIyZDAwNGI1NDI3ODg4MDczYWNiMmFiZDJkOGRhZWJmN2Y3ZjdmZWUwYjZmZGI4NjNlMDgyMTRiMzU4MDY3ZjNiMDhcIikubWFwKFp2KSx2Zz11ZyhwZyksZ2c9bmV3IEFycmF5KDMpLmNvbmNhdChcImVmOGE2MmY3ZjdmNzY3YTljZlwiLFwiY2EwMDIwZjRhNTgyOTJjNWRlMDU3MWIwXCIsXCJjYTAwMjBmNGE1ODJmN2Y3Zjc5MmM1ZGUwNTcxYjBcIixcImIyMTgyYmVmOGE2MmZkZGJjN2QxZTVmMDY3YTljZjIxNjZhY1wiLFwiYjIxODJiZWY4YTYyZmRkYmM3ZjdmN2Y3ZDFlNWYwNjdhOWNmMjE2NmFjXCIsXCJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdkMWU1ZjA5MmM1ZGU0MzkzYzMyMTY2YWNcIixcImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2Y3ZjdmN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhY1wiLFwiNjcwMDFmYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZDFlNWYwOTJjNWRlNDM5M2MzMjE2NmFjMDUzMDYxXCIsXCI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmN2Y3ZjdkMWU1ZjA5MmM1ZGU0MzkzYzMyMTY2YWMwNTMwNjFcIikubWFwKFp2KSx5Zz11ZyhnZyksX2c9bmV3IEFycmF5KDMpLmNvbmNhdChcImVmOGE2MmZmZmZmZjk5OTk5OVwiLFwiY2EwMDIwZjRhNTgyYmFiYWJhNDA0MDQwXCIsXCJjYTAwMjBmNGE1ODJmZmZmZmZiYWJhYmE0MDQwNDBcIixcImIyMTgyYmVmOGE2MmZkZGJjN2UwZTBlMDk5OTk5OTRkNGQ0ZFwiLFwiYjIxODJiZWY4YTYyZmRkYmM3ZmZmZmZmZTBlMGUwOTk5OTk5NGQ0ZDRkXCIsXCJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGRcIixcImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2ZmZmZmZmUwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZFwiLFwiNjcwMDFmYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZTBlMGUwYmFiYWJhODc4Nzg3NGQ0ZDRkMWExYTFhXCIsXCI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmZmZmZmZlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQxYTFhMWFcIikubWFwKFp2KSxiZz11ZyhfZyksbWc9bmV3IEFycmF5KDMpLmNvbmNhdChcImZjOGQ1OWZmZmZiZjkxYmZkYlwiLFwiZDcxOTFjZmRhZTYxYWJkOWU5MmM3YmI2XCIsXCJkNzE5MWNmZGFlNjFmZmZmYmZhYmQ5ZTkyYzdiYjZcIixcImQ3MzAyN2ZjOGQ1OWZlZTA5MGUwZjNmODkxYmZkYjQ1NzViNFwiLFwiZDczMDI3ZmM4ZDU5ZmVlMDkwZmZmZmJmZTBmM2Y4OTFiZmRiNDU3NWI0XCIsXCJkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOTBlMGYzZjhhYmQ5ZTk3NGFkZDE0NTc1YjRcIixcImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGZmZmZiZmUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNFwiLFwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0MzEzNjk1XCIsXCJhNTAwMjZkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOTBmZmZmYmZlMGYzZjhhYmQ5ZTk3NGFkZDE0NTc1YjQzMTM2OTVcIikubWFwKFp2KSx4Zz11ZyhtZyksd2c9bmV3IEFycmF5KDMpLmNvbmNhdChcImZjOGQ1OWZmZmZiZjkxY2Y2MFwiLFwiZDcxOTFjZmRhZTYxYTZkOTZhMWE5NjQxXCIsXCJkNzE5MWNmZGFlNjFmZmZmYmZhNmQ5NmExYTk2NDFcIixcImQ3MzAyN2ZjOGQ1OWZlZTA4YmQ5ZWY4YjkxY2Y2MDFhOTg1MFwiLFwiZDczMDI3ZmM4ZDU5ZmVlMDhiZmZmZmJmZDllZjhiOTFjZjYwMWE5ODUwXCIsXCJkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOGJkOWVmOGJhNmQ5NmE2NmJkNjMxYTk4NTBcIixcImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MFwiLFwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwMDA2ODM3XCIsXCJhNTAwMjZkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZkOWVmOGJhNmQ5NmE2NmJkNjMxYTk4NTAwMDY4MzdcIikubWFwKFp2KSxNZz11Zyh3ZyksTmc9bmV3IEFycmF5KDMpLmNvbmNhdChcImZjOGQ1OWZmZmZiZjk5ZDU5NFwiLFwiZDcxOTFjZmRhZTYxYWJkZGE0MmI4M2JhXCIsXCJkNzE5MWNmZGFlNjFmZmZmYmZhYmRkYTQyYjgzYmFcIixcImQ1M2U0ZmZjOGQ1OWZlZTA4YmU2ZjU5ODk5ZDU5NDMyODhiZFwiLFwiZDUzZTRmZmM4ZDU5ZmVlMDhiZmZmZmJmZTZmNTk4OTlkNTk0MzI4OGJkXCIsXCJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmRcIixcImQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZFwiLFwiOWUwMTQyZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkNWU0ZmEyXCIsXCI5ZTAxNDJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmQ1ZTRmYTJcIikubWFwKFp2KSxUZz11ZyhOZyksQWc9bmV3IEFycmF5KDMpLmNvbmNhdChcImU1ZjVmOTk5ZDhjOTJjYTI1ZlwiLFwiZWRmOGZiYjJlMmUyNjZjMmE0MjM4YjQ1XCIsXCJlZGY4ZmJiMmUyZTI2NmMyYTQyY2EyNWYwMDZkMmNcIixcImVkZjhmYmNjZWNlNjk5ZDhjOTY2YzJhNDJjYTI1ZjAwNmQyY1wiLFwiZWRmOGZiY2NlY2U2OTlkOGM5NjZjMmE0NDFhZTc2MjM4YjQ1MDA1ODI0XCIsXCJmN2ZjZmRlNWY1ZjljY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjRcIixcImY3ZmNmZGU1ZjVmOWNjZWNlNjk5ZDhjOTY2YzJhNDQxYWU3NjIzOGI0NTAwNmQyYzAwNDQxYlwiKS5tYXAoWnYpLFNnPXVnKEFnKSxrZz1uZXcgQXJyYXkoMykuY29uY2F0KFwiZTBlY2Y0OWViY2RhODg1NmE3XCIsXCJlZGY4ZmJiM2NkZTM4Yzk2YzY4ODQxOWRcIixcImVkZjhmYmIzY2RlMzhjOTZjNjg4NTZhNzgxMGY3Y1wiLFwiZWRmOGZiYmZkM2U2OWViY2RhOGM5NmM2ODg1NmE3ODEwZjdjXCIsXCJlZGY4ZmJiZmQzZTY5ZWJjZGE4Yzk2YzY4YzZiYjE4ODQxOWQ2ZTAxNmJcIixcImY3ZmNmZGUwZWNmNGJmZDNlNjllYmNkYThjOTZjNjhjNmJiMTg4NDE5ZDZlMDE2YlwiLFwiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkODEwZjdjNGQwMDRiXCIpLm1hcChadiksRWc9dWcoa2cpLENnPW5ldyBBcnJheSgzKS5jb25jYXQoXCJlMGYzZGJhOGRkYjU0M2EyY2FcIixcImYwZjllOGJhZTRiYzdiY2NjNDJiOGNiZVwiLFwiZjBmOWU4YmFlNGJjN2JjY2M0NDNhMmNhMDg2OGFjXCIsXCJmMGY5ZThjY2ViYzVhOGRkYjU3YmNjYzQ0M2EyY2EwODY4YWNcIixcImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZVwiLFwiZjdmY2YwZTBmM2RiY2NlYmM1YThkZGI1N2JjY2M0NGViM2QzMmI4Y2JlMDg1ODllXCIsXCJmN2ZjZjBlMGYzZGJjY2ViYzVhOGRkYjU3YmNjYzQ0ZWIzZDMyYjhjYmUwODY4YWMwODQwODFcIikubWFwKFp2KSxQZz11ZyhDZyksemc9bmV3IEFycmF5KDMpLmNvbmNhdChcImZlZThjOGZkYmI4NGUzNGEzM1wiLFwiZmVmMGQ5ZmRjYzhhZmM4ZDU5ZDczMDFmXCIsXCJmZWYwZDlmZGNjOGFmYzhkNTllMzRhMzNiMzAwMDBcIixcImZlZjBkOWZkZDQ5ZWZkYmI4NGZjOGQ1OWUzNGEzM2IzMDAwMFwiLFwiZmVmMGQ5ZmRkNDllZmRiYjg0ZmM4ZDU5ZWY2NTQ4ZDczMDFmOTkwMDAwXCIsXCJmZmY3ZWNmZWU4YzhmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDBcIixcImZmZjdlY2ZlZThjOGZkZDQ5ZWZkYmI4NGZjOGQ1OWVmNjU0OGQ3MzAxZmIzMDAwMDdmMDAwMFwiKS5tYXAoWnYpLFJnPXVnKHpnKSxEZz1uZXcgQXJyYXkoMykuY29uY2F0KFwiZWNlMmYwYTZiZGRiMWM5MDk5XCIsXCJmNmVmZjdiZGM5ZTE2N2E5Y2YwMjgxOGFcIixcImY2ZWZmN2JkYzllMTY3YTljZjFjOTA5OTAxNmM1OVwiLFwiZjZlZmY3ZDBkMWU2YTZiZGRiNjdhOWNmMWM5MDk5MDE2YzU5XCIsXCJmNmVmZjdkMGQxZTZhNmJkZGI2N2E5Y2YzNjkwYzAwMjgxOGEwMTY0NTBcIixcImZmZjdmYmVjZTJmMGQwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNjQ1MFwiLFwiZmZmN2ZiZWNlMmYwZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2YzU5MDE0NjM2XCIpLm1hcChadikscWc9dWcoRGcpLExnPW5ldyBBcnJheSgzKS5jb25jYXQoXCJlY2U3ZjJhNmJkZGIyYjhjYmVcIixcImYxZWVmNmJkYzllMTc0YTljZjA1NzBiMFwiLFwiZjFlZWY2YmRjOWUxNzRhOWNmMmI4Y2JlMDQ1YThkXCIsXCJmMWVlZjZkMGQxZTZhNmJkZGI3NGE5Y2YyYjhjYmUwNDVhOGRcIixcImYxZWVmNmQwZDFlNmE2YmRkYjc0YTljZjM2OTBjMDA1NzBiMDAzNGU3YlwiLFwiZmZmN2ZiZWNlN2YyZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDM0ZTdiXCIsXCJmZmY3ZmJlY2U3ZjJkMGQxZTZhNmJkZGI3NGE5Y2YzNjkwYzAwNTcwYjAwNDVhOGQwMjM4NThcIikubWFwKFp2KSxVZz11ZyhMZyksT2c9bmV3IEFycmF5KDMpLmNvbmNhdChcImU3ZTFlZmM5OTRjN2RkMWM3N1wiLFwiZjFlZWY2ZDdiNWQ4ZGY2NWIwY2UxMjU2XCIsXCJmMWVlZjZkN2I1ZDhkZjY1YjBkZDFjNzc5ODAwNDNcIixcImYxZWVmNmQ0YjlkYWM5OTRjN2RmNjViMGRkMWM3Nzk4MDA0M1wiLFwiZjFlZWY2ZDRiOWRhYzk5NGM3ZGY2NWIwZTcyOThhY2UxMjU2OTEwMDNmXCIsXCJmN2Y0ZjllN2UxZWZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5MTAwM2ZcIixcImY3ZjRmOWU3ZTFlZmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1Njk4MDA0MzY3MDAxZlwiKS5tYXAoWnYpLEJnPXVnKE9nKSxGZz1uZXcgQXJyYXkoMykuY29uY2F0KFwiZmRlMGRkZmE5ZmI1YzUxYjhhXCIsXCJmZWViZTJmYmI0YjlmNzY4YTFhZTAxN2VcIixcImZlZWJlMmZiYjRiOWY3NjhhMWM1MWI4YTdhMDE3N1wiLFwiZmVlYmUyZmNjNWMwZmE5ZmI1Zjc2OGExYzUxYjhhN2EwMTc3XCIsXCJmZWViZTJmY2M1YzBmYTlmYjVmNzY4YTFkZDM0OTdhZTAxN2U3YTAxNzdcIixcImZmZjdmM2ZkZTBkZGZjYzVjMGZhOWZiNWY3NjhhMWRkMzQ5N2FlMDE3ZTdhMDE3N1wiLFwiZmZmN2YzZmRlMGRkZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3NDkwMDZhXCIpLm1hcChadiksWWc9dWcoRmcpLElnPW5ldyBBcnJheSgzKS5jb25jYXQoXCJlZGY4YjE3ZmNkYmIyYzdmYjhcIixcImZmZmZjY2ExZGFiNDQxYjZjNDIyNWVhOFwiLFwiZmZmZmNjYTFkYWI0NDFiNmM0MmM3ZmI4MjUzNDk0XCIsXCJmZmZmY2NjN2U5YjQ3ZmNkYmI0MWI2YzQyYzdmYjgyNTM0OTRcIixcImZmZmZjY2M3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODBjMmM4NFwiLFwiZmZmZmQ5ZWRmOGIxYzdlOWI0N2ZjZGJiNDFiNmM0MWQ5MWMwMjI1ZWE4MGMyYzg0XCIsXCJmZmZmZDllZGY4YjFjN2U5YjQ3ZmNkYmI0MWI2YzQxZDkxYzAyMjVlYTgyNTM0OTQwODFkNThcIikubWFwKFp2KSxIZz11ZyhJZyksamc9bmV3IEFycmF5KDMpLmNvbmNhdChcImY3ZmNiOWFkZGQ4ZTMxYTM1NFwiLFwiZmZmZmNjYzJlNjk5NzhjNjc5MjM4NDQzXCIsXCJmZmZmY2NjMmU2OTk3OGM2NzkzMWEzNTQwMDY4MzdcIixcImZmZmZjY2Q5ZjBhM2FkZGQ4ZTc4YzY3OTMxYTM1NDAwNjgzN1wiLFwiZmZmZmNjZDlmMGEzYWRkZDhlNzhjNjc5NDFhYjVkMjM4NDQzMDA1YTMyXCIsXCJmZmZmZTVmN2ZjYjlkOWYwYTNhZGRkOGU3OGM2Nzk0MWFiNWQyMzg0NDMwMDVhMzJcIixcImZmZmZlNWY3ZmNiOWQ5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNjgzNzAwNDUyOVwiKS5tYXAoWnYpLFhnPXVnKGpnKSxWZz1uZXcgQXJyYXkoMykuY29uY2F0KFwiZmZmN2JjZmVjNDRmZDk1ZjBlXCIsXCJmZmZmZDRmZWQ5OGVmZTk5MjljYzRjMDJcIixcImZmZmZkNGZlZDk4ZWZlOTkyOWQ5NWYwZTk5MzQwNFwiLFwiZmZmZmQ0ZmVlMzkxZmVjNDRmZmU5OTI5ZDk1ZjBlOTkzNDA0XCIsXCJmZmZmZDRmZWUzOTFmZWM0NGZmZTk5MjllYzcwMTRjYzRjMDI4YzJkMDRcIixcImZmZmZlNWZmZjdiY2ZlZTM5MWZlYzQ0ZmZlOTkyOWVjNzAxNGNjNGMwMjhjMmQwNFwiLFwiZmZmZmU1ZmZmN2JjZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOTkzNDA0NjYyNTA2XCIpLm1hcChadiksR2c9dWcoVmcpLCRnPW5ldyBBcnJheSgzKS5jb25jYXQoXCJmZmVkYTBmZWIyNGNmMDNiMjBcIixcImZmZmZiMmZlY2M1Y2ZkOGQzY2UzMWExY1wiLFwiZmZmZmIyZmVjYzVjZmQ4ZDNjZjAzYjIwYmQwMDI2XCIsXCJmZmZmYjJmZWQ5NzZmZWIyNGNmZDhkM2NmMDNiMjBiZDAwMjZcIixcImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNlwiLFwiZmZmZmNjZmZlZGEwZmVkOTc2ZmViMjRjZmQ4ZDNjZmM0ZTJhZTMxYTFjYjEwMDI2XCIsXCJmZmZmY2NmZmVkYTBmZWQ5NzZmZWIyNGNmZDhkM2NmYzRlMmFlMzFhMWNiZDAwMjY4MDAwMjZcIikubWFwKFp2KSxXZz11ZygkZyksWmc9bmV3IEFycmF5KDMpLmNvbmNhdChcImRlZWJmNzllY2FlMTMxODJiZFwiLFwiZWZmM2ZmYmRkN2U3NmJhZWQ2MjE3MWI1XCIsXCJlZmYzZmZiZGQ3ZTc2YmFlZDYzMTgyYmQwODUxOWNcIixcImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjMxODJiZDA4NTE5Y1wiLFwiZWZmM2ZmYzZkYmVmOWVjYWUxNmJhZWQ2NDI5MmM2MjE3MWI1MDg0NTk0XCIsXCJmN2ZiZmZkZWViZjdjNmRiZWY5ZWNhZTE2YmFlZDY0MjkyYzYyMTcxYjUwODQ1OTRcIixcImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NTE5YzA4MzA2YlwiKS5tYXAoWnYpLFFnPXVnKFpnKSxLZz1uZXcgQXJyYXkoMykuY29uY2F0KFwiZTVmNWUwYTFkOTliMzFhMzU0XCIsXCJlZGY4ZTliYWU0YjM3NGM0NzYyMzhiNDVcIixcImVkZjhlOWJhZTRiMzc0YzQ3NjMxYTM1NDAwNmQyY1wiLFwiZWRmOGU5YzdlOWMwYTFkOTliNzRjNDc2MzFhMzU0MDA2ZDJjXCIsXCJlZGY4ZTljN2U5YzBhMWQ5OWI3NGM0NzY0MWFiNWQyMzhiNDUwMDVhMzJcIixcImY3ZmNmNWU1ZjVlMGM3ZTljMGExZDk5Yjc0YzQ3NjQxYWI1ZDIzOGI0NTAwNWEzMlwiLFwiZjdmY2Y1ZTVmNWUwYzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA2ZDJjMDA0NDFiXCIpLm1hcChadiksSmc9dWcoS2cpLHR5PW5ldyBBcnJheSgzKS5jb25jYXQoXCJmMGYwZjBiZGJkYmQ2MzYzNjNcIixcImY3ZjdmN2NjY2NjYzk2OTY5NjUyNTI1MlwiLFwiZjdmN2Y3Y2NjY2NjOTY5Njk2NjM2MzYzMjUyNTI1XCIsXCJmN2Y3ZjdkOWQ5ZDliZGJkYmQ5Njk2OTY2MzYzNjMyNTI1MjVcIixcImY3ZjdmN2Q5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNVwiLFwiZmZmZmZmZjBmMGYwZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1XCIsXCJmZmZmZmZmMGYwZjBkOWQ5ZDliZGJkYmQ5Njk2OTY3MzczNzM1MjUyNTIyNTI1MjUwMDAwMDBcIikubWFwKFp2KSxueT11Zyh0eSksZXk9bmV3IEFycmF5KDMpLmNvbmNhdChcImVmZWRmNWJjYmRkYzc1NmJiMVwiLFwiZjJmMGY3Y2JjOWUyOWU5YWM4NmE1MWEzXCIsXCJmMmYwZjdjYmM5ZTI5ZTlhYzg3NTZiYjE1NDI3OGZcIixcImYyZjBmN2RhZGFlYmJjYmRkYzllOWFjODc1NmJiMTU0Mjc4ZlwiLFwiZjJmMGY3ZGFkYWViYmNiZGRjOWU5YWM4ODA3ZGJhNmE1MWEzNGExNDg2XCIsXCJmY2ZiZmRlZmVkZjVkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODZcIixcImZjZmJmZGVmZWRmNWRhZGFlYmJjYmRkYzllOWFjODgwN2RiYTZhNTFhMzU0Mjc4ZjNmMDA3ZFwiKS5tYXAoWnYpLHJ5PXVnKGV5KSxpeT1uZXcgQXJyYXkoMykuY29uY2F0KFwiZmVlMGQyZmM5MjcyZGUyZDI2XCIsXCJmZWU1ZDlmY2FlOTFmYjZhNGFjYjE4MWRcIixcImZlZTVkOWZjYWU5MWZiNmE0YWRlMmQyNmE1MGYxNVwiLFwiZmVlNWQ5ZmNiYmExZmM5MjcyZmI2YTRhZGUyZDI2YTUwZjE1XCIsXCJmZWU1ZDlmY2JiYTFmYzkyNzJmYjZhNGFlZjNiMmNjYjE4MWQ5OTAwMGRcIixcImZmZjVmMGZlZTBkMmZjYmJhMWZjOTI3MmZiNmE0YWVmM2IyY2NiMTgxZDk5MDAwZFwiLFwiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkYTUwZjE1NjcwMDBkXCIpLm1hcChadiksb3k9dWcoaXkpLGF5PW5ldyBBcnJheSgzKS5jb25jYXQoXCJmZWU2Y2VmZGFlNmJlNjU1MGRcIixcImZlZWRkZWZkYmU4NWZkOGQzY2Q5NDcwMVwiLFwiZmVlZGRlZmRiZTg1ZmQ4ZDNjZTY1NTBkYTYzNjAzXCIsXCJmZWVkZGVmZGQwYTJmZGFlNmJmZDhkM2NlNjU1MGRhNjM2MDNcIixcImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNFwiLFwiZmZmNWViZmVlNmNlZmRkMGEyZmRhZTZiZmQ4ZDNjZjE2OTEzZDk0ODAxOGMyZDA0XCIsXCJmZmY1ZWJmZWU2Y2VmZGQwYTJmZGFlNmJmZDhkM2NmMTY5MTNkOTQ4MDFhNjM2MDM3ZjI3MDRcIikubWFwKFp2KSx1eT11ZyhheSk7dmFyIGN5PVFlKGVlKDMwMCwuNSwwKSxlZSgtMjQwLC41LDEpKSxmeT1RZShlZSgtMTAwLC43NSwuMzUpLGVlKDgwLDEuNSwuOCkpLHN5PVFlKGVlKDI2MCwuNzUsLjM1KSxlZSg4MCwxLjUsLjgpKSxseT1lZSgpO3ZhciBoeT1fbigpLGR5PU1hdGguUEkvMyxweT0yKk1hdGguUEkvMztmdW5jdGlvbiB2eSh0KXt2YXIgbj10Lmxlbmd0aDtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIHRbTWF0aC5tYXgoMCxNYXRoLm1pbihuLTEsTWF0aC5mbG9vcihlKm4pKSldfX12YXIgZ3k9dnkoWnYoXCI0NDAxNTQ0NDAyNTY0NTA0NTc0NTA1NTk0NjA3NWE0NjA4NWM0NjBhNWQ0NjBiNWU0NzBkNjA0NzBlNjE0NzEwNjM0NzExNjQ0NzEzNjU0ODE0Njc0ODE2Njg0ODE3Njk0ODE4NmE0ODFhNmM0ODFiNmQ0ODFjNmU0ODFkNmY0ODFmNzA0ODIwNzE0ODIxNzM0ODIzNzQ0ODI0NzU0ODI1NzY0ODI2Nzc0ODI4Nzg0ODI5Nzk0NzJhN2E0NzJjN2E0NzJkN2I0NzJlN2M0NzJmN2Q0NjMwN2U0NjMyN2U0NjMzN2Y0NjM0ODA0NTM1ODE0NTM3ODE0NTM4ODI0NDM5ODM0NDNhODM0NDNiODQ0MzNkODQ0MzNlODU0MjNmODU0MjQwODY0MjQxODY0MTQyODc0MTQ0ODc0MDQ1ODg0MDQ2ODgzZjQ3ODgzZjQ4ODkzZTQ5ODkzZTRhODkzZTRjOGEzZDRkOGEzZDRlOGEzYzRmOGEzYzUwOGIzYjUxOGIzYjUyOGIzYTUzOGIzYTU0OGMzOTU1OGMzOTU2OGMzODU4OGMzODU5OGMzNzVhOGMzNzViOGQzNjVjOGQzNjVkOGQzNTVlOGQzNTVmOGQzNDYwOGQzNDYxOGQzMzYyOGQzMzYzOGQzMjY0OGUzMjY1OGUzMTY2OGUzMTY3OGUzMTY4OGUzMDY5OGUzMDZhOGUyZjZiOGUyZjZjOGUyZTZkOGUyZTZlOGUyZTZmOGUyZDcwOGUyZDcxOGUyYzcxOGUyYzcyOGUyYzczOGUyYjc0OGUyYjc1OGUyYTc2OGUyYTc3OGUyYTc4OGUyOTc5OGUyOTdhOGUyOTdiOGUyODdjOGUyODdkOGUyNzdlOGUyNzdmOGUyNzgwOGUyNjgxOGUyNjgyOGUyNjgyOGUyNTgzOGUyNTg0OGUyNTg1OGUyNDg2OGUyNDg3OGUyMzg4OGUyMzg5OGUyMzhhOGQyMjhiOGQyMjhjOGQyMjhkOGQyMThlOGQyMThmOGQyMTkwOGQyMTkxOGMyMDkyOGMyMDkyOGMyMDkzOGMxZjk0OGMxZjk1OGIxZjk2OGIxZjk3OGIxZjk4OGIxZjk5OGExZjlhOGExZTliOGExZTljODkxZTlkODkxZjllODkxZjlmODgxZmEwODgxZmExODgxZmExODcxZmEyODcyMGEzODYyMGE0ODYyMWE1ODUyMWE2ODUyMmE3ODUyMmE4ODQyM2E5ODMyNGFhODMyNWFiODIyNWFjODIyNmFkODEyN2FkODEyOGFlODAyOWFmN2YyYWIwN2YyY2IxN2UyZGIyN2QyZWIzN2MyZmI0N2MzMWI1N2IzMmI2N2EzNGI2NzkzNWI3NzkzN2I4NzgzOGI5NzczYWJhNzYzYmJiNzUzZGJjNzQzZmJjNzM0MGJkNzI0MmJlNzE0NGJmNzA0NmMwNmY0OGMxNmU0YWMxNmQ0Y2MyNmM0ZWMzNmI1MGM0NmE1MmM1Njk1NGM1Njg1NmM2Njc1OGM3NjU1YWM4NjQ1Y2M4NjM1ZWM5NjI2MGNhNjA2M2NiNWY2NWNiNWU2N2NjNWM2OWNkNWI2Y2NkNWE2ZWNlNTg3MGNmNTc3M2QwNTY3NWQwNTQ3N2QxNTM3YWQxNTE3Y2QyNTA3ZmQzNGU4MWQzNGQ4NGQ0NGI4NmQ1NDk4OWQ1NDg4YmQ2NDY4ZWQ2NDU5MGQ3NDM5M2Q3NDE5NWQ4NDA5OGQ4M2U5YmQ5M2M5ZGQ5M2JhMGRhMzlhMmRhMzdhNWRiMzZhOGRiMzRhYWRjMzJhZGRjMzBiMGRkMmZiMmRkMmRiNWRlMmJiOGRlMjliYWRlMjhiZGRmMjZjMGRmMjVjMmRmMjNjNWUwMjFjOGUwMjBjYWUxMWZjZGUxMWRkMGUxMWNkMmUyMWJkNWUyMWFkOGUyMTlkYWUzMTlkZGUzMThkZmUzMThlMmU0MThlNWU0MTllN2U0MTllYWU1MWFlY2U1MWJlZmU1MWNmMWU1MWRmNGU2MWVmNmU2MjBmOGU2MjFmYmU3MjNmZGU3MjVcIikpLHl5PXZ5KFp2KFwiMDAwMDA0MDEwMDA1MDEwMTA2MDEwMTA4MDIwMTA5MDIwMjBiMDIwMjBkMDMwMzBmMDMwMzEyMDQwNDE0MDUwNDE2MDYwNTE4MDYwNTFhMDcwNjFjMDgwNzFlMDkwNzIwMGEwODIyMGIwOTI0MGMwOTI2MGQwYTI5MGUwYjJiMTAwYjJkMTEwYzJmMTIwZDMxMTMwZDM0MTQwZTM2MTUwZTM4MTYwZjNiMTgwZjNkMTkxMDNmMWExMDQyMWMxMDQ0MWQxMTQ3MWUxMTQ5MjAxMTRiMjExMTRlMjIxMTUwMjQxMjUzMjUxMjU1MjcxMjU4MjkxMTVhMmExMTVjMmMxMTVmMmQxMTYxMmYxMTYzMzExMTY1MzMxMDY3MzQxMDY5MzYxMDZiMzgxMDZjMzkwZjZlM2IwZjcwM2QwZjcxM2YwZjcyNDAwZjc0NDIwZjc1NDQwZjc2NDUxMDc3NDcxMDc4NDkxMDc4NGExMDc5NGMxMTdhNGUxMTdiNGYxMjdiNTExMjdjNTIxMzdjNTQxMzdkNTYxNDdkNTcxNTdlNTkxNTdlNWExNjdlNWMxNjdmNWQxNzdmNWYxODdmNjAxODgwNjIxOTgwNjQxYTgwNjUxYTgwNjcxYjgwNjgxYzgxNmExYzgxNmIxZDgxNmQxZDgxNmUxZTgxNzAxZjgxNzIxZjgxNzMyMDgxNzUyMTgxNzYyMTgxNzgyMjgxNzkyMjgyN2IyMzgyN2MyMzgyN2UyNDgyODAyNTgyODEyNTgxODMyNjgxODQyNjgxODYyNzgxODgyNzgxODkyODgxOGIyOTgxOGMyOTgxOGUyYTgxOTAyYTgxOTEyYjgxOTMyYjgwOTQyYzgwOTYyYzgwOTgyZDgwOTkyZDgwOWIyZTdmOWMyZTdmOWUyZjdmYTAyZjdmYTEzMDdlYTMzMDdlYTUzMTdlYTYzMTdkYTgzMjdkYWEzMzdkYWIzMzdjYWQzNDdjYWUzNDdiYjAzNTdiYjIzNTdiYjMzNjdhYjUzNjdhYjczNzc5YjgzNzc5YmEzODc4YmMzOTc4YmQzOTc3YmYzYTc3YzAzYTc2YzIzYjc1YzQzYzc1YzUzYzc0YzczZDczYzgzZTczY2EzZTcyY2MzZjcxY2Q0MDcxY2Y0MDcwZDA0MTZmZDI0MjZmZDM0MzZlZDU0NDZkZDY0NTZjZDg0NTZjZDk0NjZiZGI0NzZhZGM0ODY5ZGU0OTY4ZGY0YTY4ZTA0YzY3ZTI0ZDY2ZTM0ZTY1ZTQ0ZjY0ZTU1MDY0ZTc1MjYzZTg1MzYyZTk1NDYyZWE1NjYxZWI1NzYwZWM1ODYwZWQ1YTVmZWU1YjVlZWY1ZDVlZjA1ZjVlZjE2MDVkZjI2MjVkZjI2NDVjZjM2NTVjZjQ2NzVjZjQ2OTVjZjU2YjVjZjY2YzVjZjY2ZTVjZjc3MDVjZjc3MjVjZjg3NDVjZjg3NjVjZjk3ODVkZjk3OTVkZjk3YjVkZmE3ZDVlZmE3ZjVlZmE4MTVmZmI4MzVmZmI4NTYwZmI4NzYxZmM4OTYxZmM4YTYyZmM4YzYzZmM4ZTY0ZmM5MDY1ZmQ5MjY2ZmQ5NDY3ZmQ5NjY4ZmQ5ODY5ZmQ5YTZhZmQ5YjZiZmU5ZDZjZmU5ZjZkZmVhMTZlZmVhMzZmZmVhNTcxZmVhNzcyZmVhOTczZmVhYTc0ZmVhYzc2ZmVhZTc3ZmViMDc4ZmViMjdhZmViNDdiZmViNjdjZmViNzdlZmViOTdmZmViYjgxZmViZDgyZmViZjg0ZmVjMTg1ZmVjMjg3ZmVjNDg4ZmVjNjhhZmVjODhjZmVjYThkZmVjYzhmZmVjZDkwZmVjZjkyZmVkMTk0ZmVkMzk1ZmVkNTk3ZmVkNzk5ZmVkODlhZmRkYTljZmRkYzllZmRkZWEwZmRlMGExZmRlMmEzZmRlM2E1ZmRlNWE3ZmRlN2E5ZmRlOWFhZmRlYmFjZmNlY2FlZmNlZWIwZmNmMGIyZmNmMmI0ZmNmNGI2ZmNmNmI4ZmNmN2I5ZmNmOWJiZmNmYmJkZmNmZGJmXCIpKSxfeT12eShadihcIjAwMDAwNDAxMDAwNTAxMDEwNjAxMDEwODAyMDEwYTAyMDIwYzAyMDIwZTAzMDIxMDA0MDMxMjA0MDMxNDA1MDQxNzA2MDQxOTA3MDUxYjA4MDUxZDA5MDYxZjBhMDcyMjBiMDcyNDBjMDgyNjBkMDgyOTBlMDkyYjEwMDkyZDExMGEzMDEyMGEzMjE0MGIzNDE1MGIzNzE2MGIzOTE4MGMzYzE5MGMzZTFiMGM0MTFjMGM0MzFlMGM0NTFmMGM0ODIxMGM0YTIzMGM0YzI0MGM0ZjI2MGM1MTI4MGI1MzI5MGI1NTJiMGI1NzJkMGI1OTJmMGE1YjMxMGE1YzMyMGE1ZTM0MGE1ZjM2MDk2MTM4MDk2MjM5MDk2MzNiMDk2NDNkMDk2NTNlMDk2NjQwMGE2NzQyMGE2ODQ0MGE2ODQ1MGE2OTQ3MGI2YTQ5MGI2YTRhMGM2YjRjMGM2YjRkMGQ2YzRmMGQ2YzUxMGU2YzUyMGU2ZDU0MGY2ZDU1MGY2ZDU3MTA2ZTU5MTA2ZTVhMTE2ZTVjMTI2ZTVkMTI2ZTVmMTM2ZTYxMTM2ZTYyMTQ2ZTY0MTU2ZTY1MTU2ZTY3MTY2ZTY5MTY2ZTZhMTc2ZTZjMTg2ZTZkMTg2ZTZmMTk2ZTcxMTk2ZTcyMWE2ZTc0MWE2ZTc1MWI2ZTc3MWM2ZDc4MWM2ZDdhMWQ2ZDdjMWQ2ZDdkMWU2ZDdmMWU2YzgwMWY2YzgyMjA2Yzg0MjA2Yjg1MjE2Yjg3MjE2Yjg4MjI2YThhMjI2YThjMjM2OThkMjM2OThmMjQ2OTkwMjU2ODkyMjU2ODkzMjY2Nzk1MjY2Nzk3Mjc2Njk4Mjc2NjlhMjg2NTliMjk2NDlkMjk2NDlmMmE2M2EwMmE2M2EyMmI2MmEzMmM2MWE1MmM2MGE2MmQ2MGE4MmU1ZmE5MmU1ZWFiMmY1ZWFkMzA1ZGFlMzA1Y2IwMzE1YmIxMzI1YWIzMzI1YWI0MzM1OWI2MzQ1OGI3MzU1N2I5MzU1NmJhMzY1NWJjMzc1NGJkMzg1M2JmMzk1MmMwM2E1MWMxM2E1MGMzM2I0ZmM0M2M0ZWM2M2Q0ZGM3M2U0Y2M4M2Y0YmNhNDA0YWNiNDE0OWNjNDI0OGNlNDM0N2NmNDQ0NmQwNDU0NWQyNDY0NGQzNDc0M2Q0NDg0MmQ1NGE0MWQ3NGIzZmQ4NGMzZWQ5NGQzZGRhNGUzY2RiNTAzYmRkNTEzYWRlNTIzOGRmNTMzN2UwNTUzNmUxNTYzNWUyNTczNGUzNTkzM2U0NWEzMWU1NWMzMGU2NWQyZmU3NWUyZWU4NjAyZGU5NjEyYmVhNjMyYWViNjQyOWViNjYyOGVjNjcyNmVkNjkyNWVlNmEyNGVmNmMyM2VmNmUyMWYwNmYyMGYxNzExZmYxNzMxZGYyNzQxY2YzNzYxYmYzNzgxOWY0NzkxOGY1N2IxN2Y1N2QxNWY2N2UxNGY2ODAxM2Y3ODIxMmY3ODQxMGY4ODUwZmY4ODcwZWY4ODkwY2Y5OGIwYmY5OGMwYWY5OGUwOWZhOTAwOGZhOTIwN2ZhOTQwN2ZiOTYwNmZiOTcwNmZiOTkwNmZiOWIwNmZiOWQwN2ZjOWYwN2ZjYTEwOGZjYTMwOWZjYTUwYWZjYTYwY2ZjYTgwZGZjYWEwZmZjYWMxMWZjYWUxMmZjYjAxNGZjYjIxNmZjYjQxOGZiYjYxYWZiYjgxZGZiYmExZmZiYmMyMWZiYmUyM2ZhYzAyNmZhYzIyOGZhYzQyYWZhYzYyZGY5YzcyZmY5YzkzMmY5Y2IzNWY4Y2QzN2Y4Y2YzYWY3ZDEzZGY3ZDM0MGY2ZDU0M2Y2ZDc0NmY1ZDk0OWY1ZGI0Y2Y0ZGQ0ZmY0ZGY1M2Y0ZTE1NmYzZTM1YWYzZTU1ZGYyZTY2MWYyZTg2NWYyZWE2OWYxZWM2ZGYxZWQ3MWYxZWY3NWYxZjE3OWYyZjI3ZGYyZjQ4MmYzZjU4NmYzZjY4YWY0Zjg4ZWY1Zjk5MmY2ZmE5NmY4ZmI5YWY5ZmM5ZGZhZmRhMWZjZmZhNFwiKSksYnk9dnkoWnYoXCIwZDA4ODcxMDA3ODgxMzA3ODkxNjA3OGExOTA2OGMxYjA2OGQxZDA2OGUyMDA2OGYyMjA2OTAyNDA2OTEyNjA1OTEyODA1OTIyYTA1OTMyYzA1OTQyZTA1OTUyZjA1OTYzMTA1OTczMzA1OTczNTA0OTgzNzA0OTkzODA0OWEzYTA0OWEzYzA0OWIzZTA0OWMzZjA0OWM0MTA0OWQ0MzAzOWU0NDAzOWU0NjAzOWY0ODAzOWY0OTAzYTA0YjAzYTE0YzAyYTE0ZTAyYTI1MDAyYTI1MTAyYTM1MzAyYTM1NTAyYTQ1NjAxYTQ1ODAxYTQ1OTAxYTU1YjAxYTU1YzAxYTY1ZTAxYTY2MDAxYTY2MTAwYTc2MzAwYTc2NDAwYTc2NjAwYTc2NzAwYTg2OTAwYTg2YTAwYTg2YzAwYTg2ZTAwYTg2ZjAwYTg3MTAwYTg3MjAxYTg3NDAxYTg3NTAxYTg3NzAxYTg3ODAxYTg3YTAyYTg3YjAyYTg3ZDAzYTg3ZTAzYTg4MDA0YTg4MTA0YTc4MzA1YTc4NDA1YTc4NjA2YTY4NzA3YTY4ODA4YTY4YTA5YTU4YjBhYTU4ZDBiYTU4ZTBjYTQ4ZjBkYTQ5MTBlYTM5MjBmYTM5NDEwYTI5NTExYTE5NjEzYTE5ODE0YTA5OTE1OWY5YTE2OWY5YzE3OWU5ZDE4OWQ5ZTE5OWRhMDFhOWNhMTFiOWJhMjFkOWFhMzFlOWFhNTFmOTlhNjIwOThhNzIxOTdhODIyOTZhYTIzOTVhYjI0OTRhYzI2OTRhZDI3OTNhZTI4OTJiMDI5OTFiMTJhOTBiMjJiOGZiMzJjOGViNDJlOGRiNTJmOGNiNjMwOGJiNzMxOGFiODMyODliYTMzODhiYjM0ODhiYzM1ODdiZDM3ODZiZTM4ODViZjM5ODRjMDNhODNjMTNiODJjMjNjODFjMzNkODBjNDNlN2ZjNTQwN2VjNjQxN2RjNzQyN2NjODQzN2JjOTQ0N2FjYTQ1N2FjYjQ2NzljYzQ3NzhjYzQ5NzdjZDRhNzZjZTRiNzVjZjRjNzRkMDRkNzNkMTRlNzJkMjRmNzFkMzUxNzFkNDUyNzBkNTUzNmZkNTU0NmVkNjU1NmRkNzU2NmNkODU3NmJkOTU4NmFkYTVhNmFkYTViNjlkYjVjNjhkYzVkNjdkZDVlNjZkZTVmNjVkZTYxNjRkZjYyNjNlMDYzNjNlMTY0NjJlMjY1NjFlMjY2NjBlMzY4NWZlNDY5NWVlNTZhNWRlNTZiNWRlNjZjNWNlNzZlNWJlNzZmNWFlODcwNTllOTcxNThlOTcyNTdlYTc0NTdlYjc1NTZlYjc2NTVlYzc3NTRlZDc5NTNlZDdhNTJlZTdiNTFlZjdjNTFlZjdlNTBmMDdmNGZmMDgwNGVmMTgxNGRmMTgzNGNmMjg0NGJmMzg1NGJmMzg3NGFmNDg4NDlmNDg5NDhmNThiNDdmNThjNDZmNjhkNDVmNjhmNDRmNzkwNDRmNzkxNDNmNzkzNDJmODk0NDFmODk1NDBmOTk3M2ZmOTk4M2VmOTlhM2VmYTliM2RmYTljM2NmYTllM2JmYjlmM2FmYmExMzlmYmEyMzhmY2EzMzhmY2E1MzdmY2E2MzZmY2E4MzVmY2E5MzRmZGFiMzNmZGFjMzNmZGFlMzJmZGFmMzFmZGIxMzBmZGIyMmZmZGI0MmZmZGI1MmVmZWI3MmRmZWI4MmNmZWJhMmNmZWJiMmJmZWJkMmFmZWJlMmFmZWMwMjlmZGMyMjlmZGMzMjhmZGM1MjdmZGM2MjdmZGM4MjdmZGNhMjZmZGNiMjZmY2NkMjVmY2NlMjVmY2QwMjVmY2QyMjVmYmQzMjRmYmQ1MjRmYmQ3MjRmYWQ4MjRmYWRhMjRmOWRjMjRmOWRkMjVmOGRmMjVmOGUxMjVmN2UyMjVmN2U0MjVmNmU2MjZmNmU4MjZmNWU5MjZmNWViMjdmNGVkMjdmM2VlMjdmM2YwMjdmMmYyMjdmMWY0MjZmMWY1MjVmMGY3MjRmMGY5MjFcIikpO2Z1bmN0aW9uIG15KHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX12YXIgeHk9TWF0aC5hYnMsd3k9TWF0aC5hdGFuMixNeT1NYXRoLmNvcyxOeT1NYXRoLm1heCxUeT1NYXRoLm1pbixBeT1NYXRoLnNpbixTeT1NYXRoLnNxcnQsa3k9MWUtMTIsRXk9TWF0aC5QSSxDeT1FeS8yLFB5PTIqRXk7ZnVuY3Rpb24genkodCl7cmV0dXJuIHQ+PTE/Q3k6dDw9LTE/LUN5Ok1hdGguYXNpbih0KX1mdW5jdGlvbiBSeSh0KXtyZXR1cm4gdC5pbm5lclJhZGl1c31mdW5jdGlvbiBEeSh0KXtyZXR1cm4gdC5vdXRlclJhZGl1c31mdW5jdGlvbiBxeSh0KXtyZXR1cm4gdC5zdGFydEFuZ2xlfWZ1bmN0aW9uIEx5KHQpe3JldHVybiB0LmVuZEFuZ2xlfWZ1bmN0aW9uIFV5KHQpe3JldHVybiB0JiZ0LnBhZEFuZ2xlfWZ1bmN0aW9uIE95KHQsbixlLHIsaSxvLGEpe3ZhciB1PXQtZSxjPW4tcixmPShhP286LW8pL1N5KHUqdStjKmMpLHM9ZipjLGw9LWYqdSxoPXQrcyxkPW4rbCxwPWUrcyx2PXIrbCxnPShoK3ApLzIseT0oZCt2KS8yLF89cC1oLGI9di1kLG09XypfK2IqYix4PWktbyx3PWgqdi1wKmQsTT0oYjwwPy0xOjEpKlN5KE55KDAseCp4Km0tdyp3KSksTj0odypiLV8qTSkvbSxUPSgtdypfLWIqTSkvbSxBPSh3KmIrXypNKS9tLFM9KC13Kl8rYipNKS9tLGs9Ti1nLEU9VC15LEM9QS1nLFA9Uy15O3JldHVybiBrKmsrRSpFPkMqQytQKlAmJihOPUEsVD1TKSx7Y3g6TixjeTpULHgwMTotcyx5MDE6LWwseDExOk4qKGkveC0xKSx5MTE6VCooaS94LTEpfX1mdW5jdGlvbiBCeSh0KXt0aGlzLl9jb250ZXh0PXR9ZnVuY3Rpb24gRnkodCl7cmV0dXJuIG5ldyBCeSh0KX1mdW5jdGlvbiBZeSh0KXtyZXR1cm4gdFswXX1mdW5jdGlvbiBJeSh0KXtyZXR1cm4gdFsxXX1mdW5jdGlvbiBIeSgpe3ZhciB0PVl5LG49SXksZT1teSghMCkscj1udWxsLGk9Rnksbz1udWxsO2Z1bmN0aW9uIGEoYSl7dmFyIHUsYyxmLHM9YS5sZW5ndGgsbD0hMTtmb3IobnVsbD09ciYmKG89aShmPW5vKCkpKSx1PTA7dTw9czsrK3UpISh1PHMmJmUoYz1hW3VdLHUsYSkpPT09bCYmKChsPSFsKT9vLmxpbmVTdGFydCgpOm8ubGluZUVuZCgpKSxsJiZvLnBvaW50KCt0KGMsdSxhKSwrbihjLHUsYSkpO2lmKGYpcmV0dXJuIG89bnVsbCxmK1wiXCJ8fG51bGx9cmV0dXJuIGEueD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP246bXkoK24pLGEpOnR9LGEueT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6bXkoK3QpLGEpOm59LGEuZGVmaW5lZD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6bXkoISF0KSxhKTplfSxhLmN1cnZlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPXQsbnVsbCE9ciYmKG89aShyKSksYSk6aX0sYS5jb250ZXh0PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhudWxsPT10P3I9bz1udWxsOm89aShyPXQpLGEpOnJ9LGF9ZnVuY3Rpb24gankoKXt2YXIgdD1ZeSxuPW51bGwsZT1teSgwKSxyPUl5LGk9bXkoITApLG89bnVsbCxhPUZ5LHU9bnVsbDtmdW5jdGlvbiBjKGMpe3ZhciBmLHMsbCxoLGQscD1jLmxlbmd0aCx2PSExLGc9bmV3IEFycmF5KHApLHk9bmV3IEFycmF5KHApO2ZvcihudWxsPT1vJiYodT1hKGQ9bm8oKSkpLGY9MDtmPD1wOysrZil7aWYoIShmPHAmJmkoaD1jW2ZdLGYsYykpPT09dilpZih2PSF2KXM9Zix1LmFyZWFTdGFydCgpLHUubGluZVN0YXJ0KCk7ZWxzZXtmb3IodS5saW5lRW5kKCksdS5saW5lU3RhcnQoKSxsPWYtMTtsPj1zOy0tbCl1LnBvaW50KGdbbF0seVtsXSk7dS5saW5lRW5kKCksdS5hcmVhRW5kKCl9diYmKGdbZl09K3QoaCxmLGMpLHlbZl09K2UoaCxmLGMpLHUucG9pbnQobj8rbihoLGYsYyk6Z1tmXSxyPytyKGgsZixjKTp5W2ZdKSl9aWYoZClyZXR1cm4gdT1udWxsLGQrXCJcInx8bnVsbH1mdW5jdGlvbiBmKCl7cmV0dXJuIEh5KCkuZGVmaW5lZChpKS5jdXJ2ZShhKS5jb250ZXh0KG8pfXJldHVybiBjLng9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9XCJmdW5jdGlvblwiPT10eXBlb2YgZT9lOm15KCtlKSxuPW51bGwsYyk6dH0sYy54MD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP246bXkoK24pLGMpOnR9LGMueDE9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49bnVsbD09dD9udWxsOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpteSgrdCksYyk6bn0sYy55PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpteSgrdCkscj1udWxsLGMpOmV9LGMueTA9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Om15KCt0KSxjKTplfSxjLnkxPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPW51bGw9PXQ/bnVsbDpcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6bXkoK3QpLGMpOnJ9LGMubGluZVgwPWMubGluZVkwPWZ1bmN0aW9uKCl7cmV0dXJuIGYoKS54KHQpLnkoZSl9LGMubGluZVkxPWZ1bmN0aW9uKCl7cmV0dXJuIGYoKS54KHQpLnkocil9LGMubGluZVgxPWZ1bmN0aW9uKCl7cmV0dXJuIGYoKS54KG4pLnkoZSl9LGMuZGVmaW5lZD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6bXkoISF0KSxjKTppfSxjLmN1cnZlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPXQsbnVsbCE9byYmKHU9YShvKSksYyk6YX0sYy5jb250ZXh0PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhudWxsPT10P289dT1udWxsOnU9YShvPXQpLGMpOm99LGN9ZnVuY3Rpb24gWHkodCxuKXtyZXR1cm4gbjx0Py0xOm4+dD8xOm4+PXQ/MDpOYU59ZnVuY3Rpb24gVnkodCl7cmV0dXJuIHR9QnkucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpeyh0aGlzLl9saW5lfHwwIT09dGhpcy5fbGluZSYmMT09PXRoaXMuX3BvaW50KSYmdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSx0aGlzLl9saW5lPTEtdGhpcy5fbGluZX0scG9pbnQ6ZnVuY3Rpb24odCxuKXtzd2l0Y2godD0rdCxuPStuLHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MSx0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHQsbik6dGhpcy5fY29udGV4dC5tb3ZlVG8odCxuKTticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9MjtkZWZhdWx0OnRoaXMuX2NvbnRleHQubGluZVRvKHQsbil9fX07dmFyIEd5PVd5KEZ5KTtmdW5jdGlvbiAkeSh0KXt0aGlzLl9jdXJ2ZT10fWZ1bmN0aW9uIFd5KHQpe2Z1bmN0aW9uIG4obil7cmV0dXJuIG5ldyAkeSh0KG4pKX1yZXR1cm4gbi5fY3VydmU9dCxufWZ1bmN0aW9uIFp5KHQpe3ZhciBuPXQuY3VydmU7cmV0dXJuIHQuYW5nbGU9dC54LGRlbGV0ZSB0LngsdC5yYWRpdXM9dC55LGRlbGV0ZSB0LnksdC5jdXJ2ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9uKFd5KHQpKTpuKCkuX2N1cnZlfSx0fWZ1bmN0aW9uIFF5KCl7cmV0dXJuIFp5KEh5KCkuY3VydmUoR3kpKX1mdW5jdGlvbiBLeSgpe3ZhciB0PWp5KCkuY3VydmUoR3kpLG49dC5jdXJ2ZSxlPXQubGluZVgwLHI9dC5saW5lWDEsaT10LmxpbmVZMCxvPXQubGluZVkxO3JldHVybiB0LmFuZ2xlPXQueCxkZWxldGUgdC54LHQuc3RhcnRBbmdsZT10LngwLGRlbGV0ZSB0LngwLHQuZW5kQW5nbGU9dC54MSxkZWxldGUgdC54MSx0LnJhZGl1cz10LnksZGVsZXRlIHQueSx0LmlubmVyUmFkaXVzPXQueTAsZGVsZXRlIHQueTAsdC5vdXRlclJhZGl1cz10LnkxLGRlbGV0ZSB0LnkxLHQubGluZVN0YXJ0QW5nbGU9ZnVuY3Rpb24oKXtyZXR1cm4gWnkoZSgpKX0sZGVsZXRlIHQubGluZVgwLHQubGluZUVuZEFuZ2xlPWZ1bmN0aW9uKCl7cmV0dXJuIFp5KHIoKSl9LGRlbGV0ZSB0LmxpbmVYMSx0LmxpbmVJbm5lclJhZGl1cz1mdW5jdGlvbigpe3JldHVybiBaeShpKCkpfSxkZWxldGUgdC5saW5lWTAsdC5saW5lT3V0ZXJSYWRpdXM9ZnVuY3Rpb24oKXtyZXR1cm4gWnkobygpKX0sZGVsZXRlIHQubGluZVkxLHQuY3VydmU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/bihXeSh0KSk6bigpLl9jdXJ2ZX0sdH1mdW5jdGlvbiBKeSh0LG4pe3JldHVyblsobj0rbikqTWF0aC5jb3ModC09TWF0aC5QSS8yKSxuKk1hdGguc2luKHQpXX0keS5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2N1cnZlLmFyZWFTdGFydCgpfSxhcmVhRW5kOmZ1bmN0aW9uKCl7dGhpcy5fY3VydmUuYXJlYUVuZCgpfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9jdXJ2ZS5saW5lU3RhcnQoKX0sbGluZUVuZDpmdW5jdGlvbigpe3RoaXMuX2N1cnZlLmxpbmVFbmQoKX0scG9pbnQ6ZnVuY3Rpb24odCxuKXt0aGlzLl9jdXJ2ZS5wb2ludChuKk1hdGguc2luKHQpLG4qLU1hdGguY29zKHQpKX19O3ZhciB0Xz1BcnJheS5wcm90b3R5cGUuc2xpY2U7ZnVuY3Rpb24gbl8odCl7cmV0dXJuIHQuc291cmNlfWZ1bmN0aW9uIGVfKHQpe3JldHVybiB0LnRhcmdldH1mdW5jdGlvbiByXyh0KXt2YXIgbj1uXyxlPWVfLHI9WXksaT1JeSxvPW51bGw7ZnVuY3Rpb24gYSgpe3ZhciBhLHU9dF8uY2FsbChhcmd1bWVudHMpLGM9bi5hcHBseSh0aGlzLHUpLGY9ZS5hcHBseSh0aGlzLHUpO2lmKG98fChvPWE9bm8oKSksdChvLCtyLmFwcGx5KHRoaXMsKHVbMF09Yyx1KSksK2kuYXBwbHkodGhpcyx1KSwrci5hcHBseSh0aGlzLCh1WzBdPWYsdSkpLCtpLmFwcGx5KHRoaXMsdSkpLGEpcmV0dXJuIG89bnVsbCxhK1wiXCJ8fG51bGx9cmV0dXJuIGEuc291cmNlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPXQsYSk6bn0sYS50YXJnZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9dCxhKTplfSxhLng9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Om15KCt0KSxhKTpyfSxhLnk9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Om15KCt0KSxhKTppfSxhLmNvbnRleHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG89bnVsbD09dD9udWxsOnQsYSk6b30sYX1mdW5jdGlvbiBpXyh0LG4sZSxyLGkpe3QubW92ZVRvKG4sZSksdC5iZXppZXJDdXJ2ZVRvKG49KG4rcikvMixlLG4saSxyLGkpfWZ1bmN0aW9uIG9fKHQsbixlLHIsaSl7dC5tb3ZlVG8obixlKSx0LmJlemllckN1cnZlVG8obixlPShlK2kpLzIscixlLHIsaSl9ZnVuY3Rpb24gYV8odCxuLGUscixpKXt2YXIgbz1KeShuLGUpLGE9SnkobixlPShlK2kpLzIpLHU9SnkocixlKSxjPUp5KHIsaSk7dC5tb3ZlVG8ob1swXSxvWzFdKSx0LmJlemllckN1cnZlVG8oYVswXSxhWzFdLHVbMF0sdVsxXSxjWzBdLGNbMV0pfXZhciB1Xz17ZHJhdzpmdW5jdGlvbih0LG4pe3ZhciBlPU1hdGguc3FydChuL0V5KTt0Lm1vdmVUbyhlLDApLHQuYXJjKDAsMCxlLDAsUHkpfX0sY189e2RyYXc6ZnVuY3Rpb24odCxuKXt2YXIgZT1NYXRoLnNxcnQobi81KS8yO3QubW92ZVRvKC0zKmUsLWUpLHQubGluZVRvKC1lLC1lKSx0LmxpbmVUbygtZSwtMyplKSx0LmxpbmVUbyhlLC0zKmUpLHQubGluZVRvKGUsLWUpLHQubGluZVRvKDMqZSwtZSksdC5saW5lVG8oMyplLGUpLHQubGluZVRvKGUsZSksdC5saW5lVG8oZSwzKmUpLHQubGluZVRvKC1lLDMqZSksdC5saW5lVG8oLWUsZSksdC5saW5lVG8oLTMqZSxlKSx0LmNsb3NlUGF0aCgpfX0sZl89TWF0aC5zcXJ0KDEvMyksc189MipmXyxsXz17ZHJhdzpmdW5jdGlvbih0LG4pe3ZhciBlPU1hdGguc3FydChuL3NfKSxyPWUqZl87dC5tb3ZlVG8oMCwtZSksdC5saW5lVG8ociwwKSx0LmxpbmVUbygwLGUpLHQubGluZVRvKC1yLDApLHQuY2xvc2VQYXRoKCl9fSxoXz1NYXRoLnNpbihFeS8xMCkvTWF0aC5zaW4oNypFeS8xMCksZF89TWF0aC5zaW4oUHkvMTApKmhfLHBfPS1NYXRoLmNvcyhQeS8xMCkqaF8sdl89e2RyYXc6ZnVuY3Rpb24odCxuKXt2YXIgZT1NYXRoLnNxcnQoLjg5MDgxMzA5MTUyOTI4NTIqbikscj1kXyplLGk9cF8qZTt0Lm1vdmVUbygwLC1lKSx0LmxpbmVUbyhyLGkpO2Zvcih2YXIgbz0xO288NTsrK28pe3ZhciBhPVB5Km8vNSx1PU1hdGguY29zKGEpLGM9TWF0aC5zaW4oYSk7dC5saW5lVG8oYyplLC11KmUpLHQubGluZVRvKHUqci1jKmksYypyK3UqaSl9dC5jbG9zZVBhdGgoKX19LGdfPXtkcmF3OmZ1bmN0aW9uKHQsbil7dmFyIGU9TWF0aC5zcXJ0KG4pLHI9LWUvMjt0LnJlY3QocixyLGUsZSl9fSx5Xz1NYXRoLnNxcnQoMyksX189e2RyYXc6ZnVuY3Rpb24odCxuKXt2YXIgZT0tTWF0aC5zcXJ0KG4vKDMqeV8pKTt0Lm1vdmVUbygwLDIqZSksdC5saW5lVG8oLXlfKmUsLWUpLHQubGluZVRvKHlfKmUsLWUpLHQuY2xvc2VQYXRoKCl9fSxiXz1NYXRoLnNxcnQoMykvMixtXz0xL01hdGguc3FydCgxMikseF89MyoobV8vMisxKSx3Xz17ZHJhdzpmdW5jdGlvbih0LG4pe3ZhciBlPU1hdGguc3FydChuL3hfKSxyPWUvMixpPWUqbV8sbz1yLGE9ZSptXytlLHU9LW8sYz1hO3QubW92ZVRvKHIsaSksdC5saW5lVG8obyxhKSx0LmxpbmVUbyh1LGMpLHQubGluZVRvKC0uNSpyLWJfKmksYl8qcistLjUqaSksdC5saW5lVG8oLS41Km8tYl8qYSxiXypvKy0uNSphKSx0LmxpbmVUbygtLjUqdS1iXypjLGJfKnUrLS41KmMpLHQubGluZVRvKC0uNSpyK2JfKmksLS41KmktYl8qciksdC5saW5lVG8oLS41Km8rYl8qYSwtLjUqYS1iXypvKSx0LmxpbmVUbygtLjUqdStiXypjLC0uNSpjLWJfKnUpLHQuY2xvc2VQYXRoKCl9fSxNXz1bdV8sY18sbF8sZ18sdl8sX18sd19dO2Z1bmN0aW9uIE5fKCl7fWZ1bmN0aW9uIFRfKHQsbixlKXt0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oKDIqdC5feDArdC5feDEpLzMsKDIqdC5feTArdC5feTEpLzMsKHQuX3gwKzIqdC5feDEpLzMsKHQuX3kwKzIqdC5feTEpLzMsKHQuX3gwKzQqdC5feDErbikvNiwodC5feTArNCp0Ll95MStlKS82KX1mdW5jdGlvbiBBXyh0KXt0aGlzLl9jb250ZXh0PXR9ZnVuY3Rpb24gU18odCl7dGhpcy5fY29udGV4dD10fWZ1bmN0aW9uIGtfKHQpe3RoaXMuX2NvbnRleHQ9dH1mdW5jdGlvbiBFXyh0LG4pe3RoaXMuX2Jhc2lzPW5ldyBBXyh0KSx0aGlzLl9iZXRhPW59QV8ucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feTA9dGhpcy5feTE9TmFOLHRoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMzpUXyh0aGlzLHRoaXMuX3gxLHRoaXMuX3kxKTtjYXNlIDI6dGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDEsdGhpcy5feTEpfSh0aGlzLl9saW5lfHwwIT09dGhpcy5fbGluZSYmMT09PXRoaXMuX3BvaW50KSYmdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSx0aGlzLl9saW5lPTEtdGhpcy5fbGluZX0scG9pbnQ6ZnVuY3Rpb24odCxuKXtzd2l0Y2godD0rdCxuPStuLHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MSx0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHQsbik6dGhpcy5fY29udGV4dC5tb3ZlVG8odCxuKTticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9MjticmVhaztjYXNlIDI6dGhpcy5fcG9pbnQ9Myx0aGlzLl9jb250ZXh0LmxpbmVUbygoNSp0aGlzLl94MCt0aGlzLl94MSkvNiwoNSp0aGlzLl95MCt0aGlzLl95MSkvNik7ZGVmYXVsdDpUXyh0aGlzLHQsbil9dGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dCx0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT1ufX0sU18ucHJvdG90eXBlPXthcmVhU3RhcnQ6Tl8sYXJlYUVuZDpOXyxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94MD10aGlzLl94MT10aGlzLl94Mj10aGlzLl94Mz10aGlzLl94ND10aGlzLl95MD10aGlzLl95MT10aGlzLl95Mj10aGlzLl95Mz10aGlzLl95ND1OYU4sdGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAxOnRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLHRoaXMuX3kyKSx0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO2JyZWFrO2Nhc2UgMjp0aGlzLl9jb250ZXh0Lm1vdmVUbygodGhpcy5feDIrMip0aGlzLl94MykvMywodGhpcy5feTIrMip0aGlzLl95MykvMyksdGhpcy5fY29udGV4dC5saW5lVG8oKHRoaXMuX3gzKzIqdGhpcy5feDIpLzMsKHRoaXMuX3kzKzIqdGhpcy5feTIpLzMpLHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7YnJlYWs7Y2FzZSAzOnRoaXMucG9pbnQodGhpcy5feDIsdGhpcy5feTIpLHRoaXMucG9pbnQodGhpcy5feDMsdGhpcy5feTMpLHRoaXMucG9pbnQodGhpcy5feDQsdGhpcy5feTQpfX0scG9pbnQ6ZnVuY3Rpb24odCxuKXtzd2l0Y2godD0rdCxuPStuLHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MSx0aGlzLl94Mj10LHRoaXMuX3kyPW47YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTIsdGhpcy5feDM9dCx0aGlzLl95Mz1uO2JyZWFrO2Nhc2UgMjp0aGlzLl9wb2ludD0zLHRoaXMuX3g0PXQsdGhpcy5feTQ9bix0aGlzLl9jb250ZXh0Lm1vdmVUbygodGhpcy5feDArNCp0aGlzLl94MSt0KS82LCh0aGlzLl95MCs0KnRoaXMuX3kxK24pLzYpO2JyZWFrO2RlZmF1bHQ6VF8odGhpcyx0LG4pfXRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXQsdGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9bn19LGtfLnByb3RvdHlwZT17YXJlYVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fbGluZT0wfSxhcmVhRW5kOmZ1bmN0aW9uKCl7dGhpcy5fbGluZT1OYU59LGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3gwPXRoaXMuX3gxPXRoaXMuX3kwPXRoaXMuX3kxPU5hTix0aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7KHRoaXMuX2xpbmV8fDAhPT10aGlzLl9saW5lJiYzPT09dGhpcy5fcG9pbnQpJiZ0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX2xpbmU9MS10aGlzLl9saW5lfSxwb2ludDpmdW5jdGlvbih0LG4pe3N3aXRjaCh0PSt0LG49K24sdGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xO2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yO2JyZWFrO2Nhc2UgMjp0aGlzLl9wb2ludD0zO3ZhciBlPSh0aGlzLl94MCs0KnRoaXMuX3gxK3QpLzYscj0odGhpcy5feTArNCp0aGlzLl95MStuKS82O3RoaXMuX2xpbmU/dGhpcy5fY29udGV4dC5saW5lVG8oZSxyKTp0aGlzLl9jb250ZXh0Lm1vdmVUbyhlLHIpO2JyZWFrO2Nhc2UgMzp0aGlzLl9wb2ludD00O2RlZmF1bHQ6VF8odGhpcyx0LG4pfXRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXQsdGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9bn19LEVfLnByb3RvdHlwZT17bGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feD1bXSx0aGlzLl95PVtdLHRoaXMuX2Jhc2lzLmxpbmVTdGFydCgpfSxsaW5lRW5kOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5feCxuPXRoaXMuX3ksZT10Lmxlbmd0aC0xO2lmKGU+MClmb3IodmFyIHIsaT10WzBdLG89blswXSxhPXRbZV0taSx1PW5bZV0tbyxjPS0xOysrYzw9ZTspcj1jL2UsdGhpcy5fYmFzaXMucG9pbnQodGhpcy5fYmV0YSp0W2NdKygxLXRoaXMuX2JldGEpKihpK3IqYSksdGhpcy5fYmV0YSpuW2NdKygxLXRoaXMuX2JldGEpKihvK3IqdSkpO3RoaXMuX3g9dGhpcy5feT1udWxsLHRoaXMuX2Jhc2lzLmxpbmVFbmQoKX0scG9pbnQ6ZnVuY3Rpb24odCxuKXt0aGlzLl94LnB1c2goK3QpLHRoaXMuX3kucHVzaCgrbil9fTt2YXIgQ189ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQpe3JldHVybiAxPT09bj9uZXcgQV8odCk6bmV3IEVfKHQsbil9cmV0dXJuIGUuYmV0YT1mdW5jdGlvbihuKXtyZXR1cm4gdCgrbil9LGV9KC44NSk7ZnVuY3Rpb24gUF8odCxuLGUpe3QuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyh0Ll94MSt0Ll9rKih0Ll94Mi10Ll94MCksdC5feTErdC5fayoodC5feTItdC5feTApLHQuX3gyK3QuX2sqKHQuX3gxLW4pLHQuX3kyK3QuX2sqKHQuX3kxLWUpLHQuX3gyLHQuX3kyKX1mdW5jdGlvbiB6Xyh0LG4pe3RoaXMuX2NvbnRleHQ9dCx0aGlzLl9rPSgxLW4pLzZ9el8ucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feDI9dGhpcy5feTA9dGhpcy5feTE9dGhpcy5feTI9TmFOLHRoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMjp0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94Mix0aGlzLl95Mik7YnJlYWs7Y2FzZSAzOlBfKHRoaXMsdGhpcy5feDEsdGhpcy5feTEpfSh0aGlzLl9saW5lfHwwIT09dGhpcy5fbGluZSYmMT09PXRoaXMuX3BvaW50KSYmdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSx0aGlzLl9saW5lPTEtdGhpcy5fbGluZX0scG9pbnQ6ZnVuY3Rpb24odCxuKXtzd2l0Y2godD0rdCxuPStuLHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MSx0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHQsbik6dGhpcy5fY29udGV4dC5tb3ZlVG8odCxuKTticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9Mix0aGlzLl94MT10LHRoaXMuX3kxPW47YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTM7ZGVmYXVsdDpQXyh0aGlzLHQsbil9dGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dGhpcy5feDIsdGhpcy5feDI9dCx0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT10aGlzLl95Mix0aGlzLl95Mj1ufX07dmFyIFJfPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gbmV3IHpfKHQsbil9cmV0dXJuIGUudGVuc2lvbj1mdW5jdGlvbihuKXtyZXR1cm4gdCgrbil9LGV9KDApO2Z1bmN0aW9uIERfKHQsbil7dGhpcy5fY29udGV4dD10LHRoaXMuX2s9KDEtbikvNn1EXy5wcm90b3R5cGU9e2FyZWFTdGFydDpOXyxhcmVhRW5kOk5fLGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3gwPXRoaXMuX3gxPXRoaXMuX3gyPXRoaXMuX3gzPXRoaXMuX3g0PXRoaXMuX3g1PXRoaXMuX3kwPXRoaXMuX3kxPXRoaXMuX3kyPXRoaXMuX3kzPXRoaXMuX3k0PXRoaXMuX3k1PU5hTix0aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDE6dGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDMsdGhpcy5feTMpLHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7YnJlYWs7Y2FzZSAyOnRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gzLHRoaXMuX3kzKSx0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO2JyZWFrO2Nhc2UgMzp0aGlzLnBvaW50KHRoaXMuX3gzLHRoaXMuX3kzKSx0aGlzLnBvaW50KHRoaXMuX3g0LHRoaXMuX3k0KSx0aGlzLnBvaW50KHRoaXMuX3g1LHRoaXMuX3k1KX19LHBvaW50OmZ1bmN0aW9uKHQsbil7c3dpdGNoKHQ9K3Qsbj0rbix0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTEsdGhpcy5feDM9dCx0aGlzLl95Mz1uO2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yLHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3g0PXQsdGhpcy5feTQ9bik7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTMsdGhpcy5feDU9dCx0aGlzLl95NT1uO2JyZWFrO2RlZmF1bHQ6UF8odGhpcyx0LG4pfXRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXRoaXMuX3gyLHRoaXMuX3gyPXQsdGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9dGhpcy5feTIsdGhpcy5feTI9bn19O3ZhciBxXz1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIG5ldyBEXyh0LG4pfXJldHVybiBlLnRlbnNpb249ZnVuY3Rpb24obil7cmV0dXJuIHQoK24pfSxlfSgwKTtmdW5jdGlvbiBMXyh0LG4pe3RoaXMuX2NvbnRleHQ9dCx0aGlzLl9rPSgxLW4pLzZ9TF8ucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feDI9dGhpcy5feTA9dGhpcy5feTE9dGhpcy5feTI9TmFOLHRoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXsodGhpcy5fbGluZXx8MCE9PXRoaXMuX2xpbmUmJjM9PT10aGlzLl9wb2ludCkmJnRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksdGhpcy5fbGluZT0xLXRoaXMuX2xpbmV9LHBvaW50OmZ1bmN0aW9uKHQsbil7c3dpdGNoKHQ9K3Qsbj0rbix0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTE7YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTI7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTMsdGhpcy5fbGluZT90aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94Mix0aGlzLl95Mik6dGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDIsdGhpcy5feTIpO2JyZWFrO2Nhc2UgMzp0aGlzLl9wb2ludD00O2RlZmF1bHQ6UF8odGhpcyx0LG4pfXRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXRoaXMuX3gyLHRoaXMuX3gyPXQsdGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9dGhpcy5feTIsdGhpcy5feTI9bn19O3ZhciBVXz1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIG5ldyBMXyh0LG4pfXJldHVybiBlLnRlbnNpb249ZnVuY3Rpb24obil7cmV0dXJuIHQoK24pfSxlfSgwKTtmdW5jdGlvbiBPXyh0LG4sZSl7dmFyIHI9dC5feDEsaT10Ll95MSxvPXQuX3gyLGE9dC5feTI7aWYodC5fbDAxX2E+a3kpe3ZhciB1PTIqdC5fbDAxXzJhKzMqdC5fbDAxX2EqdC5fbDEyX2ErdC5fbDEyXzJhLGM9Myp0Ll9sMDFfYSoodC5fbDAxX2ErdC5fbDEyX2EpO3I9KHIqdS10Ll94MCp0Ll9sMTJfMmErdC5feDIqdC5fbDAxXzJhKS9jLGk9KGkqdS10Ll95MCp0Ll9sMTJfMmErdC5feTIqdC5fbDAxXzJhKS9jfWlmKHQuX2wyM19hPmt5KXt2YXIgZj0yKnQuX2wyM18yYSszKnQuX2wyM19hKnQuX2wxMl9hK3QuX2wxMl8yYSxzPTMqdC5fbDIzX2EqKHQuX2wyM19hK3QuX2wxMl9hKTtvPShvKmYrdC5feDEqdC5fbDIzXzJhLW4qdC5fbDEyXzJhKS9zLGE9KGEqZit0Ll95MSp0Ll9sMjNfMmEtZSp0Ll9sMTJfMmEpL3N9dC5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHIsaSxvLGEsdC5feDIsdC5feTIpfWZ1bmN0aW9uIEJfKHQsbil7dGhpcy5fY29udGV4dD10LHRoaXMuX2FscGhhPW59Ql8ucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feDI9dGhpcy5feTA9dGhpcy5feTE9dGhpcy5feTI9TmFOLHRoaXMuX2wwMV9hPXRoaXMuX2wxMl9hPXRoaXMuX2wyM19hPXRoaXMuX2wwMV8yYT10aGlzLl9sMTJfMmE9dGhpcy5fbDIzXzJhPXRoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMjp0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94Mix0aGlzLl95Mik7YnJlYWs7Y2FzZSAzOnRoaXMucG9pbnQodGhpcy5feDIsdGhpcy5feTIpfSh0aGlzLl9saW5lfHwwIT09dGhpcy5fbGluZSYmMT09PXRoaXMuX3BvaW50KSYmdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSx0aGlzLl9saW5lPTEtdGhpcy5fbGluZX0scG9pbnQ6ZnVuY3Rpb24odCxuKXtpZih0PSt0LG49K24sdGhpcy5fcG9pbnQpe3ZhciBlPXRoaXMuX3gyLXQscj10aGlzLl95Mi1uO3RoaXMuX2wyM19hPU1hdGguc3FydCh0aGlzLl9sMjNfMmE9TWF0aC5wb3coZSplK3Iqcix0aGlzLl9hbHBoYSkpfXN3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTEsdGhpcy5fbGluZT90aGlzLl9jb250ZXh0LmxpbmVUbyh0LG4pOnRoaXMuX2NvbnRleHQubW92ZVRvKHQsbik7YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTI7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTM7ZGVmYXVsdDpPXyh0aGlzLHQsbil9dGhpcy5fbDAxX2E9dGhpcy5fbDEyX2EsdGhpcy5fbDEyX2E9dGhpcy5fbDIzX2EsdGhpcy5fbDAxXzJhPXRoaXMuX2wxMl8yYSx0aGlzLl9sMTJfMmE9dGhpcy5fbDIzXzJhLHRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXRoaXMuX3gyLHRoaXMuX3gyPXQsdGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9dGhpcy5feTIsdGhpcy5feTI9bn19O3ZhciBGXz1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIG4/bmV3IEJfKHQsbik6bmV3IHpfKHQsMCl9cmV0dXJuIGUuYWxwaGE9ZnVuY3Rpb24obil7cmV0dXJuIHQoK24pfSxlfSguNSk7ZnVuY3Rpb24gWV8odCxuKXt0aGlzLl9jb250ZXh0PXQsdGhpcy5fYWxwaGE9bn1ZXy5wcm90b3R5cGU9e2FyZWFTdGFydDpOXyxhcmVhRW5kOk5fLGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3gwPXRoaXMuX3gxPXRoaXMuX3gyPXRoaXMuX3gzPXRoaXMuX3g0PXRoaXMuX3g1PXRoaXMuX3kwPXRoaXMuX3kxPXRoaXMuX3kyPXRoaXMuX3kzPXRoaXMuX3k0PXRoaXMuX3k1PU5hTix0aGlzLl9sMDFfYT10aGlzLl9sMTJfYT10aGlzLl9sMjNfYT10aGlzLl9sMDFfMmE9dGhpcy5fbDEyXzJhPXRoaXMuX2wyM18yYT10aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDE6dGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDMsdGhpcy5feTMpLHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7YnJlYWs7Y2FzZSAyOnRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gzLHRoaXMuX3kzKSx0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO2JyZWFrO2Nhc2UgMzp0aGlzLnBvaW50KHRoaXMuX3gzLHRoaXMuX3kzKSx0aGlzLnBvaW50KHRoaXMuX3g0LHRoaXMuX3k0KSx0aGlzLnBvaW50KHRoaXMuX3g1LHRoaXMuX3k1KX19LHBvaW50OmZ1bmN0aW9uKHQsbil7aWYodD0rdCxuPStuLHRoaXMuX3BvaW50KXt2YXIgZT10aGlzLl94Mi10LHI9dGhpcy5feTItbjt0aGlzLl9sMjNfYT1NYXRoLnNxcnQodGhpcy5fbDIzXzJhPU1hdGgucG93KGUqZStyKnIsdGhpcy5fYWxwaGEpKX1zd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xLHRoaXMuX3gzPXQsdGhpcy5feTM9bjticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9Mix0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94ND10LHRoaXMuX3k0PW4pO2JyZWFrO2Nhc2UgMjp0aGlzLl9wb2ludD0zLHRoaXMuX3g1PXQsdGhpcy5feTU9bjticmVhaztkZWZhdWx0Ok9fKHRoaXMsdCxuKX10aGlzLl9sMDFfYT10aGlzLl9sMTJfYSx0aGlzLl9sMTJfYT10aGlzLl9sMjNfYSx0aGlzLl9sMDFfMmE9dGhpcy5fbDEyXzJhLHRoaXMuX2wxMl8yYT10aGlzLl9sMjNfMmEsdGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dGhpcy5feDIsdGhpcy5feDI9dCx0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT10aGlzLl95Mix0aGlzLl95Mj1ufX07dmFyIElfPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gbj9uZXcgWV8odCxuKTpuZXcgRF8odCwwKX1yZXR1cm4gZS5hbHBoYT1mdW5jdGlvbihuKXtyZXR1cm4gdCgrbil9LGV9KC41KTtmdW5jdGlvbiBIXyh0LG4pe3RoaXMuX2NvbnRleHQ9dCx0aGlzLl9hbHBoYT1ufUhfLnByb3RvdHlwZT17YXJlYVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fbGluZT0wfSxhcmVhRW5kOmZ1bmN0aW9uKCl7dGhpcy5fbGluZT1OYU59LGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3gwPXRoaXMuX3gxPXRoaXMuX3gyPXRoaXMuX3kwPXRoaXMuX3kxPXRoaXMuX3kyPU5hTix0aGlzLl9sMDFfYT10aGlzLl9sMTJfYT10aGlzLl9sMjNfYT10aGlzLl9sMDFfMmE9dGhpcy5fbDEyXzJhPXRoaXMuX2wyM18yYT10aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7KHRoaXMuX2xpbmV8fDAhPT10aGlzLl9saW5lJiYzPT09dGhpcy5fcG9pbnQpJiZ0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX2xpbmU9MS10aGlzLl9saW5lfSxwb2ludDpmdW5jdGlvbih0LG4pe2lmKHQ9K3Qsbj0rbix0aGlzLl9wb2ludCl7dmFyIGU9dGhpcy5feDItdCxyPXRoaXMuX3kyLW47dGhpcy5fbDIzX2E9TWF0aC5zcXJ0KHRoaXMuX2wyM18yYT1NYXRoLnBvdyhlKmUrcipyLHRoaXMuX2FscGhhKSl9c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MTticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9MjticmVhaztjYXNlIDI6dGhpcy5fcG9pbnQ9Myx0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLHRoaXMuX3kyKTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94Mix0aGlzLl95Mik7YnJlYWs7Y2FzZSAzOnRoaXMuX3BvaW50PTQ7ZGVmYXVsdDpPXyh0aGlzLHQsbil9dGhpcy5fbDAxX2E9dGhpcy5fbDEyX2EsdGhpcy5fbDEyX2E9dGhpcy5fbDIzX2EsdGhpcy5fbDAxXzJhPXRoaXMuX2wxMl8yYSx0aGlzLl9sMTJfMmE9dGhpcy5fbDIzXzJhLHRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXRoaXMuX3gyLHRoaXMuX3gyPXQsdGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9dGhpcy5feTIsdGhpcy5feTI9bn19O3ZhciBqXz1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIG4/bmV3IEhfKHQsbik6bmV3IExfKHQsMCl9cmV0dXJuIGUuYWxwaGE9ZnVuY3Rpb24obil7cmV0dXJuIHQoK24pfSxlfSguNSk7ZnVuY3Rpb24gWF8odCl7dGhpcy5fY29udGV4dD10fWZ1bmN0aW9uIFZfKHQpe3JldHVybiB0PDA/LTE6MX1mdW5jdGlvbiBHXyh0LG4sZSl7dmFyIHI9dC5feDEtdC5feDAsaT1uLXQuX3gxLG89KHQuX3kxLXQuX3kwKS8ocnx8aTwwJiYtMCksYT0oZS10Ll95MSkvKGl8fHI8MCYmLTApLHU9KG8qaSthKnIpLyhyK2kpO3JldHVybihWXyhvKStWXyhhKSkqTWF0aC5taW4oTWF0aC5hYnMobyksTWF0aC5hYnMoYSksLjUqTWF0aC5hYnModSkpfHwwfWZ1bmN0aW9uICRfKHQsbil7dmFyIGU9dC5feDEtdC5feDA7cmV0dXJuIGU/KDMqKHQuX3kxLXQuX3kwKS9lLW4pLzI6bn1mdW5jdGlvbiBXXyh0LG4sZSl7dmFyIHI9dC5feDAsaT10Ll95MCxvPXQuX3gxLGE9dC5feTEsdT0oby1yKS8zO3QuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyhyK3UsaSt1Km4sby11LGEtdSplLG8sYSl9ZnVuY3Rpb24gWl8odCl7dGhpcy5fY29udGV4dD10fWZ1bmN0aW9uIFFfKHQpe3RoaXMuX2NvbnRleHQ9bmV3IEtfKHQpfWZ1bmN0aW9uIEtfKHQpe3RoaXMuX2NvbnRleHQ9dH1mdW5jdGlvbiBKXyh0KXt0aGlzLl9jb250ZXh0PXR9ZnVuY3Rpb24gdGIodCl7dmFyIG4sZSxyPXQubGVuZ3RoLTEsaT1uZXcgQXJyYXkociksbz1uZXcgQXJyYXkociksYT1uZXcgQXJyYXkocik7Zm9yKGlbMF09MCxvWzBdPTIsYVswXT10WzBdKzIqdFsxXSxuPTE7bjxyLTE7KytuKWlbbl09MSxvW25dPTQsYVtuXT00KnRbbl0rMip0W24rMV07Zm9yKGlbci0xXT0yLG9bci0xXT03LGFbci0xXT04KnRbci0xXSt0W3JdLG49MTtuPHI7KytuKWU9aVtuXS9vW24tMV0sb1tuXS09ZSxhW25dLT1lKmFbbi0xXTtmb3IoaVtyLTFdPWFbci0xXS9vW3ItMV0sbj1yLTI7bj49MDstLW4paVtuXT0oYVtuXS1pW24rMV0pL29bbl07Zm9yKG9bci0xXT0odFtyXStpW3ItMV0pLzIsbj0wO248ci0xOysrbilvW25dPTIqdFtuKzFdLWlbbisxXTtyZXR1cm5baSxvXX1mdW5jdGlvbiBuYih0LG4pe3RoaXMuX2NvbnRleHQ9dCx0aGlzLl90PW59ZnVuY3Rpb24gZWIodCxuKXtpZigoaT10Lmxlbmd0aCk+MSlmb3IodmFyIGUscixpLG89MSxhPXRbblswXV0sdT1hLmxlbmd0aDtvPGk7KytvKWZvcihyPWEsYT10W25bb11dLGU9MDtlPHU7KytlKWFbZV1bMV0rPWFbZV1bMF09aXNOYU4ocltlXVsxXSk/cltlXVswXTpyW2VdWzFdfWZ1bmN0aW9uIHJiKHQpe2Zvcih2YXIgbj10Lmxlbmd0aCxlPW5ldyBBcnJheShuKTstLW4+PTA7KWVbbl09bjtyZXR1cm4gZX1mdW5jdGlvbiBpYih0LG4pe3JldHVybiB0W25dfWZ1bmN0aW9uIG9iKHQpe3ZhciBuPXQubWFwKGFiKTtyZXR1cm4gcmIodCkuc29ydChmdW5jdGlvbih0LGUpe3JldHVybiBuW3RdLW5bZV19KX1mdW5jdGlvbiBhYih0KXtmb3IodmFyIG4sZT0tMSxyPTAsaT10Lmxlbmd0aCxvPS0xLzA7KytlPGk7KShuPSt0W2VdWzFdKT5vJiYobz1uLHI9ZSk7cmV0dXJuIHJ9ZnVuY3Rpb24gdWIodCl7dmFyIG49dC5tYXAoY2IpO3JldHVybiByYih0KS5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5bdF0tbltlXX0pfWZ1bmN0aW9uIGNiKHQpe2Zvcih2YXIgbixlPTAscj0tMSxpPXQubGVuZ3RoOysrcjxpOykobj0rdFtyXVsxXSkmJihlKz1uKTtyZXR1cm4gZX1mdW5jdGlvbiBmYih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdH19ZnVuY3Rpb24gc2IodCl7cmV0dXJuIHRbMF19ZnVuY3Rpb24gbGIodCl7cmV0dXJuIHRbMV19ZnVuY3Rpb24gaGIoKXt0aGlzLl89bnVsbH1mdW5jdGlvbiBkYih0KXt0LlU9dC5DPXQuTD10LlI9dC5QPXQuTj1udWxsfWZ1bmN0aW9uIHBiKHQsbil7dmFyIGU9bixyPW4uUixpPWUuVTtpP2kuTD09PWU/aS5MPXI6aS5SPXI6dC5fPXIsci5VPWksZS5VPXIsZS5SPXIuTCxlLlImJihlLlIuVT1lKSxyLkw9ZX1mdW5jdGlvbiB2Yih0LG4pe3ZhciBlPW4scj1uLkwsaT1lLlU7aT9pLkw9PT1lP2kuTD1yOmkuUj1yOnQuXz1yLHIuVT1pLGUuVT1yLGUuTD1yLlIsZS5MJiYoZS5MLlU9ZSksci5SPWV9ZnVuY3Rpb24gZ2IodCl7Zm9yKDt0Lkw7KXQ9dC5MO3JldHVybiB0fWZ1bmN0aW9uIHliKHQsbixlLHIpe3ZhciBpPVtudWxsLG51bGxdLG89WWIucHVzaChpKS0xO3JldHVybiBpLmxlZnQ9dCxpLnJpZ2h0PW4sZSYmYmIoaSx0LG4sZSksciYmYmIoaSxuLHQsciksQmJbdC5pbmRleF0uaGFsZmVkZ2VzLnB1c2gobyksQmJbbi5pbmRleF0uaGFsZmVkZ2VzLnB1c2gobyksaX1mdW5jdGlvbiBfYih0LG4sZSl7dmFyIHI9W24sZV07cmV0dXJuIHIubGVmdD10LHJ9ZnVuY3Rpb24gYmIodCxuLGUscil7dFswXXx8dFsxXT90LmxlZnQ9PT1lP3RbMV09cjp0WzBdPXI6KHRbMF09cix0LmxlZnQ9bix0LnJpZ2h0PWUpfWZ1bmN0aW9uIG1iKHQsbixlLHIsaSl7dmFyIG8sYT10WzBdLHU9dFsxXSxjPWFbMF0sZj1hWzFdLHM9MCxsPTEsaD11WzBdLWMsZD11WzFdLWY7aWYobz1uLWMsaHx8IShvPjApKXtpZihvLz1oLGg8MCl7aWYobzxzKXJldHVybjtvPGwmJihsPW8pfWVsc2UgaWYoaD4wKXtpZihvPmwpcmV0dXJuO28+cyYmKHM9byl9aWYobz1yLWMsaHx8IShvPDApKXtpZihvLz1oLGg8MCl7aWYobz5sKXJldHVybjtvPnMmJihzPW8pfWVsc2UgaWYoaD4wKXtpZihvPHMpcmV0dXJuO288bCYmKGw9byl9aWYobz1lLWYsZHx8IShvPjApKXtpZihvLz1kLGQ8MCl7aWYobzxzKXJldHVybjtvPGwmJihsPW8pfWVsc2UgaWYoZD4wKXtpZihvPmwpcmV0dXJuO28+cyYmKHM9byl9aWYobz1pLWYsZHx8IShvPDApKXtpZihvLz1kLGQ8MCl7aWYobz5sKXJldHVybjtvPnMmJihzPW8pfWVsc2UgaWYoZD4wKXtpZihvPHMpcmV0dXJuO288bCYmKGw9byl9cmV0dXJuIShzPjB8fGw8MSl8fChzPjAmJih0WzBdPVtjK3MqaCxmK3MqZF0pLGw8MSYmKHRbMV09W2MrbCpoLGYrbCpkXSksITApfX19fX1mdW5jdGlvbiB4Yih0LG4sZSxyLGkpe3ZhciBvPXRbMV07aWYobylyZXR1cm4hMDt2YXIgYSx1LGM9dFswXSxmPXQubGVmdCxzPXQucmlnaHQsbD1mWzBdLGg9ZlsxXSxkPXNbMF0scD1zWzFdLHY9KGwrZCkvMixnPShoK3ApLzI7aWYocD09PWgpe2lmKHY8bnx8dj49cilyZXR1cm47aWYobD5kKXtpZihjKXtpZihjWzFdPj1pKXJldHVybn1lbHNlIGM9W3YsZV07bz1bdixpXX1lbHNle2lmKGMpe2lmKGNbMV08ZSlyZXR1cm59ZWxzZSBjPVt2LGldO289W3YsZV19fWVsc2UgaWYodT1nLShhPShsLWQpLyhwLWgpKSp2LGE8LTF8fGE+MSlpZihsPmQpe2lmKGMpe2lmKGNbMV0+PWkpcmV0dXJufWVsc2UgYz1bKGUtdSkvYSxlXTtvPVsoaS11KS9hLGldfWVsc2V7aWYoYyl7aWYoY1sxXTxlKXJldHVybn1lbHNlIGM9WyhpLXUpL2EsaV07bz1bKGUtdSkvYSxlXX1lbHNlIGlmKGg8cCl7aWYoYyl7aWYoY1swXT49cilyZXR1cm59ZWxzZSBjPVtuLGEqbit1XTtvPVtyLGEqcit1XX1lbHNle2lmKGMpe2lmKGNbMF08bilyZXR1cm59ZWxzZSBjPVtyLGEqcit1XTtvPVtuLGEqbit1XX1yZXR1cm4gdFswXT1jLHRbMV09bywhMH1mdW5jdGlvbiB3Yih0LG4pe3ZhciBlPXQuc2l0ZSxyPW4ubGVmdCxpPW4ucmlnaHQ7cmV0dXJuIGU9PT1pJiYoaT1yLHI9ZSksaT9NYXRoLmF0YW4yKGlbMV0tclsxXSxpWzBdLXJbMF0pOihlPT09cj8ocj1uWzFdLGk9blswXSk6KHI9blswXSxpPW5bMV0pLE1hdGguYXRhbjIoclswXS1pWzBdLGlbMV0tclsxXSkpfWZ1bmN0aW9uIE1iKHQsbil7cmV0dXJuIG5bKyhuLmxlZnQhPT10LnNpdGUpXX1mdW5jdGlvbiBOYih0LG4pe3JldHVybiBuWysobi5sZWZ0PT09dC5zaXRlKV19WF8ucHJvdG90eXBlPXthcmVhU3RhcnQ6Tl8sYXJlYUVuZDpOXyxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7dGhpcy5fcG9pbnQmJnRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCl9LHBvaW50OmZ1bmN0aW9uKHQsbil7dD0rdCxuPStuLHRoaXMuX3BvaW50P3RoaXMuX2NvbnRleHQubGluZVRvKHQsbik6KHRoaXMuX3BvaW50PTEsdGhpcy5fY29udGV4dC5tb3ZlVG8odCxuKSl9fSxaXy5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9MH0sYXJlYUVuZDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9TmFOfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94MD10aGlzLl94MT10aGlzLl95MD10aGlzLl95MT10aGlzLl90MD1OYU4sdGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAyOnRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gxLHRoaXMuX3kxKTticmVhaztjYXNlIDM6V18odGhpcyx0aGlzLl90MCwkXyh0aGlzLHRoaXMuX3QwKSl9KHRoaXMuX2xpbmV8fDAhPT10aGlzLl9saW5lJiYxPT09dGhpcy5fcG9pbnQpJiZ0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX2xpbmU9MS10aGlzLl9saW5lfSxwb2ludDpmdW5jdGlvbih0LG4pe3ZhciBlPU5hTjtpZihuPStuLCh0PSt0KSE9PXRoaXMuX3gxfHxuIT09dGhpcy5feTEpe3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTEsdGhpcy5fbGluZT90aGlzLl9jb250ZXh0LmxpbmVUbyh0LG4pOnRoaXMuX2NvbnRleHQubW92ZVRvKHQsbik7YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTI7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTMsV18odGhpcywkXyh0aGlzLGU9R18odGhpcyx0LG4pKSxlKTticmVhaztkZWZhdWx0OldfKHRoaXMsdGhpcy5fdDAsZT1HXyh0aGlzLHQsbikpfXRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXQsdGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9bix0aGlzLl90MD1lfX19LChRXy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShaXy5wcm90b3R5cGUpKS5wb2ludD1mdW5jdGlvbih0LG4pe1pfLnByb3RvdHlwZS5wb2ludC5jYWxsKHRoaXMsbix0KX0sS18ucHJvdG90eXBlPXttb3ZlVG86ZnVuY3Rpb24odCxuKXt0aGlzLl9jb250ZXh0Lm1vdmVUbyhuLHQpfSxjbG9zZVBhdGg6ZnVuY3Rpb24oKXt0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpfSxsaW5lVG86ZnVuY3Rpb24odCxuKXt0aGlzLl9jb250ZXh0LmxpbmVUbyhuLHQpfSxiZXppZXJDdXJ2ZVRvOmZ1bmN0aW9uKHQsbixlLHIsaSxvKXt0aGlzLl9jb250ZXh0LmJlemllckN1cnZlVG8obix0LHIsZSxvLGkpfX0sSl8ucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feD1bXSx0aGlzLl95PVtdfSxsaW5lRW5kOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5feCxuPXRoaXMuX3ksZT10Lmxlbmd0aDtpZihlKWlmKHRoaXMuX2xpbmU/dGhpcy5fY29udGV4dC5saW5lVG8odFswXSxuWzBdKTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh0WzBdLG5bMF0pLDI9PT1lKXRoaXMuX2NvbnRleHQubGluZVRvKHRbMV0sblsxXSk7ZWxzZSBmb3IodmFyIHI9dGIodCksaT10YihuKSxvPTAsYT0xO2E8ZTsrK28sKythKXRoaXMuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyhyWzBdW29dLGlbMF1bb10sclsxXVtvXSxpWzFdW29dLHRbYV0sblthXSk7KHRoaXMuX2xpbmV8fDAhPT10aGlzLl9saW5lJiYxPT09ZSkmJnRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksdGhpcy5fbGluZT0xLXRoaXMuX2xpbmUsdGhpcy5feD10aGlzLl95PW51bGx9LHBvaW50OmZ1bmN0aW9uKHQsbil7dGhpcy5feC5wdXNoKCt0KSx0aGlzLl95LnB1c2goK24pfX0sbmIucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feD10aGlzLl95PU5hTix0aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7MDx0aGlzLl90JiZ0aGlzLl90PDEmJjI9PT10aGlzLl9wb2ludCYmdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feCx0aGlzLl95KSwodGhpcy5fbGluZXx8MCE9PXRoaXMuX2xpbmUmJjE9PT10aGlzLl9wb2ludCkmJnRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksdGhpcy5fbGluZT49MCYmKHRoaXMuX3Q9MS10aGlzLl90LHRoaXMuX2xpbmU9MS10aGlzLl9saW5lKX0scG9pbnQ6ZnVuY3Rpb24odCxuKXtzd2l0Y2godD0rdCxuPStuLHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MSx0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHQsbik6dGhpcy5fY29udGV4dC5tb3ZlVG8odCxuKTticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9MjtkZWZhdWx0OmlmKHRoaXMuX3Q8PTApdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feCxuKSx0aGlzLl9jb250ZXh0LmxpbmVUbyh0LG4pO2Vsc2V7dmFyIGU9dGhpcy5feCooMS10aGlzLl90KSt0KnRoaXMuX3Q7dGhpcy5fY29udGV4dC5saW5lVG8oZSx0aGlzLl95KSx0aGlzLl9jb250ZXh0LmxpbmVUbyhlLG4pfX10aGlzLl94PXQsdGhpcy5feT1ufX0saGIucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpoYixpbnNlcnQ6ZnVuY3Rpb24odCxuKXt2YXIgZSxyLGk7aWYodCl7aWYobi5QPXQsbi5OPXQuTix0Lk4mJih0Lk4uUD1uKSx0Lk49bix0LlIpe2Zvcih0PXQuUjt0Lkw7KXQ9dC5MO3QuTD1ufWVsc2UgdC5SPW47ZT10fWVsc2UgdGhpcy5fPyh0PWdiKHRoaXMuXyksbi5QPW51bGwsbi5OPXQsdC5QPXQuTD1uLGU9dCk6KG4uUD1uLk49bnVsbCx0aGlzLl89bixlPW51bGwpO2ZvcihuLkw9bi5SPW51bGwsbi5VPWUsbi5DPSEwLHQ9bjtlJiZlLkM7KWU9PT0ocj1lLlUpLkw/KGk9ci5SKSYmaS5DPyhlLkM9aS5DPSExLHIuQz0hMCx0PXIpOih0PT09ZS5SJiYocGIodGhpcyxlKSxlPSh0PWUpLlUpLGUuQz0hMSxyLkM9ITAsdmIodGhpcyxyKSk6KGk9ci5MKSYmaS5DPyhlLkM9aS5DPSExLHIuQz0hMCx0PXIpOih0PT09ZS5MJiYodmIodGhpcyxlKSxlPSh0PWUpLlUpLGUuQz0hMSxyLkM9ITAscGIodGhpcyxyKSksZT10LlU7dGhpcy5fLkM9ITF9LHJlbW92ZTpmdW5jdGlvbih0KXt0Lk4mJih0Lk4uUD10LlApLHQuUCYmKHQuUC5OPXQuTiksdC5OPXQuUD1udWxsO3ZhciBuLGUscixpPXQuVSxvPXQuTCxhPXQuUjtpZihlPW8/YT9nYihhKTpvOmEsaT9pLkw9PT10P2kuTD1lOmkuUj1lOnRoaXMuXz1lLG8mJmE/KHI9ZS5DLGUuQz10LkMsZS5MPW8sby5VPWUsZSE9PWE/KGk9ZS5VLGUuVT10LlUsdD1lLlIsaS5MPXQsZS5SPWEsYS5VPWUpOihlLlU9aSxpPWUsdD1lLlIpKToocj10LkMsdD1lKSx0JiYodC5VPWkpLCFyKWlmKHQmJnQuQyl0LkM9ITE7ZWxzZXtkb3tpZih0PT09dGhpcy5fKWJyZWFrO2lmKHQ9PT1pLkwpe2lmKChuPWkuUikuQyYmKG4uQz0hMSxpLkM9ITAscGIodGhpcyxpKSxuPWkuUiksbi5MJiZuLkwuQ3x8bi5SJiZuLlIuQyl7bi5SJiZuLlIuQ3x8KG4uTC5DPSExLG4uQz0hMCx2Yih0aGlzLG4pLG49aS5SKSxuLkM9aS5DLGkuQz1uLlIuQz0hMSxwYih0aGlzLGkpLHQ9dGhpcy5fO2JyZWFrfX1lbHNlIGlmKChuPWkuTCkuQyYmKG4uQz0hMSxpLkM9ITAsdmIodGhpcyxpKSxuPWkuTCksbi5MJiZuLkwuQ3x8bi5SJiZuLlIuQyl7bi5MJiZuLkwuQ3x8KG4uUi5DPSExLG4uQz0hMCxwYih0aGlzLG4pLG49aS5MKSxuLkM9aS5DLGkuQz1uLkwuQz0hMSx2Yih0aGlzLGkpLHQ9dGhpcy5fO2JyZWFrfW4uQz0hMCx0PWksaT1pLlV9d2hpbGUoIXQuQyk7dCYmKHQuQz0hMSl9fX07dmFyIFRiLEFiPVtdO2Z1bmN0aW9uIFNiKCl7ZGIodGhpcyksdGhpcy54PXRoaXMueT10aGlzLmFyYz10aGlzLnNpdGU9dGhpcy5jeT1udWxsfWZ1bmN0aW9uIGtiKHQpe3ZhciBuPXQuUCxlPXQuTjtpZihuJiZlKXt2YXIgcj1uLnNpdGUsaT10LnNpdGUsbz1lLnNpdGU7aWYociE9PW8pe3ZhciBhPWlbMF0sdT1pWzFdLGM9clswXS1hLGY9clsxXS11LHM9b1swXS1hLGw9b1sxXS11LGg9MiooYypsLWYqcyk7aWYoIShoPj0tSGIpKXt2YXIgZD1jKmMrZipmLHA9cypzK2wqbCx2PShsKmQtZipwKS9oLGc9KGMqcC1zKmQpL2gseT1BYi5wb3AoKXx8bmV3IFNiO3kuYXJjPXQseS5zaXRlPWkseS54PXYrYSx5Lnk9KHkuY3k9Zyt1KStNYXRoLnNxcnQodip2K2cqZyksdC5jaXJjbGU9eTtmb3IodmFyIF89bnVsbCxiPUZiLl87YjspaWYoeS55PGIueXx8eS55PT09Yi55JiZ5Lng8PWIueCl7aWYoIWIuTCl7Xz1iLlA7YnJlYWt9Yj1iLkx9ZWxzZXtpZighYi5SKXtfPWI7YnJlYWt9Yj1iLlJ9RmIuaW5zZXJ0KF8seSksX3x8KFRiPXkpfX19fWZ1bmN0aW9uIEViKHQpe3ZhciBuPXQuY2lyY2xlO24mJihuLlB8fChUYj1uLk4pLEZiLnJlbW92ZShuKSxBYi5wdXNoKG4pLGRiKG4pLHQuY2lyY2xlPW51bGwpfXZhciBDYj1bXTtmdW5jdGlvbiBQYigpe2RiKHRoaXMpLHRoaXMuZWRnZT10aGlzLnNpdGU9dGhpcy5jaXJjbGU9bnVsbH1mdW5jdGlvbiB6Yih0KXt2YXIgbj1DYi5wb3AoKXx8bmV3IFBiO3JldHVybiBuLnNpdGU9dCxufWZ1bmN0aW9uIFJiKHQpe0ViKHQpLE9iLnJlbW92ZSh0KSxDYi5wdXNoKHQpLGRiKHQpfWZ1bmN0aW9uIERiKHQpe3ZhciBuPXQuY2lyY2xlLGU9bi54LHI9bi5jeSxpPVtlLHJdLG89dC5QLGE9dC5OLHU9W3RdO1JiKHQpO2Zvcih2YXIgYz1vO2MuY2lyY2xlJiZNYXRoLmFicyhlLWMuY2lyY2xlLngpPEliJiZNYXRoLmFicyhyLWMuY2lyY2xlLmN5KTxJYjspbz1jLlAsdS51bnNoaWZ0KGMpLFJiKGMpLGM9bzt1LnVuc2hpZnQoYyksRWIoYyk7Zm9yKHZhciBmPWE7Zi5jaXJjbGUmJk1hdGguYWJzKGUtZi5jaXJjbGUueCk8SWImJk1hdGguYWJzKHItZi5jaXJjbGUuY3kpPEliOylhPWYuTix1LnB1c2goZiksUmIoZiksZj1hO3UucHVzaChmKSxFYihmKTt2YXIgcyxsPXUubGVuZ3RoO2ZvcihzPTE7czxsOysrcylmPXVbc10sYz11W3MtMV0sYmIoZi5lZGdlLGMuc2l0ZSxmLnNpdGUsaSk7Yz11WzBdLChmPXVbbC0xXSkuZWRnZT15YihjLnNpdGUsZi5zaXRlLG51bGwsaSksa2IoYyksa2IoZil9ZnVuY3Rpb24gcWIodCl7Zm9yKHZhciBuLGUscixpLG89dFswXSxhPXRbMV0sdT1PYi5fO3U7KWlmKChyPUxiKHUsYSktbyk+SWIpdT11Lkw7ZWxzZXtpZighKChpPW8tVWIodSxhKSk+SWIpKXtyPi1JYj8obj11LlAsZT11KTppPi1JYj8obj11LGU9dS5OKTpuPWU9dTticmVha31pZighdS5SKXtuPXU7YnJlYWt9dT11LlJ9IWZ1bmN0aW9uKHQpe0JiW3QuaW5kZXhdPXtzaXRlOnQsaGFsZmVkZ2VzOltdfX0odCk7dmFyIGM9emIodCk7aWYoT2IuaW5zZXJ0KG4sYyksbnx8ZSl7aWYobj09PWUpcmV0dXJuIEViKG4pLGU9emIobi5zaXRlKSxPYi5pbnNlcnQoYyxlKSxjLmVkZ2U9ZS5lZGdlPXliKG4uc2l0ZSxjLnNpdGUpLGtiKG4pLHZvaWQga2IoZSk7aWYoZSl7RWIobiksRWIoZSk7dmFyIGY9bi5zaXRlLHM9ZlswXSxsPWZbMV0saD10WzBdLXMsZD10WzFdLWwscD1lLnNpdGUsdj1wWzBdLXMsZz1wWzFdLWwseT0yKihoKmctZCp2KSxfPWgqaCtkKmQsYj12KnYrZypnLG09WyhnKl8tZCpiKS95K3MsKGgqYi12Kl8pL3krbF07YmIoZS5lZGdlLGYscCxtKSxjLmVkZ2U9eWIoZix0LG51bGwsbSksZS5lZGdlPXliKHQscCxudWxsLG0pLGtiKG4pLGtiKGUpfWVsc2UgYy5lZGdlPXliKG4uc2l0ZSxjLnNpdGUpfX1mdW5jdGlvbiBMYih0LG4pe3ZhciBlPXQuc2l0ZSxyPWVbMF0saT1lWzFdLG89aS1uO2lmKCFvKXJldHVybiByO3ZhciBhPXQuUDtpZighYSlyZXR1cm4tMS8wO3ZhciB1PShlPWEuc2l0ZSlbMF0sYz1lWzFdLGY9Yy1uO2lmKCFmKXJldHVybiB1O3ZhciBzPXUtcixsPTEvby0xL2YsaD1zL2Y7cmV0dXJuIGw/KC1oK01hdGguc3FydChoKmgtMipsKihzKnMvKC0yKmYpLWMrZi8yK2ktby8yKSkpL2wrcjoocit1KS8yfWZ1bmN0aW9uIFViKHQsbil7dmFyIGU9dC5OO2lmKGUpcmV0dXJuIExiKGUsbik7dmFyIHI9dC5zaXRlO3JldHVybiByWzFdPT09bj9yWzBdOjEvMH12YXIgT2IsQmIsRmIsWWIsSWI9MWUtNixIYj0xZS0xMjtmdW5jdGlvbiBqYih0LG4sZSl7cmV0dXJuKHRbMF0tZVswXSkqKG5bMV0tdFsxXSktKHRbMF0tblswXSkqKGVbMV0tdFsxXSl9ZnVuY3Rpb24gWGIodCxuKXtyZXR1cm4gblsxXS10WzFdfHxuWzBdLXRbMF19ZnVuY3Rpb24gVmIodCxuKXt2YXIgZSxyLGksbz10LnNvcnQoWGIpLnBvcCgpO2ZvcihZYj1bXSxCYj1uZXcgQXJyYXkodC5sZW5ndGgpLE9iPW5ldyBoYixGYj1uZXcgaGI7OylpZihpPVRiLG8mJighaXx8b1sxXTxpLnl8fG9bMV09PT1pLnkmJm9bMF08aS54KSlvWzBdPT09ZSYmb1sxXT09PXJ8fChxYihvKSxlPW9bMF0scj1vWzFdKSxvPXQucG9wKCk7ZWxzZXtpZighaSlicmVhaztEYihpLmFyYyl9aWYoZnVuY3Rpb24oKXtmb3IodmFyIHQsbixlLHIsaT0wLG89QmIubGVuZ3RoO2k8bzsrK2kpaWYoKHQ9QmJbaV0pJiYocj0obj10LmhhbGZlZGdlcykubGVuZ3RoKSl7dmFyIGE9bmV3IEFycmF5KHIpLHU9bmV3IEFycmF5KHIpO2ZvcihlPTA7ZTxyOysrZSlhW2VdPWUsdVtlXT13Yih0LFliW25bZV1dKTtmb3IoYS5zb3J0KGZ1bmN0aW9uKHQsbil7cmV0dXJuIHVbbl0tdVt0XX0pLGU9MDtlPHI7KytlKXVbZV09blthW2VdXTtmb3IoZT0wO2U8cjsrK2UpbltlXT11W2VdfX0oKSxuKXt2YXIgYT0rblswXVswXSx1PStuWzBdWzFdLGM9K25bMV1bMF0sZj0rblsxXVsxXTshZnVuY3Rpb24odCxuLGUscil7Zm9yKHZhciBpLG89WWIubGVuZ3RoO28tLTspeGIoaT1ZYltvXSx0LG4sZSxyKSYmbWIoaSx0LG4sZSxyKSYmKE1hdGguYWJzKGlbMF1bMF0taVsxXVswXSk+SWJ8fE1hdGguYWJzKGlbMF1bMV0taVsxXVsxXSk+SWIpfHxkZWxldGUgWWJbb119KGEsdSxjLGYpLGZ1bmN0aW9uKHQsbixlLHIpe3ZhciBpLG8sYSx1LGMsZixzLGwsaCxkLHAsdixnPUJiLmxlbmd0aCx5PSEwO2ZvcihpPTA7aTxnOysraSlpZihvPUJiW2ldKXtmb3IoYT1vLnNpdGUsdT0oYz1vLmhhbGZlZGdlcykubGVuZ3RoO3UtLTspWWJbY1t1XV18fGMuc3BsaWNlKHUsMSk7Zm9yKHU9MCxmPWMubGVuZ3RoO3U8ZjspcD0oZD1OYihvLFliW2NbdV1dKSlbMF0sdj1kWzFdLGw9KHM9TWIobyxZYltjWysrdSVmXV0pKVswXSxoPXNbMV0sKE1hdGguYWJzKHAtbCk+SWJ8fE1hdGguYWJzKHYtaCk+SWIpJiYoYy5zcGxpY2UodSwwLFliLnB1c2goX2IoYSxkLE1hdGguYWJzKHAtdCk8SWImJnItdj5JYj9bdCxNYXRoLmFicyhsLXQpPEliP2g6cl06TWF0aC5hYnModi1yKTxJYiYmZS1wPkliP1tNYXRoLmFicyhoLXIpPEliP2w6ZSxyXTpNYXRoLmFicyhwLWUpPEliJiZ2LW4+SWI/W2UsTWF0aC5hYnMobC1lKTxJYj9oOm5dOk1hdGguYWJzKHYtbik8SWImJnAtdD5JYj9bTWF0aC5hYnMoaC1uKTxJYj9sOnQsbl06bnVsbCkpLTEpLCsrZik7ZiYmKHk9ITEpfWlmKHkpe3ZhciBfLGIsbSx4PTEvMDtmb3IoaT0wLHk9bnVsbDtpPGc7KytpKShvPUJiW2ldKSYmKG09KF89KGE9by5zaXRlKVswXS10KSpfKyhiPWFbMV0tbikqYik8eCYmKHg9bSx5PW8pO2lmKHkpe3ZhciB3PVt0LG5dLE09W3Qscl0sTj1bZSxyXSxUPVtlLG5dO3kuaGFsZmVkZ2VzLnB1c2goWWIucHVzaChfYihhPXkuc2l0ZSx3LE0pKS0xLFliLnB1c2goX2IoYSxNLE4pKS0xLFliLnB1c2goX2IoYSxOLFQpKS0xLFliLnB1c2goX2IoYSxULHcpKS0xKX19Zm9yKGk9MDtpPGc7KytpKShvPUJiW2ldKSYmKG8uaGFsZmVkZ2VzLmxlbmd0aHx8ZGVsZXRlIEJiW2ldKX0oYSx1LGMsZil9dGhpcy5lZGdlcz1ZYix0aGlzLmNlbGxzPUJiLE9iPUZiPVliPUJiPW51bGx9ZnVuY3Rpb24gR2IodCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHR9fWZ1bmN0aW9uICRiKHQsbixlKXt0aGlzLnRhcmdldD10LHRoaXMudHlwZT1uLHRoaXMudHJhbnNmb3JtPWV9ZnVuY3Rpb24gV2IodCxuLGUpe3RoaXMuaz10LHRoaXMueD1uLHRoaXMueT1lfVZiLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VmIscG9seWdvbnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVkZ2VzO3JldHVybiB0aGlzLmNlbGxzLm1hcChmdW5jdGlvbihuKXt2YXIgZT1uLmhhbGZlZGdlcy5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIE1iKG4sdFtlXSl9KTtyZXR1cm4gZS5kYXRhPW4uc2l0ZS5kYXRhLGV9KX0sdHJpYW5nbGVzOmZ1bmN0aW9uKCl7dmFyIHQ9W10sbj10aGlzLmVkZ2VzO3JldHVybiB0aGlzLmNlbGxzLmZvckVhY2goZnVuY3Rpb24oZSxyKXtpZihvPShpPWUuaGFsZmVkZ2VzKS5sZW5ndGgpZm9yKHZhciBpLG8sYSx1PWUuc2l0ZSxjPS0xLGY9bltpW28tMV1dLHM9Zi5sZWZ0PT09dT9mLnJpZ2h0OmYubGVmdDsrK2M8bzspYT1zLHM9KGY9bltpW2NdXSkubGVmdD09PXU/Zi5yaWdodDpmLmxlZnQsYSYmcyYmcjxhLmluZGV4JiZyPHMuaW5kZXgmJmpiKHUsYSxzKTwwJiZ0LnB1c2goW3UuZGF0YSxhLmRhdGEscy5kYXRhXSl9KSx0fSxsaW5rczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVkZ2VzLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC5yaWdodH0pLm1hcChmdW5jdGlvbih0KXtyZXR1cm57c291cmNlOnQubGVmdC5kYXRhLHRhcmdldDp0LnJpZ2h0LmRhdGF9fSl9LGZpbmQ6ZnVuY3Rpb24odCxuLGUpe2Zvcih2YXIgcixpLG89dGhpcyxhPW8uX2ZvdW5kfHwwLHU9by5jZWxscy5sZW5ndGg7IShpPW8uY2VsbHNbYV0pOylpZigrK2E+PXUpcmV0dXJuIG51bGw7dmFyIGM9dC1pLnNpdGVbMF0sZj1uLWkuc2l0ZVsxXSxzPWMqYytmKmY7ZG97aT1vLmNlbGxzW3I9YV0sYT1udWxsLGkuaGFsZmVkZ2VzLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHI9by5lZGdlc1tlXSx1PXIubGVmdDtpZih1IT09aS5zaXRlJiZ1fHwodT1yLnJpZ2h0KSl7dmFyIGM9dC11WzBdLGY9bi11WzFdLGw9YypjK2YqZjtsPHMmJihzPWwsYT11LmluZGV4KX19KX13aGlsZShudWxsIT09YSk7cmV0dXJuIG8uX2ZvdW5kPXIsbnVsbD09ZXx8czw9ZSplP2kuc2l0ZTpudWxsfX0sV2IucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpXYixzY2FsZTpmdW5jdGlvbih0KXtyZXR1cm4gMT09PXQ/dGhpczpuZXcgV2IodGhpcy5rKnQsdGhpcy54LHRoaXMueSl9LHRyYW5zbGF0ZTpmdW5jdGlvbih0LG4pe3JldHVybiAwPT09dCYwPT09bj90aGlzOm5ldyBXYih0aGlzLmssdGhpcy54K3RoaXMuayp0LHRoaXMueSt0aGlzLmsqbil9LGFwcGx5OmZ1bmN0aW9uKHQpe3JldHVyblt0WzBdKnRoaXMuayt0aGlzLngsdFsxXSp0aGlzLmsrdGhpcy55XX0sYXBwbHlYOmZ1bmN0aW9uKHQpe3JldHVybiB0KnRoaXMuayt0aGlzLnh9LGFwcGx5WTpmdW5jdGlvbih0KXtyZXR1cm4gdCp0aGlzLmsrdGhpcy55fSxpbnZlcnQ6ZnVuY3Rpb24odCl7cmV0dXJuWyh0WzBdLXRoaXMueCkvdGhpcy5rLCh0WzFdLXRoaXMueSkvdGhpcy5rXX0saW52ZXJ0WDpmdW5jdGlvbih0KXtyZXR1cm4odC10aGlzLngpL3RoaXMua30saW52ZXJ0WTpmdW5jdGlvbih0KXtyZXR1cm4odC10aGlzLnkpL3RoaXMua30scmVzY2FsZVg6ZnVuY3Rpb24odCl7cmV0dXJuIHQuY29weSgpLmRvbWFpbih0LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WCx0aGlzKS5tYXAodC5pbnZlcnQsdCkpfSxyZXNjYWxlWTpmdW5jdGlvbih0KXtyZXR1cm4gdC5jb3B5KCkuZG9tYWluKHQucmFuZ2UoKS5tYXAodGhpcy5pbnZlcnRZLHRoaXMpLm1hcCh0LmludmVydCx0KSl9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuXCJ0cmFuc2xhdGUoXCIrdGhpcy54K1wiLFwiK3RoaXMueStcIikgc2NhbGUoXCIrdGhpcy5rK1wiKVwifX07dmFyIFpiPW5ldyBXYigxLDAsMCk7ZnVuY3Rpb24gUWIodCl7Zm9yKDshdC5fX3pvb207KWlmKCEodD10LnBhcmVudE5vZGUpKXJldHVybiBaYjtyZXR1cm4gdC5fX3pvb219ZnVuY3Rpb24gS2IoKXt0LmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfWZ1bmN0aW9uIEpiKCl7dC5ldmVudC5wcmV2ZW50RGVmYXVsdCgpLHQuZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl9ZnVuY3Rpb24gdG0oKXtyZXR1cm4hdC5ldmVudC5jdHJsS2V5JiYhdC5ldmVudC5idXR0b259ZnVuY3Rpb24gbm0oKXt2YXIgdD10aGlzO3JldHVybiB0IGluc3RhbmNlb2YgU1ZHRWxlbWVudD8odD10Lm93bmVyU1ZHRWxlbWVudHx8dCkuaGFzQXR0cmlidXRlKFwidmlld0JveFwiKT9bWyh0PXQudmlld0JveC5iYXNlVmFsKS54LHQueV0sW3QueCt0LndpZHRoLHQueSt0LmhlaWdodF1dOltbMCwwXSxbdC53aWR0aC5iYXNlVmFsLnZhbHVlLHQuaGVpZ2h0LmJhc2VWYWwudmFsdWVdXTpbWzAsMF0sW3QuY2xpZW50V2lkdGgsdC5jbGllbnRIZWlnaHRdXX1mdW5jdGlvbiBlbSgpe3JldHVybiB0aGlzLl9fem9vbXx8WmJ9ZnVuY3Rpb24gcm0oKXtyZXR1cm4tdC5ldmVudC5kZWx0YVkqKDE9PT10LmV2ZW50LmRlbHRhTW9kZT8uMDU6dC5ldmVudC5kZWx0YU1vZGU/MTouMDAyKX1mdW5jdGlvbiBpbSgpe3JldHVybiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHN8fFwib250b3VjaHN0YXJ0XCJpbiB0aGlzfWZ1bmN0aW9uIG9tKHQsbixlKXt2YXIgcj10LmludmVydFgoblswXVswXSktZVswXVswXSxpPXQuaW52ZXJ0WChuWzFdWzBdKS1lWzFdWzBdLG89dC5pbnZlcnRZKG5bMF1bMV0pLWVbMF1bMV0sYT10LmludmVydFkoblsxXVsxXSktZVsxXVsxXTtyZXR1cm4gdC50cmFuc2xhdGUoaT5yPyhyK2kpLzI6TWF0aC5taW4oMCxyKXx8TWF0aC5tYXgoMCxpKSxhPm8/KG8rYSkvMjpNYXRoLm1pbigwLG8pfHxNYXRoLm1heCgwLGEpKX1RYi5wcm90b3R5cGU9V2IucHJvdG90eXBlLHQuRm9ybWF0U3BlY2lmaWVyPUJhLHQuYWN0aXZlPWZ1bmN0aW9uKHQsbil7dmFyIGUscixpPXQuX190cmFuc2l0aW9uO2lmKGkpZm9yKHIgaW4gbj1udWxsPT1uP251bGw6bitcIlwiLGkpaWYoKGU9aVtyXSkuc3RhdGU+eHImJmUubmFtZT09PW4pcmV0dXJuIG5ldyBVcihbW3RdXSx5aSxuLCtyKTtyZXR1cm4gbnVsbH0sdC5hcmM9ZnVuY3Rpb24oKXt2YXIgdD1SeSxuPUR5LGU9bXkoMCkscj1udWxsLGk9cXksbz1MeSxhPVV5LHU9bnVsbDtmdW5jdGlvbiBjKCl7dmFyIGMsZixzPSt0LmFwcGx5KHRoaXMsYXJndW1lbnRzKSxsPStuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxoPWkuYXBwbHkodGhpcyxhcmd1bWVudHMpLUN5LGQ9by5hcHBseSh0aGlzLGFyZ3VtZW50cyktQ3kscD14eShkLWgpLHY9ZD5oO2lmKHV8fCh1PWM9bm8oKSksbDxzJiYoZj1sLGw9cyxzPWYpLGw+a3kpaWYocD5QeS1reSl1Lm1vdmVUbyhsKk15KGgpLGwqQXkoaCkpLHUuYXJjKDAsMCxsLGgsZCwhdikscz5reSYmKHUubW92ZVRvKHMqTXkoZCkscypBeShkKSksdS5hcmMoMCwwLHMsZCxoLHYpKTtlbHNle3ZhciBnLHksXz1oLGI9ZCxtPWgseD1kLHc9cCxNPXAsTj1hLmFwcGx5KHRoaXMsYXJndW1lbnRzKS8yLFQ9Tj5reSYmKHI/K3IuYXBwbHkodGhpcyxhcmd1bWVudHMpOlN5KHMqcytsKmwpKSxBPVR5KHh5KGwtcykvMiwrZS5hcHBseSh0aGlzLGFyZ3VtZW50cykpLFM9QSxrPUE7aWYoVD5reSl7dmFyIEU9enkoVC9zKkF5KE4pKSxDPXp5KFQvbCpBeShOKSk7KHctPTIqRSk+a3k/KG0rPUUqPXY/MTotMSx4LT1FKToodz0wLG09eD0oaCtkKS8yKSwoTS09MipDKT5reT8oXys9Qyo9dj8xOi0xLGItPUMpOihNPTAsXz1iPShoK2QpLzIpfXZhciBQPWwqTXkoXyksej1sKkF5KF8pLFI9cypNeSh4KSxEPXMqQXkoeCk7aWYoQT5reSl7dmFyIHEsTD1sKk15KGIpLFU9bCpBeShiKSxPPXMqTXkobSksQj1zKkF5KG0pO2lmKHA8RXkmJihxPWZ1bmN0aW9uKHQsbixlLHIsaSxvLGEsdSl7dmFyIGM9ZS10LGY9ci1uLHM9YS1pLGw9dS1vLGg9bCpjLXMqZjtpZighKGgqaDxreSkpcmV0dXJuW3QrKGg9KHMqKG4tbyktbCoodC1pKSkvaCkqYyxuK2gqZl19KFAseixPLEIsTCxVLFIsRCkpKXt2YXIgRj1QLXFbMF0sWT16LXFbMV0sST1MLXFbMF0sSD1VLXFbMV0saj0xL0F5KGZ1bmN0aW9uKHQpe3JldHVybiB0PjE/MDp0PC0xP0V5Ok1hdGguYWNvcyh0KX0oKEYqSStZKkgpLyhTeShGKkYrWSpZKSpTeShJKkkrSCpIKSkpLzIpLFg9U3kocVswXSpxWzBdK3FbMV0qcVsxXSk7Uz1UeShBLChzLVgpLyhqLTEpKSxrPVR5KEEsKGwtWCkvKGorMSkpfX1NPmt5P2s+a3k/KGc9T3koTyxCLFAseixsLGssdikseT1PeShMLFUsUixELGwsayx2KSx1Lm1vdmVUbyhnLmN4K2cueDAxLGcuY3krZy55MDEpLGs8QT91LmFyYyhnLmN4LGcuY3ksayx3eShnLnkwMSxnLngwMSksd3koeS55MDEseS54MDEpLCF2KToodS5hcmMoZy5jeCxnLmN5LGssd3koZy55MDEsZy54MDEpLHd5KGcueTExLGcueDExKSwhdiksdS5hcmMoMCwwLGwsd3koZy5jeStnLnkxMSxnLmN4K2cueDExKSx3eSh5LmN5K3kueTExLHkuY3greS54MTEpLCF2KSx1LmFyYyh5LmN4LHkuY3ksayx3eSh5LnkxMSx5LngxMSksd3koeS55MDEseS54MDEpLCF2KSkpOih1Lm1vdmVUbyhQLHopLHUuYXJjKDAsMCxsLF8sYiwhdikpOnUubW92ZVRvKFAseikscz5reSYmdz5reT9TPmt5PyhnPU95KFIsRCxMLFUscywtUyx2KSx5PU95KFAseixPLEIscywtUyx2KSx1LmxpbmVUbyhnLmN4K2cueDAxLGcuY3krZy55MDEpLFM8QT91LmFyYyhnLmN4LGcuY3ksUyx3eShnLnkwMSxnLngwMSksd3koeS55MDEseS54MDEpLCF2KToodS5hcmMoZy5jeCxnLmN5LFMsd3koZy55MDEsZy54MDEpLHd5KGcueTExLGcueDExKSwhdiksdS5hcmMoMCwwLHMsd3koZy5jeStnLnkxMSxnLmN4K2cueDExKSx3eSh5LmN5K3kueTExLHkuY3greS54MTEpLHYpLHUuYXJjKHkuY3gseS5jeSxTLHd5KHkueTExLHkueDExKSx3eSh5LnkwMSx5LngwMSksIXYpKSk6dS5hcmMoMCwwLHMseCxtLHYpOnUubGluZVRvKFIsRCl9ZWxzZSB1Lm1vdmVUbygwLDApO2lmKHUuY2xvc2VQYXRoKCksYylyZXR1cm4gdT1udWxsLGMrXCJcInx8bnVsbH1yZXR1cm4gYy5jZW50cm9pZD1mdW5jdGlvbigpe3ZhciBlPSgrdC5hcHBseSh0aGlzLGFyZ3VtZW50cykrICtuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSkvMixyPSgraS5hcHBseSh0aGlzLGFyZ3VtZW50cykrICtvLmFwcGx5KHRoaXMsYXJndW1lbnRzKSkvMi1FeS8yO3JldHVybltNeShyKSplLEF5KHIpKmVdfSxjLmlubmVyUmFkaXVzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PVwiZnVuY3Rpb25cIj09dHlwZW9mIG4/bjpteSgrbiksYyk6dH0sYy5vdXRlclJhZGl1cz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6bXkoK3QpLGMpOm59LGMuY29ybmVyUmFkaXVzPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpteSgrdCksYyk6ZX0sYy5wYWRSYWRpdXM9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9bnVsbD09dD9udWxsOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpteSgrdCksYyk6cn0sYy5zdGFydEFuZ2xlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpteSgrdCksYyk6aX0sYy5lbmRBbmdsZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6bXkoK3QpLGMpOm99LGMucGFkQW5nbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Om15KCt0KSxjKTphfSxjLmNvbnRleHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9bnVsbD09dD9udWxsOnQsYyk6dX0sY30sdC5hcmVhPWp5LHQuYXJlYVJhZGlhbD1LeSx0LmFzY2VuZGluZz1uLHQuYXV0b1R5cGU9ZnVuY3Rpb24odCl7Zm9yKHZhciBuIGluIHQpe3ZhciBlLHIsaT10W25dLnRyaW0oKTtpZihpKWlmKFwidHJ1ZVwiPT09aSlpPSEwO2Vsc2UgaWYoXCJmYWxzZVwiPT09aSlpPSExO2Vsc2UgaWYoXCJOYU5cIj09PWkpaT1OYU47ZWxzZSBpZihpc05hTihlPStpKSl7aWYoIShyPWkubWF0Y2goL14oWy0rXVxcZHsyfSk/XFxkezR9KC1cXGR7Mn0oLVxcZHsyfSk/KT8oVFxcZHsyfTpcXGR7Mn0oOlxcZHsyfShcXC5cXGR7M30pPyk/KFp8Wy0rXVxcZHsyfTpcXGR7Mn0pPyk/JC8pKSljb250aW51ZTtyYSYmcls0XSYmIXJbN10mJihpPWkucmVwbGFjZSgvLS9nLFwiL1wiKS5yZXBsYWNlKC9ULyxcIiBcIikpLGk9bmV3IERhdGUoaSl9ZWxzZSBpPWU7ZWxzZSBpPW51bGw7dFtuXT1pfXJldHVybiB0fSx0LmF4aXNCb3R0b209ZnVuY3Rpb24odCl7cmV0dXJuIEYoRCx0KX0sdC5heGlzTGVmdD1mdW5jdGlvbih0KXtyZXR1cm4gRihxLHQpfSx0LmF4aXNSaWdodD1mdW5jdGlvbih0KXtyZXR1cm4gRihSLHQpfSx0LmF4aXNUb3A9ZnVuY3Rpb24odCl7cmV0dXJuIEYoeix0KX0sdC5iaXNlY3Q9aSx0LmJpc2VjdExlZnQ9byx0LmJpc2VjdFJpZ2h0PWksdC5iaXNlY3Rvcj1lLHQuYmxvYj1mdW5jdGlvbih0LG4pe3JldHVybiBmZXRjaCh0LG4pLnRoZW4oaWEpfSx0LmJydXNoPWZ1bmN0aW9uKCl7cmV0dXJuIFlpKENpKX0sdC5icnVzaFNlbGVjdGlvbj1mdW5jdGlvbih0KXt2YXIgbj10Ll9fYnJ1c2g7cmV0dXJuIG4/bi5kaW0ub3V0cHV0KG4uc2VsZWN0aW9uKTpudWxsfSx0LmJydXNoWD1mdW5jdGlvbigpe3JldHVybiBZaShraSl9LHQuYnJ1c2hZPWZ1bmN0aW9uKCl7cmV0dXJuIFlpKEVpKX0sdC5idWZmZXI9ZnVuY3Rpb24odCxuKXtyZXR1cm4gZmV0Y2godCxuKS50aGVuKG9hKX0sdC5jaG9yZD1mdW5jdGlvbigpe3ZhciB0PTAsbj1udWxsLGU9bnVsbCxyPW51bGw7ZnVuY3Rpb24gaShpKXt2YXIgbyxhLHUsYyxmLHMsbD1pLmxlbmd0aCxoPVtdLGQ9ZyhsKSxwPVtdLHY9W10seT12Lmdyb3Vwcz1uZXcgQXJyYXkobCksXz1uZXcgQXJyYXkobCpsKTtmb3Iobz0wLGY9LTE7KytmPGw7KXtmb3IoYT0wLHM9LTE7KytzPGw7KWErPWlbZl1bc107aC5wdXNoKGEpLHAucHVzaChnKGwpKSxvKz1hfWZvcihuJiZkLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gbihoW3RdLGhbZV0pfSksZSYmcC5mb3JFYWNoKGZ1bmN0aW9uKHQsbil7dC5zb3J0KGZ1bmN0aW9uKHQscil7cmV0dXJuIGUoaVtuXVt0XSxpW25dW3JdKX0pfSksYz0obz1HaSgwLFZpLXQqbCkvbyk/dDpWaS9sLGE9MCxmPS0xOysrZjxsOyl7Zm9yKHU9YSxzPS0xOysrczxsOyl7dmFyIGI9ZFtmXSxtPXBbYl1bc10seD1pW2JdW21dLHc9YSxNPWErPXgqbztfW20qbCtiXT17aW5kZXg6YixzdWJpbmRleDptLHN0YXJ0QW5nbGU6dyxlbmRBbmdsZTpNLHZhbHVlOnh9fXlbYl09e2luZGV4OmIsc3RhcnRBbmdsZTp1LGVuZEFuZ2xlOmEsdmFsdWU6aFtiXX0sYSs9Y31mb3IoZj0tMTsrK2Y8bDspZm9yKHM9Zi0xOysrczxsOyl7dmFyIE49X1tzKmwrZl0sVD1fW2YqbCtzXTsoTi52YWx1ZXx8VC52YWx1ZSkmJnYucHVzaChOLnZhbHVlPFQudmFsdWU/e3NvdXJjZTpULHRhcmdldDpOfTp7c291cmNlOk4sdGFyZ2V0OlR9KX1yZXR1cm4gcj92LnNvcnQocik6dn1yZXR1cm4gaS5wYWRBbmdsZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1HaSgwLG4pLGkpOnR9LGkuc29ydEdyb3Vwcz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj10LGkpOm59LGkuc29ydFN1Ymdyb3Vwcz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT10LGkpOmV9LGkuc29ydENob3Jkcz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obnVsbD09dD9yPW51bGw6KHI9JGkodCkpLl89dCxpKTpyJiZyLl99LGl9LHQuY2xpZW50UG9pbnQ9T3QsdC5jbHVzdGVyPWZ1bmN0aW9uKCl7dmFyIHQ9Tmwsbj0xLGU9MSxyPSExO2Z1bmN0aW9uIGkoaSl7dmFyIG8sYT0wO2kuZWFjaEFmdGVyKGZ1bmN0aW9uKG4pe3ZhciBlPW4uY2hpbGRyZW47ZT8obi54PWZ1bmN0aW9uKHQpe3JldHVybiB0LnJlZHVjZShUbCwwKS90Lmxlbmd0aH0oZSksbi55PWZ1bmN0aW9uKHQpe3JldHVybiAxK3QucmVkdWNlKEFsLDApfShlKSk6KG4ueD1vP2ErPXQobixvKTowLG4ueT0wLG89bil9KTt2YXIgdT1mdW5jdGlvbih0KXtmb3IodmFyIG47bj10LmNoaWxkcmVuOyl0PW5bMF07cmV0dXJuIHR9KGkpLGM9ZnVuY3Rpb24odCl7Zm9yKHZhciBuO249dC5jaGlsZHJlbjspdD1uW24ubGVuZ3RoLTFdO3JldHVybiB0fShpKSxmPXUueC10KHUsYykvMixzPWMueCt0KGMsdSkvMjtyZXR1cm4gaS5lYWNoQWZ0ZXIocj9mdW5jdGlvbih0KXt0Lng9KHQueC1pLngpKm4sdC55PShpLnktdC55KSplfTpmdW5jdGlvbih0KXt0Lng9KHQueC1mKS8ocy1mKSpuLHQueT0oMS0oaS55P3QueS9pLnk6MSkpKmV9KX1yZXR1cm4gaS5zZXBhcmF0aW9uPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PW4saSk6dH0saS5zaXplPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPSExLG49K3RbMF0sZT0rdFsxXSxpKTpyP251bGw6W24sZV19LGkubm9kZVNpemU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9ITAsbj0rdFswXSxlPSt0WzFdLGkpOnI/W24sZV06bnVsbH0saX0sdC5jb2xvcj1wbix0LmNvbnRvdXJEZW5zaXR5PWZ1bmN0aW9uKCl7dmFyIHQ9a28sbj1FbyxlPUNvLHI9OTYwLGk9NTAwLG89MjAsYT0yLHU9MypvLGM9cisyKnU+PmEsZj1pKzIqdT4+YSxzPWJvKDIwKTtmdW5jdGlvbiBsKHIpe3ZhciBpPW5ldyBGbG9hdDMyQXJyYXkoYypmKSxsPW5ldyBGbG9hdDMyQXJyYXkoYypmKTtyLmZvckVhY2goZnVuY3Rpb24ocixvLHMpe3ZhciBsPSt0KHIsbyxzKSt1Pj5hLGg9K24ocixvLHMpK3U+PmEsZD0rZShyLG8scyk7bD49MCYmbDxjJiZoPj0wJiZoPGYmJihpW2wraCpjXSs9ZCl9KSxBbyh7d2lkdGg6YyxoZWlnaHQ6ZixkYXRhOml9LHt3aWR0aDpjLGhlaWdodDpmLGRhdGE6bH0sbz4+YSksU28oe3dpZHRoOmMsaGVpZ2h0OmYsZGF0YTpsfSx7d2lkdGg6YyxoZWlnaHQ6ZixkYXRhOml9LG8+PmEpLEFvKHt3aWR0aDpjLGhlaWdodDpmLGRhdGE6aX0se3dpZHRoOmMsaGVpZ2h0OmYsZGF0YTpsfSxvPj5hKSxTbyh7d2lkdGg6YyxoZWlnaHQ6ZixkYXRhOmx9LHt3aWR0aDpjLGhlaWdodDpmLGRhdGE6aX0sbz4+YSksQW8oe3dpZHRoOmMsaGVpZ2h0OmYsZGF0YTppfSx7d2lkdGg6YyxoZWlnaHQ6ZixkYXRhOmx9LG8+PmEpLFNvKHt3aWR0aDpjLGhlaWdodDpmLGRhdGE6bH0se3dpZHRoOmMsaGVpZ2h0OmYsZGF0YTppfSxvPj5hKTt2YXIgZD1zKGkpO2lmKCFBcnJheS5pc0FycmF5KGQpKXt2YXIgcD1UKGkpO2Q9dygwLHAsZCksKGQ9ZygwLE1hdGguZmxvb3IocC9kKSpkLGQpKS5zaGlmdCgpfXJldHVybiBUbygpLnRocmVzaG9sZHMoZCkuc2l6ZShbYyxmXSkoaSkubWFwKGgpfWZ1bmN0aW9uIGgodCl7cmV0dXJuIHQudmFsdWUqPU1hdGgucG93KDIsLTIqYSksdC5jb29yZGluYXRlcy5mb3JFYWNoKGQpLHR9ZnVuY3Rpb24gZCh0KXt0LmZvckVhY2gocCl9ZnVuY3Rpb24gcCh0KXt0LmZvckVhY2godil9ZnVuY3Rpb24gdih0KXt0WzBdPXRbMF0qTWF0aC5wb3coMixhKS11LHRbMV09dFsxXSpNYXRoLnBvdygyLGEpLXV9ZnVuY3Rpb24geSgpe3JldHVybiBjPXIrMioodT0zKm8pPj5hLGY9aSsyKnU+PmEsbH1yZXR1cm4gbC54PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PVwiZnVuY3Rpb25cIj09dHlwZW9mIG4/bjpibygrbiksbCk6dH0sbC55PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpibygrdCksbCk6bn0sbC53ZWlnaHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OmJvKCt0KSxsKTplfSxsLnNpemU9ZnVuY3Rpb24odCl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuW3IsaV07dmFyIG49TWF0aC5jZWlsKHRbMF0pLGU9TWF0aC5jZWlsKHRbMV0pO2lmKCEobj49MHx8bj49MCkpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaXplXCIpO3JldHVybiByPW4saT1lLHkoKX0sbC5jZWxsU2l6ZT1mdW5jdGlvbih0KXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gMTw8YTtpZighKCh0PSt0KT49MSkpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBjZWxsIHNpemVcIik7cmV0dXJuIGE9TWF0aC5mbG9vcihNYXRoLmxvZyh0KS9NYXRoLkxOMikseSgpfSxsLnRocmVzaG9sZHM9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHM9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OkFycmF5LmlzQXJyYXkodCk/Ym8oeW8uY2FsbCh0KSk6Ym8odCksbCk6c30sbC5iYW5kd2lkdGg9ZnVuY3Rpb24odCl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIE1hdGguc3FydChvKihvKzEpKTtpZighKCh0PSt0KT49MCkpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBiYW5kd2lkdGhcIik7cmV0dXJuIG89TWF0aC5yb3VuZCgoTWF0aC5zcXJ0KDQqdCp0KzEpLTEpLzIpLHkoKX0sbH0sdC5jb250b3Vycz1Ubyx0LmNyZWF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gUnQoWih0KS5jYWxsKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkpfSx0LmNyZWF0b3I9Wix0LmNyb3NzPWZ1bmN0aW9uKHQsbixlKXt2YXIgcixpLG8sdSxjPXQubGVuZ3RoLGY9bi5sZW5ndGgscz1uZXcgQXJyYXkoYypmKTtmb3IobnVsbD09ZSYmKGU9YSkscj1vPTA7cjxjOysrcilmb3IodT10W3JdLGk9MDtpPGY7KytpLCsrbylzW29dPWUodSxuW2ldKTtyZXR1cm4gc30sdC5jc3Y9ZmEsdC5jc3ZGb3JtYXQ9am8sdC5jc3ZGb3JtYXRCb2R5PVhvLHQuY3N2Rm9ybWF0Um93PUdvLHQuY3N2Rm9ybWF0Um93cz1Wbyx0LmNzdkZvcm1hdFZhbHVlPSRvLHQuY3N2UGFyc2U9SW8sdC5jc3ZQYXJzZVJvd3M9SG8sdC5jdWJlaGVsaXg9ZWUsdC5jdXJ2ZUJhc2lzPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgQV8odCl9LHQuY3VydmVCYXNpc0Nsb3NlZD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IFNfKHQpfSx0LmN1cnZlQmFzaXNPcGVuPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcga18odCl9LHQuY3VydmVCdW5kbGU9Q18sdC5jdXJ2ZUNhcmRpbmFsPVJfLHQuY3VydmVDYXJkaW5hbENsb3NlZD1xXyx0LmN1cnZlQ2FyZGluYWxPcGVuPVVfLHQuY3VydmVDYXRtdWxsUm9tPUZfLHQuY3VydmVDYXRtdWxsUm9tQ2xvc2VkPUlfLHQuY3VydmVDYXRtdWxsUm9tT3Blbj1qXyx0LmN1cnZlTGluZWFyPUZ5LHQuY3VydmVMaW5lYXJDbG9zZWQ9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBYXyh0KX0sdC5jdXJ2ZU1vbm90b25lWD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IFpfKHQpfSx0LmN1cnZlTW9ub3RvbmVZPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgUV8odCl9LHQuY3VydmVOYXR1cmFsPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgSl8odCl9LHQuY3VydmVTdGVwPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgbmIodCwuNSl9LHQuY3VydmVTdGVwQWZ0ZXI9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBuYih0LDEpfSx0LmN1cnZlU3RlcEJlZm9yZT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IG5iKHQsMCl9LHQuY3VzdG9tRXZlbnQ9a3QsdC5kZXNjZW5kaW5nPWZ1bmN0aW9uKHQsbil7cmV0dXJuIG48dD8tMTpuPnQ/MTpuPj10PzA6TmFOfSx0LmRldmlhdGlvbj1mLHQuZGlzcGF0Y2g9SSx0LmRyYWc9ZnVuY3Rpb24oKXt2YXIgbixlLHIsaSxvPUd0LGE9JHQsdT1XdCxjPVp0LGY9e30scz1JKFwic3RhcnRcIixcImRyYWdcIixcImVuZFwiKSxsPTAsaD0wO2Z1bmN0aW9uIGQodCl7dC5vbihcIm1vdXNlZG93bi5kcmFnXCIscCkuZmlsdGVyKGMpLm9uKFwidG91Y2hzdGFydC5kcmFnXCIseSkub24oXCJ0b3VjaG1vdmUuZHJhZ1wiLF8pLm9uKFwidG91Y2hlbmQuZHJhZyB0b3VjaGNhbmNlbC5kcmFnXCIsYikuc3R5bGUoXCJ0b3VjaC1hY3Rpb25cIixcIm5vbmVcIikuc3R5bGUoXCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JcIixcInJnYmEoMCwwLDAsMClcIil9ZnVuY3Rpb24gcCgpe2lmKCFpJiZvLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl7dmFyIHU9bShcIm1vdXNlXCIsYS5hcHBseSh0aGlzLGFyZ3VtZW50cyksQnQsdGhpcyxhcmd1bWVudHMpO3UmJihSdCh0LmV2ZW50LnZpZXcpLm9uKFwibW91c2Vtb3ZlLmRyYWdcIix2LCEwKS5vbihcIm1vdXNldXAuZHJhZ1wiLGcsITApLEh0KHQuZXZlbnQudmlldyksWXQoKSxyPSExLG49dC5ldmVudC5jbGllbnRYLGU9dC5ldmVudC5jbGllbnRZLHUoXCJzdGFydFwiKSl9fWZ1bmN0aW9uIHYoKXtpZihJdCgpLCFyKXt2YXIgaT10LmV2ZW50LmNsaWVudFgtbixvPXQuZXZlbnQuY2xpZW50WS1lO3I9aSppK28qbz5ofWYubW91c2UoXCJkcmFnXCIpfWZ1bmN0aW9uIGcoKXtSdCh0LmV2ZW50LnZpZXcpLm9uKFwibW91c2Vtb3ZlLmRyYWcgbW91c2V1cC5kcmFnXCIsbnVsbCksanQodC5ldmVudC52aWV3LHIpLEl0KCksZi5tb3VzZShcImVuZFwiKX1mdW5jdGlvbiB5KCl7aWYoby5hcHBseSh0aGlzLGFyZ3VtZW50cykpe3ZhciBuLGUscj10LmV2ZW50LmNoYW5nZWRUb3VjaGVzLGk9YS5hcHBseSh0aGlzLGFyZ3VtZW50cyksdT1yLmxlbmd0aDtmb3Iobj0wO248dTsrK24pKGU9bShyW25dLmlkZW50aWZpZXIsaSxGdCx0aGlzLGFyZ3VtZW50cykpJiYoWXQoKSxlKFwic3RhcnRcIikpfX1mdW5jdGlvbiBfKCl7dmFyIG4sZSxyPXQuZXZlbnQuY2hhbmdlZFRvdWNoZXMsaT1yLmxlbmd0aDtmb3Iobj0wO248aTsrK24pKGU9ZltyW25dLmlkZW50aWZpZXJdKSYmKEl0KCksZShcImRyYWdcIikpfWZ1bmN0aW9uIGIoKXt2YXIgbixlLHI9dC5ldmVudC5jaGFuZ2VkVG91Y2hlcyxvPXIubGVuZ3RoO2ZvcihpJiZjbGVhclRpbWVvdXQoaSksaT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aT1udWxsfSw1MDApLG49MDtuPG87KytuKShlPWZbcltuXS5pZGVudGlmaWVyXSkmJihZdCgpLGUoXCJlbmRcIikpfWZ1bmN0aW9uIG0obixlLHIsaSxvKXt2YXIgYSxjLGgscD1yKGUsbiksdj1zLmNvcHkoKTtpZihrdChuZXcgVnQoZCxcImJlZm9yZXN0YXJ0XCIsYSxuLGwscFswXSxwWzFdLDAsMCx2KSxmdW5jdGlvbigpe3JldHVybiBudWxsIT0odC5ldmVudC5zdWJqZWN0PWE9dS5hcHBseShpLG8pKSYmKGM9YS54LXBbMF18fDAsaD1hLnktcFsxXXx8MCwhMCl9KSlyZXR1cm4gZnVuY3Rpb24gdCh1KXt2YXIgcyxnPXA7c3dpdGNoKHUpe2Nhc2VcInN0YXJ0XCI6ZltuXT10LHM9bCsrO2JyZWFrO2Nhc2VcImVuZFwiOmRlbGV0ZSBmW25dLC0tbDtjYXNlXCJkcmFnXCI6cD1yKGUsbikscz1sfWt0KG5ldyBWdChkLHUsYSxuLHMscFswXStjLHBbMV0raCxwWzBdLWdbMF0scFsxXS1nWzFdLHYpLHYuYXBwbHksdixbdSxpLG9dKX19cmV0dXJuIGQuZmlsdGVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpYdCghIXQpLGQpOm99LGQuY29udGFpbmVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpYdCh0KSxkKTphfSxkLnN1YmplY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Olh0KHQpLGQpOnV9LGQudG91Y2hhYmxlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpYdCghIXQpLGQpOmN9LGQub249ZnVuY3Rpb24oKXt2YXIgdD1zLm9uLmFwcGx5KHMsYXJndW1lbnRzKTtyZXR1cm4gdD09PXM/ZDp0fSxkLmNsaWNrRGlzdGFuY2U9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGg9KHQ9K3QpKnQsZCk6TWF0aC5zcXJ0KGgpfSxkfSx0LmRyYWdEaXNhYmxlPUh0LHQuZHJhZ0VuYWJsZT1qdCx0LmRzdj1mdW5jdGlvbih0LG4sZSxyKXszPT09YXJndW1lbnRzLmxlbmd0aCYmXCJmdW5jdGlvblwiPT10eXBlb2YgZSYmKHI9ZSxlPXZvaWQgMCk7dmFyIGk9Rm8odCk7cmV0dXJuIHVhKG4sZSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gaS5wYXJzZSh0LHIpfSl9LHQuZHN2Rm9ybWF0PUZvLHQuZWFzZUJhY2s9c2ksdC5lYXNlQmFja0luPWNpLHQuZWFzZUJhY2tJbk91dD1zaSx0LmVhc2VCYWNrT3V0PWZpLHQuZWFzZUJvdW5jZT11aSx0LmVhc2VCb3VuY2VJbj1mdW5jdGlvbih0KXtyZXR1cm4gMS11aSgxLXQpfSx0LmVhc2VCb3VuY2VJbk91dD1mdW5jdGlvbih0KXtyZXR1cm4oKHQqPTIpPD0xPzEtdWkoMS10KTp1aSh0LTEpKzEpLzJ9LHQuZWFzZUJvdW5jZU91dD11aSx0LmVhc2VDaXJjbGU9WnIsdC5lYXNlQ2lyY2xlSW49ZnVuY3Rpb24odCl7cmV0dXJuIDEtTWF0aC5zcXJ0KDEtdCp0KX0sdC5lYXNlQ2lyY2xlSW5PdXQ9WnIsdC5lYXNlQ2lyY2xlT3V0PWZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnNxcnQoMS0gLS10KnQpfSx0LmVhc2VDdWJpYz1Jcix0LmVhc2VDdWJpY0luPWZ1bmN0aW9uKHQpe3JldHVybiB0KnQqdH0sdC5lYXNlQ3ViaWNJbk91dD1Jcix0LmVhc2VDdWJpY091dD1mdW5jdGlvbih0KXtyZXR1cm4tLXQqdCp0KzF9LHQuZWFzZUVsYXN0aWM9ZGksdC5lYXNlRWxhc3RpY0luPWhpLHQuZWFzZUVsYXN0aWNJbk91dD1waSx0LmVhc2VFbGFzdGljT3V0PWRpLHQuZWFzZUV4cD1Xcix0LmVhc2VFeHBJbj1mdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5wb3coMiwxMCp0LTEwKX0sdC5lYXNlRXhwSW5PdXQ9V3IsdC5lYXNlRXhwT3V0PWZ1bmN0aW9uKHQpe3JldHVybiAxLU1hdGgucG93KDIsLTEwKnQpfSx0LmVhc2VMaW5lYXI9ZnVuY3Rpb24odCl7cmV0dXJuK3R9LHQuZWFzZVBvbHk9WHIsdC5lYXNlUG9seUluPUhyLHQuZWFzZVBvbHlJbk91dD1Ycix0LmVhc2VQb2x5T3V0PWpyLHQuZWFzZVF1YWQ9WXIsdC5lYXNlUXVhZEluPWZ1bmN0aW9uKHQpe3JldHVybiB0KnR9LHQuZWFzZVF1YWRJbk91dD1Zcix0LmVhc2VRdWFkT3V0PWZ1bmN0aW9uKHQpe3JldHVybiB0KigyLXQpfSx0LmVhc2VTaW49JHIsdC5lYXNlU2luSW49ZnVuY3Rpb24odCl7cmV0dXJuIDEtTWF0aC5jb3ModCpHcil9LHQuZWFzZVNpbkluT3V0PSRyLHQuZWFzZVNpbk91dD1mdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5zaW4odCpHcil9LHQuZW50cmllcz1mdW5jdGlvbih0KXt2YXIgbj1bXTtmb3IodmFyIGUgaW4gdCluLnB1c2goe2tleTplLHZhbHVlOnRbZV19KTtyZXR1cm4gbn0sdC5leHRlbnQ9cyx0LmZvcmNlQ2VudGVyPWZ1bmN0aW9uKHQsbil7dmFyIGU7ZnVuY3Rpb24gcigpe3ZhciByLGksbz1lLmxlbmd0aCxhPTAsdT0wO2ZvcihyPTA7cjxvOysrcilhKz0oaT1lW3JdKS54LHUrPWkueTtmb3IoYT1hL28tdCx1PXUvby1uLHI9MDtyPG87KytyKShpPWVbcl0pLngtPWEsaS55LT11fXJldHVybiBudWxsPT10JiYodD0wKSxudWxsPT1uJiYobj0wKSxyLmluaXRpYWxpemU9ZnVuY3Rpb24odCl7ZT10fSxyLng9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9K24scik6dH0sci55PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPSt0LHIpOm59LHJ9LHQuZm9yY2VDb2xsaWRlPWZ1bmN0aW9uKHQpe3ZhciBuLGUscj0xLGk9MTtmdW5jdGlvbiBvKCl7Zm9yKHZhciB0LG8sdSxjLGYscyxsLGg9bi5sZW5ndGgsZD0wO2Q8aTsrK2QpZm9yKG89d2EobixBYSxTYSkudmlzaXRBZnRlcihhKSx0PTA7dDxoOysrdCl1PW5bdF0scz1lW3UuaW5kZXhdLGw9cypzLGM9dS54K3UudngsZj11LnkrdS52eSxvLnZpc2l0KHApO2Z1bmN0aW9uIHAodCxuLGUsaSxvKXt2YXIgYT10LmRhdGEsaD10LnIsZD1zK2g7aWYoIWEpcmV0dXJuIG4+YytkfHxpPGMtZHx8ZT5mK2R8fG88Zi1kO2lmKGEuaW5kZXg+dS5pbmRleCl7dmFyIHA9Yy1hLngtYS52eCx2PWYtYS55LWEudnksZz1wKnArdip2O2c8ZCpkJiYoMD09PXAmJihnKz0ocD15YSgpKSpwKSwwPT09diYmKGcrPSh2PXlhKCkpKnYpLGc9KGQtKGc9TWF0aC5zcXJ0KGcpKSkvZypyLHUudngrPShwKj1nKSooZD0oaCo9aCkvKGwraCkpLHUudnkrPSh2Kj1nKSpkLGEudngtPXAqKGQ9MS1kKSxhLnZ5LT12KmQpfX19ZnVuY3Rpb24gYSh0KXtpZih0LmRhdGEpcmV0dXJuIHQucj1lW3QuZGF0YS5pbmRleF07Zm9yKHZhciBuPXQucj0wO248NDsrK24pdFtuXSYmdFtuXS5yPnQuciYmKHQucj10W25dLnIpfWZ1bmN0aW9uIHUoKXtpZihuKXt2YXIgcixpLG89bi5sZW5ndGg7Zm9yKGU9bmV3IEFycmF5KG8pLHI9MDtyPG87KytyKWk9bltyXSxlW2kuaW5kZXhdPSt0KGkscixuKX19cmV0dXJuXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmKHQ9Z2EobnVsbD09dD8xOit0KSksby5pbml0aWFsaXplPWZ1bmN0aW9uKHQpe249dCx1KCl9LG8uaXRlcmF0aW9ucz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT0rdCxvKTppfSxvLnN0cmVuZ3RoPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPSt0LG8pOnJ9LG8ucmFkaXVzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PVwiZnVuY3Rpb25cIj09dHlwZW9mIG4/bjpnYSgrbiksdSgpLG8pOnR9LG99LHQuZm9yY2VMaW5rPWZ1bmN0aW9uKHQpe3ZhciBuLGUscixpLG8sYT1rYSx1PWZ1bmN0aW9uKHQpe3JldHVybiAxL01hdGgubWluKGlbdC5zb3VyY2UuaW5kZXhdLGlbdC50YXJnZXQuaW5kZXhdKX0sYz1nYSgzMCksZj0xO2Z1bmN0aW9uIHMocil7Zm9yKHZhciBpPTAsYT10Lmxlbmd0aDtpPGY7KytpKWZvcih2YXIgdSxjLHMsbCxoLGQscCx2PTA7djxhOysrdiljPSh1PXRbdl0pLnNvdXJjZSxsPShzPXUudGFyZ2V0KS54K3MudngtYy54LWMudnh8fHlhKCksaD1zLnkrcy52eS1jLnktYy52eXx8eWEoKSxsKj1kPSgoZD1NYXRoLnNxcnQobCpsK2gqaCkpLWVbdl0pL2QqcipuW3ZdLGgqPWQscy52eC09bCoocD1vW3ZdKSxzLnZ5LT1oKnAsYy52eCs9bCoocD0xLXApLGMudnkrPWgqcH1mdW5jdGlvbiBsKCl7aWYocil7dmFyIHUsYyxmPXIubGVuZ3RoLHM9dC5sZW5ndGgsbD1jbyhyLGEpO2Zvcih1PTAsaT1uZXcgQXJyYXkoZik7dTxzOysrdSkoYz10W3VdKS5pbmRleD11LFwib2JqZWN0XCIhPXR5cGVvZiBjLnNvdXJjZSYmKGMuc291cmNlPUVhKGwsYy5zb3VyY2UpKSxcIm9iamVjdFwiIT10eXBlb2YgYy50YXJnZXQmJihjLnRhcmdldD1FYShsLGMudGFyZ2V0KSksaVtjLnNvdXJjZS5pbmRleF09KGlbYy5zb3VyY2UuaW5kZXhdfHwwKSsxLGlbYy50YXJnZXQuaW5kZXhdPShpW2MudGFyZ2V0LmluZGV4XXx8MCkrMTtmb3IodT0wLG89bmV3IEFycmF5KHMpO3U8czsrK3UpYz10W3VdLG9bdV09aVtjLnNvdXJjZS5pbmRleF0vKGlbYy5zb3VyY2UuaW5kZXhdK2lbYy50YXJnZXQuaW5kZXhdKTtuPW5ldyBBcnJheShzKSxoKCksZT1uZXcgQXJyYXkocyksZCgpfX1mdW5jdGlvbiBoKCl7aWYocilmb3IodmFyIGU9MCxpPXQubGVuZ3RoO2U8aTsrK2UpbltlXT0rdSh0W2VdLGUsdCl9ZnVuY3Rpb24gZCgpe2lmKHIpZm9yKHZhciBuPTAsaT10Lmxlbmd0aDtuPGk7KytuKWVbbl09K2ModFtuXSxuLHQpfXJldHVybiBudWxsPT10JiYodD1bXSkscy5pbml0aWFsaXplPWZ1bmN0aW9uKHQpe3I9dCxsKCl9LHMubGlua3M9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9bixsKCkscyk6dH0scy5pZD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT10LHMpOmF9LHMuaXRlcmF0aW9ucz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZj0rdCxzKTpmfSxzLnN0cmVuZ3RoPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpnYSgrdCksaCgpLHMpOnV9LHMuZGlzdGFuY2U9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGM9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OmdhKCt0KSxkKCkscyk6Y30sc30sdC5mb3JjZU1hbnlCb2R5PWZ1bmN0aW9uKCl7dmFyIHQsbixlLHIsaT1nYSgtMzApLG89MSxhPTEvMCx1PS44MTtmdW5jdGlvbiBjKHIpe3ZhciBpLG89dC5sZW5ndGgsYT13YSh0LENhLFBhKS52aXNpdEFmdGVyKHMpO2ZvcihlPXIsaT0wO2k8bzsrK2kpbj10W2ldLGEudmlzaXQobCl9ZnVuY3Rpb24gZigpe2lmKHQpe3ZhciBuLGUsbz10Lmxlbmd0aDtmb3Iocj1uZXcgQXJyYXkobyksbj0wO248bzsrK24pZT10W25dLHJbZS5pbmRleF09K2koZSxuLHQpfX1mdW5jdGlvbiBzKHQpe3ZhciBuLGUsaSxvLGEsdT0wLGM9MDtpZih0Lmxlbmd0aCl7Zm9yKGk9bz1hPTA7YTw0OysrYSkobj10W2FdKSYmKGU9TWF0aC5hYnMobi52YWx1ZSkpJiYodSs9bi52YWx1ZSxjKz1lLGkrPWUqbi54LG8rPWUqbi55KTt0Lng9aS9jLHQueT1vL2N9ZWxzZXsobj10KS54PW4uZGF0YS54LG4ueT1uLmRhdGEueTtkb3t1Kz1yW24uZGF0YS5pbmRleF19d2hpbGUobj1uLm5leHQpfXQudmFsdWU9dX1mdW5jdGlvbiBsKHQsaSxjLGYpe2lmKCF0LnZhbHVlKXJldHVybiEwO3ZhciBzPXQueC1uLngsbD10Lnktbi55LGg9Zi1pLGQ9cypzK2wqbDtpZihoKmgvdTxkKXJldHVybiBkPGEmJigwPT09cyYmKGQrPShzPXlhKCkpKnMpLDA9PT1sJiYoZCs9KGw9eWEoKSkqbCksZDxvJiYoZD1NYXRoLnNxcnQobypkKSksbi52eCs9cyp0LnZhbHVlKmUvZCxuLnZ5Kz1sKnQudmFsdWUqZS9kKSwhMDtpZighKHQubGVuZ3RofHxkPj1hKSl7KHQuZGF0YSE9PW58fHQubmV4dCkmJigwPT09cyYmKGQrPShzPXlhKCkpKnMpLDA9PT1sJiYoZCs9KGw9eWEoKSkqbCksZDxvJiYoZD1NYXRoLnNxcnQobypkKSkpO2Rve3QuZGF0YSE9PW4mJihoPXJbdC5kYXRhLmluZGV4XSplL2Qsbi52eCs9cypoLG4udnkrPWwqaCl9d2hpbGUodD10Lm5leHQpfX1yZXR1cm4gYy5pbml0aWFsaXplPWZ1bmN0aW9uKG4pe3Q9bixmKCl9LGMuc3RyZW5ndGg9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OmdhKCt0KSxmKCksYyk6aX0sYy5kaXN0YW5jZU1pbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz10KnQsYyk6TWF0aC5zcXJ0KG8pfSxjLmRpc3RhbmNlTWF4PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPXQqdCxjKTpNYXRoLnNxcnQoYSl9LGMudGhldGE9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9dCp0LGMpOk1hdGguc3FydCh1KX0sY30sdC5mb3JjZVJhZGlhbD1mdW5jdGlvbih0LG4sZSl7dmFyIHIsaSxvLGE9Z2EoLjEpO2Z1bmN0aW9uIHUodCl7Zm9yKHZhciBhPTAsdT1yLmxlbmd0aDthPHU7KythKXt2YXIgYz1yW2FdLGY9Yy54LW58fDFlLTYscz1jLnktZXx8MWUtNixsPU1hdGguc3FydChmKmYrcypzKSxoPShvW2FdLWwpKmlbYV0qdC9sO2MudngrPWYqaCxjLnZ5Kz1zKmh9fWZ1bmN0aW9uIGMoKXtpZihyKXt2YXIgbixlPXIubGVuZ3RoO2ZvcihpPW5ldyBBcnJheShlKSxvPW5ldyBBcnJheShlKSxuPTA7bjxlOysrbilvW25dPSt0KHJbbl0sbixyKSxpW25dPWlzTmFOKG9bbl0pPzA6K2EocltuXSxuLHIpfX1yZXR1cm5cImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiYodD1nYSgrdCkpLG51bGw9PW4mJihuPTApLG51bGw9PWUmJihlPTApLHUuaW5pdGlhbGl6ZT1mdW5jdGlvbih0KXtyPXQsYygpfSx1LnN0cmVuZ3RoPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpnYSgrdCksYygpLHUpOmF9LHUucmFkaXVzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PVwiZnVuY3Rpb25cIj09dHlwZW9mIG4/bjpnYSgrbiksYygpLHUpOnR9LHUueD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj0rdCx1KTpufSx1Lnk9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9K3QsdSk6ZX0sdX0sdC5mb3JjZVNpbXVsYXRpb249ZnVuY3Rpb24odCl7dmFyIG4sZT0xLHI9LjAwMSxpPTEtTWF0aC5wb3cociwxLzMwMCksbz0wLGE9LjYsdT1jbygpLGM9aHIocyksZj1JKFwidGlja1wiLFwiZW5kXCIpO2Z1bmN0aW9uIHMoKXtsKCksZi5jYWxsKFwidGlja1wiLG4pLGU8ciYmKGMuc3RvcCgpLGYuY2FsbChcImVuZFwiLG4pKX1mdW5jdGlvbiBsKHIpe3ZhciBjLGYscz10Lmxlbmd0aDt2b2lkIDA9PT1yJiYocj0xKTtmb3IodmFyIGw9MDtsPHI7KytsKWZvcihlKz0oby1lKSppLHUuZWFjaChmdW5jdGlvbih0KXt0KGUpfSksYz0wO2M8czsrK2MpbnVsbD09KGY9dFtjXSkuZng/Zi54Kz1mLnZ4Kj1hOihmLng9Zi5meCxmLnZ4PTApLG51bGw9PWYuZnk/Zi55Kz1mLnZ5Kj1hOihmLnk9Zi5meSxmLnZ5PTApO3JldHVybiBufWZ1bmN0aW9uIGgoKXtmb3IodmFyIG4sZT0wLHI9dC5sZW5ndGg7ZTxyOysrZSl7aWYoKG49dFtlXSkuaW5kZXg9ZSxudWxsIT1uLmZ4JiYobi54PW4uZngpLG51bGwhPW4uZnkmJihuLnk9bi5meSksaXNOYU4obi54KXx8aXNOYU4obi55KSl7dmFyIGk9emEqTWF0aC5zcXJ0KGUpLG89ZSpSYTtuLng9aSpNYXRoLmNvcyhvKSxuLnk9aSpNYXRoLnNpbihvKX0oaXNOYU4obi52eCl8fGlzTmFOKG4udnkpKSYmKG4udng9bi52eT0wKX19ZnVuY3Rpb24gZChuKXtyZXR1cm4gbi5pbml0aWFsaXplJiZuLmluaXRpYWxpemUodCksbn1yZXR1cm4gbnVsbD09dCYmKHQ9W10pLGgoKSxuPXt0aWNrOmwscmVzdGFydDpmdW5jdGlvbigpe3JldHVybiBjLnJlc3RhcnQocyksbn0sc3RvcDpmdW5jdGlvbigpe3JldHVybiBjLnN0b3AoKSxufSxub2RlczpmdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1lLGgoKSx1LmVhY2goZCksbik6dH0sYWxwaGE6ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9K3Qsbik6ZX0sYWxwaGFNaW46ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9K3Qsbik6cn0sYWxwaGFEZWNheTpmdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT0rdCxuKToraX0sYWxwaGFUYXJnZXQ6ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG89K3Qsbik6b30sdmVsb2NpdHlEZWNheTpmdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT0xLXQsbik6MS1hfSxmb3JjZTpmdW5jdGlvbih0LGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPjE/KG51bGw9PWU/dS5yZW1vdmUodCk6dS5zZXQodCxkKGUpKSxuKTp1LmdldCh0KX0sZmluZDpmdW5jdGlvbihuLGUscil7dmFyIGksbyxhLHUsYyxmPTAscz10Lmxlbmd0aDtmb3IobnVsbD09cj9yPTEvMDpyKj1yLGY9MDtmPHM7KytmKShhPShpPW4tKHU9dFtmXSkueCkqaSsobz1lLXUueSkqbyk8ciYmKGM9dSxyPWEpO3JldHVybiBjfSxvbjpmdW5jdGlvbih0LGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPjE/KGYub24odCxlKSxuKTpmLm9uKHQpfX19LHQuZm9yY2VYPWZ1bmN0aW9uKHQpe3ZhciBuLGUscixpPWdhKC4xKTtmdW5jdGlvbiBvKHQpe2Zvcih2YXIgaSxvPTAsYT1uLmxlbmd0aDtvPGE7KytvKShpPW5bb10pLnZ4Kz0ocltvXS1pLngpKmVbb10qdH1mdW5jdGlvbiBhKCl7aWYobil7dmFyIG8sYT1uLmxlbmd0aDtmb3IoZT1uZXcgQXJyYXkoYSkscj1uZXcgQXJyYXkoYSksbz0wO288YTsrK28pZVtvXT1pc05hTihyW29dPSt0KG5bb10sbyxuKSk/MDoraShuW29dLG8sbil9fXJldHVyblwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJih0PWdhKG51bGw9PXQ/MDordCkpLG8uaW5pdGlhbGl6ZT1mdW5jdGlvbih0KXtuPXQsYSgpfSxvLnN0cmVuZ3RoPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpnYSgrdCksYSgpLG8pOml9LG8ueD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP246Z2EoK24pLGEoKSxvKTp0fSxvfSx0LmZvcmNlWT1mdW5jdGlvbih0KXt2YXIgbixlLHIsaT1nYSguMSk7ZnVuY3Rpb24gbyh0KXtmb3IodmFyIGksbz0wLGE9bi5sZW5ndGg7bzxhOysrbykoaT1uW29dKS52eSs9KHJbb10taS55KSplW29dKnR9ZnVuY3Rpb24gYSgpe2lmKG4pe3ZhciBvLGE9bi5sZW5ndGg7Zm9yKGU9bmV3IEFycmF5KGEpLHI9bmV3IEFycmF5KGEpLG89MDtvPGE7KytvKWVbb109aXNOYU4ocltvXT0rdChuW29dLG8sbikpPzA6K2kobltvXSxvLG4pfX1yZXR1cm5cImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiYodD1nYShudWxsPT10PzA6K3QpKSxvLmluaXRpYWxpemU9ZnVuY3Rpb24odCl7bj10LGEoKX0sby5zdHJlbmd0aD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6Z2EoK3QpLGEoKSxvKTppfSxvLnk9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOmdhKCtuKSxhKCksbyk6dH0sb30sdC5mb3JtYXREZWZhdWx0TG9jYWxlPUdhLHQuZm9ybWF0TG9jYWxlPVZhLHQuZm9ybWF0U3BlY2lmaWVyPU9hLHQuZ2VvQWxiZXJzPWVsLHQuZ2VvQWxiZXJzVXNhPWZ1bmN0aW9uKCl7dmFyIHQsbixlLHIsaSxvLGE9ZWwoKSx1PW5sKCkucm90YXRlKFsxNTQsMF0pLmNlbnRlcihbLTIsNTguNV0pLnBhcmFsbGVscyhbNTUsNjVdKSxjPW5sKCkucm90YXRlKFsxNTcsMF0pLmNlbnRlcihbLTMsMTkuOV0pLnBhcmFsbGVscyhbOCwxOF0pLGY9e3BvaW50OmZ1bmN0aW9uKHQsbil7bz1bdCxuXX19O2Z1bmN0aW9uIHModCl7dmFyIG49dFswXSxhPXRbMV07cmV0dXJuIG89bnVsbCxlLnBvaW50KG4sYSksb3x8KHIucG9pbnQobixhKSxvKXx8KGkucG9pbnQobixhKSxvKX1mdW5jdGlvbiBsKCl7cmV0dXJuIHQ9bj1udWxsLHN9cmV0dXJuIHMuaW52ZXJ0PWZ1bmN0aW9uKHQpe3ZhciBuPWEuc2NhbGUoKSxlPWEudHJhbnNsYXRlKCkscj0odFswXS1lWzBdKS9uLGk9KHRbMV0tZVsxXSkvbjtyZXR1cm4oaT49LjEyJiZpPC4yMzQmJnI+PS0uNDI1JiZyPC0uMjE0P3U6aT49LjE2NiYmaTwuMjM0JiZyPj0tLjIxNCYmcjwtLjExNT9jOmEpLmludmVydCh0KX0scy5zdHJlYW09ZnVuY3Rpb24oZSl7cmV0dXJuIHQmJm49PT1lP3Q6KHI9W2Euc3RyZWFtKG49ZSksdS5zdHJlYW0oZSksYy5zdHJlYW0oZSldLGk9ci5sZW5ndGgsdD17cG9pbnQ6ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9LTE7KytlPGk7KXJbZV0ucG9pbnQodCxuKX0sc3BoZXJlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PS0xOysrdDxpOylyW3RdLnNwaGVyZSgpfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9LTE7Kyt0PGk7KXJbdF0ubGluZVN0YXJ0KCl9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9LTE7Kyt0PGk7KXJbdF0ubGluZUVuZCgpfSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9LTE7Kyt0PGk7KXJbdF0ucG9seWdvblN0YXJ0KCl9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9LTE7Kyt0PGk7KXJbdF0ucG9seWdvbkVuZCgpfX0pO3ZhciByLGl9LHMucHJlY2lzaW9uPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhLnByZWNpc2lvbih0KSx1LnByZWNpc2lvbih0KSxjLnByZWNpc2lvbih0KSxsKCkpOmEucHJlY2lzaW9uKCl9LHMuc2NhbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGEuc2NhbGUodCksdS5zY2FsZSguMzUqdCksYy5zY2FsZSh0KSxzLnRyYW5zbGF0ZShhLnRyYW5zbGF0ZSgpKSk6YS5zY2FsZSgpfSxzLnRyYW5zbGF0ZT1mdW5jdGlvbih0KXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gYS50cmFuc2xhdGUoKTt2YXIgbj1hLnNjYWxlKCksbz0rdFswXSxzPSt0WzFdO3JldHVybiBlPWEudHJhbnNsYXRlKHQpLmNsaXBFeHRlbnQoW1tvLS40NTUqbixzLS4yMzgqbl0sW28rLjQ1NSpuLHMrLjIzOCpuXV0pLnN0cmVhbShmKSxyPXUudHJhbnNsYXRlKFtvLS4zMDcqbixzKy4yMDEqbl0pLmNsaXBFeHRlbnQoW1tvLS40MjUqbitudSxzKy4xMipuK251XSxbby0uMjE0Km4tbnUscysuMjM0Km4tbnVdXSkuc3RyZWFtKGYpLGk9Yy50cmFuc2xhdGUoW28tLjIwNSpuLHMrLjIxMipuXSkuY2xpcEV4dGVudChbW28tLjIxNCpuK251LHMrLjE2NipuK251XSxbby0uMTE1Km4tbnUscysuMjM0Km4tbnVdXSkuc3RyZWFtKGYpLGwoKX0scy5maXRFeHRlbnQ9ZnVuY3Rpb24odCxuKXtyZXR1cm4gSXMocyx0LG4pfSxzLmZpdFNpemU9ZnVuY3Rpb24odCxuKXtyZXR1cm4gSHMocyx0LG4pfSxzLmZpdFdpZHRoPWZ1bmN0aW9uKHQsbil7cmV0dXJuIGpzKHMsdCxuKX0scy5maXRIZWlnaHQ9ZnVuY3Rpb24odCxuKXtyZXR1cm4gWHMocyx0LG4pfSxzLnNjYWxlKDEwNzApfSx0Lmdlb0FyZWE9ZnVuY3Rpb24odCl7cmV0dXJuIFV1LnJlc2V0KCksQ3UodCxPdSksMipVdX0sdC5nZW9BemltdXRoYWxFcXVhbEFyZWE9ZnVuY3Rpb24oKXtyZXR1cm4gUXMob2wpLnNjYWxlKDEyNC43NSkuY2xpcEFuZ2xlKDE3OS45OTkpfSx0Lmdlb0F6aW11dGhhbEVxdWFsQXJlYVJhdz1vbCx0Lmdlb0F6aW11dGhhbEVxdWlkaXN0YW50PWZ1bmN0aW9uKCl7cmV0dXJuIFFzKGFsKS5zY2FsZSg3OS40MTg4KS5jbGlwQW5nbGUoMTc5Ljk5OSl9LHQuZ2VvQXppbXV0aGFsRXF1aWRpc3RhbnRSYXc9YWwsdC5nZW9Cb3VuZHM9ZnVuY3Rpb24odCl7dmFyIG4sZSxyLGksbyxhLHU7aWYoSnU9S3U9LShadT1RdT0xLzApLGljPVtdLEN1KHQsTWMpLGU9aWMubGVuZ3RoKXtmb3IoaWMuc29ydCh6Yyksbj0xLG89W3I9aWNbMF1dO248ZTsrK24pUmMociwoaT1pY1tuXSlbMF0pfHxSYyhyLGlbMV0pPyhQYyhyWzBdLGlbMV0pPlBjKHJbMF0sclsxXSkmJihyWzFdPWlbMV0pLFBjKGlbMF0sclsxXSk+UGMoclswXSxyWzFdKSYmKHJbMF09aVswXSkpOm8ucHVzaChyPWkpO2ZvcihhPS0xLzAsbj0wLHI9b1tlPW8ubGVuZ3RoLTFdO248PWU7cj1pLCsrbilpPW9bbl0sKHU9UGMoclsxXSxpWzBdKSk+YSYmKGE9dSxadT1pWzBdLEt1PXJbMV0pfXJldHVybiBpYz1vYz1udWxsLFp1PT09MS8wfHxRdT09PTEvMD9bW05hTixOYU5dLFtOYU4sTmFOXV06W1tadSxRdV0sW0t1LEp1XV19LHQuZ2VvQ2VudHJvaWQ9ZnVuY3Rpb24odCl7YWM9dWM9Y2M9ZmM9c2M9bGM9aGM9ZGM9cGM9dmM9Z2M9MCxDdSh0LERjKTt2YXIgbj1wYyxlPXZjLHI9Z2MsaT1uKm4rZSplK3IqcjtyZXR1cm4gaTxldSYmKG49bGMsZT1oYyxyPWRjLHVjPG51JiYobj1jYyxlPWZjLHI9c2MpLChpPW4qbitlKmUrcipyKTxldSk/W05hTixOYU5dOltsdShlLG4pKnV1LHd1KHIvYnUoaSkpKnV1XX0sdC5nZW9DaXJjbGU9ZnVuY3Rpb24oKXt2YXIgdCxuLGU9WGMoWzAsMF0pLHI9WGMoOTApLGk9WGMoNiksbz17cG9pbnQ6ZnVuY3Rpb24oZSxyKXt0LnB1c2goZT1uKGUscikpLGVbMF0qPXV1LGVbMV0qPXV1fX07ZnVuY3Rpb24gYSgpe3ZhciBhPWUuYXBwbHkodGhpcyxhcmd1bWVudHMpLHU9ci5hcHBseSh0aGlzLGFyZ3VtZW50cykqY3UsYz1pLmFwcGx5KHRoaXMsYXJndW1lbnRzKSpjdTtyZXR1cm4gdD1bXSxuPSRjKC1hWzBdKmN1LC1hWzFdKmN1LDApLmludmVydCxKYyhvLHUsYywxKSxhPXt0eXBlOlwiUG9seWdvblwiLGNvb3JkaW5hdGVzOlt0XX0sdD1uPW51bGwsYX1yZXR1cm4gYS5jZW50ZXI9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OlhjKFsrdFswXSwrdFsxXV0pLGEpOmV9LGEucmFkaXVzPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpYYygrdCksYSk6cn0sYS5wcmVjaXNpb249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OlhjKCt0KSxhKTppfSxhfSx0Lmdlb0NsaXBBbnRpbWVyaWRpYW49ZGYsdC5nZW9DbGlwQ2lyY2xlPXBmLHQuZ2VvQ2xpcEV4dGVudD1mdW5jdGlvbigpe3ZhciB0LG4sZSxyPTAsaT0wLG89OTYwLGE9NTAwO3JldHVybiBlPXtzdHJlYW06ZnVuY3Rpb24oZSl7cmV0dXJuIHQmJm49PT1lP3Q6dD15ZihyLGksbyxhKShuPWUpfSxleHRlbnQ6ZnVuY3Rpb24odSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9K3VbMF1bMF0saT0rdVswXVsxXSxvPSt1WzFdWzBdLGE9K3VbMV1bMV0sdD1uPW51bGwsZSk6W1tyLGldLFtvLGFdXX19fSx0Lmdlb0NsaXBSZWN0YW5nbGU9eWYsdC5nZW9Db25pY0NvbmZvcm1hbD1mdW5jdGlvbigpe3JldHVybiBKcyhzbCkuc2NhbGUoMTA5LjUpLnBhcmFsbGVscyhbMzAsMzBdKX0sdC5nZW9Db25pY0NvbmZvcm1hbFJhdz1zbCx0Lmdlb0NvbmljRXF1YWxBcmVhPW5sLHQuZ2VvQ29uaWNFcXVhbEFyZWFSYXc9dGwsdC5nZW9Db25pY0VxdWlkaXN0YW50PWZ1bmN0aW9uKCl7cmV0dXJuIEpzKGhsKS5zY2FsZSgxMzEuMTU0KS5jZW50ZXIoWzAsMTMuOTM4OV0pfSx0Lmdlb0NvbmljRXF1aWRpc3RhbnRSYXc9aGwsdC5nZW9Db250YWlucz1mdW5jdGlvbih0LG4pe3JldHVybih0JiZDZi5oYXNPd25Qcm9wZXJ0eSh0LnR5cGUpP0NmW3QudHlwZV06emYpKHQsbil9LHQuZ2VvRGlzdGFuY2U9RWYsdC5nZW9FcXVhbEVhcnRoPWZ1bmN0aW9uKCl7cmV0dXJuIFFzKF9sKS5zY2FsZSgxNzcuMTU4KX0sdC5nZW9FcXVhbEVhcnRoUmF3PV9sLHQuZ2VvRXF1aXJlY3Rhbmd1bGFyPWZ1bmN0aW9uKCl7cmV0dXJuIFFzKGxsKS5zY2FsZSgxNTIuNjMpfSx0Lmdlb0VxdWlyZWN0YW5ndWxhclJhdz1sbCx0Lmdlb0dub21vbmljPWZ1bmN0aW9uKCl7cmV0dXJuIFFzKGJsKS5zY2FsZSgxNDQuMDQ5KS5jbGlwQW5nbGUoNjApfSx0Lmdlb0dub21vbmljUmF3PWJsLHQuZ2VvR3JhdGljdWxlPUZmLHQuZ2VvR3JhdGljdWxlMTA9ZnVuY3Rpb24oKXtyZXR1cm4gRmYoKSgpfSx0Lmdlb0lkZW50aXR5PWZ1bmN0aW9uKCl7dmFyIHQsbixlLHIsaSxvLGEsdT0xLGM9MCxmPTAscz0xLGw9MSxoPTAsZD1udWxsLHA9MSx2PTEsZz1Ccyh7cG9pbnQ6ZnVuY3Rpb24odCxuKXt2YXIgZT1iKFt0LG5dKTt0aGlzLnN0cmVhbS5wb2ludChlWzBdLGVbMV0pfX0pLHk9WWY7ZnVuY3Rpb24gXygpe3JldHVybiBwPXUqcyx2PXUqbCxvPWE9bnVsbCxifWZ1bmN0aW9uIGIoZSl7dmFyIHI9ZVswXSpwLGk9ZVsxXSp2O2lmKGgpe3ZhciBvPWkqdC1yKm47cj1yKnQraSpuLGk9b31yZXR1cm5bcitjLGkrZl19cmV0dXJuIGIuaW52ZXJ0PWZ1bmN0aW9uKGUpe3ZhciByPWVbMF0tYyxpPWVbMV0tZjtpZihoKXt2YXIgbz1pKnQrcipuO3I9cip0LWkqbixpPW99cmV0dXJuW3IvcCxpL3ZdfSxiLnN0cmVhbT1mdW5jdGlvbih0KXtyZXR1cm4gbyYmYT09PXQ/bzpvPWcoeShhPXQpKX0sYi5wb3N0Y2xpcD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeT10LGQ9ZT1yPWk9bnVsbCxfKCkpOnl9LGIuY2xpcEV4dGVudD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeT1udWxsPT10PyhkPWU9cj1pPW51bGwsWWYpOnlmKGQ9K3RbMF1bMF0sZT0rdFswXVsxXSxyPSt0WzFdWzBdLGk9K3RbMV1bMV0pLF8oKSk6bnVsbD09ZD9udWxsOltbZCxlXSxbcixpXV19LGIuc2NhbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9K3QsXygpKTp1fSxiLnRyYW5zbGF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz0rdFswXSxmPSt0WzFdLF8oKSk6W2MsZl19LGIuYW5nbGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49eXUoaD1lJTM2MCpjdSksdD1odShoKSxfKCkpOmgqdXV9LGIucmVmbGVjdFg9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHM9dD8tMToxLF8oKSk6czwwfSxiLnJlZmxlY3RZPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhsPXQ/LTE6MSxfKCkpOmw8MH0sYi5maXRFeHRlbnQ9ZnVuY3Rpb24odCxuKXtyZXR1cm4gSXMoYix0LG4pfSxiLmZpdFNpemU9ZnVuY3Rpb24odCxuKXtyZXR1cm4gSHMoYix0LG4pfSxiLmZpdFdpZHRoPWZ1bmN0aW9uKHQsbil7cmV0dXJuIGpzKGIsdCxuKX0sYi5maXRIZWlnaHQ9ZnVuY3Rpb24odCxuKXtyZXR1cm4gWHMoYix0LG4pfSxifSx0Lmdlb0ludGVycG9sYXRlPWZ1bmN0aW9uKHQsbil7dmFyIGU9dFswXSpjdSxyPXRbMV0qY3UsaT1uWzBdKmN1LG89blsxXSpjdSxhPWh1KHIpLHU9eXUociksYz1odShvKSxmPXl1KG8pLHM9YSpodShlKSxsPWEqeXUoZSksaD1jKmh1KGkpLGQ9Yyp5dShpKSxwPTIqd3UoYnUoTXUoby1yKSthKmMqTXUoaS1lKSkpLHY9eXUocCksZz1wP2Z1bmN0aW9uKHQpe3ZhciBuPXl1KHQqPXApL3YsZT15dShwLXQpL3Yscj1lKnMrbipoLGk9ZSpsK24qZCxvPWUqdStuKmY7cmV0dXJuW2x1KGkscikqdXUsbHUobyxidShyKnIraSppKSkqdXVdfTpmdW5jdGlvbigpe3JldHVybltlKnV1LHIqdXVdfTtyZXR1cm4gZy5kaXN0YW5jZT1wLGd9LHQuZ2VvTGVuZ3RoPUFmLHQuZ2VvTWVyY2F0b3I9ZnVuY3Rpb24oKXtyZXR1cm4gY2wodWwpLnNjYWxlKDk2MS9hdSl9LHQuZ2VvTWVyY2F0b3JSYXc9dWwsdC5nZW9OYXR1cmFsRWFydGgxPWZ1bmN0aW9uKCl7cmV0dXJuIFFzKG1sKS5zY2FsZSgxNzUuMjk1KX0sdC5nZW9OYXR1cmFsRWFydGgxUmF3PW1sLHQuZ2VvT3J0aG9ncmFwaGljPWZ1bmN0aW9uKCl7cmV0dXJuIFFzKHhsKS5zY2FsZSgyNDkuNSkuY2xpcEFuZ2xlKDkwK251KX0sdC5nZW9PcnRob2dyYXBoaWNSYXc9eGwsdC5nZW9QYXRoPWZ1bmN0aW9uKHQsbil7dmFyIGUscixpPTQuNTtmdW5jdGlvbiBvKHQpe3JldHVybiB0JiYoXCJmdW5jdGlvblwiPT10eXBlb2YgaSYmci5wb2ludFJhZGl1cygraS5hcHBseSh0aGlzLGFyZ3VtZW50cykpLEN1KHQsZShyKSkpLHIucmVzdWx0KCl9cmV0dXJuIG8uYXJlYT1mdW5jdGlvbih0KXtyZXR1cm4gQ3UodCxlKCRmKSksJGYucmVzdWx0KCl9LG8ubWVhc3VyZT1mdW5jdGlvbih0KXtyZXR1cm4gQ3UodCxlKERzKSksRHMucmVzdWx0KCl9LG8uYm91bmRzPWZ1bmN0aW9uKHQpe3JldHVybiBDdSh0LGUocnMpKSxycy5yZXN1bHQoKX0sby5jZW50cm9pZD1mdW5jdGlvbih0KXtyZXR1cm4gQ3UodCxlKHlzKSkseXMucmVzdWx0KCl9LG8ucHJvamVjdGlvbj1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1udWxsPT1uPyh0PW51bGwsWWYpOih0PW4pLnN0cmVhbSxvKTp0fSxvLmNvbnRleHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9bnVsbD09dD8obj1udWxsLG5ldyBVcyk6bmV3IFNzKG49dCksXCJmdW5jdGlvblwiIT10eXBlb2YgaSYmci5wb2ludFJhZGl1cyhpKSxvKTpufSxvLnBvaW50UmFkaXVzPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDooci5wb2ludFJhZGl1cygrdCksK3QpLG8pOml9LG8ucHJvamVjdGlvbih0KS5jb250ZXh0KG4pfSx0Lmdlb1Byb2plY3Rpb249UXMsdC5nZW9Qcm9qZWN0aW9uTXV0YXRvcj1Lcyx0Lmdlb1JvdGF0aW9uPUtjLHQuZ2VvU3RlcmVvZ3JhcGhpYz1mdW5jdGlvbigpe3JldHVybiBRcyh3bCkuc2NhbGUoMjUwKS5jbGlwQW5nbGUoMTQyKX0sdC5nZW9TdGVyZW9ncmFwaGljUmF3PXdsLHQuZ2VvU3RyZWFtPUN1LHQuZ2VvVHJhbnNmb3JtPWZ1bmN0aW9uKHQpe3JldHVybntzdHJlYW06QnModCl9fSx0Lmdlb1RyYW5zdmVyc2VNZXJjYXRvcj1mdW5jdGlvbigpe3ZhciB0PWNsKE1sKSxuPXQuY2VudGVyLGU9dC5yb3RhdGU7cmV0dXJuIHQuY2VudGVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP24oWy10WzFdLHRbMF1dKTpbKHQ9bigpKVsxXSwtdFswXV19LHQucm90YXRlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP2UoW3RbMF0sdFsxXSx0Lmxlbmd0aD4yP3RbMl0rOTA6OTBdKTpbKHQ9ZSgpKVswXSx0WzFdLHRbMl0tOTBdfSxlKFswLDAsOTBdKS5zY2FsZSgxNTkuMTU1KX0sdC5nZW9UcmFuc3ZlcnNlTWVyY2F0b3JSYXc9TWwsdC5ncmF5PWZ1bmN0aW9uKHQsbil7cmV0dXJuIG5ldyBCbih0LDAsMCxudWxsPT1uPzE6bil9LHQuaGNsPVhuLHQuaGllcmFyY2h5PWtsLHQuaGlzdG9ncmFtPWZ1bmN0aW9uKCl7dmFyIHQ9dixuPXMsZT1NO2Z1bmN0aW9uIHIocil7dmFyIG8sYSx1PXIubGVuZ3RoLGM9bmV3IEFycmF5KHUpO2ZvcihvPTA7bzx1OysrbyljW29dPXQocltvXSxvLHIpO3ZhciBmPW4oYykscz1mWzBdLGw9ZlsxXSxoPWUoYyxzLGwpO0FycmF5LmlzQXJyYXkoaCl8fChoPXcocyxsLGgpLGg9ZyhNYXRoLmNlaWwocy9oKSpoLGwsaCkpO2Zvcih2YXIgZD1oLmxlbmd0aDtoWzBdPD1zOyloLnNoaWZ0KCksLS1kO2Zvcig7aFtkLTFdPmw7KWgucG9wKCksLS1kO3ZhciBwLHY9bmV3IEFycmF5KGQrMSk7Zm9yKG89MDtvPD1kOysrbykocD12W29dPVtdKS54MD1vPjA/aFtvLTFdOnMscC54MT1vPGQ/aFtvXTpsO2ZvcihvPTA7bzx1OysrbylzPD0oYT1jW29dKSYmYTw9bCYmdltpKGgsYSwwLGQpXS5wdXNoKHJbb10pO3JldHVybiB2fXJldHVybiByLnZhbHVlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PVwiZnVuY3Rpb25cIj09dHlwZW9mIG4/bjpwKG4pLHIpOnR9LHIuZG9tYWluPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpwKFt0WzBdLHRbMV1dKSxyKTpufSxyLnRocmVzaG9sZHM9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OkFycmF5LmlzQXJyYXkodCk/cChoLmNhbGwodCkpOnAodCkscik6ZX0scn0sdC5oc2w9VG4sdC5odG1sPXBhLHQuaW1hZ2U9ZnVuY3Rpb24odCxuKXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24oZSxyKXt2YXIgaT1uZXcgSW1hZ2U7Zm9yKHZhciBvIGluIG4paVtvXT1uW29dO2kub25lcnJvcj1yLGkub25sb2FkPWZ1bmN0aW9uKCl7ZShpKX0saS5zcmM9dH0pfSx0LmludGVycG9sYXRlPVRlLHQuaW50ZXJwb2xhdGVBcnJheT1mdW5jdGlvbih0LG4pe3JldHVybih5ZShuKT9nZTpfZSkodCxuKX0sdC5pbnRlcnBvbGF0ZUJhc2lzPW9lLHQuaW50ZXJwb2xhdGVCYXNpc0Nsb3NlZD1hZSx0LmludGVycG9sYXRlQmx1ZXM9UWcsdC5pbnRlcnBvbGF0ZUJyQkc9ZmcsdC5pbnRlcnBvbGF0ZUJ1R249U2csdC5pbnRlcnBvbGF0ZUJ1UHU9RWcsdC5pbnRlcnBvbGF0ZUNpdmlkaXM9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9TWF0aC5tYXgoMCxNYXRoLm1pbigxLHQpKSxcInJnYihcIitNYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKC00LjU0LXQqKDM1LjM0LXQqKDIzODEuNzMtdCooNjQwMi43LXQqKDcwMjQuNzItMjcxMC41Nyp0KSkpKSkpKStcIiwgXCIrTWF0aC5tYXgoMCxNYXRoLm1pbigyNTUsTWF0aC5yb3VuZCgzMi40OSt0KigxNzAuNzMrdCooNTIuODItdCooMTMxLjQ2LXQqKDE3Ni41OC02Ny4zNyp0KSkpKSkpKStcIiwgXCIrTWF0aC5tYXgoMCxNYXRoLm1pbigyNTUsTWF0aC5yb3VuZCg4MS4yNCt0Kig0NDIuMzYtdCooMjQ4Mi40My10Kig2MTY3LjI0LXQqKDY2MTQuOTQtMjQ3NS42Nyp0KSkpKSkpKStcIilcIn0sdC5pbnRlcnBvbGF0ZUNvb2w9c3ksdC5pbnRlcnBvbGF0ZUN1YmVoZWxpeD1aZSx0LmludGVycG9sYXRlQ3ViZWhlbGl4RGVmYXVsdD1jeSx0LmludGVycG9sYXRlQ3ViZWhlbGl4TG9uZz1RZSx0LmludGVycG9sYXRlRGF0ZT1iZSx0LmludGVycG9sYXRlRGlzY3JldGU9ZnVuY3Rpb24odCl7dmFyIG49dC5sZW5ndGg7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiB0W01hdGgubWF4KDAsTWF0aC5taW4obi0xLE1hdGguZmxvb3IoZSpuKSkpXX19LHQuaW50ZXJwb2xhdGVHbkJ1PVBnLHQuaW50ZXJwb2xhdGVHcmVlbnM9SmcsdC5pbnRlcnBvbGF0ZUdyZXlzPW55LHQuaW50ZXJwb2xhdGVIY2w9R2UsdC5pbnRlcnBvbGF0ZUhjbExvbmc9JGUsdC5pbnRlcnBvbGF0ZUhzbD1qZSx0LmludGVycG9sYXRlSHNsTG9uZz1YZSx0LmludGVycG9sYXRlSHVlPWZ1bmN0aW9uKHQsbil7dmFyIGU9ZmUoK3QsK24pO3JldHVybiBmdW5jdGlvbih0KXt2YXIgbj1lKHQpO3JldHVybiBuLTM2MCpNYXRoLmZsb29yKG4vMzYwKX19LHQuaW50ZXJwb2xhdGVJbmZlcm5vPV95LHQuaW50ZXJwb2xhdGVMYWI9ZnVuY3Rpb24odCxuKXt2YXIgZT1sZSgodD1Pbih0KSkubCwobj1PbihuKSkubCkscj1sZSh0LmEsbi5hKSxpPWxlKHQuYixuLmIpLG89bGUodC5vcGFjaXR5LG4ub3BhY2l0eSk7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiB0Lmw9ZShuKSx0LmE9cihuKSx0LmI9aShuKSx0Lm9wYWNpdHk9byhuKSx0K1wiXCJ9fSx0LmludGVycG9sYXRlTWFnbWE9eXksdC5pbnRlcnBvbGF0ZU51bWJlcj1tZSx0LmludGVycG9sYXRlTnVtYmVyQXJyYXk9Z2UsdC5pbnRlcnBvbGF0ZU9iamVjdD14ZSx0LmludGVycG9sYXRlT3JSZD1SZyx0LmludGVycG9sYXRlT3Jhbmdlcz11eSx0LmludGVycG9sYXRlUFJHbj1sZyx0LmludGVycG9sYXRlUGlZRz1kZyx0LmludGVycG9sYXRlUGxhc21hPWJ5LHQuaW50ZXJwb2xhdGVQdUJ1PVVnLHQuaW50ZXJwb2xhdGVQdUJ1R249cWcsdC5pbnRlcnBvbGF0ZVB1T3I9dmcsdC5pbnRlcnBvbGF0ZVB1UmQ9QmcsdC5pbnRlcnBvbGF0ZVB1cnBsZXM9cnksdC5pbnRlcnBvbGF0ZVJhaW5ib3c9ZnVuY3Rpb24odCl7KHQ8MHx8dD4xKSYmKHQtPU1hdGguZmxvb3IodCkpO3ZhciBuPU1hdGguYWJzKHQtLjUpO3JldHVybiBseS5oPTM2MCp0LTEwMCxseS5zPTEuNS0xLjUqbixseS5sPS44LS45Km4sbHkrXCJcIn0sdC5pbnRlcnBvbGF0ZVJkQnU9eWcsdC5pbnRlcnBvbGF0ZVJkR3k9YmcsdC5pbnRlcnBvbGF0ZVJkUHU9WWcsdC5pbnRlcnBvbGF0ZVJkWWxCdT14Zyx0LmludGVycG9sYXRlUmRZbEduPU1nLHQuaW50ZXJwb2xhdGVSZWRzPW95LHQuaW50ZXJwb2xhdGVSZ2I9aGUsdC5pbnRlcnBvbGF0ZVJnYkJhc2lzPXBlLHQuaW50ZXJwb2xhdGVSZ2JCYXNpc0Nsb3NlZD12ZSx0LmludGVycG9sYXRlUm91bmQ9QWUsdC5pbnRlcnBvbGF0ZVNpbmVib3c9ZnVuY3Rpb24odCl7dmFyIG47cmV0dXJuIHQ9KC41LXQpKk1hdGguUEksaHkucj0yNTUqKG49TWF0aC5zaW4odCkpKm4saHkuZz0yNTUqKG49TWF0aC5zaW4odCtkeSkpKm4saHkuYj0yNTUqKG49TWF0aC5zaW4odCtweSkpKm4saHkrXCJcIn0sdC5pbnRlcnBvbGF0ZVNwZWN0cmFsPVRnLHQuaW50ZXJwb2xhdGVTdHJpbmc9TmUsdC5pbnRlcnBvbGF0ZVRyYW5zZm9ybUNzcz1xZSx0LmludGVycG9sYXRlVHJhbnNmb3JtU3ZnPUxlLHQuaW50ZXJwb2xhdGVUdXJibz1mdW5jdGlvbih0KXtyZXR1cm4gdD1NYXRoLm1heCgwLE1hdGgubWluKDEsdCkpLFwicmdiKFwiK01hdGgubWF4KDAsTWF0aC5taW4oMjU1LE1hdGgucm91bmQoMzQuNjErdCooMTE3Mi4zMy10KigxMDc5My41Ni10KigzMzMwMC4xMi10KigzODM5NC40OS0xNDgyNS4wNSp0KSkpKSkpKStcIiwgXCIrTWF0aC5tYXgoMCxNYXRoLm1pbigyNTUsTWF0aC5yb3VuZCgyMy4zMSt0Kig1NTcuMzMrdCooMTIyNS4zMy10KigzNTc0Ljk2LXQqKDEwNzMuNzcrNzA3LjU2KnQpKSkpKSkpK1wiLCBcIitNYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKDI3LjIrdCooMzIxMS4xLXQqKDE1MzI3Ljk3LXQqKDI3ODE0LXQqKDIyNTY5LjE4LTY4MzguNjYqdCkpKSkpKSkrXCIpXCJ9LHQuaW50ZXJwb2xhdGVWaXJpZGlzPWd5LHQuaW50ZXJwb2xhdGVXYXJtPWZ5LHQuaW50ZXJwb2xhdGVZbEduPVhnLHQuaW50ZXJwb2xhdGVZbEduQnU9SGcsdC5pbnRlcnBvbGF0ZVlsT3JCcj1HZyx0LmludGVycG9sYXRlWWxPclJkPVdnLHQuaW50ZXJwb2xhdGVab29tPUllLHQuaW50ZXJydXB0PVByLHQuaW50ZXJ2YWw9ZnVuY3Rpb24odCxuLGUpe3ZhciByPW5ldyBscixpPW47cmV0dXJuIG51bGw9PW4/KHIucmVzdGFydCh0LG4sZSkscik6KG49K24sZT1udWxsPT1lP2ZyKCk6K2Usci5yZXN0YXJ0KGZ1bmN0aW9uIG8oYSl7YSs9aSxyLnJlc3RhcnQobyxpKz1uLGUpLHQoYSl9LG4sZSkscil9LHQuaXNvRm9ybWF0PVJ2LHQuaXNvUGFyc2U9RHYsdC5qc29uPWZ1bmN0aW9uKHQsbil7cmV0dXJuIGZldGNoKHQsbikudGhlbihsYSl9LHQua2V5cz1mdW5jdGlvbih0KXt2YXIgbj1bXTtmb3IodmFyIGUgaW4gdCluLnB1c2goZSk7cmV0dXJuIG59LHQubGFiPU9uLHQubGNoPWZ1bmN0aW9uKHQsbixlLHIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9qbih0KTpuZXcgVm4oZSxuLHQsbnVsbD09cj8xOnIpfSx0LmxpbmU9SHksdC5saW5lUmFkaWFsPVF5LHQubGlua0hvcml6b250YWw9ZnVuY3Rpb24oKXtyZXR1cm4gcl8oaV8pfSx0LmxpbmtSYWRpYWw9ZnVuY3Rpb24oKXt2YXIgdD1yXyhhXyk7cmV0dXJuIHQuYW5nbGU9dC54LGRlbGV0ZSB0LngsdC5yYWRpdXM9dC55LGRlbGV0ZSB0LnksdH0sdC5saW5rVmVydGljYWw9ZnVuY3Rpb24oKXtyZXR1cm4gcl8ob18pfSx0LmxvY2FsPXF0LHQubWFwPWNvLHQubWF0Y2hlcj1udCx0Lm1heD1ULHQubWVhbj1mdW5jdGlvbih0LG4pe3ZhciBlLHI9dC5sZW5ndGgsaT1yLG89LTEsYT0wO2lmKG51bGw9PW4pZm9yKDsrK288cjspaXNOYU4oZT11KHRbb10pKT8tLWk6YSs9ZTtlbHNlIGZvcig7KytvPHI7KWlzTmFOKGU9dShuKHRbb10sbyx0KSkpPy0taTphKz1lO2lmKGkpcmV0dXJuIGEvaX0sdC5tZWRpYW49ZnVuY3Rpb24odCxlKXt2YXIgcixpPXQubGVuZ3RoLG89LTEsYT1bXTtpZihudWxsPT1lKWZvcig7KytvPGk7KWlzTmFOKHI9dSh0W29dKSl8fGEucHVzaChyKTtlbHNlIGZvcig7KytvPGk7KWlzTmFOKHI9dShlKHRbb10sbyx0KSkpfHxhLnB1c2gocik7cmV0dXJuIE4oYS5zb3J0KG4pLC41KX0sdC5tZXJnZT1BLHQubWluPVMsdC5tb3VzZT1CdCx0Lm5hbWVzcGFjZT1XLHQubmFtZXNwYWNlcz0kLHQubmVzdD1mdW5jdGlvbigpe3ZhciB0LG4sZSxyPVtdLGk9W107ZnVuY3Rpb24gbyhlLGksYSx1KXtpZihpPj1yLmxlbmd0aClyZXR1cm4gbnVsbCE9dCYmZS5zb3J0KHQpLG51bGwhPW4/bihlKTplO2Zvcih2YXIgYyxmLHMsbD0tMSxoPWUubGVuZ3RoLGQ9cltpKytdLHA9Y28oKSx2PWEoKTsrK2w8aDspKHM9cC5nZXQoYz1kKGY9ZVtsXSkrXCJcIikpP3MucHVzaChmKTpwLnNldChjLFtmXSk7cmV0dXJuIHAuZWFjaChmdW5jdGlvbih0LG4pe3UodixuLG8odCxpLGEsdSkpfSksdn1yZXR1cm4gZT17b2JqZWN0OmZ1bmN0aW9uKHQpe3JldHVybiBvKHQsMCxmbyxzbyl9LG1hcDpmdW5jdGlvbih0KXtyZXR1cm4gbyh0LDAsbG8saG8pfSxlbnRyaWVzOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbiB0KGUsbyl7aWYoKytvPnIubGVuZ3RoKXJldHVybiBlO3ZhciBhLHU9aVtvLTFdO3JldHVybiBudWxsIT1uJiZvPj1yLmxlbmd0aD9hPWUuZW50cmllcygpOihhPVtdLGUuZWFjaChmdW5jdGlvbihuLGUpe2EucHVzaCh7a2V5OmUsdmFsdWVzOnQobixvKX0pfSkpLG51bGwhPXU/YS5zb3J0KGZ1bmN0aW9uKHQsbil7cmV0dXJuIHUodC5rZXksbi5rZXkpfSk6YX0obyh0LDAsbG8saG8pLDApfSxrZXk6ZnVuY3Rpb24odCl7cmV0dXJuIHIucHVzaCh0KSxlfSxzb3J0S2V5czpmdW5jdGlvbih0KXtyZXR1cm4gaVtyLmxlbmd0aC0xXT10LGV9LHNvcnRWYWx1ZXM6ZnVuY3Rpb24obil7cmV0dXJuIHQ9bixlfSxyb2xsdXA6ZnVuY3Rpb24odCl7cmV0dXJuIG49dCxlfX19LHQubm93PWZyLHQucGFjaz1mdW5jdGlvbigpe3ZhciB0PW51bGwsbj0xLGU9MSxyPVdsO2Z1bmN0aW9uIGkoaSl7cmV0dXJuIGkueD1uLzIsaS55PWUvMix0P2kuZWFjaEJlZm9yZShLbCh0KSkuZWFjaEFmdGVyKEpsKHIsLjUpKS5lYWNoQmVmb3JlKHRoKDEpKTppLmVhY2hCZWZvcmUoS2woUWwpKS5lYWNoQWZ0ZXIoSmwoV2wsMSkpLmVhY2hBZnRlcihKbChyLGkuci9NYXRoLm1pbihuLGUpKSkuZWFjaEJlZm9yZSh0aChNYXRoLm1pbihuLGUpLygyKmkucikpKSxpfXJldHVybiBpLnJhZGl1cz1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1HbChuKSxpKTp0fSxpLnNpemU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49K3RbMF0sZT0rdFsxXSxpKTpbbixlXX0saS5wYWRkaW5nPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpabCgrdCksaSk6cn0saX0sdC5wYWNrRW5jbG9zZT1EbCx0LnBhY2tTaWJsaW5ncz1mdW5jdGlvbih0KXtyZXR1cm4gVmwodCksdH0sdC5wYWlycz1mdW5jdGlvbih0LG4pe251bGw9PW4mJihuPWEpO2Zvcih2YXIgZT0wLHI9dC5sZW5ndGgtMSxpPXRbMF0sbz1uZXcgQXJyYXkocjwwPzA6cik7ZTxyOylvW2VdPW4oaSxpPXRbKytlXSk7cmV0dXJuIG99LHQucGFydGl0aW9uPWZ1bmN0aW9uKCl7dmFyIHQ9MSxuPTEsZT0wLHI9ITE7ZnVuY3Rpb24gaShpKXt2YXIgbz1pLmhlaWdodCsxO3JldHVybiBpLngwPWkueTA9ZSxpLngxPXQsaS55MT1uL28saS5lYWNoQmVmb3JlKGZ1bmN0aW9uKHQsbil7cmV0dXJuIGZ1bmN0aW9uKHIpe3IuY2hpbGRyZW4mJmVoKHIsci54MCx0KihyLmRlcHRoKzEpL24sci54MSx0KihyLmRlcHRoKzIpL24pO3ZhciBpPXIueDAsbz1yLnkwLGE9ci54MS1lLHU9ci55MS1lO2E8aSYmKGk9YT0oaSthKS8yKSx1PG8mJihvPXU9KG8rdSkvMiksci54MD1pLHIueTA9byxyLngxPWEsci55MT11fX0obixvKSksciYmaS5lYWNoQmVmb3JlKG5oKSxpfXJldHVybiBpLnJvdW5kPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPSEhdCxpKTpyfSxpLnNpemU9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9K2VbMF0sbj0rZVsxXSxpKTpbdCxuXX0saS5wYWRkaW5nPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPSt0LGkpOmV9LGl9LHQucGF0aD1ubyx0LnBlcm11dGU9ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9bi5sZW5ndGgscj1uZXcgQXJyYXkoZSk7ZS0tOylyW2VdPXRbbltlXV07cmV0dXJuIHJ9LHQucGllPWZ1bmN0aW9uKCl7dmFyIHQ9Vnksbj1YeSxlPW51bGwscj1teSgwKSxpPW15KFB5KSxvPW15KDApO2Z1bmN0aW9uIGEoYSl7dmFyIHUsYyxmLHMsbCxoPWEubGVuZ3RoLGQ9MCxwPW5ldyBBcnJheShoKSx2PW5ldyBBcnJheShoKSxnPStyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx5PU1hdGgubWluKFB5LE1hdGgubWF4KC1QeSxpLmFwcGx5KHRoaXMsYXJndW1lbnRzKS1nKSksXz1NYXRoLm1pbihNYXRoLmFicyh5KS9oLG8uYXBwbHkodGhpcyxhcmd1bWVudHMpKSxiPV8qKHk8MD8tMToxKTtmb3IodT0wO3U8aDsrK3UpKGw9dltwW3VdPXVdPSt0KGFbdV0sdSxhKSk+MCYmKGQrPWwpO2ZvcihudWxsIT1uP3Auc29ydChmdW5jdGlvbih0LGUpe3JldHVybiBuKHZbdF0sdltlXSl9KTpudWxsIT1lJiZwLnNvcnQoZnVuY3Rpb24odCxuKXtyZXR1cm4gZShhW3RdLGFbbl0pfSksdT0wLGY9ZD8oeS1oKmIpL2Q6MDt1PGg7Kyt1LGc9cyljPXBbdV0scz1nKygobD12W2NdKT4wP2wqZjowKStiLHZbY109e2RhdGE6YVtjXSxpbmRleDp1LHZhbHVlOmwsc3RhcnRBbmdsZTpnLGVuZEFuZ2xlOnMscGFkQW5nbGU6X307cmV0dXJuIHZ9cmV0dXJuIGEudmFsdWU9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOm15KCtuKSxhKTp0fSxhLnNvcnRWYWx1ZXM9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49dCxlPW51bGwsYSk6bn0sYS5zb3J0PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPXQsbj1udWxsLGEpOmV9LGEuc3RhcnRBbmdsZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6bXkoK3QpLGEpOnJ9LGEuZW5kQW5nbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Om15KCt0KSxhKTppfSxhLnBhZEFuZ2xlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpteSgrdCksYSk6b30sYX0sdC5waWVjZXdpc2U9ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9MCxyPW4ubGVuZ3RoLTEsaT1uWzBdLG89bmV3IEFycmF5KHI8MD8wOnIpO2U8cjspb1tlXT10KGksaT1uWysrZV0pO3JldHVybiBmdW5jdGlvbih0KXt2YXIgbj1NYXRoLm1heCgwLE1hdGgubWluKHItMSxNYXRoLmZsb29yKHQqPXIpKSk7cmV0dXJuIG9bbl0odC1uKX19LHQucG9pbnRSYWRpYWw9SnksdC5wb2x5Z29uQXJlYT1mdW5jdGlvbih0KXtmb3IodmFyIG4sZT0tMSxyPXQubGVuZ3RoLGk9dFtyLTFdLG89MDsrK2U8cjspbj1pLGk9dFtlXSxvKz1uWzFdKmlbMF0tblswXSppWzFdO3JldHVybiBvLzJ9LHQucG9seWdvbkNlbnRyb2lkPWZ1bmN0aW9uKHQpe2Zvcih2YXIgbixlLHI9LTEsaT10Lmxlbmd0aCxvPTAsYT0wLHU9dFtpLTFdLGM9MDsrK3I8aTspbj11LHU9dFtyXSxjKz1lPW5bMF0qdVsxXS11WzBdKm5bMV0sbys9KG5bMF0rdVswXSkqZSxhKz0oblsxXSt1WzFdKSplO3JldHVybltvLyhjKj0zKSxhL2NdfSx0LnBvbHlnb25Db250YWlucz1mdW5jdGlvbih0LG4pe2Zvcih2YXIgZSxyLGk9dC5sZW5ndGgsbz10W2ktMV0sYT1uWzBdLHU9blsxXSxjPW9bMF0sZj1vWzFdLHM9ITEsbD0wO2w8aTsrK2wpZT0obz10W2xdKVswXSwocj1vWzFdKT51IT1mPnUmJmE8KGMtZSkqKHUtcikvKGYtcikrZSYmKHM9IXMpLGM9ZSxmPXI7cmV0dXJuIHN9LHQucG9seWdvbkh1bGw9ZnVuY3Rpb24odCl7aWYoKGU9dC5sZW5ndGgpPDMpcmV0dXJuIG51bGw7dmFyIG4sZSxyPW5ldyBBcnJheShlKSxpPW5ldyBBcnJheShlKTtmb3Iobj0wO248ZTsrK24pcltuXT1bK3Rbbl1bMF0sK3Rbbl1bMV0sbl07Zm9yKHIuc29ydChtaCksbj0wO248ZTsrK24paVtuXT1bcltuXVswXSwtcltuXVsxXV07dmFyIG89eGgociksYT14aChpKSx1PWFbMF09PT1vWzBdLGM9YVthLmxlbmd0aC0xXT09PW9bby5sZW5ndGgtMV0sZj1bXTtmb3Iobj1vLmxlbmd0aC0xO24+PTA7LS1uKWYucHVzaCh0W3Jbb1tuXV1bMl1dKTtmb3Iobj0rdTtuPGEubGVuZ3RoLWM7KytuKWYucHVzaCh0W3JbYVtuXV1bMl1dKTtyZXR1cm4gZn0sdC5wb2x5Z29uTGVuZ3RoPWZ1bmN0aW9uKHQpe2Zvcih2YXIgbixlLHI9LTEsaT10Lmxlbmd0aCxvPXRbaS0xXSxhPW9bMF0sdT1vWzFdLGM9MDsrK3I8aTspbj1hLGU9dSxuLT1hPShvPXRbcl0pWzBdLGUtPXU9b1sxXSxjKz1NYXRoLnNxcnQobipuK2UqZSk7cmV0dXJuIGN9LHQucHJlY2lzaW9uRml4ZWQ9JGEsdC5wcmVjaXNpb25QcmVmaXg9V2EsdC5wcmVjaXNpb25Sb3VuZD1aYSx0LnF1YWR0cmVlPXdhLHQucXVhbnRpbGU9Tix0LnF1YW50aXplPWZ1bmN0aW9uKHQsbil7Zm9yKHZhciBlPW5ldyBBcnJheShuKSxyPTA7cjxuOysrcillW3JdPXQoci8obi0xKSk7cmV0dXJuIGV9LHQucmFkaWFsQXJlYT1LeSx0LnJhZGlhbExpbmU9UXksdC5yYW5kb21CYXRlcz1TaCx0LnJhbmRvbUV4cG9uZW50aWFsPWtoLHQucmFuZG9tSXJ3aW5IYWxsPUFoLHQucmFuZG9tTG9nTm9ybWFsPVRoLHQucmFuZG9tTm9ybWFsPU5oLHQucmFuZG9tVW5pZm9ybT1NaCx0LnJhbmdlPWcsdC5yZ2I9X24sdC5yaWJib249ZnVuY3Rpb24oKXt2YXIgdD1lbyxuPXJvLGU9aW8scj1vbyxpPWFvLG89bnVsbDtmdW5jdGlvbiBhKCl7dmFyIGEsdT1XaS5jYWxsKGFyZ3VtZW50cyksYz10LmFwcGx5KHRoaXMsdSksZj1uLmFwcGx5KHRoaXMsdSkscz0rZS5hcHBseSh0aGlzLCh1WzBdPWMsdSkpLGw9ci5hcHBseSh0aGlzLHUpLVhpLGg9aS5hcHBseSh0aGlzLHUpLVhpLGQ9cypJaShsKSxwPXMqSGkobCksdj0rZS5hcHBseSh0aGlzLCh1WzBdPWYsdSkpLGc9ci5hcHBseSh0aGlzLHUpLVhpLHk9aS5hcHBseSh0aGlzLHUpLVhpO2lmKG98fChvPWE9bm8oKSksby5tb3ZlVG8oZCxwKSxvLmFyYygwLDAscyxsLGgpLGw9PT1nJiZoPT09eXx8KG8ucXVhZHJhdGljQ3VydmVUbygwLDAsdipJaShnKSx2KkhpKGcpKSxvLmFyYygwLDAsdixnLHkpKSxvLnF1YWRyYXRpY0N1cnZlVG8oMCwwLGQscCksby5jbG9zZVBhdGgoKSxhKXJldHVybiBvPW51bGwsYStcIlwifHxudWxsfXJldHVybiBhLnJhZGl1cz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6WmkoK3QpLGEpOmV9LGEuc3RhcnRBbmdsZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6WmkoK3QpLGEpOnJ9LGEuZW5kQW5nbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OlppKCt0KSxhKTppfSxhLnNvdXJjZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1uLGEpOnR9LGEudGFyZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPXQsYSk6bn0sYS5jb250ZXh0PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPW51bGw9PXQ/bnVsbDp0LGEpOm99LGF9LHQuc2NhbGVCYW5kPUxoLHQuc2NhbGVEaXZlcmdpbmc9ZnVuY3Rpb24gdCgpe3ZhciBuPSRoKCR2KCkoQmgpKTtyZXR1cm4gbi5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIFZ2KG4sdCgpKX0sQ2guYXBwbHkobixhcmd1bWVudHMpfSx0LnNjYWxlRGl2ZXJnaW5nTG9nPWZ1bmN0aW9uIHQoKXt2YXIgbj1lZCgkdigpKS5kb21haW4oWy4xLDEsMTBdKTtyZXR1cm4gbi5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIFZ2KG4sdCgpKS5iYXNlKG4uYmFzZSgpKX0sQ2guYXBwbHkobixhcmd1bWVudHMpfSx0LnNjYWxlRGl2ZXJnaW5nUG93PVd2LHQuc2NhbGVEaXZlcmdpbmdTcXJ0PWZ1bmN0aW9uKCl7cmV0dXJuIFd2LmFwcGx5KG51bGwsYXJndW1lbnRzKS5leHBvbmVudCguNSl9LHQuc2NhbGVEaXZlcmdpbmdTeW1sb2c9ZnVuY3Rpb24gdCgpe3ZhciBuPW9kKCR2KCkpO3JldHVybiBuLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gVnYobix0KCkpLmNvbnN0YW50KG4uY29uc3RhbnQoKSl9LENoLmFwcGx5KG4sYXJndW1lbnRzKX0sdC5zY2FsZUlkZW50aXR5PWZ1bmN0aW9uIHQobil7dmFyIGU7ZnVuY3Rpb24gcih0KXtyZXR1cm4gaXNOYU4odD0rdCk/ZTp0fXJldHVybiByLmludmVydD1yLHIuZG9tYWluPXIucmFuZ2U9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49emguY2FsbCh0LFVoKSxyKTpuLnNsaWNlKCl9LHIudW5rbm93bj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT10LHIpOmV9LHIuY29weT1mdW5jdGlvbigpe3JldHVybiB0KG4pLnVua25vd24oZSl9LG49YXJndW1lbnRzLmxlbmd0aD96aC5jYWxsKG4sVWgpOlswLDFdLCRoKHIpfSx0LnNjYWxlSW1wbGljaXQ9RGgsdC5zY2FsZUxpbmVhcj1mdW5jdGlvbiB0KCl7dmFyIG49VmgoQmgsQmgpO3JldHVybiBuLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gamgobix0KCkpfSxFaC5hcHBseShuLGFyZ3VtZW50cyksJGgobil9LHQuc2NhbGVMb2c9ZnVuY3Rpb24gdCgpe3ZhciBuPWVkKFhoKCkpLmRvbWFpbihbMSwxMF0pO3JldHVybiBuLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gamgobix0KCkpLmJhc2Uobi5iYXNlKCkpfSxFaC5hcHBseShuLGFyZ3VtZW50cyksbn0sdC5zY2FsZU9yZGluYWw9cWgsdC5zY2FsZVBvaW50PWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uIHQobil7dmFyIGU9bi5jb3B5O3JldHVybiBuLnBhZGRpbmc9bi5wYWRkaW5nT3V0ZXIsZGVsZXRlIG4ucGFkZGluZ0lubmVyLGRlbGV0ZSBuLnBhZGRpbmdPdXRlcixuLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gdChlKCkpfSxufShMaC5hcHBseShudWxsLGFyZ3VtZW50cykucGFkZGluZ0lubmVyKDEpKX0sdC5zY2FsZVBvdz1zZCx0LnNjYWxlUXVhbnRpbGU9ZnVuY3Rpb24gdCgpe3ZhciBlLHI9W10sbz1bXSxhPVtdO2Z1bmN0aW9uIHUoKXt2YXIgdD0wLG49TWF0aC5tYXgoMSxvLmxlbmd0aCk7Zm9yKGE9bmV3IEFycmF5KG4tMSk7Kyt0PG47KWFbdC0xXT1OKHIsdC9uKTtyZXR1cm4gY31mdW5jdGlvbiBjKHQpe3JldHVybiBpc05hTih0PSt0KT9lOm9baShhLHQpXX1yZXR1cm4gYy5pbnZlcnRFeHRlbnQ9ZnVuY3Rpb24odCl7dmFyIG49by5pbmRleE9mKHQpO3JldHVybiBuPDA/W05hTixOYU5dOltuPjA/YVtuLTFdOnJbMF0sbjxhLmxlbmd0aD9hW25dOnJbci5sZW5ndGgtMV1dfSxjLmRvbWFpbj1mdW5jdGlvbih0KXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gci5zbGljZSgpO3I9W107Zm9yKHZhciBlLGk9MCxvPXQubGVuZ3RoO2k8bzsrK2kpbnVsbD09KGU9dFtpXSl8fGlzTmFOKGU9K2UpfHxyLnB1c2goZSk7cmV0dXJuIHIuc29ydChuKSx1KCl9LGMucmFuZ2U9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG89UmguY2FsbCh0KSx1KCkpOm8uc2xpY2UoKX0sYy51bmtub3duPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPXQsYyk6ZX0sYy5xdWFudGlsZXM9ZnVuY3Rpb24oKXtyZXR1cm4gYS5zbGljZSgpfSxjLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gdCgpLmRvbWFpbihyKS5yYW5nZShvKS51bmtub3duKGUpfSxFaC5hcHBseShjLGFyZ3VtZW50cyl9LHQuc2NhbGVRdWFudGl6ZT1mdW5jdGlvbiB0KCl7dmFyIG4sZT0wLHI9MSxvPTEsYT1bLjVdLHU9WzAsMV07ZnVuY3Rpb24gYyh0KXtyZXR1cm4gdDw9dD91W2koYSx0LDAsbyldOm59ZnVuY3Rpb24gZigpe3ZhciB0PS0xO2ZvcihhPW5ldyBBcnJheShvKTsrK3Q8bzspYVt0XT0oKHQrMSkqci0odC1vKSplKS8obysxKTtyZXR1cm4gY31yZXR1cm4gYy5kb21haW49ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9K3RbMF0scj0rdFsxXSxmKCkpOltlLHJdfSxjLnJhbmdlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPSh1PVJoLmNhbGwodCkpLmxlbmd0aC0xLGYoKSk6dS5zbGljZSgpfSxjLmludmVydEV4dGVudD1mdW5jdGlvbih0KXt2YXIgbj11LmluZGV4T2YodCk7cmV0dXJuIG48MD9bTmFOLE5hTl06bjwxP1tlLGFbMF1dOm4+PW8/W2Fbby0xXSxyXTpbYVtuLTFdLGFbbl1dfSxjLnVua25vd249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49dCxjKTpjfSxjLnRocmVzaG9sZHM9ZnVuY3Rpb24oKXtyZXR1cm4gYS5zbGljZSgpfSxjLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gdCgpLmRvbWFpbihbZSxyXSkucmFuZ2UodSkudW5rbm93bihuKX0sRWguYXBwbHkoJGgoYyksYXJndW1lbnRzKX0sdC5zY2FsZVNlcXVlbnRpYWw9ZnVuY3Rpb24gdCgpe3ZhciBuPSRoKFh2KCkoQmgpKTtyZXR1cm4gbi5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIFZ2KG4sdCgpKX0sQ2guYXBwbHkobixhcmd1bWVudHMpfSx0LnNjYWxlU2VxdWVudGlhbExvZz1mdW5jdGlvbiB0KCl7dmFyIG49ZWQoWHYoKSkuZG9tYWluKFsxLDEwXSk7cmV0dXJuIG4uY29weT1mdW5jdGlvbigpe3JldHVybiBWdihuLHQoKSkuYmFzZShuLmJhc2UoKSl9LENoLmFwcGx5KG4sYXJndW1lbnRzKX0sdC5zY2FsZVNlcXVlbnRpYWxQb3c9R3YsdC5zY2FsZVNlcXVlbnRpYWxRdWFudGlsZT1mdW5jdGlvbiB0KCl7dmFyIGU9W10scj1CaDtmdW5jdGlvbiBvKHQpe2lmKCFpc05hTih0PSt0KSlyZXR1cm4gcigoaShlLHQpLTEpLyhlLmxlbmd0aC0xKSl9cmV0dXJuIG8uZG9tYWluPWZ1bmN0aW9uKHQpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBlLnNsaWNlKCk7ZT1bXTtmb3IodmFyIHIsaT0wLGE9dC5sZW5ndGg7aTxhOysraSludWxsPT0ocj10W2ldKXx8aXNOYU4ocj0rcil8fGUucHVzaChyKTtyZXR1cm4gZS5zb3J0KG4pLG99LG8uaW50ZXJwb2xhdG9yPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPXQsbyk6cn0sby5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIHQocikuZG9tYWluKGUpfSxDaC5hcHBseShvLGFyZ3VtZW50cyl9LHQuc2NhbGVTZXF1ZW50aWFsU3FydD1mdW5jdGlvbigpe3JldHVybiBHdi5hcHBseShudWxsLGFyZ3VtZW50cykuZXhwb25lbnQoLjUpfSx0LnNjYWxlU2VxdWVudGlhbFN5bWxvZz1mdW5jdGlvbiB0KCl7dmFyIG49b2QoWHYoKSk7cmV0dXJuIG4uY29weT1mdW5jdGlvbigpe3JldHVybiBWdihuLHQoKSkuY29uc3RhbnQobi5jb25zdGFudCgpKX0sQ2guYXBwbHkobixhcmd1bWVudHMpfSx0LnNjYWxlU3FydD1mdW5jdGlvbigpe3JldHVybiBzZC5hcHBseShudWxsLGFyZ3VtZW50cykuZXhwb25lbnQoLjUpfSx0LnNjYWxlU3ltbG9nPWZ1bmN0aW9uIHQoKXt2YXIgbj1vZChYaCgpKTtyZXR1cm4gbi5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGpoKG4sdCgpKS5jb25zdGFudChuLmNvbnN0YW50KCkpfSxFaC5hcHBseShuLGFyZ3VtZW50cyl9LHQuc2NhbGVUaHJlc2hvbGQ9ZnVuY3Rpb24gdCgpe3ZhciBuLGU9Wy41XSxyPVswLDFdLG89MTtmdW5jdGlvbiBhKHQpe3JldHVybiB0PD10P3JbaShlLHQsMCxvKV06bn1yZXR1cm4gYS5kb21haW49ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9UmguY2FsbCh0KSxvPU1hdGgubWluKGUubGVuZ3RoLHIubGVuZ3RoLTEpLGEpOmUuc2xpY2UoKX0sYS5yYW5nZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj1SaC5jYWxsKHQpLG89TWF0aC5taW4oZS5sZW5ndGgsci5sZW5ndGgtMSksYSk6ci5zbGljZSgpfSxhLmludmVydEV4dGVudD1mdW5jdGlvbih0KXt2YXIgbj1yLmluZGV4T2YodCk7cmV0dXJuW2Vbbi0xXSxlW25dXX0sYS51bmtub3duPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPXQsYSk6bn0sYS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIHQoKS5kb21haW4oZSkucmFuZ2UocikudW5rbm93bihuKX0sRWguYXBwbHkoYSxhcmd1bWVudHMpfSx0LnNjYWxlVGltZT1mdW5jdGlvbigpe3JldHVybiBFaC5hcHBseShqdihIZCxZZCxTZCxOZCx3ZCxtZCxfZCxwZCx0LnRpbWVGb3JtYXQpLmRvbWFpbihbbmV3IERhdGUoMmUzLDAsMSksbmV3IERhdGUoMmUzLDAsMildKSxhcmd1bWVudHMpfSx0LnNjYWxlVXRjPWZ1bmN0aW9uKCl7cmV0dXJuIEVoLmFwcGx5KGp2KHBwLGhwLEtkLFdkLEdkLFhkLF9kLHBkLHQudXRjRm9ybWF0KS5kb21haW4oW0RhdGUuVVRDKDJlMywwLDEpLERhdGUuVVRDKDJlMywwLDIpXSksYXJndW1lbnRzKX0sdC5zY2FuPWZ1bmN0aW9uKHQsZSl7aWYocj10Lmxlbmd0aCl7dmFyIHIsaSxvPTAsYT0wLHU9dFthXTtmb3IobnVsbD09ZSYmKGU9bik7KytvPHI7KShlKGk9dFtvXSx1KTwwfHwwIT09ZSh1LHUpKSYmKHU9aSxhPW8pO3JldHVybiAwPT09ZSh1LHUpP2E6dm9pZCAwfX0sdC5zY2hlbWVBY2NlbnQ9S3YsdC5zY2hlbWVCbHVlcz1aZyx0LnNjaGVtZUJyQkc9Y2csdC5zY2hlbWVCdUduPUFnLHQuc2NoZW1lQnVQdT1rZyx0LnNjaGVtZUNhdGVnb3J5MTA9UXYsdC5zY2hlbWVEYXJrMj1Kdix0LnNjaGVtZUduQnU9Q2csdC5zY2hlbWVHcmVlbnM9S2csdC5zY2hlbWVHcmV5cz10eSx0LnNjaGVtZU9yUmQ9emcsdC5zY2hlbWVPcmFuZ2VzPWF5LHQuc2NoZW1lUFJHbj1zZyx0LnNjaGVtZVBhaXJlZD10Zyx0LnNjaGVtZVBhc3RlbDE9bmcsdC5zY2hlbWVQYXN0ZWwyPWVnLHQuc2NoZW1lUGlZRz1oZyx0LnNjaGVtZVB1QnU9TGcsdC5zY2hlbWVQdUJ1R249RGcsdC5zY2hlbWVQdU9yPXBnLHQuc2NoZW1lUHVSZD1PZyx0LnNjaGVtZVB1cnBsZXM9ZXksdC5zY2hlbWVSZEJ1PWdnLHQuc2NoZW1lUmRHeT1fZyx0LnNjaGVtZVJkUHU9RmcsdC5zY2hlbWVSZFlsQnU9bWcsdC5zY2hlbWVSZFlsR249d2csdC5zY2hlbWVSZWRzPWl5LHQuc2NoZW1lU2V0MT1yZyx0LnNjaGVtZVNldDI9aWcsdC5zY2hlbWVTZXQzPW9nLHQuc2NoZW1lU3BlY3RyYWw9TmcsdC5zY2hlbWVUYWJsZWF1MTA9YWcsdC5zY2hlbWVZbEduPWpnLHQuc2NoZW1lWWxHbkJ1PUlnLHQuc2NoZW1lWWxPckJyPVZnLHQuc2NoZW1lWWxPclJkPSRnLHQuc2VsZWN0PVJ0LHQuc2VsZWN0QWxsPWZ1bmN0aW9uKHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0P25ldyBQdChbZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0KV0sW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF0pOm5ldyBQdChbbnVsbD09dD9bXTp0XSxDdCl9LHQuc2VsZWN0aW9uPXp0LHQuc2VsZWN0b3I9Syx0LnNlbGVjdG9yQWxsPXR0LHQuc2V0PWdvLHQuc2h1ZmZsZT1mdW5jdGlvbih0LG4sZSl7Zm9yKHZhciByLGksbz0obnVsbD09ZT90Lmxlbmd0aDplKS0obj1udWxsPT1uPzA6K24pO287KWk9TWF0aC5yYW5kb20oKSpvLS18MCxyPXRbbytuXSx0W28rbl09dFtpK25dLHRbaStuXT1yO3JldHVybiB0fSx0LnN0YWNrPWZ1bmN0aW9uKCl7dmFyIHQ9bXkoW10pLG49cmIsZT1lYixyPWliO2Z1bmN0aW9uIGkoaSl7dmFyIG8sYSx1PXQuYXBwbHkodGhpcyxhcmd1bWVudHMpLGM9aS5sZW5ndGgsZj11Lmxlbmd0aCxzPW5ldyBBcnJheShmKTtmb3Iobz0wO288ZjsrK28pe2Zvcih2YXIgbCxoPXVbb10sZD1zW29dPW5ldyBBcnJheShjKSxwPTA7cDxjOysrcClkW3BdPWw9WzAsK3IoaVtwXSxoLHAsaSldLGwuZGF0YT1pW3BdO2Qua2V5PWh9Zm9yKG89MCxhPW4ocyk7bzxmOysrbylzW2Fbb11dLmluZGV4PW87cmV0dXJuIGUocyxhKSxzfXJldHVybiBpLmtleXM9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOm15KHRfLmNhbGwobikpLGkpOnR9LGkudmFsdWU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Om15KCt0KSxpKTpyfSxpLm9yZGVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPW51bGw9PXQ/cmI6XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Om15KHRfLmNhbGwodCkpLGkpOm59LGkub2Zmc2V0PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPW51bGw9PXQ/ZWI6dCxpKTplfSxpfSx0LnN0YWNrT2Zmc2V0RGl2ZXJnaW5nPWZ1bmN0aW9uKHQsbil7aWYoKHU9dC5sZW5ndGgpPjApZm9yKHZhciBlLHIsaSxvLGEsdSxjPTAsZj10W25bMF1dLmxlbmd0aDtjPGY7KytjKWZvcihvPWE9MCxlPTA7ZTx1OysrZSkoaT0ocj10W25bZV1dW2NdKVsxXS1yWzBdKT4wPyhyWzBdPW8sclsxXT1vKz1pKTppPDA/KHJbMV09YSxyWzBdPWErPWkpOihyWzBdPTAsclsxXT1pKX0sdC5zdGFja09mZnNldEV4cGFuZD1mdW5jdGlvbih0LG4pe2lmKChyPXQubGVuZ3RoKT4wKXtmb3IodmFyIGUscixpLG89MCxhPXRbMF0ubGVuZ3RoO288YTsrK28pe2ZvcihpPWU9MDtlPHI7KytlKWkrPXRbZV1bb11bMV18fDA7aWYoaSlmb3IoZT0wO2U8cjsrK2UpdFtlXVtvXVsxXS89aX1lYih0LG4pfX0sdC5zdGFja09mZnNldE5vbmU9ZWIsdC5zdGFja09mZnNldFNpbGhvdWV0dGU9ZnVuY3Rpb24odCxuKXtpZigoZT10Lmxlbmd0aCk+MCl7Zm9yKHZhciBlLHI9MCxpPXRbblswXV0sbz1pLmxlbmd0aDtyPG87KytyKXtmb3IodmFyIGE9MCx1PTA7YTxlOysrYSl1Kz10W2FdW3JdWzFdfHwwO2lbcl1bMV0rPWlbcl1bMF09LXUvMn1lYih0LG4pfX0sdC5zdGFja09mZnNldFdpZ2dsZT1mdW5jdGlvbih0LG4pe2lmKChpPXQubGVuZ3RoKT4wJiYocj0oZT10W25bMF1dKS5sZW5ndGgpPjApe2Zvcih2YXIgZSxyLGksbz0wLGE9MTthPHI7KythKXtmb3IodmFyIHU9MCxjPTAsZj0wO3U8aTsrK3Upe2Zvcih2YXIgcz10W25bdV1dLGw9c1thXVsxXXx8MCxoPShsLShzW2EtMV1bMV18fDApKS8yLGQ9MDtkPHU7KytkKXt2YXIgcD10W25bZF1dO2grPShwW2FdWzFdfHwwKS0ocFthLTFdWzFdfHwwKX1jKz1sLGYrPWgqbH1lW2EtMV1bMV0rPWVbYS0xXVswXT1vLGMmJihvLT1mL2MpfWVbYS0xXVsxXSs9ZVthLTFdWzBdPW8sZWIodCxuKX19LHQuc3RhY2tPcmRlckFwcGVhcmFuY2U9b2IsdC5zdGFja09yZGVyQXNjZW5kaW5nPXViLHQuc3RhY2tPcmRlckRlc2NlbmRpbmc9ZnVuY3Rpb24odCl7cmV0dXJuIHViKHQpLnJldmVyc2UoKX0sdC5zdGFja09yZGVySW5zaWRlT3V0PWZ1bmN0aW9uKHQpe3ZhciBuLGUscj10Lmxlbmd0aCxpPXQubWFwKGNiKSxvPW9iKHQpLGE9MCx1PTAsYz1bXSxmPVtdO2ZvcihuPTA7bjxyOysrbillPW9bbl0sYTx1PyhhKz1pW2VdLGMucHVzaChlKSk6KHUrPWlbZV0sZi5wdXNoKGUpKTtyZXR1cm4gZi5yZXZlcnNlKCkuY29uY2F0KGMpfSx0LnN0YWNrT3JkZXJOb25lPXJiLHQuc3RhY2tPcmRlclJldmVyc2U9ZnVuY3Rpb24odCl7cmV0dXJuIHJiKHQpLnJldmVyc2UoKX0sdC5zdHJhdGlmeT1mdW5jdGlvbigpe3ZhciB0PWFoLG49dWg7ZnVuY3Rpb24gZShlKXt2YXIgcixpLG8sYSx1LGMsZixzPWUubGVuZ3RoLGw9bmV3IEFycmF5KHMpLGg9e307Zm9yKGk9MDtpPHM7KytpKXI9ZVtpXSx1PWxbaV09bmV3IHpsKHIpLG51bGwhPShjPXQocixpLGUpKSYmKGMrPVwiXCIpJiYoaFtmPXJoKyh1LmlkPWMpXT1mIGluIGg/b2g6dSk7Zm9yKGk9MDtpPHM7KytpKWlmKHU9bFtpXSxudWxsIT0oYz1uKGVbaV0saSxlKSkmJihjKz1cIlwiKSl7aWYoIShhPWhbcmgrY10pKXRocm93IG5ldyBFcnJvcihcIm1pc3Npbmc6IFwiK2MpO2lmKGE9PT1vaCl0aHJvdyBuZXcgRXJyb3IoXCJhbWJpZ3VvdXM6IFwiK2MpO2EuY2hpbGRyZW4/YS5jaGlsZHJlbi5wdXNoKHUpOmEuY2hpbGRyZW49W3VdLHUucGFyZW50PWF9ZWxzZXtpZihvKXRocm93IG5ldyBFcnJvcihcIm11bHRpcGxlIHJvb3RzXCIpO289dX1pZighbyl0aHJvdyBuZXcgRXJyb3IoXCJubyByb290XCIpO2lmKG8ucGFyZW50PWloLG8uZWFjaEJlZm9yZShmdW5jdGlvbih0KXt0LmRlcHRoPXQucGFyZW50LmRlcHRoKzEsLS1zfSkuZWFjaEJlZm9yZShQbCksby5wYXJlbnQ9bnVsbCxzPjApdGhyb3cgbmV3IEVycm9yKFwiY3ljbGVcIik7cmV0dXJuIG99cmV0dXJuIGUuaWQ9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9JGwobiksZSk6dH0sZS5wYXJlbnRJZD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj0kbCh0KSxlKTpufSxlfSx0LnN0eWxlPWZ0LHQuc3VtPWZ1bmN0aW9uKHQsbil7dmFyIGUscj10Lmxlbmd0aCxpPS0xLG89MDtpZihudWxsPT1uKWZvcig7KytpPHI7KShlPSt0W2ldKSYmKG8rPWUpO2Vsc2UgZm9yKDsrK2k8cjspKGU9K24odFtpXSxpLHQpKSYmKG8rPWUpO3JldHVybiBvfSx0LnN2Zz12YSx0LnN5bWJvbD1mdW5jdGlvbigpe3ZhciB0PW15KHVfKSxuPW15KDY0KSxlPW51bGw7ZnVuY3Rpb24gcigpe3ZhciByO2lmKGV8fChlPXI9bm8oKSksdC5hcHBseSh0aGlzLGFyZ3VtZW50cykuZHJhdyhlLCtuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSkscilyZXR1cm4gZT1udWxsLHIrXCJcInx8bnVsbH1yZXR1cm4gci50eXBlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PVwiZnVuY3Rpb25cIj09dHlwZW9mIG4/bjpteShuKSxyKTp0fSxyLnNpemU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49XCJmdW5jdGlvblwiPT10eXBlb2YgdD90Om15KCt0KSxyKTpufSxyLmNvbnRleHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9bnVsbD09dD9udWxsOnQscik6ZX0scn0sdC5zeW1ib2xDaXJjbGU9dV8sdC5zeW1ib2xDcm9zcz1jXyx0LnN5bWJvbERpYW1vbmQ9bF8sdC5zeW1ib2xTcXVhcmU9Z18sdC5zeW1ib2xTdGFyPXZfLHQuc3ltYm9sVHJpYW5nbGU9X18sdC5zeW1ib2xXeWU9d18sdC5zeW1ib2xzPU1fLHQudGV4dD11YSx0LnRocmVzaG9sZEZyZWVkbWFuRGlhY29uaXM9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0PWQuY2FsbCh0LHUpLnNvcnQobiksTWF0aC5jZWlsKChyLWUpLygyKihOKHQsLjc1KS1OKHQsLjI1KSkqTWF0aC5wb3codC5sZW5ndGgsLTEvMykpKX0sdC50aHJlc2hvbGRTY290dD1mdW5jdGlvbih0LG4sZSl7cmV0dXJuIE1hdGguY2VpbCgoZS1uKS8oMy41KmYodCkqTWF0aC5wb3codC5sZW5ndGgsLTEvMykpKX0sdC50aHJlc2hvbGRTdHVyZ2VzPU0sdC50aWNrRm9ybWF0PUdoLHQudGlja0luY3JlbWVudD14LHQudGlja1N0ZXA9dyx0LnRpY2tzPW0sdC50aW1lRGF5PU5kLHQudGltZURheXM9VGQsdC50aW1lRm9ybWF0RGVmYXVsdExvY2FsZT16dix0LnRpbWVGb3JtYXRMb2NhbGU9YnAsdC50aW1lRnJpZGF5PXpkLHQudGltZUZyaWRheXM9QmQsdC50aW1lSG91cj13ZCx0LnRpbWVIb3Vycz1NZCx0LnRpbWVJbnRlcnZhbD1kZCx0LnRpbWVNaWxsaXNlY29uZD1wZCx0LnRpbWVNaWxsaXNlY29uZHM9dmQsdC50aW1lTWludXRlPW1kLHQudGltZU1pbnV0ZXM9eGQsdC50aW1lTW9uZGF5PWtkLHQudGltZU1vbmRheXM9cWQsdC50aW1lTW9udGg9WWQsdC50aW1lTW9udGhzPUlkLHQudGltZVNhdHVyZGF5PVJkLHQudGltZVNhdHVyZGF5cz1GZCx0LnRpbWVTZWNvbmQ9X2QsdC50aW1lU2Vjb25kcz1iZCx0LnRpbWVTdW5kYXk9U2QsdC50aW1lU3VuZGF5cz1EZCx0LnRpbWVUaHVyc2RheT1QZCx0LnRpbWVUaHVyc2RheXM9T2QsdC50aW1lVHVlc2RheT1FZCx0LnRpbWVUdWVzZGF5cz1MZCx0LnRpbWVXZWRuZXNkYXk9Q2QsdC50aW1lV2VkbmVzZGF5cz1VZCx0LnRpbWVXZWVrPVNkLHQudGltZVdlZWtzPURkLHQudGltZVllYXI9SGQsdC50aW1lWWVhcnM9amQsdC50aW1lb3V0PXlyLHQudGltZXI9aHIsdC50aW1lckZsdXNoPWRyLHQudG91Y2g9RnQsdC50b3VjaGVzPWZ1bmN0aW9uKHQsbil7bnVsbD09biYmKG49VXQoKS50b3VjaGVzKTtmb3IodmFyIGU9MCxyPW4/bi5sZW5ndGg6MCxpPW5ldyBBcnJheShyKTtlPHI7KytlKWlbZV09T3QodCxuW2VdKTtyZXR1cm4gaX0sdC50cmFuc2l0aW9uPU9yLHQudHJhbnNwb3NlPWssdC50cmVlPWZ1bmN0aW9uKCl7dmFyIHQ9Y2gsbj0xLGU9MSxyPW51bGw7ZnVuY3Rpb24gaShpKXt2YXIgYz1mdW5jdGlvbih0KXtmb3IodmFyIG4sZSxyLGksbyxhPW5ldyBkaCh0LDApLHU9W2FdO249dS5wb3AoKTspaWYocj1uLl8uY2hpbGRyZW4pZm9yKG4uY2hpbGRyZW49bmV3IEFycmF5KG89ci5sZW5ndGgpLGk9by0xO2k+PTA7LS1pKXUucHVzaChlPW4uY2hpbGRyZW5baV09bmV3IGRoKHJbaV0saSkpLGUucGFyZW50PW47cmV0dXJuKGEucGFyZW50PW5ldyBkaChudWxsLDApKS5jaGlsZHJlbj1bYV0sYX0oaSk7aWYoYy5lYWNoQWZ0ZXIobyksYy5wYXJlbnQubT0tYy56LGMuZWFjaEJlZm9yZShhKSxyKWkuZWFjaEJlZm9yZSh1KTtlbHNle3ZhciBmPWkscz1pLGw9aTtpLmVhY2hCZWZvcmUoZnVuY3Rpb24odCl7dC54PGYueCYmKGY9dCksdC54PnMueCYmKHM9dCksdC5kZXB0aD5sLmRlcHRoJiYobD10KX0pO3ZhciBoPWY9PT1zPzE6dChmLHMpLzIsZD1oLWYueCxwPW4vKHMueCtoK2QpLHY9ZS8obC5kZXB0aHx8MSk7aS5lYWNoQmVmb3JlKGZ1bmN0aW9uKHQpe3QueD0odC54K2QpKnAsdC55PXQuZGVwdGgqdn0pfXJldHVybiBpfWZ1bmN0aW9uIG8obil7dmFyIGU9bi5jaGlsZHJlbixyPW4ucGFyZW50LmNoaWxkcmVuLGk9bi5pP3Jbbi5pLTFdOm51bGw7aWYoZSl7IWZ1bmN0aW9uKHQpe2Zvcih2YXIgbixlPTAscj0wLGk9dC5jaGlsZHJlbixvPWkubGVuZ3RoOy0tbz49MDspKG49aVtvXSkueis9ZSxuLm0rPWUsZSs9bi5zKyhyKz1uLmMpfShuKTt2YXIgbz0oZVswXS56K2VbZS5sZW5ndGgtMV0ueikvMjtpPyhuLno9aS56K3Qobi5fLGkuXyksbi5tPW4uei1vKTpuLno9b31lbHNlIGkmJihuLno9aS56K3Qobi5fLGkuXykpO24ucGFyZW50LkE9ZnVuY3Rpb24obixlLHIpe2lmKGUpe2Zvcih2YXIgaSxvPW4sYT1uLHU9ZSxjPW8ucGFyZW50LmNoaWxkcmVuWzBdLGY9by5tLHM9YS5tLGw9dS5tLGg9Yy5tO3U9c2godSksbz1maChvKSx1JiZvOyljPWZoKGMpLChhPXNoKGEpKS5hPW4sKGk9dS56K2wtby56LWYrdCh1Ll8sby5fKSk+MCYmKGxoKGhoKHUsbixyKSxuLGkpLGYrPWkscys9aSksbCs9dS5tLGYrPW8ubSxoKz1jLm0scys9YS5tO3UmJiFzaChhKSYmKGEudD11LGEubSs9bC1zKSxvJiYhZmgoYykmJihjLnQ9byxjLm0rPWYtaCxyPW4pfXJldHVybiByfShuLGksbi5wYXJlbnQuQXx8clswXSl9ZnVuY3Rpb24gYSh0KXt0Ll8ueD10LnordC5wYXJlbnQubSx0Lm0rPXQucGFyZW50Lm19ZnVuY3Rpb24gdSh0KXt0LngqPW4sdC55PXQuZGVwdGgqZX1yZXR1cm4gaS5zZXBhcmF0aW9uPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PW4saSk6dH0saS5zaXplPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPSExLG49K3RbMF0sZT0rdFsxXSxpKTpyP251bGw6W24sZV19LGkubm9kZVNpemU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9ITAsbj0rdFswXSxlPSt0WzFdLGkpOnI/W24sZV06bnVsbH0saX0sdC50cmVlbWFwPWZ1bmN0aW9uKCl7dmFyIHQ9eWgsbj0hMSxlPTEscj0xLGk9WzBdLG89V2wsYT1XbCx1PVdsLGM9V2wsZj1XbDtmdW5jdGlvbiBzKHQpe3JldHVybiB0LngwPXQueTA9MCx0LngxPWUsdC55MT1yLHQuZWFjaEJlZm9yZShsKSxpPVswXSxuJiZ0LmVhY2hCZWZvcmUobmgpLHR9ZnVuY3Rpb24gbChuKXt2YXIgZT1pW24uZGVwdGhdLHI9bi54MCtlLHM9bi55MCtlLGw9bi54MS1lLGg9bi55MS1lO2w8ciYmKHI9bD0ocitsKS8yKSxoPHMmJihzPWg9KHMraCkvMiksbi54MD1yLG4ueTA9cyxuLngxPWwsbi55MT1oLG4uY2hpbGRyZW4mJihlPWlbbi5kZXB0aCsxXT1vKG4pLzIscis9ZihuKS1lLHMrPWEobiktZSwobC09dShuKS1lKTxyJiYocj1sPShyK2wpLzIpLChoLT1jKG4pLWUpPHMmJihzPWg9KHMraCkvMiksdChuLHIscyxsLGgpKX1yZXR1cm4gcy5yb3VuZD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj0hIXQscyk6bn0scy5zaXplPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPSt0WzBdLHI9K3RbMV0scyk6W2Uscl19LHMudGlsZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD0kbChuKSxzKTp0fSxzLnBhZGRpbmc9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/cy5wYWRkaW5nSW5uZXIodCkucGFkZGluZ091dGVyKHQpOnMucGFkZGluZ0lubmVyKCl9LHMucGFkZGluZ0lubmVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpabCgrdCkscyk6b30scy5wYWRkaW5nT3V0ZXI9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/cy5wYWRkaW5nVG9wKHQpLnBhZGRpbmdSaWdodCh0KS5wYWRkaW5nQm90dG9tKHQpLnBhZGRpbmdMZWZ0KHQpOnMucGFkZGluZ1RvcCgpfSxzLnBhZGRpbmdUb3A9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OlpsKCt0KSxzKTphfSxzLnBhZGRpbmdSaWdodD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6WmwoK3QpLHMpOnV9LHMucGFkZGluZ0JvdHRvbT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6WmwoK3QpLHMpOmN9LHMucGFkZGluZ0xlZnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGY9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OlpsKCt0KSxzKTpmfSxzfSx0LnRyZWVtYXBCaW5hcnk9ZnVuY3Rpb24odCxuLGUscixpKXt2YXIgbyxhLHU9dC5jaGlsZHJlbixjPXUubGVuZ3RoLGY9bmV3IEFycmF5KGMrMSk7Zm9yKGZbMF09YT1vPTA7bzxjOysrbylmW28rMV09YSs9dVtvXS52YWx1ZTshZnVuY3Rpb24gdChuLGUscixpLG8sYSxjKXtpZihuPj1lLTEpe3ZhciBzPXVbbl07cmV0dXJuIHMueDA9aSxzLnkwPW8scy54MT1hLHZvaWQocy55MT1jKX1mb3IodmFyIGw9ZltuXSxoPXIvMitsLGQ9bisxLHA9ZS0xO2Q8cDspe3ZhciB2PWQrcD4+PjE7Zlt2XTxoP2Q9disxOnA9dn1oLWZbZC0xXTxmW2RdLWgmJm4rMTxkJiYtLWQ7dmFyIGc9ZltkXS1sLHk9ci1nO2lmKGEtaT5jLW8pe3ZhciBfPShpKnkrYSpnKS9yO3QobixkLGcsaSxvLF8sYyksdChkLGUseSxfLG8sYSxjKX1lbHNle3ZhciBiPShvKnkrYypnKS9yO3QobixkLGcsaSxvLGEsYiksdChkLGUseSxpLGIsYSxjKX19KDAsYyx0LnZhbHVlLG4sZSxyLGkpfSx0LnRyZWVtYXBEaWNlPWVoLHQudHJlZW1hcFJlc3F1YXJpZnk9X2gsdC50cmVlbWFwU2xpY2U9cGgsdC50cmVlbWFwU2xpY2VEaWNlPWZ1bmN0aW9uKHQsbixlLHIsaSl7KDEmdC5kZXB0aD9waDplaCkodCxuLGUscixpKX0sdC50cmVlbWFwU3F1YXJpZnk9eWgsdC50c3Y9c2EsdC50c3ZGb3JtYXQ9S28sdC50c3ZGb3JtYXRCb2R5PUpvLHQudHN2Rm9ybWF0Um93PW5hLHQudHN2Rm9ybWF0Um93cz10YSx0LnRzdkZvcm1hdFZhbHVlPWVhLHQudHN2UGFyc2U9Wm8sdC50c3ZQYXJzZVJvd3M9UW8sdC51dGNEYXk9V2QsdC51dGNEYXlzPVpkLHQudXRjRnJpZGF5PXJwLHQudXRjRnJpZGF5cz1zcCx0LnV0Y0hvdXI9R2QsdC51dGNIb3Vycz0kZCx0LnV0Y01pbGxpc2Vjb25kPXBkLHQudXRjTWlsbGlzZWNvbmRzPXZkLHQudXRjTWludXRlPVhkLHQudXRjTWludXRlcz1WZCx0LnV0Y01vbmRheT1KZCx0LnV0Y01vbmRheXM9YXAsdC51dGNNb250aD1ocCx0LnV0Y01vbnRocz1kcCx0LnV0Y1NhdHVyZGF5PWlwLHQudXRjU2F0dXJkYXlzPWxwLHQudXRjU2Vjb25kPV9kLHQudXRjU2Vjb25kcz1iZCx0LnV0Y1N1bmRheT1LZCx0LnV0Y1N1bmRheXM9b3AsdC51dGNUaHVyc2RheT1lcCx0LnV0Y1RodXJzZGF5cz1mcCx0LnV0Y1R1ZXNkYXk9dHAsdC51dGNUdWVzZGF5cz11cCx0LnV0Y1dlZG5lc2RheT1ucCx0LnV0Y1dlZG5lc2RheXM9Y3AsdC51dGNXZWVrPUtkLHQudXRjV2Vla3M9b3AsdC51dGNZZWFyPXBwLHQudXRjWWVhcnM9dnAsdC52YWx1ZXM9ZnVuY3Rpb24odCl7dmFyIG49W107Zm9yKHZhciBlIGluIHQpbi5wdXNoKHRbZV0pO3JldHVybiBufSx0LnZhcmlhbmNlPWMsdC52ZXJzaW9uPVwiNS4xNi4wXCIsdC52b3Jvbm9pPWZ1bmN0aW9uKCl7dmFyIHQ9c2Isbj1sYixlPW51bGw7ZnVuY3Rpb24gcihyKXtyZXR1cm4gbmV3IFZiKHIubWFwKGZ1bmN0aW9uKGUsaSl7dmFyIG89W01hdGgucm91bmQodChlLGkscikvSWIpKkliLE1hdGgucm91bmQobihlLGkscikvSWIpKkliXTtyZXR1cm4gby5pbmRleD1pLG8uZGF0YT1lLG99KSxlKX1yZXR1cm4gci5wb2x5Z29ucz1mdW5jdGlvbih0KXtyZXR1cm4gcih0KS5wb2x5Z29ucygpfSxyLmxpbmtzPWZ1bmN0aW9uKHQpe3JldHVybiByKHQpLmxpbmtzKCl9LHIudHJpYW5nbGVzPWZ1bmN0aW9uKHQpe3JldHVybiByKHQpLnRyaWFuZ2xlcygpfSxyLng9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOmZiKCtuKSxyKTp0fSxyLnk9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OmZiKCt0KSxyKTpufSxyLmV4dGVudD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1udWxsPT10P251bGw6W1srdFswXVswXSwrdFswXVsxXV0sWyt0WzFdWzBdLCt0WzFdWzFdXV0scik6ZSYmW1tlWzBdWzBdLGVbMF1bMV1dLFtlWzFdWzBdLGVbMV1bMV1dXX0sci5zaXplPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPW51bGw9PXQ/bnVsbDpbWzAsMF0sWyt0WzBdLCt0WzFdXV0scik6ZSYmW2VbMV1bMF0tZVswXVswXSxlWzFdWzFdLWVbMF1bMV1dfSxyfSx0LndpbmRvdz1jdCx0LnhtbD1kYSx0LnppcD1mdW5jdGlvbigpe3JldHVybiBrKGFyZ3VtZW50cyl9LHQuem9vbT1mdW5jdGlvbigpe3ZhciBuLGUscj10bSxpPW5tLG89b20sYT1ybSx1PWltLGM9WzAsMS8wXSxmPVtbLTEvMCwtMS8wXSxbMS8wLDEvMF1dLHM9MjUwLGw9SWUsaD1JKFwic3RhcnRcIixcInpvb21cIixcImVuZFwiKSxkPTUwMCxwPTE1MCx2PTA7ZnVuY3Rpb24gZyh0KXt0LnByb3BlcnR5KFwiX196b29tXCIsZW0pLm9uKFwid2hlZWwuem9vbVwiLE0pLm9uKFwibW91c2Vkb3duLnpvb21cIixOKS5vbihcImRibGNsaWNrLnpvb21cIixUKS5maWx0ZXIodSkub24oXCJ0b3VjaHN0YXJ0Lnpvb21cIixBKS5vbihcInRvdWNobW92ZS56b29tXCIsUykub24oXCJ0b3VjaGVuZC56b29tIHRvdWNoY2FuY2VsLnpvb21cIixrKS5zdHlsZShcInRvdWNoLWFjdGlvblwiLFwibm9uZVwiKS5zdHlsZShcIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvclwiLFwicmdiYSgwLDAsMCwwKVwiKX1mdW5jdGlvbiB5KHQsbil7cmV0dXJuKG49TWF0aC5tYXgoY1swXSxNYXRoLm1pbihjWzFdLG4pKSk9PT10Lms/dDpuZXcgV2Iobix0LngsdC55KX1mdW5jdGlvbiBfKHQsbixlKXt2YXIgcj1uWzBdLWVbMF0qdC5rLGk9blsxXS1lWzFdKnQuaztyZXR1cm4gcj09PXQueCYmaT09PXQueT90Om5ldyBXYih0LmsscixpKX1mdW5jdGlvbiBiKHQpe3JldHVyblsoK3RbMF1bMF0rICt0WzFdWzBdKS8yLCgrdFswXVsxXSsgK3RbMV1bMV0pLzJdfWZ1bmN0aW9uIG0odCxuLGUpe3Qub24oXCJzdGFydC56b29tXCIsZnVuY3Rpb24oKXt4KHRoaXMsYXJndW1lbnRzKS5zdGFydCgpfSkub24oXCJpbnRlcnJ1cHQuem9vbSBlbmQuem9vbVwiLGZ1bmN0aW9uKCl7eCh0aGlzLGFyZ3VtZW50cykuZW5kKCl9KS50d2VlbihcInpvb21cIixmdW5jdGlvbigpe3ZhciB0PXRoaXMscj1hcmd1bWVudHMsbz14KHQsciksYT1pLmFwcGx5KHQsciksdT1udWxsPT1lP2IoYSk6XCJmdW5jdGlvblwiPT10eXBlb2YgZT9lLmFwcGx5KHQscik6ZSxjPU1hdGgubWF4KGFbMV1bMF0tYVswXVswXSxhWzFdWzFdLWFbMF1bMV0pLGY9dC5fX3pvb20scz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24uYXBwbHkodCxyKTpuLGg9bChmLmludmVydCh1KS5jb25jYXQoYy9mLmspLHMuaW52ZXJ0KHUpLmNvbmNhdChjL3MuaykpO3JldHVybiBmdW5jdGlvbih0KXtpZigxPT09dCl0PXM7ZWxzZXt2YXIgbj1oKHQpLGU9Yy9uWzJdO3Q9bmV3IFdiKGUsdVswXS1uWzBdKmUsdVsxXS1uWzFdKmUpfW8uem9vbShudWxsLHQpfX0pfWZ1bmN0aW9uIHgodCxuLGUpe3JldHVybiFlJiZ0Ll9fem9vbWluZ3x8bmV3IHcodCxuKX1mdW5jdGlvbiB3KHQsbil7dGhpcy50aGF0PXQsdGhpcy5hcmdzPW4sdGhpcy5hY3RpdmU9MCx0aGlzLmV4dGVudD1pLmFwcGx5KHQsbiksdGhpcy50YXBzPTB9ZnVuY3Rpb24gTSgpe2lmKHIuYXBwbHkodGhpcyxhcmd1bWVudHMpKXt2YXIgdD14KHRoaXMsYXJndW1lbnRzKSxuPXRoaXMuX196b29tLGU9TWF0aC5tYXgoY1swXSxNYXRoLm1pbihjWzFdLG4uaypNYXRoLnBvdygyLGEuYXBwbHkodGhpcyxhcmd1bWVudHMpKSkpLGk9QnQodGhpcyk7aWYodC53aGVlbCl0Lm1vdXNlWzBdWzBdPT09aVswXSYmdC5tb3VzZVswXVsxXT09PWlbMV18fCh0Lm1vdXNlWzFdPW4uaW52ZXJ0KHQubW91c2VbMF09aSkpLGNsZWFyVGltZW91dCh0LndoZWVsKTtlbHNle2lmKG4uaz09PWUpcmV0dXJuO3QubW91c2U9W2ksbi5pbnZlcnQoaSldLFByKHRoaXMpLHQuc3RhcnQoKX1KYigpLHQud2hlZWw9c2V0VGltZW91dChmdW5jdGlvbigpe3Qud2hlZWw9bnVsbCx0LmVuZCgpfSxwKSx0Lnpvb20oXCJtb3VzZVwiLG8oXyh5KG4sZSksdC5tb3VzZVswXSx0Lm1vdXNlWzFdKSx0LmV4dGVudCxmKSl9fWZ1bmN0aW9uIE4oKXtpZighZSYmci5hcHBseSh0aGlzLGFyZ3VtZW50cykpe3ZhciBuPXgodGhpcyxhcmd1bWVudHMsITApLGk9UnQodC5ldmVudC52aWV3KS5vbihcIm1vdXNlbW92ZS56b29tXCIsZnVuY3Rpb24oKXtpZihKYigpLCFuLm1vdmVkKXt2YXIgZT10LmV2ZW50LmNsaWVudFgtdSxyPXQuZXZlbnQuY2xpZW50WS1jO24ubW92ZWQ9ZSplK3Iqcj52fW4uem9vbShcIm1vdXNlXCIsbyhfKG4udGhhdC5fX3pvb20sbi5tb3VzZVswXT1CdChuLnRoYXQpLG4ubW91c2VbMV0pLG4uZXh0ZW50LGYpKX0sITApLm9uKFwibW91c2V1cC56b29tXCIsZnVuY3Rpb24oKXtpLm9uKFwibW91c2Vtb3ZlLnpvb20gbW91c2V1cC56b29tXCIsbnVsbCksanQodC5ldmVudC52aWV3LG4ubW92ZWQpLEpiKCksbi5lbmQoKX0sITApLGE9QnQodGhpcyksdT10LmV2ZW50LmNsaWVudFgsYz10LmV2ZW50LmNsaWVudFk7SHQodC5ldmVudC52aWV3KSxLYigpLG4ubW91c2U9W2EsdGhpcy5fX3pvb20uaW52ZXJ0KGEpXSxQcih0aGlzKSxuLnN0YXJ0KCl9fWZ1bmN0aW9uIFQoKXtpZihyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl7dmFyIG49dGhpcy5fX3pvb20sZT1CdCh0aGlzKSxhPW4uaW52ZXJ0KGUpLHU9bi5rKih0LmV2ZW50LnNoaWZ0S2V5Py41OjIpLGM9byhfKHkobix1KSxlLGEpLGkuYXBwbHkodGhpcyxhcmd1bWVudHMpLGYpO0piKCkscz4wP1J0KHRoaXMpLnRyYW5zaXRpb24oKS5kdXJhdGlvbihzKS5jYWxsKG0sYyxlKTpSdCh0aGlzKS5jYWxsKGcudHJhbnNmb3JtLGMpfX1mdW5jdGlvbiBBKCl7aWYoci5hcHBseSh0aGlzLGFyZ3VtZW50cykpe3ZhciBlLGksbyxhLHU9dC5ldmVudC50b3VjaGVzLGM9dS5sZW5ndGgsZj14KHRoaXMsYXJndW1lbnRzLHQuZXZlbnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoPT09Yyk7Zm9yKEtiKCksaT0wO2k8YzsrK2kpYT1bYT1GdCh0aGlzLHUsKG89dVtpXSkuaWRlbnRpZmllciksdGhpcy5fX3pvb20uaW52ZXJ0KGEpLG8uaWRlbnRpZmllcl0sZi50b3VjaDA/Zi50b3VjaDF8fGYudG91Y2gwWzJdPT09YVsyXXx8KGYudG91Y2gxPWEsZi50YXBzPTApOihmLnRvdWNoMD1hLGU9ITAsZi50YXBzPTErISFuKTtuJiYobj1jbGVhclRpbWVvdXQobikpLGUmJihmLnRhcHM8MiYmKG49c2V0VGltZW91dChmdW5jdGlvbigpe249bnVsbH0sZCkpLFByKHRoaXMpLGYuc3RhcnQoKSl9fWZ1bmN0aW9uIFMoKXtpZih0aGlzLl9fem9vbWluZyl7dmFyIGUscixpLGEsdT14KHRoaXMsYXJndW1lbnRzKSxjPXQuZXZlbnQuY2hhbmdlZFRvdWNoZXMscz1jLmxlbmd0aDtmb3IoSmIoKSxuJiYobj1jbGVhclRpbWVvdXQobikpLHUudGFwcz0wLGU9MDtlPHM7KytlKWk9RnQodGhpcyxjLChyPWNbZV0pLmlkZW50aWZpZXIpLHUudG91Y2gwJiZ1LnRvdWNoMFsyXT09PXIuaWRlbnRpZmllcj91LnRvdWNoMFswXT1pOnUudG91Y2gxJiZ1LnRvdWNoMVsyXT09PXIuaWRlbnRpZmllciYmKHUudG91Y2gxWzBdPWkpO2lmKHI9dS50aGF0Ll9fem9vbSx1LnRvdWNoMSl7dmFyIGw9dS50b3VjaDBbMF0saD11LnRvdWNoMFsxXSxkPXUudG91Y2gxWzBdLHA9dS50b3VjaDFbMV0sdj0odj1kWzBdLWxbMF0pKnYrKHY9ZFsxXS1sWzFdKSp2LGc9KGc9cFswXS1oWzBdKSpnKyhnPXBbMV0taFsxXSkqZztyPXkocixNYXRoLnNxcnQodi9nKSksaT1bKGxbMF0rZFswXSkvMiwobFsxXStkWzFdKS8yXSxhPVsoaFswXStwWzBdKS8yLChoWzFdK3BbMV0pLzJdfWVsc2V7aWYoIXUudG91Y2gwKXJldHVybjtpPXUudG91Y2gwWzBdLGE9dS50b3VjaDBbMV19dS56b29tKFwidG91Y2hcIixvKF8ocixpLGEpLHUuZXh0ZW50LGYpKX19ZnVuY3Rpb24gaygpe2lmKHRoaXMuX196b29taW5nKXt2YXIgbixyLGk9eCh0aGlzLGFyZ3VtZW50cyksbz10LmV2ZW50LmNoYW5nZWRUb3VjaGVzLGE9by5sZW5ndGg7Zm9yKEtiKCksZSYmY2xlYXJUaW1lb3V0KGUpLGU9c2V0VGltZW91dChmdW5jdGlvbigpe2U9bnVsbH0sZCksbj0wO248YTsrK24pcj1vW25dLGkudG91Y2gwJiZpLnRvdWNoMFsyXT09PXIuaWRlbnRpZmllcj9kZWxldGUgaS50b3VjaDA6aS50b3VjaDEmJmkudG91Y2gxWzJdPT09ci5pZGVudGlmaWVyJiZkZWxldGUgaS50b3VjaDE7aWYoaS50b3VjaDEmJiFpLnRvdWNoMCYmKGkudG91Y2gwPWkudG91Y2gxLGRlbGV0ZSBpLnRvdWNoMSksaS50b3VjaDApaS50b3VjaDBbMV09dGhpcy5fX3pvb20uaW52ZXJ0KGkudG91Y2gwWzBdKTtlbHNlIGlmKGkuZW5kKCksMj09PWkudGFwcyl7dmFyIHU9UnQodGhpcykub24oXCJkYmxjbGljay56b29tXCIpO3UmJnUuYXBwbHkodGhpcyxhcmd1bWVudHMpfX19cmV0dXJuIGcudHJhbnNmb3JtPWZ1bmN0aW9uKHQsbixlKXt2YXIgcj10LnNlbGVjdGlvbj90LnNlbGVjdGlvbigpOnQ7ci5wcm9wZXJ0eShcIl9fem9vbVwiLGVtKSx0IT09cj9tKHQsbixlKTpyLmludGVycnVwdCgpLmVhY2goZnVuY3Rpb24oKXt4KHRoaXMsYXJndW1lbnRzKS5zdGFydCgpLnpvb20obnVsbCxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24uYXBwbHkodGhpcyxhcmd1bWVudHMpOm4pLmVuZCgpfSl9LGcuc2NhbGVCeT1mdW5jdGlvbih0LG4sZSl7Zy5zY2FsZVRvKHQsZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9fem9vbS5rLGU9XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uLmFwcGx5KHRoaXMsYXJndW1lbnRzKTpuO3JldHVybiB0KmV9LGUpfSxnLnNjYWxlVG89ZnVuY3Rpb24odCxuLGUpe2cudHJhbnNmb3JtKHQsZnVuY3Rpb24oKXt2YXIgdD1pLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxyPXRoaXMuX196b29tLGE9bnVsbD09ZT9iKHQpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk6ZSx1PXIuaW52ZXJ0KGEpLGM9XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uLmFwcGx5KHRoaXMsYXJndW1lbnRzKTpuO3JldHVybiBvKF8oeShyLGMpLGEsdSksdCxmKX0sZSl9LGcudHJhbnNsYXRlQnk9ZnVuY3Rpb24odCxuLGUpe2cudHJhbnNmb3JtKHQsZnVuY3Rpb24oKXtyZXR1cm4gbyh0aGlzLl9fem9vbS50cmFuc2xhdGUoXCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uLmFwcGx5KHRoaXMsYXJndW1lbnRzKTpuLFwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk6ZSksaS5hcHBseSh0aGlzLGFyZ3VtZW50cyksZil9KX0sZy50cmFuc2xhdGVUbz1mdW5jdGlvbih0LG4sZSxyKXtnLnRyYW5zZm9ybSh0LGZ1bmN0aW9uKCl7dmFyIHQ9aS5hcHBseSh0aGlzLGFyZ3VtZW50cyksYT10aGlzLl9fem9vbSx1PW51bGw9PXI/Yih0KTpcImZ1bmN0aW9uXCI9PXR5cGVvZiByP3IuYXBwbHkodGhpcyxhcmd1bWVudHMpOnI7cmV0dXJuIG8oWmIudHJhbnNsYXRlKHVbMF0sdVsxXSkuc2NhbGUoYS5rKS50cmFuc2xhdGUoXCJmdW5jdGlvblwiPT10eXBlb2Ygbj8tbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk6LW4sXCJmdW5jdGlvblwiPT10eXBlb2YgZT8tZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk6LWUpLHQsZil9LHIpfSx3LnByb3RvdHlwZT17c3RhcnQ6ZnVuY3Rpb24oKXtyZXR1cm4gMT09Kyt0aGlzLmFjdGl2ZSYmKHRoaXMudGhhdC5fX3pvb21pbmc9dGhpcyx0aGlzLmVtaXQoXCJzdGFydFwiKSksdGhpc30sem9vbTpmdW5jdGlvbih0LG4pe3JldHVybiB0aGlzLm1vdXNlJiZcIm1vdXNlXCIhPT10JiYodGhpcy5tb3VzZVsxXT1uLmludmVydCh0aGlzLm1vdXNlWzBdKSksdGhpcy50b3VjaDAmJlwidG91Y2hcIiE9PXQmJih0aGlzLnRvdWNoMFsxXT1uLmludmVydCh0aGlzLnRvdWNoMFswXSkpLHRoaXMudG91Y2gxJiZcInRvdWNoXCIhPT10JiYodGhpcy50b3VjaDFbMV09bi5pbnZlcnQodGhpcy50b3VjaDFbMF0pKSx0aGlzLnRoYXQuX196b29tPW4sdGhpcy5lbWl0KFwiem9vbVwiKSx0aGlzfSxlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gMD09LS10aGlzLmFjdGl2ZSYmKGRlbGV0ZSB0aGlzLnRoYXQuX196b29taW5nLHRoaXMuZW1pdChcImVuZFwiKSksdGhpc30sZW1pdDpmdW5jdGlvbih0KXtrdChuZXcgJGIoZyx0LHRoaXMudGhhdC5fX3pvb20pLGguYXBwbHksaCxbdCx0aGlzLnRoYXQsdGhpcy5hcmdzXSl9fSxnLndoZWVsRGVsdGE9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9XCJmdW5jdGlvblwiPT10eXBlb2YgdD90OkdiKCt0KSxnKTphfSxnLmZpbHRlcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6R2IoISF0KSxnKTpyfSxnLnRvdWNoYWJsZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6R2IoISF0KSxnKTp1fSxnLmV4dGVudD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Q6R2IoW1srdFswXVswXSwrdFswXVsxXV0sWyt0WzFdWzBdLCt0WzFdWzFdXV0pLGcpOml9LGcuc2NhbGVFeHRlbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGNbMF09K3RbMF0sY1sxXT0rdFsxXSxnKTpbY1swXSxjWzFdXX0sZy50cmFuc2xhdGVFeHRlbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGZbMF1bMF09K3RbMF1bMF0sZlsxXVswXT0rdFsxXVswXSxmWzBdWzFdPSt0WzBdWzFdLGZbMV1bMV09K3RbMV1bMV0sZyk6W1tmWzBdWzBdLGZbMF1bMV1dLFtmWzFdWzBdLGZbMV1bMV1dXX0sZy5jb25zdHJhaW49ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG89dCxnKTpvfSxnLmR1cmF0aW9uPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzPSt0LGcpOnN9LGcuaW50ZXJwb2xhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGw9dCxnKTpsfSxnLm9uPWZ1bmN0aW9uKCl7dmFyIHQ9aC5vbi5hcHBseShoLGFyZ3VtZW50cyk7cmV0dXJuIHQ9PT1oP2c6dH0sZy5jbGlja0Rpc3RhbmNlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh2PSh0PSt0KSp0LGcpOk1hdGguc3FydCh2KX0sZ30sdC56b29tSWRlbnRpdHk9WmIsdC56b29tVHJhbnNmb3JtPVFiLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSk7XG4iLCJmdW5jdGlvbiBnZW5lcmF0ZVBhaXJJblJhbmdlKGEsIGIpIHtcbiAgICBmdW5jdGlvbiByYW5kUmFuZ2UoYSwgYikge1xuICAgICAgICByZXR1cm4gYSArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChiIC0gYSkpXG4gICAgfVxuICAgIGNvbnN0IHggPSByYW5kUmFuZ2UoYSwgYilcbiAgICBsZXQgeSA9IHJhbmRSYW5nZShhLCBiKVxuICAgIHdoaWxlICh5ID09PSB4KSB7XG4gICAgICAgIHkgPSByYW5kUmFuZ2UoYSwgYilcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgeDogeCxcbiAgICAgICAgeTogeVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlUmFuZG9tR3JhcGgoeyBub2RlTnVtLCBsaW5rTnVtLCB3aWR0aCwgaGVpZ2h0IH0pIHtcbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgICBub2RlczogW10sXG4gICAgICAgIGxpbmtzOiBbXVxuICAgIH1cblxuICAgIGRhdGEubm9kZXMgPSBBcnJheShub2RlTnVtKVxuICAgICAgICAuZmlsbCgpXG4gICAgICAgIC5tYXAoKHYsIGkpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgaWQ6IFN0cmluZyhpKSxcbiAgICAgICAgICAgICAgICB4OiBNYXRoLnJhbmRvbSgpICogd2lkdGgsXG4gICAgICAgICAgICAgICAgeTogTWF0aC5yYW5kb20oKSAqIGhlaWdodFxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgY29uc3QgbGlua1NldCA9IG5ldyBTZXQoKVxuICAgIGRhdGEubGlua3MgPSBBcnJheShsaW5rTnVtKVxuICAgICAgICAuZmlsbCgpXG4gICAgICAgIC5tYXAoKHYsIGkpID0+IHtcbiAgICAgICAgICAgIGxldCBwYWlyXG4gICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgICAgcGFpciA9IGdlbmVyYXRlUGFpckluUmFuZ2UoMCwgbm9kZU51bSlcbiAgICAgICAgICAgIH0gd2hpbGUgKGxpbmtTZXQuaGFzKGAke3BhaXIueH0tJHtwYWlyLnl9YCkpXG4gICAgICAgICAgICBsaW5rU2V0LmFkZChgJHtwYWlyLnh9LSR7cGFpci55fWApXG4gICAgICAgICAgICBsaW5rU2V0LmFkZChgJHtwYWlyLnl9LSR7cGFpci54fWApXG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc291cmNlOiBTdHJpbmcocGFpci54KSxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFN0cmluZyhwYWlyLnkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG5cbiAgICByZXR1cm4gZGF0YVxufVxuIiwiaW1wb3J0ICogYXMgZDMgZnJvbSAnLi9kMy52NS5taW4uanMnXG5cbi8vIHNldCB0aGUgZGltZW5zaW9ucyBhbmQgbWFyZ2lucyBvZiB0aGUgZ3JhcGhcbmNvbnN0IG1hcmdpbiA9IHsgdG9wOiAxMCwgcmlnaHQ6IDMwLCBib3R0b206IDMwLCBsZWZ0OiA2MCB9XG5jb25zdCB3aWR0aCA9IDUwMCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0XG5jb25zdCBoZWlnaHQgPSAzMDAgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbVxuXG4vLyBUaGUgdGFibGUgZ2VuZXJhdGlvbiBmdW5jdGlvblxuZnVuY3Rpb24gdGFidWxhdGUoY29udGFpbmVyLCBkYXRhLCBjb2x1bW5OYW1lcykge1xuICAgIHZhciB0YWJsZSA9IGQzXG4gICAgICAgICAgICAuc2VsZWN0KGNvbnRhaW5lcilcbiAgICAgICAgICAgIC5hcHBlbmQoJ3RhYmxlJylcbiAgICAgICAgICAgIC5hdHRyKCdzdHlsZScsICdtYXJnaW4tbGVmdDogMjUwcHgnKSxcbiAgICAgICAgdGhlYWQgPSB0YWJsZS5hcHBlbmQoJ3RoZWFkJyksXG4gICAgICAgIHRib2R5ID0gdGFibGUuYXBwZW5kKCd0Ym9keScpXG5cbiAgICAvLyBhcHBlbmQgdGhlIGhlYWRlciByb3dcbiAgICB0aGVhZFxuICAgICAgICAuYXBwZW5kKCd0cicpXG4gICAgICAgIC5zZWxlY3RBbGwoJ3RoJylcbiAgICAgICAgLmRhdGEoY29sdW1uTmFtZXMpXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoJ3RoJylcbiAgICAgICAgLnRleHQoZnVuY3Rpb24oY29sdW1uKSB7XG4gICAgICAgICAgICByZXR1cm4gY29sdW1uXG4gICAgICAgIH0pXG5cbiAgICAvLyBjcmVhdGUgYSByb3cgZm9yIGVhY2ggb2JqZWN0IGluIHRoZSBkYXRhXG4gICAgdmFyIHJvd3MgPSB0Ym9keVxuICAgICAgICAuc2VsZWN0QWxsKCd0cicpXG4gICAgICAgIC5kYXRhKGRhdGEpXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoJ3RyJylcblxuICAgIC8vIGNyZWF0ZSBhIGNlbGwgaW4gZWFjaCByb3cgZm9yIGVhY2ggY29sdW1uXG4gICAgdmFyIGNlbGxzID0gcm93c1xuICAgICAgICAuc2VsZWN0QWxsKCd0ZCcpXG4gICAgICAgIC5kYXRhKGZ1bmN0aW9uKHJvdykge1xuICAgICAgICAgICAgcmV0dXJuIGNvbHVtbk5hbWVzLm1hcChmdW5jdGlvbihjb2x1bW4pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBjb2x1bW46IGNvbHVtbiwgdmFsdWU6IHJvd1tjb2x1bW5dIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoJ3RkJylcbiAgICAgICAgLmF0dHIoJ3N0eWxlJywgJ2ZvbnQtZmFtaWx5OiBDb3VyaWVyJykgLy8gc2V0cyB0aGUgZm9udCBzdHlsZVxuICAgICAgICAuaHRtbChmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICByZXR1cm4gZC52YWx1ZVxuICAgICAgICB9KVxuXG4gICAgcmV0dXJuIHRhYmxlXG59XG5cbi8vIFJlYWQgdGhlIGRhdGFcbmV4cG9ydCBmdW5jdGlvbiBkcmF3TGluZUNoYXJ0KGNvbnRhaW5lciwgZGF0YSkge1xuICAgIC8vIGFwcGVuZCB0aGUgc3ZnIG9iamVjdCB0byB0aGUgYm9keSBvZiB0aGUgcGFnZVxuICAgIGNvbnN0IHN2ZyA9IGQzXG4gICAgICAgIC5zZWxlY3QoY29udGFpbmVyKVxuICAgICAgICAuYXBwZW5kKCdzdmcnKVxuICAgICAgICAuYXR0cignd2lkdGgnLCB3aWR0aCArIG1hcmdpbi5sZWZ0ICsgbWFyZ2luLnJpZ2h0KVxuICAgICAgICAuYXR0cignaGVpZ2h0JywgaGVpZ2h0ICsgbWFyZ2luLnRvcCArIG1hcmdpbi5ib3R0b20pXG4gICAgICAgIC5hcHBlbmQoJ2cnKVxuICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICsgbWFyZ2luLmxlZnQgKyAnLCcgKyBtYXJnaW4udG9wICsgJyknKVxuXG4gICAgLy8gQWRkIFggYXhpcyAtLT4gaXQgaXMgYSBzaXplIGZvcm1hdFxuICAgIGNvbnN0IHhEb21haW4gPSBkMy5leHRlbnQoZGF0YSwgKGQpID0+IGQuc2l6ZSlcbiAgICB4RG9tYWluWzBdID0gTWF0aC5wb3coMTAsIHBhcnNlSW50KHhEb21haW5bMF0udG9TdHJpbmcoKS5sZW5ndGggLSAxKSlcbiAgICB4RG9tYWluWzFdID0gTWF0aC5wb3coMTAsIHBhcnNlSW50KCh4RG9tYWluWzFdIC0gMSkudG9TdHJpbmcoKS5sZW5ndGgpKVxuICAgIGNvbnNvbGUubG9nKHhEb21haW4pXG4gICAgY29uc3QgeCA9IGQzXG4gICAgICAgIC5zY2FsZUxvZygpXG4gICAgICAgIC5iYXNlKDIpXG4gICAgICAgIC5kb21haW4oeERvbWFpbilcbiAgICAgICAgLnJhbmdlKFswLCB3aWR0aF0pXG5cbiAgICAvLyBkcmF3IGF4aXNcbiAgICBzdmcuYXBwZW5kKCdsaW5lJylcbiAgICAgICAgLmF0dHIoJ3gxJywgMClcbiAgICAgICAgLmF0dHIoJ3gyJywgd2lkdGgpXG4gICAgICAgIC5hdHRyKCd5MScsIGhlaWdodClcbiAgICAgICAgLmF0dHIoJ3kyJywgaGVpZ2h0KVxuICAgICAgICAuYXR0cignc3Ryb2tlJywgJ2JsYWNrJylcbiAgICBsZXQgY2FsaWJyYXRpb24gPSAxXG4gICAgd2hpbGUgKGNhbGlicmF0aW9uIDw9IHguZG9tYWluKClbMV0pIHtcbiAgICAgICAgaWYgKGNhbGlicmF0aW9uID49IHguZG9tYWluKClbMF0pIHtcbiAgICAgICAgICAgIHN2Zy5hcHBlbmQoJ2xpbmUnKVxuICAgICAgICAgICAgICAgIC5hdHRyKCd4MScsIHgoY2FsaWJyYXRpb24pKVxuICAgICAgICAgICAgICAgIC5hdHRyKCd4MicsIHgoY2FsaWJyYXRpb24pKVxuICAgICAgICAgICAgICAgIC5hdHRyKCd5MScsIGhlaWdodCAtIDUpXG4gICAgICAgICAgICAgICAgLmF0dHIoJ3kyJywgaGVpZ2h0KVxuICAgICAgICAgICAgICAgIC5hdHRyKCdzdHJva2UnLCAnYmxhY2snKVxuICAgICAgICAgICAgc3ZnLmFwcGVuZCgndGV4dCcpXG4gICAgICAgICAgICAgICAgLmF0dHIoJ3gnLCB4KGNhbGlicmF0aW9uKSlcbiAgICAgICAgICAgICAgICAuYXR0cigneScsIGhlaWdodCArIDE1KVxuICAgICAgICAgICAgICAgIC50ZXh0KGNhbGlicmF0aW9uKVxuICAgICAgICAgICAgICAgIC5hdHRyKCdzdHJva2UnLCAnYmxhY2snKVxuICAgICAgICB9XG4gICAgICAgIGNhbGlicmF0aW9uICo9IDEwXG4gICAgfVxuXG4gICAgLy8gQWRkIFkgYXhpc1xuICAgIGNvbnN0IHkgPSBkM1xuICAgICAgICAuc2NhbGVMaW5lYXIoKVxuICAgICAgICAuZG9tYWluKFtcbiAgICAgICAgICAgIDAsXG4gICAgICAgICAgICBkMy5tYXgoZGF0YSwgZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIoZC52YWx1ZSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIF0pXG4gICAgICAgIC5yYW5nZShbaGVpZ2h0LCAwXSlcblxuICAgIC8vIEFkZCB0aGUgbGluZVxuICAgIHN2Zy5hcHBlbmQoJ3BhdGgnKVxuICAgICAgICAuZGF0dW0oZGF0YSlcbiAgICAgICAgLmF0dHIoJ2ZpbGwnLCAnbm9uZScpXG4gICAgICAgIC5hdHRyKCdzdHJva2UnLCAnc3RlZWxibHVlJylcbiAgICAgICAgLmF0dHIoJ3N0cm9rZS13aWR0aCcsIDEuNSlcbiAgICAgICAgLmF0dHIoXG4gICAgICAgICAgICAnZCcsXG4gICAgICAgICAgICBkM1xuICAgICAgICAgICAgICAgIC5saW5lKClcbiAgICAgICAgICAgICAgICAueChmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB4KGQuc2l6ZSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC55KGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHkoZC52YWx1ZSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICApXG5cbiAgICB0YWJ1bGF0ZShjb250YWluZXIsIGRhdGEsIFsnc2l6ZScsICd2YWx1ZSddKVxufVxuIiwiLyoqXG4gKiBAYXV0aG9yIG1yZG9vYiAvIGh0dHA6Ly9tcmRvb2IuY29tL1xuICovXG5cbnZhciBTdGF0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIG1vZGUgPSAwO1xuXG4gIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb250YWluZXIuc3R5bGUuY3NzVGV4dCA9XG4gICAgXCJwb3NpdGlvbjpmaXhlZDt0b3A6MDtsZWZ0OjA7Y3Vyc29yOnBvaW50ZXI7b3BhY2l0eTowLjk7ei1pbmRleDoxMDAwMFwiO1xuICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICBcImNsaWNrXCIsXG4gICAgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgc2hvd1BhbmVsKCsrbW9kZSAlIGNvbnRhaW5lci5jaGlsZHJlbi5sZW5ndGgpO1xuICAgIH0sXG4gICAgZmFsc2VcbiAgKTtcblxuICAvL1xuXG4gIGZ1bmN0aW9uIGFkZFBhbmVsKHBhbmVsKSB7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHBhbmVsLmRvbSk7XG4gICAgcmV0dXJuIHBhbmVsO1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvd1BhbmVsKGlkKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb250YWluZXIuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnRhaW5lci5jaGlsZHJlbltpXS5zdHlsZS5kaXNwbGF5ID0gaSA9PT0gaWQgPyBcImJsb2NrXCIgOiBcIm5vbmVcIjtcbiAgICB9XG5cbiAgICBtb2RlID0gaWQ7XG4gIH1cblxuICAvL1xuXG4gIHZhciBiZWdpblRpbWUgPSAocGVyZm9ybWFuY2UgfHwgRGF0ZSkubm93KCksXG4gICAgcHJldlRpbWUgPSBiZWdpblRpbWUsXG4gICAgZnJhbWVzID0gMCxcbiAgICBmcHNIaXN0b3J5ID0gW107XG5cbiAgdmFyIGZwc1BhbmVsID0gYWRkUGFuZWwobmV3IFN0YXRzLlBhbmVsKFwiRlBTXCIsIFwiIzBmZlwiLCBcIiMwMDJcIikpO1xuICB2YXIgbXNQYW5lbCA9IGFkZFBhbmVsKG5ldyBTdGF0cy5QYW5lbChcIk1TXCIsIFwiIzBmMFwiLCBcIiMwMjBcIikpO1xuXG4gIGlmIChzZWxmLnBlcmZvcm1hbmNlICYmIHNlbGYucGVyZm9ybWFuY2UubWVtb3J5KSB7XG4gICAgdmFyIG1lbVBhbmVsID0gYWRkUGFuZWwobmV3IFN0YXRzLlBhbmVsKFwiTUJcIiwgXCIjZjA4XCIsIFwiIzIwMVwiKSk7XG4gIH1cblxuICBzaG93UGFuZWwoMCk7XG5cbiAgcmV0dXJuIHtcbiAgICBSRVZJU0lPTjogMTYsXG5cbiAgICBkb206IGNvbnRhaW5lcixcblxuICAgIGFkZFBhbmVsOiBhZGRQYW5lbCxcbiAgICBzaG93UGFuZWw6IHNob3dQYW5lbCxcblxuICAgIGdldEZQU0hpc3Rvcnk6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBmcHNIaXN0b3J5O1xuICAgIH0sXG5cbiAgICBiZWdpbjogZnVuY3Rpb24gKCkge1xuICAgICAgYmVnaW5UaW1lID0gKHBlcmZvcm1hbmNlIHx8IERhdGUpLm5vdygpO1xuICAgIH0sXG5cbiAgICBlbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGZyYW1lcysrO1xuXG4gICAgICB2YXIgdGltZSA9IChwZXJmb3JtYW5jZSB8fCBEYXRlKS5ub3coKTtcblxuICAgICAgbXNQYW5lbC51cGRhdGUodGltZSAtIGJlZ2luVGltZSwgMjAwKTtcblxuICAgICAgaWYgKHRpbWUgPj0gcHJldlRpbWUgKyAxMDAwKSB7XG4gICAgICAgIGNvbnN0IGZwcyA9IChmcmFtZXMgKiAxMDAwKSAvICh0aW1lIC0gcHJldlRpbWUpO1xuICAgICAgICBmcHNIaXN0b3J5LnB1c2goZnBzKTtcblxuICAgICAgICBmcHNQYW5lbC51cGRhdGUoZnBzLCAxMDApO1xuXG4gICAgICAgIHByZXZUaW1lID0gdGltZTtcbiAgICAgICAgZnJhbWVzID0gMDtcblxuICAgICAgICBpZiAobWVtUGFuZWwpIHtcbiAgICAgICAgICB2YXIgbWVtb3J5ID0gcGVyZm9ybWFuY2UubWVtb3J5O1xuICAgICAgICAgIG1lbVBhbmVsLnVwZGF0ZShcbiAgICAgICAgICAgIG1lbW9yeS51c2VkSlNIZWFwU2l6ZSAvIDEwNDg1NzYsXG4gICAgICAgICAgICBtZW1vcnkuanNIZWFwU2l6ZUxpbWl0IC8gMTA0ODU3NlxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRpbWU7XG4gICAgfSxcblxuICAgIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgYmVnaW5UaW1lID0gdGhpcy5lbmQoKTtcbiAgICB9LFxuXG4gICAgLy8gQmFja3dhcmRzIENvbXBhdGliaWxpdHlcblxuICAgIGRvbUVsZW1lbnQ6IGNvbnRhaW5lcixcbiAgICBzZXRNb2RlOiBzaG93UGFuZWwsXG4gIH07XG59O1xuXG5TdGF0cy5QYW5lbCA9IGZ1bmN0aW9uIChuYW1lLCBmZywgYmcpIHtcbiAgdmFyIG1pbiA9IEluZmluaXR5LFxuICAgIG1heCA9IDAsXG4gICAgcm91bmQgPSBNYXRoLnJvdW5kO1xuICB2YXIgUFIgPSByb3VuZCh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyB8fCAxKTtcblxuICB2YXIgV0lEVEggPSA4MCAqIFBSLFxuICAgIEhFSUdIVCA9IDQ4ICogUFIsXG4gICAgVEVYVF9YID0gMyAqIFBSLFxuICAgIFRFWFRfWSA9IDIgKiBQUixcbiAgICBHUkFQSF9YID0gMyAqIFBSLFxuICAgIEdSQVBIX1kgPSAxNSAqIFBSLFxuICAgIEdSQVBIX1dJRFRIID0gNzQgKiBQUixcbiAgICBHUkFQSF9IRUlHSFQgPSAzMCAqIFBSO1xuXG4gIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICBjYW52YXMud2lkdGggPSBXSURUSDtcbiAgY2FudmFzLmhlaWdodCA9IEhFSUdIVDtcbiAgY2FudmFzLnN0eWxlLmNzc1RleHQgPSBcIndpZHRoOjgwcHg7aGVpZ2h0OjQ4cHhcIjtcblxuICB2YXIgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gIGNvbnRleHQuZm9udCA9IFwiYm9sZCBcIiArIDkgKiBQUiArIFwicHggSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWZcIjtcbiAgY29udGV4dC50ZXh0QmFzZWxpbmUgPSBcInRvcFwiO1xuXG4gIGNvbnRleHQuZmlsbFN0eWxlID0gYmc7XG4gIGNvbnRleHQuZmlsbFJlY3QoMCwgMCwgV0lEVEgsIEhFSUdIVCk7XG5cbiAgY29udGV4dC5maWxsU3R5bGUgPSBmZztcbiAgY29udGV4dC5maWxsVGV4dChuYW1lLCBURVhUX1gsIFRFWFRfWSk7XG4gIGNvbnRleHQuZmlsbFJlY3QoR1JBUEhfWCwgR1JBUEhfWSwgR1JBUEhfV0lEVEgsIEdSQVBIX0hFSUdIVCk7XG5cbiAgY29udGV4dC5maWxsU3R5bGUgPSBiZztcbiAgY29udGV4dC5nbG9iYWxBbHBoYSA9IDAuOTtcbiAgY29udGV4dC5maWxsUmVjdChHUkFQSF9YLCBHUkFQSF9ZLCBHUkFQSF9XSURUSCwgR1JBUEhfSEVJR0hUKTtcblxuICByZXR1cm4ge1xuICAgIGRvbTogY2FudmFzLFxuXG4gICAgdXBkYXRlOiBmdW5jdGlvbiAodmFsdWUsIG1heFZhbHVlKSB7XG4gICAgICBtaW4gPSBNYXRoLm1pbihtaW4sIHZhbHVlKTtcbiAgICAgIG1heCA9IE1hdGgubWF4KG1heCwgdmFsdWUpO1xuXG4gICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IGJnO1xuICAgICAgY29udGV4dC5nbG9iYWxBbHBoYSA9IDE7XG4gICAgICBjb250ZXh0LmZpbGxSZWN0KDAsIDAsIFdJRFRILCBHUkFQSF9ZKTtcbiAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gZmc7XG4gICAgICBjb250ZXh0LmZpbGxUZXh0KFxuICAgICAgICByb3VuZCh2YWx1ZSkgKyBcIiBcIiArIG5hbWUgKyBcIiAoXCIgKyByb3VuZChtaW4pICsgXCItXCIgKyByb3VuZChtYXgpICsgXCIpXCIsXG4gICAgICAgIFRFWFRfWCxcbiAgICAgICAgVEVYVF9ZXG4gICAgICApO1xuXG4gICAgICBjb250ZXh0LmRyYXdJbWFnZShcbiAgICAgICAgY2FudmFzLFxuICAgICAgICBHUkFQSF9YICsgUFIsXG4gICAgICAgIEdSQVBIX1ksXG4gICAgICAgIEdSQVBIX1dJRFRIIC0gUFIsXG4gICAgICAgIEdSQVBIX0hFSUdIVCxcbiAgICAgICAgR1JBUEhfWCxcbiAgICAgICAgR1JBUEhfWSxcbiAgICAgICAgR1JBUEhfV0lEVEggLSBQUixcbiAgICAgICAgR1JBUEhfSEVJR0hUXG4gICAgICApO1xuXG4gICAgICBjb250ZXh0LmZpbGxSZWN0KEdSQVBIX1ggKyBHUkFQSF9XSURUSCAtIFBSLCBHUkFQSF9ZLCBQUiwgR1JBUEhfSEVJR0hUKTtcblxuICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBiZztcbiAgICAgIGNvbnRleHQuZ2xvYmFsQWxwaGEgPSAwLjk7XG4gICAgICBjb250ZXh0LmZpbGxSZWN0KFxuICAgICAgICBHUkFQSF9YICsgR1JBUEhfV0lEVEggLSBQUixcbiAgICAgICAgR1JBUEhfWSxcbiAgICAgICAgUFIsXG4gICAgICAgIHJvdW5kKCgxIC0gdmFsdWUgLyBtYXhWYWx1ZSkgKiBHUkFQSF9IRUlHSFQpXG4gICAgICApO1xuICAgIH0sXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTdGF0cztcbiIsImV4cG9ydCBmdW5jdGlvbiBwYXJzZUJvb2xlYW4oc3RyKSB7XG4gICAgcmV0dXJuIHN0ciA9PT0gJ3RydWUnXG59XG5cbi8vIEZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIFByb21pc2UgZm9yIHRoZSBGUFNcbmNvbnN0IGdldEZQUyA9ICgpID0+XG4gICAgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgbGV0IGNvdW50ID0gMFxuICAgICAgICBjb25zdCB0b3RhbCA9IDEwXG4gICAgICAgIGxldCB0MVxuICAgICAgICBsZXQgdDJcbiAgICAgICAgZnVuY3Rpb24gcmVmcmVzaCgpIHtcbiAgICAgICAgICAgIGlmIChjb3VudCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHQxID0gbmV3IERhdGUoKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNvdW50ID09PSB0b3RhbCkge1xuICAgICAgICAgICAgICAgIHQyID0gbmV3IERhdGUoKVxuICAgICAgICAgICAgICAgIHJlc29sdmUoKHRvdGFsICogMTAwMCkgLyAodDIgLSB0MSkpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvdW50KytcbiAgICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVmcmVzaClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZWZyZXNoKClcbiAgICB9KVxuXG5jb25zdCBJU19SRUZSRVNIRURfTUFOVUFMTFkgPSAnSVNfUkVGUkVTSEVEX01BTlVBTExZJ1xuY29uc3QgRlJBTUVfUkFURSA9ICdGUkFNRV9SQVRFJ1xuXG5leHBvcnQgZnVuY3Rpb24gaXNSZWZyZXNoZWRNYW51YWxseSgpIHtcbiAgICBsZXQgaXNSZWZyZXNoZWRNYW51YWxseSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKElTX1JFRlJFU0hFRF9NQU5VQUxMWSlcbiAgICByZXR1cm4gKFxuICAgICAgICBpc1JlZnJlc2hlZE1hbnVhbGx5ID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgaXNSZWZyZXNoZWRNYW51YWxseSA9PT0gbnVsbCB8fFxuICAgICAgICBwYXJzZUJvb2xlYW4oaXNSZWZyZXNoZWRNYW51YWxseSlcbiAgICApXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0ZpcnN0VGltZSgpIHtcbiAgICByZXR1cm4gaXNSZWZyZXNoZWRNYW51YWxseSgpIHx8ICFsb2NhbFN0b3JhZ2UuZ2V0SXRlbShGUkFNRV9SQVRFKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5pdFBhZ2UoKSB7XG4gICAgLy8gV2hldGhlciB0aGUgcGFnZSBpcyByZWZyZXNoZWQgYnkgbWFudWFsIGF0IGxhc3QgdGltZVxuXG4gICAgaWYgKGlzUmVmcmVzaGVkTWFudWFsbHkoKSkge1xuICAgICAgICAvLyBUaGUgcGFnZSB3aWxsIGJlIHJlZnJlc2hlZCBmb3IgZWFjaCBiZW5jaG1hcmsgdGVzdCBjYXNlXG4gICAgICAgIC8vIFNvIHdlIG5lZWQgdG8gZGlzdGluZ3Vpc2ggd2hldGhlciB0aGUgcGFnZSBpcyByZWZyZXNoZWQgbWFudWFsbHkgb3IgYXV0b21hdGljYWxseVxuICAgICAgICAvLyBJZiB0aGUgcGFnZSBpcyByZWZyZXNoZWQgbWFudWFsbHksIHdlIHNob3VsZCBjbGVhciB0aGUgbG9jYWwgc3RvcmFnZVxuICAgICAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKVxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShJU19SRUZSRVNIRURfTUFOVUFMTFksICd0cnVlJylcblxuICAgICAgICAvLyBDYWxsaW5nIHRoZSBmdW5jdGlvbiB0byBnZXQgdGhlIEZQU1xuICAgICAgICBnZXRGUFMoKS50aGVuKChmcHMpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGZwcylcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKEZSQU1FX1JBVEUsIGZwcylcbiAgICAgICAgICAgIHJlbG9hZFBhZ2UoKVxuICAgICAgICB9KVxuICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIHRoZSBwYWdlIGlzIHJlZnJlc2hlZCBhdXRvbWF0aWNhbGx5XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKElTX1JFRlJFU0hFRF9NQU5VQUxMWSwgJ3RydWUnKVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEZyYW1lUmF0ZSgpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShGUkFNRV9SQVRFKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbG9hZFBhZ2UoKSB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oSVNfUkVGUkVTSEVEX01BTlVBTExZLCAnZmFsc2UnKVxuICAgIGxvY2F0aW9uLnJlbG9hZCgpXG59XG4iLCIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2Uge1xuXHRcdHZhciBhID0gZmFjdG9yeSgpO1xuXHRcdGZvcih2YXIgaSBpbiBhKSAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnID8gZXhwb3J0cyA6IHJvb3QpW2ldID0gYVtpXTtcblx0fVxufSkod2luZG93LCBmdW5jdGlvbigpIHtcbnJldHVybiAvKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGk6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bDogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuLyoqKioqKi8gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbi8qKioqKiovIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuLyoqKioqKi8gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3Rcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4vKioqKioqLyBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuLyoqKioqKi8gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3Rcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4vKioqKioqLyBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbi8qKioqKiovIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4vKioqKioqLyBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gbnM7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbi8qKioqKiovIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gZ2V0dGVyO1xuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi9zcmMvaW5kZXgudHNcIik7XG4vKioqKioqLyB9KVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovICh7XG5cbi8qKiovIFwiLi9zcmMvY29uZmlncy50c1wiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vc3JjL2NvbmZpZ3MudHMgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBAZGVzY3JpcHRpb24gZGVmYXVsdCBjb25maWd1cmF0aW9ucyBpbiBOZXRWXG4gKiBAYXV0aG9yIFhpYW9kb25nIFpoYW8gPHpoYW94aWFvZG9uZ0B6anUuZWR1LmNuPlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmxhYmVsID0gZXhwb3J0cy5saW5rID0gZXhwb3J0cy5ub2RlID0gZXhwb3J0cy5sYXp5TGlua1VwZGF0ZVRocmVzaG9sZCA9IGV4cG9ydHMubGlua0xpbWl0ID0gZXhwb3J0cy5ub2RlTGltaXQgPSBleHBvcnRzLmVuYWJsZVBhblpvb20gPSBleHBvcnRzLmJhY2tncm91bmRDb2xvciA9IGV4cG9ydHMuaGVpZ2h0ID0gZXhwb3J0cy53aWR0aCA9IHZvaWQgMDtcbmV4cG9ydHMud2lkdGggPSA4MDA7XG5leHBvcnRzLmhlaWdodCA9IDYwMDtcbmV4cG9ydHMuYmFja2dyb3VuZENvbG9yID0geyByOiAxLCBnOiAxLCBiOiAxLCBhOiAxIH07XG5leHBvcnRzLmVuYWJsZVBhblpvb20gPSB0cnVlO1xuZXhwb3J0cy5ub2RlTGltaXQgPSAxMDA7XG5leHBvcnRzLmxpbmtMaW1pdCA9IDEwMDA7XG5leHBvcnRzLmxhenlMaW5rVXBkYXRlVGhyZXNob2xkID0gMTAwO1xuZXhwb3J0cy5ub2RlID0ge1xuICAgIHI6IDUsXG4gICAgZmlsbDogeyByOiAwLjIsIGc6IDAuNiwgYjogMC4yLCBhOiAwLjggfSxcbiAgICAvLyBzdHJva2VDb2xvcjogeyByOiAwLjYsIGc6IDAuNiwgYjogMC42LCBhOiAwLjUgfSxcbiAgICBzdHJva2VDb2xvcjogeyByOiAwLjksIGc6IDAuOSwgYjogMC45LCBhOiAwLjYgfSxcbiAgICBzdHJva2VXaWR0aDogMixcbiAgICBzaG93TGFiZWw6IGZhbHNlLFxuICAgIC8vIHRleHRPZmZzZXQ6IHsgeDogOCwgeTogMCB9LCBwdXQgaW4gbGFiZWwgY29uZmlnIGluc3RlYWQgb2YgZWFjaCBub2RlXG4gICAgY2xpY2tDYWxsYmFjazogKG5vZGUpID0+IHsgfSxcbiAgICBob3ZlckNhbGxiYWNrOiAobm9kZSkgPT4geyB9XG59O1xuZXhwb3J0cy5saW5rID0ge1xuICAgIC8vIHN0cm9rZUNvbG9yOiB7IHI6IDAuNSwgZzogMC41LCBiOiAwLjUsIGE6IDAuMiB9LFxuICAgIHN0cm9rZUNvbG9yOiB7IHI6IDAuNCwgZzogMC42LCBiOiAwLjgsIGE6IDAuNSB9LFxuICAgIHN0cm9rZVdpZHRoOiAyLFxuICAgIGNsaWNrQ2FsbGJhY2s6IChsaW5rKSA9PiB7IH0sXG4gICAgaG92ZXJDYWxsYmFjazogKG5vZGUpID0+IHsgfVxufTtcbmV4cG9ydHMubGFiZWwgPSB7XG4gICAgb2Zmc2V0OiB7IHg6IDgsIHk6IDAgfSxcbiAgICBmb250U2l6ZTogMTgsXG4gICAgc3Ryb2tlV2lkdGg6IDAuNVxufTtcblxuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9kYXRhc2V0L2luZGV4LnRzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9zcmMvZGF0YXNldC9pbmRleC50cyAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIEBhdXRob3IgWGlhb2RvbmcgWmhhbyA8emhhb3hpYW9kb25nQHpqdS5lZHUuY24+XG4gKiBAZGVzY3JpcHRpb24gYnVpbGQtaW4gZGF0YXNldCBpbiBOZXRWXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGF0ZW50cyA9IGV4cG9ydHMubWlzZXJhYmxlcyA9IHZvaWQgMDtcbmNvbnN0IG1pc2VyYWJsZXNfMSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbWlzZXJhYmxlcyAqLyBcIi4vc3JjL2RhdGFzZXQvbWlzZXJhYmxlcy50c1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIm1pc2VyYWJsZXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1pc2VyYWJsZXNfMS5taXNlcmFibGVzOyB9IH0pO1xuY29uc3QgcGF0ZW50c18xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9wYXRlbnRzICovIFwiLi9zcmMvZGF0YXNldC9wYXRlbnRzLnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGF0ZW50c1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcGF0ZW50c18xLnBhdGVudHM7IH0gfSk7XG5cblxuLyoqKi8gfSksXG5cbi8qKiovIFwiLi9zcmMvZGF0YXNldC9taXNlcmFibGVzLnRzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3NyYy9kYXRhc2V0L21pc2VyYWJsZXMudHMgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIEBhdXRob3IgWGlhb2RvbmcgWmhhbyA8emhhb3hpYW9kb25nQHpqdS5lZHUuY24+XG4gKiBAZGVzY3JpcHRpb24gTGVzIE1pc2VyYWJsZXMgcmVsYXRpb24gZGF0YXNldC5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5taXNlcmFibGVzID0gdm9pZCAwO1xuLyoqXG4gKiBAZGVzY3JpcHRpb24gZ2VuZXJhdGVkIGJ5IGQzLWZvcmNlOiBodHRwczovL29ic2VydmFibGVocS5jb20vQGQzL2ZvcmNlLWRpcmVjdGVkLWdyYXBoXG4gKi9cbmV4cG9ydHMubWlzZXJhYmxlcyA9IHtcbiAgICBub2RlczogW1xuICAgICAgICB7IGlkOiAnTXlyaWVsJywgeDogMjkzLjQ3MTQ1MTE3NTUzNjIzLCB5OiAzNTYuNDMzNTcxODEwNDEzOCwgZ3JvdXA6IDEgfSxcbiAgICAgICAgeyBpZDogJ05hcG9sZW9uJywgeDogMjUzLjkwMjUwODg2MTg2NTYsIHk6IDM3NC4zMDU4MTE2NTM2NDQ1LCBncm91cDogMSB9LFxuICAgICAgICB7IGlkOiAnTWxsZS5CYXB0aXN0aW5lJywgeDogMzUwLjkyNzI0OTg5OTE4MDc3LCB5OiAzMzIuMzMyNTUzOTk5OTk0MywgZ3JvdXA6IDEgfSxcbiAgICAgICAgeyBpZDogJ01tZS5NYWdsb2lyZScsIHg6IDM1Ni4wOTE2MTU2NTM5OTk3LCB5OiAzNTIuNzg4NTc5OTExNjAxNSwgZ3JvdXA6IDEgfSxcbiAgICAgICAgeyBpZDogJ0NvdW50ZXNzZGVMbycsIHg6IDI1NC4yOTI5MTUyMDk4OTMzNSwgeTogMzU3LjMxNzU3MzQwNzY0MTcsIGdyb3VwOiAxIH0sXG4gICAgICAgIHsgaWQ6ICdHZWJvcmFuZCcsIHg6IDI1Ny44NTcyOTM2MjYyMDEsIHk6IDMzNS44NTQyNzYyODM1ODk1NywgZ3JvdXA6IDEgfSxcbiAgICAgICAgeyBpZDogJ0NoYW1wdGVyY2llcicsIHg6IDI1OS42MjU1NTYzODI1MDI4LCB5OiAzODMuODMwMjc0Njk4MzI4MTQsIGdyb3VwOiAxIH0sXG4gICAgICAgIHsgaWQ6ICdDcmF2YXR0ZScsIHg6IDI0OS44NTk2NDU5ODI5MTM5LCB5OiAzNDYuMTgyMjU1MTY4MzI0OTYsIGdyb3VwOiAxIH0sXG4gICAgICAgIHsgaWQ6ICdDb3VudCcsIHg6IDI2OS45Njc5Mzk1MTM1MDkyNCwgeTogMzkwLjY4MDA4NDIzMjE1NzEsIGdyb3VwOiAxIH0sXG4gICAgICAgIHsgaWQ6ICdPbGRNYW4nLCB4OiAyNDYuNzM5NTIzMTEyNzc2NjUsIHk6IDM2NC41OTM1NzQ5NDQzMjA2NiwgZ3JvdXA6IDEgfSxcbiAgICAgICAgeyBpZDogJ0xhYmFycmUnLCB4OiA0NDMuNTE2NTgzMzE1MDI2LCB5OiAzNTguMjkyMDQ3ODk0Nzc2ODMsIGdyb3VwOiAyIH0sXG4gICAgICAgIHsgaWQ6ICdWYWxqZWFuJywgeDogNDQyLjE2ODk0NzU3NjQxNTA2LCB5OiAzMjAuODMxNTUzMjE2MDg2MSwgZ3JvdXA6IDIgfSxcbiAgICAgICAgeyBpZDogJ01hcmd1ZXJpdGUnLCB4OiA0MTMuMzgxNjg1MTAwNzkzMSwgeTogMjQwLjA0MDkxNTU5Mjk2NTA0LCBncm91cDogMyB9LFxuICAgICAgICB7IGlkOiAnTW1lLmRlUicsIHg6IDQyNy4yMzYxNzE1OTUwMjU0LCB5OiAzNTUuMTAyMTE1ODk5Nzk1MTQsIGdyb3VwOiAyIH0sXG4gICAgICAgIHsgaWQ6ICdJc2FiZWF1JywgeDogNDA1Ljg1MDgyODU4MTkxODM0LCB5OiAzMzAuNTIwMTUxMjIwNTA4NSwgZ3JvdXA6IDIgfSxcbiAgICAgICAgeyBpZDogJ0dlcnZhaXMnLCB4OiA0MDUuMjExMzEyMTkwNjg4MSwgeTogMzE2LjI5MTI1MzU5Mzk2MTM2LCBncm91cDogMiB9LFxuICAgICAgICB7IGlkOiAnVGhvbG9teWVzJywgeDogNDIyLjQxMjUzMDc3ODE2NDYsIHk6IDEyNi4wNzY0OTQ0OTc3NTgwNiwgZ3JvdXA6IDMgfSxcbiAgICAgICAgeyBpZDogJ0xpc3RvbGllcicsIHg6IDM2My4xNzI5NDIyNjc3OTc5LCB5OiAxMDIuNzc4OTAzNjgyODk3ODUsIGdyb3VwOiAzIH0sXG4gICAgICAgIHsgaWQ6ICdGYW1ldWlsJywgeDogMzgxLjc5NDcxMDMwOTQwMjgsIHk6IDY2LjU4MTMzNzI0MDQzOTQ4LCBncm91cDogMyB9LFxuICAgICAgICB7IGlkOiAnQmxhY2hldmlsbGUnLCB4OiAzODMuMTc5MjY3Njc0MDI2MSwgeTogOTQuODAzMjAzMTU1MDAxNTQsIGdyb3VwOiAzIH0sXG4gICAgICAgIHsgaWQ6ICdGYXZvdXJpdGUnLCB4OiAzNjEuODkzNzMxNjQ0Mjg1LCB5OiA3MC4zODY5NjM4MTM4NDA3NCwgZ3JvdXA6IDMgfSxcbiAgICAgICAgeyBpZDogJ0RhaGxpYScsIHg6IDM5OC43NTM1MDk4ODM1MTY1MywgeTogNzcuMDk3MDA3NTE1MjcxMTksIGdyb3VwOiAzIH0sXG4gICAgICAgIHsgaWQ6ICdaZXBoaW5lJywgeDogMzQ5LjA0OTU5MTQ2MDEzNzYsIHk6IDg4LjgwODg4NjEzMzcyNzEzLCBncm91cDogMyB9LFxuICAgICAgICB7IGlkOiAnRmFudGluZScsIHg6IDM5OC4wMTQxMTQzODcwMjQ3MywgeTogMTczLjc2NDQ0MTk2OTQ1OTc3LCBncm91cDogMyB9LFxuICAgICAgICB7IGlkOiAnTW1lLlRoZW5hcmRpZXInLCB4OiA0NzEuMjUxNjUzMzM4NjcyNSwgeTogMjYyLjIxODcwMTY2NjY0NSwgZ3JvdXA6IDQgfSxcbiAgICAgICAgeyBpZDogJ1RoZW5hcmRpZXInLCB4OiA1MDQuODE2NzIwODU2MDMwNjYsIHk6IDI4My4wNDYzODkwMDQ4MTcyMywgZ3JvdXA6IDQgfSxcbiAgICAgICAgeyBpZDogJ0Nvc2V0dGUnLCB4OiA0NzIuMzM0Njk0MTQ4NzE5MiwgeTogMjI4LjY4Nzc5NDQzMzAzNDc4LCBncm91cDogNSB9LFxuICAgICAgICB7IGlkOiAnSmF2ZXJ0JywgeDogNDYwLjA1MjU3Njg5MzMyODM2LCB5OiAyOTUuNTU3ODE1NDI2ODkwNCwgZ3JvdXA6IDQgfSxcbiAgICAgICAgeyBpZDogJ0ZhdWNoZWxldmVudCcsIHg6IDM4NS40MzkzNTc2NDU4OTk4NiwgeTogMzAyLjEyODI0NTg4NjIyODU3LCBncm91cDogMCB9LFxuICAgICAgICB7IGlkOiAnQmFtYXRhYm9pcycsIHg6IDM5My4xOTA0MTU5MDM4MzU5NywgeTogMzQ1LjQ5NzE2Njc2OTA4MTcsIGdyb3VwOiAyIH0sXG4gICAgICAgIHsgaWQ6ICdQZXJwZXR1ZScsIHg6IDM2Ny41MzgzMzEzMjg5Mzk3NiwgeTogMTk0LjU1NTY0ODIzMDYyNzEsIGdyb3VwOiAzIH0sXG4gICAgICAgIHsgaWQ6ICdTaW1wbGljZScsIHg6IDQwMS4zNjIyMjUyMzU0NjU1LCB5OiAyNDIuOTk4Mjg0Nzk5NDU3NiwgZ3JvdXA6IDIgfSxcbiAgICAgICAgeyBpZDogJ1NjYXVmZmxhaXJlJywgeDogNDE0LjY3MDcyNzk5NjI3NTczLCB5OiAzNDQuMDU0NzcyMDk0NTczNiwgZ3JvdXA6IDIgfSxcbiAgICAgICAgeyBpZDogJ1dvbWFuMScsIHg6IDQyMS40MTY3NDE0MzkyNDI2LCB5OiAyOTMuMzExMjAyMTkxMjkzOTQsIGdyb3VwOiAyIH0sXG4gICAgICAgIHsgaWQ6ICdKdWRnZScsIHg6IDQyMC4wNDM5MjAwNzg0MTMzNSwgeTogNDAxLjAzMjMzNjA5MTUyNzQ0LCBncm91cDogMiB9LFxuICAgICAgICB7IGlkOiAnQ2hhbXBtYXRoaWV1JywgeDogMzc3Ljc5NTI0MjU0NjIxODMzLCB5OiAzODMuODEwNTc4NzExNTEwMiwgZ3JvdXA6IDIgfSxcbiAgICAgICAgeyBpZDogJ0JyZXZldCcsIHg6IDQwMS45NTI5ODQ0NDY5OTkyLCB5OiAzODguODY4NDc4Mjk4NzQxMSwgZ3JvdXA6IDIgfSxcbiAgICAgICAgeyBpZDogJ0NoZW5pbGRpZXUnLCB4OiA0MDAuNjY4NTcwNzEzMzUzOCwgeTogNDEzLjQ5NDE3NzkwNTIzNDY2LCBncm91cDogMiB9LFxuICAgICAgICB7IGlkOiAnQ29jaGVwYWlsbGUnLCB4OiAzNzkuMDQ5Njk3MDQ0NjIzNTQsIHk6IDQwNC4yNjk3NDA1OTIzMzE2MywgZ3JvdXA6IDIgfSxcbiAgICAgICAgeyBpZDogJ1BvbnRtZXJjeScsIHg6IDU1My4xMTM3NDAxNzUwMTk4LCB5OiAyNDQuOTI4MzAwMjczNjA3NjUsIGdyb3VwOiA0IH0sXG4gICAgICAgIHsgaWQ6ICdCb3VsYXRydWVsbGUnLCB4OiA0OTAuMTU3MTA4NjA4NjkzMiwgeTogMjQ5LjIxMDE5MjM4MzU4MDMsIGdyb3VwOiA2IH0sXG4gICAgICAgIHsgaWQ6ICdFcG9uaW5lJywgeDogNTQ5Ljc1ODQyNjc1NzE4OTIsIHk6IDMwMi45MDMxMDY1MjI4NDMxLCBncm91cDogNCB9LFxuICAgICAgICB7IGlkOiAnQW56ZWxtYScsIHg6IDUxNS4zODA3Mzk5Mzk1MTM0LCB5OiAyNTcuMDE3OTY4ODk4MzkxMSwgZ3JvdXA6IDQgfSxcbiAgICAgICAgeyBpZDogJ1dvbWFuMicsIHg6IDQzMy42NjA4NjY1MzQwNTE0LCB5OiAyNjUuODE3NDY3Mzg4NjYzNCwgZ3JvdXA6IDUgfSxcbiAgICAgICAgeyBpZDogJ01vdGhlcklubm9jZW50JywgeDogNDAzLjAyNTM2MjU3NDE2NTIzLCB5OiAyODkuMDMzMTIyMDAxMjEzMjYsIGdyb3VwOiAwIH0sXG4gICAgICAgIHsgaWQ6ICdHcmliaWVyJywgeDogMzQxLjgwOTczMjI3NDU2Nzc1LCB5OiAyOTQuMjEyMzk2MTQ4MDIzLCBncm91cDogMCB9LFxuICAgICAgICB7IGlkOiAnSm9uZHJldHRlJywgeDogNTY1LjE5NjUzMDM0MjIxODYsIHk6IDQ3MC42NTk1MDM0OTM3NTg1NiwgZ3JvdXA6IDcgfSxcbiAgICAgICAgeyBpZDogJ01tZS5CdXJnb24nLCB4OiA1NjkuMTg5NjI2OTI0MjEwMSwgeTogNDI2LjY2MTg1MDUzODI0NTYzLCBncm91cDogNyB9LFxuICAgICAgICB7IGlkOiAnR2F2cm9jaGUnLCB4OiA1NzIuMTYxOTM5MzkzNjgyNiwgeTogMzY0LjIyNjA2NzY2NDk3NTYzLCBncm91cDogOCB9LFxuICAgICAgICB7IGlkOiAnR2lsbGVub3JtYW5kJywgeDogNTI0LjU5MTQ1MDUyMDgwMDUsIHk6IDI1Ny40MDEyMjE0ODI4MzM2LCBncm91cDogNSB9LFxuICAgICAgICB7IGlkOiAnTWFnbm9uJywgeDogNDkyLjU0ODM5MzIwMjM0MSwgeTogMjIyLjU5NjYzNTEzMjg4ODUsIGdyb3VwOiA1IH0sXG4gICAgICAgIHsgaWQ6ICdNbGxlLkdpbGxlbm9ybWFuZCcsIHg6IDUxNC4zNjkyNjU1MDIzNjQ0LCB5OiAyMjkuMDk2NzAwNjIzODkyODEsIGdyb3VwOiA1IH0sXG4gICAgICAgIHsgaWQ6ICdNbWUuUG9udG1lcmN5JywgeDogNTQ5LjMyNTA1MDgxNzE0NzQsIHk6IDE5Ni4xNDA1NjgzMzA4NDkzNiwgZ3JvdXA6IDUgfSxcbiAgICAgICAgeyBpZDogJ01sbGUuVmF1Ym9pcycsIHg6IDUxNy44NTkzNTcyMzk0MDcxLCB5OiAxODYuMjQ4ODMwOTExMTU2NSwgZ3JvdXA6IDUgfSxcbiAgICAgICAgeyBpZDogJ0x0LkdpbGxlbm9ybWFuZCcsIHg6IDU0My4yNzQ5NjExMzk0NTUsIHk6IDIyMy42ODE4NDI4NTE4MDk3NiwgZ3JvdXA6IDUgfSxcbiAgICAgICAgeyBpZDogJ01hcml1cycsIHg6IDU3NC4yNTc2Njk5MDU2MTM5LCB5OiAyODMuODUyMTE3MDgzMTAzMzQsIGdyb3VwOiA4IH0sXG4gICAgICAgIHsgaWQ6ICdCYXJvbmVzc1QnLCB4OiA1NzMuNzE0MDkwOTY1MDYyNSwgeTogMjQ1LjU5MzExOTA5MjQ1ODE4LCBncm91cDogNSB9LFxuICAgICAgICB7IGlkOiAnTWFiZXVmJywgeDogNjI4LjU0MzI1MzI0ODYxOTEsIHk6IDMxNC4yMjA3ODQwODYyNzE2NCwgZ3JvdXA6IDggfSxcbiAgICAgICAgeyBpZDogJ0Vuam9scmFzJywgeDogNTg4LjIzOTU0OTgwOTM2MjYsIHk6IDM0Mi4wNTk0NDY5OTIzMjc5LCBncm91cDogOCB9LFxuICAgICAgICB7IGlkOiAnQ29tYmVmZXJyZScsIHg6IDYzNy43MzcwNjY0NjE0NjM3LCB5OiAzNTEuNjkyMzU3NjI3ODgzOTUsIGdyb3VwOiA4IH0sXG4gICAgICAgIHsgaWQ6ICdQcm91dmFpcmUnLCB4OiA2NTAuODgzMzUyMjg2OTkwMywgeTogMzg2LjgzOTE4MTAzNTA5OTE2LCBncm91cDogOCB9LFxuICAgICAgICB7IGlkOiAnRmV1aWxseScsIHg6IDYyNi44NTU2NjA2NDM4MTA5LCB5OiAzNjUuOTA4NDE2NDU5MzE0MSwgZ3JvdXA6IDggfSxcbiAgICAgICAgeyBpZDogJ0NvdXJmZXlyYWMnLCB4OiA2MjguMzQ0ODk4OTk3NTAxMywgeTogMzM2Ljc2NjY0NTQxMTkwMjIsIGdyb3VwOiA4IH0sXG4gICAgICAgIHsgaWQ6ICdCYWhvcmVsJywgeDogNjU2Ljc3MTc3NzI3NjQ5ODUsIHk6IDM2Mi41ODg1ODgyNTA5MTg5LCBncm91cDogOCB9LFxuICAgICAgICB7IGlkOiAnQm9zc3VldCcsIHg6IDU5OS4wMTg1NzY1NzQzMTA3LCB5OiAzNjMuODI4NjcyMzQwNzA1MywgZ3JvdXA6IDggfSxcbiAgICAgICAgeyBpZDogJ0pvbHknLCB4OiA2NTYuNjE4MjkyMzczNTQwOCwgeTogMzQzLjIzNzU3MzM1NTkxNjUsIGdyb3VwOiA4IH0sXG4gICAgICAgIHsgaWQ6ICdHcmFudGFpcmUnLCB4OiA2MzguNDM3NTg1NTMxNDk4OCwgeTogNDAyLjQzODcyNTAzNzg5OTUsIGdyb3VwOiA4IH0sXG4gICAgICAgIHsgaWQ6ICdNb3RoZXJQbHV0YXJjaCcsIHg6IDY2NC41NTY3MjM4NjE4ODMsIHk6IDI5OC4wMzM2OTY0NTI2Nzg2LCBncm91cDogOSB9LFxuICAgICAgICB7IGlkOiAnR3VldWxlbWVyJywgeDogNTA4LjE2NDUwNTI1ODE3ODA1LCB5OiAzMzAuNDUwMjkwNzQ0NDM2NywgZ3JvdXA6IDQgfSxcbiAgICAgICAgeyBpZDogJ0JhYmV0JywgeDogNDkyLjU2MDA1Mjc5ODgyMDk1LCB5OiAzMjUuOTgzNDA5Mjg0ODQyNywgZ3JvdXA6IDQgfSxcbiAgICAgICAgeyBpZDogJ0NsYXF1ZXNvdXMnLCB4OiA1MTAuOTM4NTU1MDYyNTAwNzcsIHk6IDMwOS4yODY5MzgwNjk3MzI4LCBncm91cDogNCB9LFxuICAgICAgICB7IGlkOiAnTW9udHBhcm5hc3NlJywgeDogNTAyLjcxOTA4OTQxNzM1NTcsIHk6IDM1MC45Mjc1MTgzMTMzNDM4LCBncm91cDogNCB9LFxuICAgICAgICB7IGlkOiAnVG91c3NhaW50JywgeDogNDQ1LjEyNTQ4MDIwNTY4MDcsIHk6IDI2Ni40NjI0MjY2NTAyMjAwNCwgZ3JvdXA6IDUgfSxcbiAgICAgICAgeyBpZDogJ0NoaWxkMScsIHg6IDU4OC4wMzUxNTUyMzg2OTYxLCB5OiA0MTAuMjE5NTU1NTk2MTk5NiwgZ3JvdXA6IDEwIH0sXG4gICAgICAgIHsgaWQ6ICdDaGlsZDInLCB4OiA1NTkuMjc3NzgxNDc4MjcwNSwgeTogNDA4LjM1MzMxODQ4OTM1NjksIGdyb3VwOiAxMCB9LFxuICAgICAgICB7IGlkOiAnQnJ1am9uJywgeDogNTM3LjE3ODczODM5MDQ2NTYsIHk6IDMzNy44NjkyMjc3NTkxNzk0NywgZ3JvdXA6IDQgfSxcbiAgICAgICAgeyBpZDogJ01tZS5IdWNoZWxvdXAnLCB4OiA2MjYuMzc3NTg1MDQ2NjE2NCwgeTogMzg0LjM1MjAyMDY2ODk0NTE2LCBncm91cDogOCB9XG4gICAgXSxcbiAgICBsaW5rczogW1xuICAgICAgICB7IHNvdXJjZTogJ05hcG9sZW9uJywgdGFyZ2V0OiAnTXlyaWVsJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNbGxlLkJhcHRpc3RpbmUnLCB0YXJnZXQ6ICdNeXJpZWwnLCB2YWx1ZTogOCB9LFxuICAgICAgICB7IHNvdXJjZTogJ01tZS5NYWdsb2lyZScsIHRhcmdldDogJ015cmllbCcsIHZhbHVlOiAxMCB9LFxuICAgICAgICB7IHNvdXJjZTogJ01tZS5NYWdsb2lyZScsIHRhcmdldDogJ01sbGUuQmFwdGlzdGluZScsIHZhbHVlOiA2IH0sXG4gICAgICAgIHsgc291cmNlOiAnQ291bnRlc3NkZUxvJywgdGFyZ2V0OiAnTXlyaWVsJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdHZWJvcmFuZCcsIHRhcmdldDogJ015cmllbCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ2hhbXB0ZXJjaWVyJywgdGFyZ2V0OiAnTXlyaWVsJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDcmF2YXR0ZScsIHRhcmdldDogJ015cmllbCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ291bnQnLCB0YXJnZXQ6ICdNeXJpZWwnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ09sZE1hbicsIHRhcmdldDogJ015cmllbCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnVmFsamVhbicsIHRhcmdldDogJ0xhYmFycmUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ1ZhbGplYW4nLCB0YXJnZXQ6ICdNbWUuTWFnbG9pcmUnLCB2YWx1ZTogMyB9LFxuICAgICAgICB7IHNvdXJjZTogJ1ZhbGplYW4nLCB0YXJnZXQ6ICdNbGxlLkJhcHRpc3RpbmUnLCB2YWx1ZTogMyB9LFxuICAgICAgICB7IHNvdXJjZTogJ1ZhbGplYW4nLCB0YXJnZXQ6ICdNeXJpZWwnLCB2YWx1ZTogNSB9LFxuICAgICAgICB7IHNvdXJjZTogJ01hcmd1ZXJpdGUnLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNbWUuZGVSJywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnSXNhYmVhdScsIHRhcmdldDogJ1ZhbGplYW4nLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0dlcnZhaXMnLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdMaXN0b2xpZXInLCB0YXJnZXQ6ICdUaG9sb215ZXMnLCB2YWx1ZTogNCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0ZhbWV1aWwnLCB0YXJnZXQ6ICdUaG9sb215ZXMnLCB2YWx1ZTogNCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0ZhbWV1aWwnLCB0YXJnZXQ6ICdMaXN0b2xpZXInLCB2YWx1ZTogNCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JsYWNoZXZpbGxlJywgdGFyZ2V0OiAnVGhvbG9teWVzJywgdmFsdWU6IDQgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdCbGFjaGV2aWxsZScsIHRhcmdldDogJ0xpc3RvbGllcicsIHZhbHVlOiA0IH0sXG4gICAgICAgIHsgc291cmNlOiAnQmxhY2hldmlsbGUnLCB0YXJnZXQ6ICdGYW1ldWlsJywgdmFsdWU6IDQgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdGYXZvdXJpdGUnLCB0YXJnZXQ6ICdUaG9sb215ZXMnLCB2YWx1ZTogMyB9LFxuICAgICAgICB7IHNvdXJjZTogJ0Zhdm91cml0ZScsIHRhcmdldDogJ0xpc3RvbGllcicsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnRmF2b3VyaXRlJywgdGFyZ2V0OiAnRmFtZXVpbCcsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnRmF2b3VyaXRlJywgdGFyZ2V0OiAnQmxhY2hldmlsbGUnLCB2YWx1ZTogNCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0RhaGxpYScsIHRhcmdldDogJ1Rob2xvbXllcycsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnRGFobGlhJywgdGFyZ2V0OiAnTGlzdG9saWVyJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdEYWhsaWEnLCB0YXJnZXQ6ICdGYW1ldWlsJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdEYWhsaWEnLCB0YXJnZXQ6ICdCbGFjaGV2aWxsZScsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnRGFobGlhJywgdGFyZ2V0OiAnRmF2b3VyaXRlJywgdmFsdWU6IDUgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdaZXBoaW5lJywgdGFyZ2V0OiAnVGhvbG9teWVzJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdaZXBoaW5lJywgdGFyZ2V0OiAnTGlzdG9saWVyJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdaZXBoaW5lJywgdGFyZ2V0OiAnRmFtZXVpbCcsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnWmVwaGluZScsIHRhcmdldDogJ0JsYWNoZXZpbGxlJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdaZXBoaW5lJywgdGFyZ2V0OiAnRmF2b3VyaXRlJywgdmFsdWU6IDQgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdaZXBoaW5lJywgdGFyZ2V0OiAnRGFobGlhJywgdmFsdWU6IDQgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdGYW50aW5lJywgdGFyZ2V0OiAnVGhvbG9teWVzJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdGYW50aW5lJywgdGFyZ2V0OiAnTGlzdG9saWVyJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdGYW50aW5lJywgdGFyZ2V0OiAnRmFtZXVpbCcsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnRmFudGluZScsIHRhcmdldDogJ0JsYWNoZXZpbGxlJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdGYW50aW5lJywgdGFyZ2V0OiAnRmF2b3VyaXRlJywgdmFsdWU6IDQgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdGYW50aW5lJywgdGFyZ2V0OiAnRGFobGlhJywgdmFsdWU6IDQgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdGYW50aW5lJywgdGFyZ2V0OiAnWmVwaGluZScsIHZhbHVlOiA0IH0sXG4gICAgICAgIHsgc291cmNlOiAnRmFudGluZScsIHRhcmdldDogJ01hcmd1ZXJpdGUnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0ZhbnRpbmUnLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDkgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNbWUuVGhlbmFyZGllcicsIHRhcmdldDogJ0ZhbnRpbmUnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ01tZS5UaGVuYXJkaWVyJywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiA3IH0sXG4gICAgICAgIHsgc291cmNlOiAnVGhlbmFyZGllcicsIHRhcmdldDogJ01tZS5UaGVuYXJkaWVyJywgdmFsdWU6IDEzIH0sXG4gICAgICAgIHsgc291cmNlOiAnVGhlbmFyZGllcicsIHRhcmdldDogJ0ZhbnRpbmUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ1RoZW5hcmRpZXInLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDEyIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ29zZXR0ZScsIHRhcmdldDogJ01tZS5UaGVuYXJkaWVyJywgdmFsdWU6IDQgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDb3NldHRlJywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAzMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0Nvc2V0dGUnLCB0YXJnZXQ6ICdUaG9sb215ZXMnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0Nvc2V0dGUnLCB0YXJnZXQ6ICdUaGVuYXJkaWVyJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdKYXZlcnQnLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDE3IH0sXG4gICAgICAgIHsgc291cmNlOiAnSmF2ZXJ0JywgdGFyZ2V0OiAnRmFudGluZScsIHZhbHVlOiA1IH0sXG4gICAgICAgIHsgc291cmNlOiAnSmF2ZXJ0JywgdGFyZ2V0OiAnVGhlbmFyZGllcicsIHZhbHVlOiA1IH0sXG4gICAgICAgIHsgc291cmNlOiAnSmF2ZXJ0JywgdGFyZ2V0OiAnTW1lLlRoZW5hcmRpZXInLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0phdmVydCcsIHRhcmdldDogJ0Nvc2V0dGUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0ZhdWNoZWxldmVudCcsIHRhcmdldDogJ1ZhbGplYW4nLCB2YWx1ZTogOCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0ZhdWNoZWxldmVudCcsIHRhcmdldDogJ0phdmVydCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQmFtYXRhYm9pcycsIHRhcmdldDogJ0ZhbnRpbmUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JhbWF0YWJvaXMnLCB0YXJnZXQ6ICdKYXZlcnQnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JhbWF0YWJvaXMnLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdQZXJwZXR1ZScsIHRhcmdldDogJ0ZhbnRpbmUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ1NpbXBsaWNlJywgdGFyZ2V0OiAnUGVycGV0dWUnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ1NpbXBsaWNlJywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnU2ltcGxpY2UnLCB0YXJnZXQ6ICdGYW50aW5lJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdTaW1wbGljZScsIHRhcmdldDogJ0phdmVydCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnU2NhdWZmbGFpcmUnLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdXb21hbjEnLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdXb21hbjEnLCB0YXJnZXQ6ICdKYXZlcnQnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0p1ZGdlJywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnSnVkZ2UnLCB0YXJnZXQ6ICdCYW1hdGFib2lzJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDaGFtcG1hdGhpZXUnLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDaGFtcG1hdGhpZXUnLCB0YXJnZXQ6ICdKdWRnZScsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ2hhbXBtYXRoaWV1JywgdGFyZ2V0OiAnQmFtYXRhYm9pcycsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnQnJldmV0JywgdGFyZ2V0OiAnSnVkZ2UnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JyZXZldCcsIHRhcmdldDogJ0NoYW1wbWF0aGlldScsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnQnJldmV0JywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnQnJldmV0JywgdGFyZ2V0OiAnQmFtYXRhYm9pcycsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ2hlbmlsZGlldScsIHRhcmdldDogJ0p1ZGdlJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDaGVuaWxkaWV1JywgdGFyZ2V0OiAnQ2hhbXBtYXRoaWV1JywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDaGVuaWxkaWV1JywgdGFyZ2V0OiAnQnJldmV0JywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDaGVuaWxkaWV1JywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ2hlbmlsZGlldScsIHRhcmdldDogJ0JhbWF0YWJvaXMnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NvY2hlcGFpbGxlJywgdGFyZ2V0OiAnSnVkZ2UnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NvY2hlcGFpbGxlJywgdGFyZ2V0OiAnQ2hhbXBtYXRoaWV1JywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDb2NoZXBhaWxsZScsIHRhcmdldDogJ0JyZXZldCcsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ29jaGVwYWlsbGUnLCB0YXJnZXQ6ICdDaGVuaWxkaWV1JywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDb2NoZXBhaWxsZScsIHRhcmdldDogJ1ZhbGplYW4nLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NvY2hlcGFpbGxlJywgdGFyZ2V0OiAnQmFtYXRhYm9pcycsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnUG9udG1lcmN5JywgdGFyZ2V0OiAnVGhlbmFyZGllcicsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQm91bGF0cnVlbGxlJywgdGFyZ2V0OiAnVGhlbmFyZGllcicsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnRXBvbmluZScsIHRhcmdldDogJ01tZS5UaGVuYXJkaWVyJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdFcG9uaW5lJywgdGFyZ2V0OiAnVGhlbmFyZGllcicsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnQW56ZWxtYScsIHRhcmdldDogJ0Vwb25pbmUnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0FuemVsbWEnLCB0YXJnZXQ6ICdUaGVuYXJkaWVyJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdBbnplbG1hJywgdGFyZ2V0OiAnTW1lLlRoZW5hcmRpZXInLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ1dvbWFuMicsIHRhcmdldDogJ1ZhbGplYW4nLCB2YWx1ZTogMyB9LFxuICAgICAgICB7IHNvdXJjZTogJ1dvbWFuMicsIHRhcmdldDogJ0Nvc2V0dGUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ1dvbWFuMicsIHRhcmdldDogJ0phdmVydCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTW90aGVySW5ub2NlbnQnLCB0YXJnZXQ6ICdGYXVjaGVsZXZlbnQnLCB2YWx1ZTogMyB9LFxuICAgICAgICB7IHNvdXJjZTogJ01vdGhlcklubm9jZW50JywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnR3JpYmllcicsIHRhcmdldDogJ0ZhdWNoZWxldmVudCcsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnTW1lLkJ1cmdvbicsIHRhcmdldDogJ0pvbmRyZXR0ZScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnR2F2cm9jaGUnLCB0YXJnZXQ6ICdNbWUuQnVyZ29uJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdHYXZyb2NoZScsIHRhcmdldDogJ1RoZW5hcmRpZXInLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0dhdnJvY2hlJywgdGFyZ2V0OiAnSmF2ZXJ0JywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdHYXZyb2NoZScsIHRhcmdldDogJ1ZhbGplYW4nLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0dpbGxlbm9ybWFuZCcsIHRhcmdldDogJ0Nvc2V0dGUnLCB2YWx1ZTogMyB9LFxuICAgICAgICB7IHNvdXJjZTogJ0dpbGxlbm9ybWFuZCcsIHRhcmdldDogJ1ZhbGplYW4nLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ01hZ25vbicsIHRhcmdldDogJ0dpbGxlbm9ybWFuZCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTWFnbm9uJywgdGFyZ2V0OiAnTW1lLlRoZW5hcmRpZXInLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ01sbGUuR2lsbGVub3JtYW5kJywgdGFyZ2V0OiAnR2lsbGVub3JtYW5kJywgdmFsdWU6IDkgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNbGxlLkdpbGxlbm9ybWFuZCcsIHRhcmdldDogJ0Nvc2V0dGUnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ01sbGUuR2lsbGVub3JtYW5kJywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnTW1lLlBvbnRtZXJjeScsIHRhcmdldDogJ01sbGUuR2lsbGVub3JtYW5kJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNbWUuUG9udG1lcmN5JywgdGFyZ2V0OiAnUG9udG1lcmN5JywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNbGxlLlZhdWJvaXMnLCB0YXJnZXQ6ICdNbGxlLkdpbGxlbm9ybWFuZCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTHQuR2lsbGVub3JtYW5kJywgdGFyZ2V0OiAnTWxsZS5HaWxsZW5vcm1hbmQnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0x0LkdpbGxlbm9ybWFuZCcsIHRhcmdldDogJ0dpbGxlbm9ybWFuZCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTHQuR2lsbGVub3JtYW5kJywgdGFyZ2V0OiAnQ29zZXR0ZScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTWFyaXVzJywgdGFyZ2V0OiAnTWxsZS5HaWxsZW5vcm1hbmQnLCB2YWx1ZTogNiB9LFxuICAgICAgICB7IHNvdXJjZTogJ01hcml1cycsIHRhcmdldDogJ0dpbGxlbm9ybWFuZCcsIHZhbHVlOiAxMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ01hcml1cycsIHRhcmdldDogJ1BvbnRtZXJjeScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTWFyaXVzJywgdGFyZ2V0OiAnTHQuR2lsbGVub3JtYW5kJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNYXJpdXMnLCB0YXJnZXQ6ICdDb3NldHRlJywgdmFsdWU6IDIxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTWFyaXVzJywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAxOSB9LFxuICAgICAgICB7IHNvdXJjZTogJ01hcml1cycsIHRhcmdldDogJ1Rob2xvbXllcycsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTWFyaXVzJywgdGFyZ2V0OiAnVGhlbmFyZGllcicsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnTWFyaXVzJywgdGFyZ2V0OiAnRXBvbmluZScsIHZhbHVlOiA1IH0sXG4gICAgICAgIHsgc291cmNlOiAnTWFyaXVzJywgdGFyZ2V0OiAnR2F2cm9jaGUnLCB2YWx1ZTogNCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0Jhcm9uZXNzVCcsIHRhcmdldDogJ0dpbGxlbm9ybWFuZCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQmFyb25lc3NUJywgdGFyZ2V0OiAnTWFyaXVzJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNYWJldWYnLCB0YXJnZXQ6ICdNYXJpdXMnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ01hYmV1ZicsIHRhcmdldDogJ0Vwb25pbmUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ01hYmV1ZicsIHRhcmdldDogJ0dhdnJvY2hlJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdFbmpvbHJhcycsIHRhcmdldDogJ01hcml1cycsIHZhbHVlOiA3IH0sXG4gICAgICAgIHsgc291cmNlOiAnRW5qb2xyYXMnLCB0YXJnZXQ6ICdHYXZyb2NoZScsIHZhbHVlOiA3IH0sXG4gICAgICAgIHsgc291cmNlOiAnRW5qb2xyYXMnLCB0YXJnZXQ6ICdKYXZlcnQnLCB2YWx1ZTogNiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0Vuam9scmFzJywgdGFyZ2V0OiAnTWFiZXVmJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdFbmpvbHJhcycsIHRhcmdldDogJ1ZhbGplYW4nLCB2YWx1ZTogNCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NvbWJlZmVycmUnLCB0YXJnZXQ6ICdFbmpvbHJhcycsIHZhbHVlOiAxNSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NvbWJlZmVycmUnLCB0YXJnZXQ6ICdNYXJpdXMnLCB2YWx1ZTogNSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NvbWJlZmVycmUnLCB0YXJnZXQ6ICdHYXZyb2NoZScsIHZhbHVlOiA2IH0sXG4gICAgICAgIHsgc291cmNlOiAnQ29tYmVmZXJyZScsIHRhcmdldDogJ01hYmV1ZicsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnUHJvdXZhaXJlJywgdGFyZ2V0OiAnR2F2cm9jaGUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ1Byb3V2YWlyZScsIHRhcmdldDogJ0Vuam9scmFzJywgdmFsdWU6IDQgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdQcm91dmFpcmUnLCB0YXJnZXQ6ICdDb21iZWZlcnJlJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdGZXVpbGx5JywgdGFyZ2V0OiAnR2F2cm9jaGUnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0ZldWlsbHknLCB0YXJnZXQ6ICdFbmpvbHJhcycsIHZhbHVlOiA2IH0sXG4gICAgICAgIHsgc291cmNlOiAnRmV1aWxseScsIHRhcmdldDogJ1Byb3V2YWlyZScsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnRmV1aWxseScsIHRhcmdldDogJ0NvbWJlZmVycmUnLCB2YWx1ZTogNSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0ZldWlsbHknLCB0YXJnZXQ6ICdNYWJldWYnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0ZldWlsbHknLCB0YXJnZXQ6ICdNYXJpdXMnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NvdXJmZXlyYWMnLCB0YXJnZXQ6ICdNYXJpdXMnLCB2YWx1ZTogOSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NvdXJmZXlyYWMnLCB0YXJnZXQ6ICdFbmpvbHJhcycsIHZhbHVlOiAxNyB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NvdXJmZXlyYWMnLCB0YXJnZXQ6ICdDb21iZWZlcnJlJywgdmFsdWU6IDEzIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ291cmZleXJhYycsIHRhcmdldDogJ0dhdnJvY2hlJywgdmFsdWU6IDcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDb3VyZmV5cmFjJywgdGFyZ2V0OiAnTWFiZXVmJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDb3VyZmV5cmFjJywgdGFyZ2V0OiAnRXBvbmluZScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ291cmZleXJhYycsIHRhcmdldDogJ0ZldWlsbHknLCB2YWx1ZTogNiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NvdXJmZXlyYWMnLCB0YXJnZXQ6ICdQcm91dmFpcmUnLCB2YWx1ZTogMyB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JhaG9yZWwnLCB0YXJnZXQ6ICdDb21iZWZlcnJlJywgdmFsdWU6IDUgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdCYWhvcmVsJywgdGFyZ2V0OiAnR2F2cm9jaGUnLCB2YWx1ZTogNSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JhaG9yZWwnLCB0YXJnZXQ6ICdDb3VyZmV5cmFjJywgdmFsdWU6IDYgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdCYWhvcmVsJywgdGFyZ2V0OiAnTWFiZXVmJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdCYWhvcmVsJywgdGFyZ2V0OiAnRW5qb2xyYXMnLCB2YWx1ZTogNCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JhaG9yZWwnLCB0YXJnZXQ6ICdGZXVpbGx5JywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdCYWhvcmVsJywgdGFyZ2V0OiAnUHJvdXZhaXJlJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdCYWhvcmVsJywgdGFyZ2V0OiAnTWFyaXVzJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdCb3NzdWV0JywgdGFyZ2V0OiAnTWFyaXVzJywgdmFsdWU6IDUgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdCb3NzdWV0JywgdGFyZ2V0OiAnQ291cmZleXJhYycsIHZhbHVlOiAxMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0Jvc3N1ZXQnLCB0YXJnZXQ6ICdHYXZyb2NoZScsIHZhbHVlOiA1IH0sXG4gICAgICAgIHsgc291cmNlOiAnQm9zc3VldCcsIHRhcmdldDogJ0JhaG9yZWwnLCB2YWx1ZTogNCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0Jvc3N1ZXQnLCB0YXJnZXQ6ICdFbmpvbHJhcycsIHZhbHVlOiAxMCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0Jvc3N1ZXQnLCB0YXJnZXQ6ICdGZXVpbGx5JywgdmFsdWU6IDYgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdCb3NzdWV0JywgdGFyZ2V0OiAnUHJvdXZhaXJlJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdCb3NzdWV0JywgdGFyZ2V0OiAnQ29tYmVmZXJyZScsIHZhbHVlOiA5IH0sXG4gICAgICAgIHsgc291cmNlOiAnQm9zc3VldCcsIHRhcmdldDogJ01hYmV1ZicsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQm9zc3VldCcsIHRhcmdldDogJ1ZhbGplYW4nLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0pvbHknLCB0YXJnZXQ6ICdCYWhvcmVsJywgdmFsdWU6IDUgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdKb2x5JywgdGFyZ2V0OiAnQm9zc3VldCcsIHZhbHVlOiA3IH0sXG4gICAgICAgIHsgc291cmNlOiAnSm9seScsIHRhcmdldDogJ0dhdnJvY2hlJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdKb2x5JywgdGFyZ2V0OiAnQ291cmZleXJhYycsIHZhbHVlOiA1IH0sXG4gICAgICAgIHsgc291cmNlOiAnSm9seScsIHRhcmdldDogJ0Vuam9scmFzJywgdmFsdWU6IDUgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdKb2x5JywgdGFyZ2V0OiAnRmV1aWxseScsIHZhbHVlOiA1IH0sXG4gICAgICAgIHsgc291cmNlOiAnSm9seScsIHRhcmdldDogJ1Byb3V2YWlyZScsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnSm9seScsIHRhcmdldDogJ0NvbWJlZmVycmUnLCB2YWx1ZTogNSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0pvbHknLCB0YXJnZXQ6ICdNYWJldWYnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0pvbHknLCB0YXJnZXQ6ICdNYXJpdXMnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0dyYW50YWlyZScsIHRhcmdldDogJ0Jvc3N1ZXQnLCB2YWx1ZTogMyB9LFxuICAgICAgICB7IHNvdXJjZTogJ0dyYW50YWlyZScsIHRhcmdldDogJ0Vuam9scmFzJywgdmFsdWU6IDMgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdHcmFudGFpcmUnLCB0YXJnZXQ6ICdDb21iZWZlcnJlJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdHcmFudGFpcmUnLCB0YXJnZXQ6ICdDb3VyZmV5cmFjJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdHcmFudGFpcmUnLCB0YXJnZXQ6ICdKb2x5JywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdHcmFudGFpcmUnLCB0YXJnZXQ6ICdHYXZyb2NoZScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnR3JhbnRhaXJlJywgdGFyZ2V0OiAnQmFob3JlbCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnR3JhbnRhaXJlJywgdGFyZ2V0OiAnRmV1aWxseScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnR3JhbnRhaXJlJywgdGFyZ2V0OiAnUHJvdXZhaXJlJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNb3RoZXJQbHV0YXJjaCcsIHRhcmdldDogJ01hYmV1ZicsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnR3VldWxlbWVyJywgdGFyZ2V0OiAnVGhlbmFyZGllcicsIHZhbHVlOiA1IH0sXG4gICAgICAgIHsgc291cmNlOiAnR3VldWxlbWVyJywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnR3VldWxlbWVyJywgdGFyZ2V0OiAnTW1lLlRoZW5hcmRpZXInLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0d1ZXVsZW1lcicsIHRhcmdldDogJ0phdmVydCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnR3VldWxlbWVyJywgdGFyZ2V0OiAnR2F2cm9jaGUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0d1ZXVsZW1lcicsIHRhcmdldDogJ0Vwb25pbmUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JhYmV0JywgdGFyZ2V0OiAnVGhlbmFyZGllcicsIHZhbHVlOiA2IH0sXG4gICAgICAgIHsgc291cmNlOiAnQmFiZXQnLCB0YXJnZXQ6ICdHdWV1bGVtZXInLCB2YWx1ZTogNiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JhYmV0JywgdGFyZ2V0OiAnVmFsamVhbicsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQmFiZXQnLCB0YXJnZXQ6ICdNbWUuVGhlbmFyZGllcicsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQmFiZXQnLCB0YXJnZXQ6ICdKYXZlcnQnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JhYmV0JywgdGFyZ2V0OiAnR2F2cm9jaGUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JhYmV0JywgdGFyZ2V0OiAnRXBvbmluZScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ2xhcXVlc291cycsIHRhcmdldDogJ1RoZW5hcmRpZXInLCB2YWx1ZTogNCB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NsYXF1ZXNvdXMnLCB0YXJnZXQ6ICdCYWJldCcsIHZhbHVlOiA0IH0sXG4gICAgICAgIHsgc291cmNlOiAnQ2xhcXVlc291cycsIHRhcmdldDogJ0d1ZXVsZW1lcicsIHZhbHVlOiA0IH0sXG4gICAgICAgIHsgc291cmNlOiAnQ2xhcXVlc291cycsIHRhcmdldDogJ1ZhbGplYW4nLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NsYXF1ZXNvdXMnLCB0YXJnZXQ6ICdNbWUuVGhlbmFyZGllcicsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ2xhcXVlc291cycsIHRhcmdldDogJ0phdmVydCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ2xhcXVlc291cycsIHRhcmdldDogJ0Vwb25pbmUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NsYXF1ZXNvdXMnLCB0YXJnZXQ6ICdFbmpvbHJhcycsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTW9udHBhcm5hc3NlJywgdGFyZ2V0OiAnSmF2ZXJ0JywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNb250cGFybmFzc2UnLCB0YXJnZXQ6ICdCYWJldCcsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnTW9udHBhcm5hc3NlJywgdGFyZ2V0OiAnR3VldWxlbWVyJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNb250cGFybmFzc2UnLCB0YXJnZXQ6ICdDbGFxdWVzb3VzJywgdmFsdWU6IDIgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNb250cGFybmFzc2UnLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNb250cGFybmFzc2UnLCB0YXJnZXQ6ICdHYXZyb2NoZScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTW9udHBhcm5hc3NlJywgdGFyZ2V0OiAnRXBvbmluZScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTW9udHBhcm5hc3NlJywgdGFyZ2V0OiAnVGhlbmFyZGllcicsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnVG91c3NhaW50JywgdGFyZ2V0OiAnQ29zZXR0ZScsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnVG91c3NhaW50JywgdGFyZ2V0OiAnSmF2ZXJ0JywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdUb3Vzc2FpbnQnLCB0YXJnZXQ6ICdWYWxqZWFuJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdDaGlsZDEnLCB0YXJnZXQ6ICdHYXZyb2NoZScsIHZhbHVlOiAyIH0sXG4gICAgICAgIHsgc291cmNlOiAnQ2hpbGQyJywgdGFyZ2V0OiAnR2F2cm9jaGUnLCB2YWx1ZTogMiB9LFxuICAgICAgICB7IHNvdXJjZTogJ0NoaWxkMicsIHRhcmdldDogJ0NoaWxkMScsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnQnJ1am9uJywgdGFyZ2V0OiAnQmFiZXQnLCB2YWx1ZTogMyB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JydWpvbicsIHRhcmdldDogJ0d1ZXVsZW1lcicsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnQnJ1am9uJywgdGFyZ2V0OiAnVGhlbmFyZGllcicsIHZhbHVlOiAzIH0sXG4gICAgICAgIHsgc291cmNlOiAnQnJ1am9uJywgdGFyZ2V0OiAnR2F2cm9jaGUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JydWpvbicsIHRhcmdldDogJ0Vwb25pbmUnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JydWpvbicsIHRhcmdldDogJ0NsYXF1ZXNvdXMnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ0JydWpvbicsIHRhcmdldDogJ01vbnRwYXJuYXNzZScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTW1lLkh1Y2hlbG91cCcsIHRhcmdldDogJ0Jvc3N1ZXQnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ01tZS5IdWNoZWxvdXAnLCB0YXJnZXQ6ICdKb2x5JywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNbWUuSHVjaGVsb3VwJywgdGFyZ2V0OiAnR3JhbnRhaXJlJywgdmFsdWU6IDEgfSxcbiAgICAgICAgeyBzb3VyY2U6ICdNbWUuSHVjaGVsb3VwJywgdGFyZ2V0OiAnQmFob3JlbCcsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTW1lLkh1Y2hlbG91cCcsIHRhcmdldDogJ0NvdXJmZXlyYWMnLCB2YWx1ZTogMSB9LFxuICAgICAgICB7IHNvdXJjZTogJ01tZS5IdWNoZWxvdXAnLCB0YXJnZXQ6ICdHYXZyb2NoZScsIHZhbHVlOiAxIH0sXG4gICAgICAgIHsgc291cmNlOiAnTW1lLkh1Y2hlbG91cCcsIHRhcmdldDogJ0Vuam9scmFzJywgdmFsdWU6IDEgfVxuICAgIF1cbn07XG5cblxuLyoqKi8gfSksXG5cbi8qKiovIFwiLi9zcmMvZGF0YXNldC9wYXRlbnRzLnRzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3NyYy9kYXRhc2V0L3BhdGVudHMudHMgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIEBhdXRob3IgWGlhb2RvbmcgWmhhbyA8emhhb3hpYW9kb25nQHpqdS5lZHUuY24+XG4gKiBAZGVzY3JpcHRpb24gUGF0ZW50cyBkYXRhc2V0LCBmcm9tIGh0dHBzOi8vd3d3LnBhdGVudHN2aWV3Lm9yZy93ZWIvI3Zpei9yZWxhdGlvbnNoaXBzXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGF0ZW50cyA9IHZvaWQgMDtcbmV4cG9ydHMucGF0ZW50cyA9IHtcbiAgICBub2RlczogW1xuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjUxNjIyNycsXG4gICAgICAgICAgICBuYW1lOiAnUmVjaGFyZ2VhYmxlIHNwaW5hbCBjb3JkIHN0aW11bGF0b3Igc3lzdGVtJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTM2MyxcbiAgICAgICAgICAgIHg6IC0xNDYuNTA3MjI3NzIyMDY0MTYsXG4gICAgICAgICAgICB5OiAyMzcuNzg5ODg0ODg2NDE4MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjUzNTkwOScsXG4gICAgICAgICAgICBuYW1lOiAnU3lzdGVtIGFuZCBtZXRob2QgZm9yIHJlY29yZCBhbmQgcGxheWJhY2sgb2YgY29sbGFib3JhdGl2ZSBXZWIgYnJvd3Npbmcgc2Vzc2lvbicsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDE0MzgsXG4gICAgICAgICAgICB4OiAzMDEuMDg4MDg0MDc0MDE3OCxcbiAgICAgICAgICAgIHk6IDc4LjM1NDQ5MTkxNTg3NTRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY1NDk5MDgnLFxuICAgICAgICAgICAgbmFtZTogJ01ldGhvZHMgYW5kIGFwcGFyYXR1cyBmb3IgaW50ZXJwcmV0aW5nIHVzZXIgc2VsZWN0aW9ucyBpbiB0aGUgY29udGV4dCBvZiBhIHJlbGF0aW9uIGRpc3RyaWJ1dGVkIGFzIGEgc2V0IG9mIG9ydGhvZ29uYWxpemVkIHN1Yi1yZWxhdGlvbnMnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjY4LFxuICAgICAgICAgICAgeDogLTEzLjgxNDg1NjU5MDc0MTIwMixcbiAgICAgICAgICAgIHk6IC0xODMuNTUwMTY3OTM1MDI3NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjU1MzU2MycsXG4gICAgICAgICAgICBuYW1lOiAnRGV2ZWxvcG1lbnQgdG9vbCwgbWV0aG9kLCBhbmQgc3lzdGVtIGZvciBjbGllbnQgc2VydmVyIGFwcGxpY2F0aW9ucycsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEzNTEsXG4gICAgICAgICAgICB4OiAtMC41MjI0MzEyNzkwMTQyNzc3LFxuICAgICAgICAgICAgeTogLTI0Ny4xNDk1Nzc5NjI3Mjc5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NTU4MzIwJyxcbiAgICAgICAgICAgIG5hbWU6ICdIYW5kaGVsZCBwZXJzb25hbCBkYXRhIGFzc2lzdGFudCAoUERBKSB3aXRoIGEgbWVkaWNhbCBkZXZpY2UgYW5kIG1ldGhvZCBvZiB1c2luZyB0aGUgc2FtZScsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDE1MTQsXG4gICAgICAgICAgICB4OiAtMjA0LjY0MDcxODk0NjU0Nzg4LFxuICAgICAgICAgICAgeTogNzEuNTcwNTUyODQ1MTIzMTJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY1NTgzNTEnLFxuICAgICAgICAgICAgbmFtZTogJ0Nsb3NlZCBsb29wIHN5c3RlbSBmb3IgY29udHJvbGxpbmcgaW5zdWxpbiBpbmZ1c2lvbicsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEzNjksXG4gICAgICAgICAgICB4OiAtMjEyLjk3ODE2MDAwMjE5Mzg3LFxuICAgICAgICAgICAgeTogMTQuNzE1NjQwNTM0MTcwMDlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY1NjA0NjEnLFxuICAgICAgICAgICAgbmFtZTogJ0F1dGhvcml6ZWQgbG9jYXRpb24gcmVwb3J0aW5nIHBhZ2luZyBzeXN0ZW0nLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxNDc5LFxuICAgICAgICAgICAgeDogLTI1MC40MzU0MzA2MjkwNTA5MyxcbiAgICAgICAgICAgIHk6IC0xOTEuNDM3MjAwNjI0MDYwMzhcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY1NjMxNzQnLFxuICAgICAgICAgICAgbmFtZTogJ1RoaW4gZmlsbSB0cmFuc2lzdG9yIGFuZCBtYXRyaXggZGlzcGxheSBkZXZpY2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAzMjg0LFxuICAgICAgICAgICAgeDogLTEyLjU4ODI0OTUwMzY1MjQwMSxcbiAgICAgICAgICAgIHk6IC0zLjYwNjYzODkyNTA3NDk1MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjU2NTUwOScsXG4gICAgICAgICAgICBuYW1lOiAnQW5hbHl0ZSBtb25pdG9yaW5nIGRldmljZSBhbmQgbWV0aG9kcyBvZiB1c2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMzMzLFxuICAgICAgICAgICAgeDogLTEwNS4yNTUxMTYxMjM2MjA0NSxcbiAgICAgICAgICAgIHk6IDE1Ny4xMTcxMzM2MDYwMjYyMVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjU3MTI4MicsXG4gICAgICAgICAgICBuYW1lOiAnQmxvY2stYmFzZWQgY29tbXVuaWNhdGlvbiBpbiBhIGNvbW11bmljYXRpb24gc2VydmljZXMgcGF0dGVybnMgZW52aXJvbm1lbnQnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxNDY3LFxuICAgICAgICAgICAgeDogMTM5LjY2OTc0Njc0ODI4MSxcbiAgICAgICAgICAgIHk6IDI1My4wMTQwNjUwMTQ3MTk0MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjU3NDYzNScsXG4gICAgICAgICAgICBuYW1lOiAnQXBwbGljYXRpb24gaW5zdGFudGlhdGlvbiBiYXNlZCB1cG9uIGF0dHJpYnV0ZXMgYW5kIHZhbHVlcyBzdG9yZWQgaW4gYSBtZXRhIGRhdGEgcmVwb3NpdG9yeSwgaW5jbHVkaW5nIHRpZXJpbmcgb2YgYXBwbGljYXRpb24gbGF5ZXJzIG9iamVjdHMgYW5kIGNvbXBvbmVudHMnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMzY4LFxuICAgICAgICAgICAgeDogMTEuMDAyMDI3NjI3NzgyMTE2LFxuICAgICAgICAgICAgeTogLTIzNC45MTgwNTI5ODMyMzU4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NTc3NzI2JyxcbiAgICAgICAgICAgIG5hbWU6ICdDb21wdXRlciB0ZWxlcGhvbnkgaW50ZWdyYXRpb24gaG90ZWxsaW5nIG1ldGhvZCBhbmQgc3lzdGVtJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI3MCxcbiAgICAgICAgICAgIHg6IC04Ny4xOTE1MzI0NTg0MTI2MixcbiAgICAgICAgICAgIHk6IC0xNzMuOTc2NDQ3NTU5MjkyODRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY1ODc4MzUnLFxuICAgICAgICAgICAgbmFtZTogJ1Nob3BwaW5nIGFzc2lzdGFuY2Ugd2l0aCBoYW5kaGVsZCBjb21wdXRpbmcgZGV2aWNlJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTQ3MSxcbiAgICAgICAgICAgIHg6IC0yNzkuMjg2NTgxMzM3ODQ2NSxcbiAgICAgICAgICAgIHk6IDExMC4xNTg3OTEyNTAxNTA3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NjAxMDg3JyxcbiAgICAgICAgICAgIG5hbWU6ICdJbnN0YW50IGRvY3VtZW50IHNoYXJpbmcnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMzk3LFxuICAgICAgICAgICAgeDogMjEwLjk0ODIxMzUwMTM3MTg0LFxuICAgICAgICAgICAgeTogOTIuNTMxODg3ODY5MTE0MDRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY2MDIyNTInLFxuICAgICAgICAgICAgbmFtZTogJ0NvbWJpbmVkIGRpc3NlY3RpbmcsIGNhdXRlcml6aW5nLCBhbmQgc3RhcGxpbmcgZGV2aWNlJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTUwMyxcbiAgICAgICAgICAgIHg6IDE0Ny45NDk3NzE2NTA0MzI1OCxcbiAgICAgICAgICAgIHk6IDE3MC4wODg4ODg1NTYzMTMwN1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjYwNDExNycsXG4gICAgICAgICAgICBuYW1lOiAnTWV0aG9kIG9mIG1haW50YWluaW5nIGEgbmV0d29yayBvZiBwYXJ0aWFsbHkgcmVwbGljYXRlZCBkYXRhYmFzZSBzeXN0ZW0nLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjYxLFxuICAgICAgICAgICAgeDogLTAuODg4NTU1ODAyNzQyMDM1LFxuICAgICAgICAgICAgeTogLTIxOC4yMzA0ODgyMDMwNzIyN1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjYwNDEyOCcsXG4gICAgICAgICAgICBuYW1lOiAnTWV0aG9kIGFuZCBzeXN0ZW0gZm9yIGRpc3RyaWJ1dGluZyBvYmplY3RzIG92ZXIgYSBuZXR3b3JrJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI2MSxcbiAgICAgICAgICAgIHg6IC01Ni43Mzg3Mjc0MjEyMDg0MSxcbiAgICAgICAgICAgIHk6IC0yNDMuMzQ4Mzg0MTA2NjQ0M1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjYwNjc0NCcsXG4gICAgICAgICAgICBuYW1lOiAnUHJvdmlkaW5nIGNvbGxhYm9yYXRpdmUgaW5zdGFsbGF0aW9uIG1hbmFnZW1lbnQgaW4gYSBuZXR3b3JrLWJhc2VkIHN1cHBseSBjaGFpbiBlbnZpcm9ubWVudCcsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEyNzEsXG4gICAgICAgICAgICB4OiAxNTMuOTk0ODI1MTg1MDM5NyxcbiAgICAgICAgICAgIHk6IDIzMS40NjU3OTg4ODEyMDI3MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjYwOTE1MCcsXG4gICAgICAgICAgICBuYW1lOiAnV2ViIGNsaWVudC1zZXJ2ZXIgc3lzdGVtIGFuZCBtZXRob2QgZm9yIGluY29tcGF0aWJsZSBwYWdlIG1hcmt1cCBhbmQgcHJlc2VudGF0aW9uIGxhbmd1YWdlcycsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEzMzYsXG4gICAgICAgICAgICB4OiAxMy4xODI4Njc2MDczMjEyNTUsXG4gICAgICAgICAgICB5OiAtMTg0LjgzNDI2NDMxODgxNTdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY2MjE4MzQnLFxuICAgICAgICAgICAgbmFtZTogJ1N5c3RlbSBhbmQgbWV0aG9kIGZvciB2b2ljZSB0cmFuc21pc3Npb24gb3ZlciBuZXR3b3JrIHByb3RvY29scycsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEyNjUsXG4gICAgICAgICAgICB4OiA4NS4wODIyODE0OTM0NDM2OSxcbiAgICAgICAgICAgIHk6IDEwNS40MzQ2NDU3MTIzMjg5NlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjY0MTUzMycsXG4gICAgICAgICAgICBuYW1lOiAnSGFuZGhlbGQgcGVyc29uYWwgZGF0YSBhc3Npc3RhbnQgKFBEQSkgd2l0aCBhIG1lZGljYWwgZGV2aWNlIGFuZCBtZXRob2Qgb2YgdXNpbmcgdGhlIHNhbWUnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxNDMxLFxuICAgICAgICAgICAgeDogLTIxOC4wOTc2NjExODAwMTIyNCxcbiAgICAgICAgICAgIHk6IDM5Ljg1NzYwMDM1Nzk3OTg5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NjQ0NTMyJyxcbiAgICAgICAgICAgIG5hbWU6ICdTdXJnaWNhbCBzdGFwbGluZyBhcHBhcmF0dXMnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjY3LFxuICAgICAgICAgICAgeDogMzA0LjY2MzA5MjUzMTYyOTQsXG4gICAgICAgICAgICB5OiAtMjkuNzA5NjExNTczNDkxMzk3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NjU0MDMyJyxcbiAgICAgICAgICAgIG5hbWU6ICdJbnN0YW50IHNoYXJpbmcgb2YgZG9jdW1lbnRzIG9uIGEgcmVtb3RlIHNlcnZlcicsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDE0MTMsXG4gICAgICAgICAgICB4OiAxNTkuMzAwNTAzNTUyOTYwMTUsXG4gICAgICAgICAgICB5OiAxMDguOTgzODk1ODU2MjcwMDVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY2NTYxOTMnLFxuICAgICAgICAgICAgbmFtZTogJ0RldmljZSBmb3IgYXR0YWNobWVudCBvZiBidXR0cmVzcyBtYXRlcmlhbCB0byBhIHN1cmdpY2FsIGZhc3RlbmluZyBkZXZpY2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjc5LFxuICAgICAgICAgICAgeDogMTE2LjkwOTE0MTUzMTU4NTk3LFxuICAgICAgICAgICAgeTogLTc4Ljc2NjI2OTM2ODU4NTU3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NjY1NjQ4JyxcbiAgICAgICAgICAgIG5hbWU6ICdTdGF0ZSBtb2RlbHMgZm9yIG1vbml0b3JpbmcgcHJvY2VzcycsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEyODgsXG4gICAgICAgICAgICB4OiAtMTkuNzUxODUyNzM5MzUzNzQsXG4gICAgICAgICAgICB5OiAtMTI2LjY1MzM4OTEyMjY5OTI4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NjY1NjU1JyxcbiAgICAgICAgICAgIG5hbWU6ICdJbXBsaWNpdCByYXRpbmcgb2YgcmV0cmlldmVkIGluZm9ybWF0aW9uIGluIGFuIGluZm9ybWF0aW9uIHNlYXJjaCBzeXN0ZW0nLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjk0LFxuICAgICAgICAgICAgeDogLTIwNS41MTAzNjEyMTk5NDY3LFxuICAgICAgICAgICAgeTogLTYyLjYxNTE3NTc3MjkyMzk3NlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjY4NDQzOCcsXG4gICAgICAgICAgICBuYW1lOiAnTWV0aG9kIG9mIHVzaW5nIGNhY2hlIHRvIGRldGVybWluZSB0aGUgdmlzaWJpbGl0eSB0byBhIHJlbW90ZSBkYXRhYmFzZSBjbGllbnQgb2YgYSBwbHVyYWxpdHkgb2YgZGF0YWJhc2UgdHJhbnNhY3Rpb25zJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI2NSxcbiAgICAgICAgICAgIHg6IC03MC44OTYyMTE5MDgwNTMyOSxcbiAgICAgICAgICAgIHk6IC0yMTEuNjU4OTgxMjY0Njk0NzVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY2OTAzODcnLFxuICAgICAgICAgICAgbmFtZTogJ1RvdWNoLXNjcmVlbiBpbWFnZSBzY3JvbGxpbmcgc3lzdGVtIGFuZCBtZXRob2QnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMzYxLFxuICAgICAgICAgICAgeDogLTk2LjA4MzMzMzU4NjEwMTQsXG4gICAgICAgICAgICB5OiAyNTcuMTg4NjY2MDQ0MjA5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NjkzMjMyJyxcbiAgICAgICAgICAgIG5hbWU6ICdJbmJyZWQgY29ybiBsaW5lIExIMjk1JyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTU4NSxcbiAgICAgICAgICAgIHg6IDIyNS4yMTM2MjM5NjYzNDMzMyxcbiAgICAgICAgICAgIHk6IC0xODEuNzAyMzEyMDg3MzkwMVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjY5ODY0MycsXG4gICAgICAgICAgICBuYW1lOiAnRXhwYW5kaW5nIHBhcmFsbGVsIGphdyBkZXZpY2UgZm9yIHVzZSB3aXRoIGFuIGVsZWN0cm9tZWNoYW5pY2FsIGRyaXZlciBkZXZpY2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMzU1LFxuICAgICAgICAgICAgeDogMTE2LjkzMzgwMDg4MjAwMzA4LFxuICAgICAgICAgICAgeTogMjIwLjIxNDE5NzA1NDM5NjA3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NzExNTY1JyxcbiAgICAgICAgICAgIG5hbWU6ICdNZXRob2QsIGFwcGFyYXR1cywgYW5kIHN5c3RlbSBmb3IgcHJldmlld2luZyBzZWFyY2ggcmVzdWx0cycsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEzODgsXG4gICAgICAgICAgICB4OiAtMzcuNTA0NDgxMjkwNzY3MzUsXG4gICAgICAgICAgICB5OiAtMjczLjQxMTY5NTg0NzkxMzU2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NzE2MjMzJyxcbiAgICAgICAgICAgIG5hbWU6ICdFbGVjdHJvbWVjaGFuaWNhbCBkcml2ZXIgYW5kIHJlbW90ZSBzdXJnaWNhbCBpbnN0cnVtZW50IGF0dGFjaG1lbnQgaGF2aW5nIGNvbXB1dGVyIGFzc2lzdGVkIGNvbnRyb2wgY2FwYWJpbGl0aWVzJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI0NCxcbiAgICAgICAgICAgIHg6IDk5Ljk4NzQ0OTI3NzQwMTA3LFxuICAgICAgICAgICAgeTogMjEyLjU5NTI3MjI5OTYyNjA2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NzE4MzYxJyxcbiAgICAgICAgICAgIG5hbWU6ICdNZXRob2QgYW5kIGFwcGFyYXR1cyBmb3IgcmVsaWFibGUgYW5kIHNjYWxhYmxlIGRpc3RyaWJ1dGlvbiBvZiBkYXRhIGZpbGVzIGluIGRpc3RyaWJ1dGVkIG5ldHdvcmtzJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTM0OSxcbiAgICAgICAgICAgIHg6IC0yMTQuNDcwNjQ1NDIwMDE1NSxcbiAgICAgICAgICAgIHk6IDE3OS43NjQ0NTM4MzMxMTU0NVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjcyNDM5OScsXG4gICAgICAgICAgICBuYW1lOiAnTWV0aG9kcyBhbmQgYXBwYXJhdHVzIGZvciBlbmFibGluZyBrZXlib2FyZCBhY2NlbGVyYXRvcnMgaW4gYXBwbGljYXRpb25zIGltcGxlbWVudGVkIHZpYSBhIGJyb3dzZXInLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjcxLFxuICAgICAgICAgICAgeDogLTMuODY1NDM3MDk4MDM2NTk3LFxuICAgICAgICAgICAgeTogLTE2OC4wNDY2NTA3NTk3NzYxNlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjcyNzUyMicsXG4gICAgICAgICAgICBuYW1lOiAnVHJhbnNpc3RvciBhbmQgc2VtaWNvbmR1Y3RvciBkZXZpY2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAzMzAxLFxuICAgICAgICAgICAgeDogNDUuNDkzMDA5MDg2NTMzNDc2LFxuICAgICAgICAgICAgeTogLTE4LjM5OTMzNjc2MTg2NTU1NVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjcyODcwMicsXG4gICAgICAgICAgICBuYW1lOiAnU3lzdGVtIGFuZCBtZXRob2QgdG8gaW1wbGVtZW50IGFuIGludGVncmF0ZWQgc2VhcmNoIGNlbnRlciBzdXBwb3J0aW5nIGEgZnVsbC10ZXh0IHNlYXJjaCBhbmQgcXVlcnkgb24gYSBkYXRhYmFzZScsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEyOTAsXG4gICAgICAgICAgICB4OiAtNTAuNzc2NTEyNjk2NDc5NjQsXG4gICAgICAgICAgICB5OiAtMjY1LjY0Mzk0MTY2NDI2MTlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY3Mjg5NjAnLFxuICAgICAgICAgICAgbmFtZTogJ1RlY2huaXF1ZXMgZm9yIG1hbmFnaW5nIG11bHRpcGxlIHRocmVhZHMgaW4gYSBicm93c2VyIGVudmlyb25tZW50JyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI4NyxcbiAgICAgICAgICAgIHg6IC0zMS44NjA5ODI2MDAyNzI3NCxcbiAgICAgICAgICAgIHk6IC0xNzcuMDk2Mjc5MjUxNjYwNzVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY3MzIwOTUnLFxuICAgICAgICAgICAgbmFtZTogJ01ldGhvZCBhbmQgYXBwYXJhdHVzIGZvciBtYXBwaW5nIGJldHdlZW4gWE1MIGFuZCByZWxhdGlvbmFsIHJlcHJlc2VudGF0aW9ucycsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEzMTgsXG4gICAgICAgICAgICB4OiAtNDUuMTc0MzA4MjY4Nzc1NDQsXG4gICAgICAgICAgICB5OiAtMTUyLjIzOTM4MzU1Mjk4ODA0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NzMyMTAwJyxcbiAgICAgICAgICAgIG5hbWU6ICdEYXRhYmFzZSBhY2Nlc3MgbWV0aG9kIGFuZCBzeXN0ZW0gZm9yIHVzZXIgcm9sZSBkZWZpbmVkIGFjY2VzcycsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEzNDcsXG4gICAgICAgICAgICB4OiAtNTkuMjEwMTM2ODA2MjkyNjc0LFxuICAgICAgICAgICAgeTogLTE3NC44Mzg3Nzk5MDg0OTU3MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjczMjExMScsXG4gICAgICAgICAgICBuYW1lOiAnTWV0aG9kLCBhcHBhcmF0dXMsIHN5c3RlbSwgYW5kIHByb2dyYW0gcHJvZHVjdCBmb3IgYXR0YWNoaW5nIGZpbGVzIGFuZCBvdGhlciBvYmplY3RzIHRvIGEgcGFydGlhbGx5IHJlcGxpY2F0ZWQgZGF0YWJhc2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjk0LFxuICAgICAgICAgICAgeDogLTkwLjczOTcwNTA0Nzk0NTEsXG4gICAgICAgICAgICB5OiAtMjQ0LjcxOTkwMzI4Nzc0MzE0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2NzU0NjgxJyxcbiAgICAgICAgICAgIG5hbWU6ICdQYXJ0aWFsbHkgcmVwbGljYXRlZCBkaXN0cmlidXRlZCBkYXRhYmFzZSB3aXRoIG11bHRpcGxlIGxldmVscyBvZiByZW1vdGUgY2xpZW50cycsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEyNjksXG4gICAgICAgICAgICB4OiAtNzkuNTgwODM4NzAzMTI2NTUsXG4gICAgICAgICAgICB5OiAtMjI4LjE3MjQwNTQxNzM4NDJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY3NjMzNTEnLFxuICAgICAgICAgICAgbmFtZTogJ01ldGhvZCwgYXBwYXJhdHVzLCBhbmQgc3lzdGVtIGZvciBhdHRhY2hpbmcgc2VhcmNoIHJlc3VsdHMnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxNDg3LFxuICAgICAgICAgICAgeDogLTI1LjI0MzQ3NDczMzQ5Mjc0MyxcbiAgICAgICAgICAgIHk6IC0yNjMuMjU3NDA3OTQwMjEwNjdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY3NjM1MDEnLFxuICAgICAgICAgICAgbmFtZTogJ1JlbW90ZSBkb2N1bWVudCBzZXJ2aW5nJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTMxOSxcbiAgICAgICAgICAgIHg6IDE1OC4zMjUzODM3NjIwOTQyLFxuICAgICAgICAgICAgeTogOTMuNDk1NDYyMzE1MTY5MTlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY3Njg5MDQnLFxuICAgICAgICAgICAgbmFtZTogJ0RhdGEgY29tbXVuaWNhdGlvbiBtZXRob2QgdXNpbmcgbW9iaWxlIHRlcm1pbmFsJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI1NixcbiAgICAgICAgICAgIHg6IC0zMDcuOTc2MDYxNTgxMzM0MTQsXG4gICAgICAgICAgICB5OiAxOC43Njk3NTY2Nzk3OTczOTZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY3ODIzODMnLFxuICAgICAgICAgICAgbmFtZTogJ1N5c3RlbSBhbmQgbWV0aG9kIHRvIGltcGxlbWVudCBhIHBlcnNpc3RlbnQgYW5kIGRpc21pc3NpYmxlIHNlYXJjaCBjZW50ZXIgZnJhbWUnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjgyLFxuICAgICAgICAgICAgeDogLTEyLjk3NjE3NzU1NzgzNTg1MixcbiAgICAgICAgICAgIHk6IC0yNzIuOTE5NDQwNDA3Mzc5MVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjc4MzUyNCcsXG4gICAgICAgICAgICBuYW1lOiAnUm9ib3RpYyBzdXJnaWNhbCB0b29sIHdpdGggdWx0cmFzb3VuZCBjYXV0ZXJpemluZyBhbmQgY3V0dGluZyBpbnN0cnVtZW50JyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTUwNSxcbiAgICAgICAgICAgIHg6IDQzLjM4MjMxMDk4Njk0MDY2LFxuICAgICAgICAgICAgeTogMjc5LjA4MjE3ODAxMTQ3NzE0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2Nzg2MzgyJyxcbiAgICAgICAgICAgIG5hbWU6ICdTdXJnaWNhbCBzdGFwbGluZyBpbnN0cnVtZW50IGluY29ycG9yYXRpbmcgYW4gYXJ0aWN1bGF0aW9uIGpvaW50IGZvciBhIGZpcmluZyBiYXIgdHJhY2snLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMzcxLFxuICAgICAgICAgICAgeDogMTM0Ljk0MDc4MTY0NTAyODM1LFxuICAgICAgICAgICAgeTogLTY1LjEwMDgyMzczNTY2MzgxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2ODA0MzMwJyxcbiAgICAgICAgICAgIG5hbWU6ICdNZXRob2QgYW5kIHN5c3RlbSBmb3IgYWNjZXNzaW5nIENSTSBkYXRhIHZpYSB2b2ljZScsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEzNDgsXG4gICAgICAgICAgICB4OiA0MS40NDUyNTE3MjM4NDI4NjUsXG4gICAgICAgICAgICB5OiAtMjM2Ljk5MTU2NDgxMDk4NjVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY4MDk2NTMnLFxuICAgICAgICAgICAgbmFtZTogJ1RlbGVtZXRlcmVkIGNoYXJhY3RlcmlzdGljIG1vbml0b3Igc3lzdGVtIGFuZCBtZXRob2Qgb2YgdXNpbmcgdGhlIHNhbWUnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjUwLFxuICAgICAgICAgICAgeDogLTE5Mi4zNjY1OTQ3NzU2ODA4LFxuICAgICAgICAgICAgeTogODUuMjAwMzk3MTM4NTkxNTRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY4MjY1NjUnLFxuICAgICAgICAgICAgbmFtZTogJ01ldGhvZCBhbmQgYXBwYXJhdHVzIGZvciBzZXJ2aW5nIGZpbGVzIHRvIGJyb3dzaW5nIGNsaWVudHMnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjUzLFxuICAgICAgICAgICAgeDogLTE4Ny4yMDIwNzg2MTIxNDIsXG4gICAgICAgICAgICB5OiAtMjA1LjgwMjgwNjcxNDA5NzVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY4MjY1ODInLFxuICAgICAgICAgICAgbmFtZTogJ01ldGhvZCBhbmQgc3lzdGVtIGZvciB1c2luZyBmaWxlIHN5c3RlbXMgZm9yIGNvbnRlbnQgbWFuYWdlbWVudCcsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEyNjIsXG4gICAgICAgICAgICB4OiAtMTczLjM5MDcxNzEzNDM0NTkyLFxuICAgICAgICAgICAgeTogLTg0Ljc0ODEwNjQ1MzkxMDUyXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2ODI2NzQ1JyxcbiAgICAgICAgICAgIG5hbWU6ICdTeXN0ZW0gYW5kIG1ldGhvZCBmb3Igc21hcnQgc2NyaXB0aW5nIGNhbGwgY2VudGVycyBhbmQgY29uZmlndXJhdGlvbiB0aGVyZW9mJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI5MCxcbiAgICAgICAgICAgIHg6IC03Ni43ODEyNjQzMzEyMTAwNSxcbiAgICAgICAgICAgIHk6IC0xODkuMjIxNDgxNzUxMjUwNTRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY4Mjk2NTUnLFxuICAgICAgICAgICAgbmFtZTogJ01ldGhvZCBhbmQgc3lzdGVtIGZvciBzZXJ2ZXIgc3luY2hyb25pemF0aW9uIHdpdGggYSBjb21wdXRpbmcgZGV2aWNlIHZpYSBhIGNvbXBhbmlvbiBkZXZpY2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjkyLFxuICAgICAgICAgICAgeDogNTQuMTUwNjcyMTA3MDE4NjksXG4gICAgICAgICAgICB5OiAtMTkzLjU1OTU0MzExNTQ1MzU4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2ODMwMTc0JyxcbiAgICAgICAgICAgIG5hbWU6ICdNZWRpY2FsIGluc3RydW1lbnQnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMzQ1LFxuICAgICAgICAgICAgeDogMjQxLjY4MzY1NjMwNDAwMDIsXG4gICAgICAgICAgICB5OiAxNzguODEwMTU1NDk0MjQ3M1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjg0Mjc0OCcsXG4gICAgICAgICAgICBuYW1lOiAnVXNhZ2UgYmFzZWQgc3RyZW5ndGggYmV0d2VlbiByZWxhdGVkIGluZm9ybWF0aW9uIGluIGFuIGluZm9ybWF0aW9uIHJldHJpZXZhbCBzeXN0ZW0nLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjczLFxuICAgICAgICAgICAgeDogLTI1NS43NjcxNDAxNzYzOTE4LFxuICAgICAgICAgICAgeTogLTg5LjMwOTQxNDkwMTYwMzA5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2ODQzNDAzJyxcbiAgICAgICAgICAgIG5hbWU6ICdTdXJnaWNhbCBjbGFtcGluZywgY3V0dGluZyBhbmQgc3RhcGxpbmcgZGV2aWNlJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI3OCxcbiAgICAgICAgICAgIHg6IDgwLjYyMjY3ODg4MzE3NTE1LFxuICAgICAgICAgICAgeTogMjA0LjY3MjQ5MjkyOTU3NTcyXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2ODUwMjUyJyxcbiAgICAgICAgICAgIG5hbWU6ICdJbnRlbGxpZ2VudCBlbGVjdHJvbmljIGFwcGxpYW5jZSBzeXN0ZW0gYW5kIG1ldGhvZCcsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDE3ODQsXG4gICAgICAgICAgICB4OiAtMjY5LjA5Mzk2MjU3MTY5ODIsXG4gICAgICAgICAgICB5OiA4MC43OTE1MjU0MDkxNzEwM1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjg1MDg5NScsXG4gICAgICAgICAgICBuYW1lOiAnQXNzaWdubWVudCBtYW5hZ2VyJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTQyOSxcbiAgICAgICAgICAgIHg6IC0xMDQuNzE1MjMxNzI4OTk5NzgsXG4gICAgICAgICAgICB5OiAtMjM3LjY3NDg5MDUxNDk1MzgzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc2ODUwOTQ5JyxcbiAgICAgICAgICAgIG5hbWU6ICdTeXN0ZW0gYW5kIG1ldGhvZCBmb3IgZ2VuZXJhdGluZyBhIGR5bmFtaWMgaW50ZXJmYWNlIHZpYSBhIGNvbW11bmljYXRpb25zIG5ldHdvcmsnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjc2LFxuICAgICAgICAgICAgeDogMTcwLjg5NDg0Nzg2NjY0MjMsXG4gICAgICAgICAgICB5OiAtMTU3LjE2MjM5OTYzODcyNzlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY4NTI5MTUnLFxuICAgICAgICAgICAgbmFtZTogJ0luYnJlZCBjb3JuIGxpbmUgTEgyODNCdE1PTjgxMCcsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDE1ODQsXG4gICAgICAgICAgICB4OiAyMTQuMjg3ODI1MjY2Njc5NyxcbiAgICAgICAgICAgIHk6IC0yMjEuNjUwNjQ1OTA2MjU3MzVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY5MDUwNTcnLFxuICAgICAgICAgICAgbmFtZTogJ1N1cmdpY2FsIHN0YXBsaW5nIGluc3RydW1lbnQgaW5jb3Jwb3JhdGluZyBhIGZpcmluZyBtZWNoYW5pc20gaGF2aW5nIGEgbGlua2VkIHJhY2sgdHJhbnNtaXNzaW9uJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTM5OCxcbiAgICAgICAgICAgIHg6IDIwNC4yNDQzMTQwOTE3NDMsXG4gICAgICAgICAgICB5OiAtNzguMTAwMjM2NzIyMzI2MDdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY5NTk4NTInLFxuICAgICAgICAgICAgbmFtZTogJ1N1cmdpY2FsIHN0YXBsaW5nIGluc3RydW1lbnQgd2l0aCBtdWx0aXN0cm9rZSBmaXJpbmcgaW5jb3Jwb3JhdGluZyBhbiBhbnRpLWJhY2t1cCBtZWNoYW5pc20nLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjc5LFxuICAgICAgICAgICAgeDogMjE0LjQ3NzQxMTQwMjM2NTgyLFxuICAgICAgICAgICAgeTogLTU2LjI5MTU4NzYzNjU5MTEyNVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjk2NDM2MycsXG4gICAgICAgICAgICBuYW1lOiAnU3VyZ2ljYWwgc3RhcGxpbmcgaW5zdHJ1bWVudCBoYXZpbmcgYXJ0aWN1bGF0aW9uIGpvaW50IHN1cHBvcnQgcGxhdGVzIGZvciBzdXBwb3J0aW5nIGEgZmlyaW5nIGJhcicsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEzMzAsXG4gICAgICAgICAgICB4OiAxNzEuODkyNDcyNzA4OTgwMjgsXG4gICAgICAgICAgICB5OiAtOTcuNDEwMDI0NjI1NTAyOTNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzY5Nzg5MjEnLFxuICAgICAgICAgICAgbmFtZTogJ1N1cmdpY2FsIHN0YXBsaW5nIGluc3RydW1lbnQgaW5jb3Jwb3JhdGluZyBhbiBFLWJlYW0gZmlyaW5nIG1lY2hhbmlzbScsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEyNzEsXG4gICAgICAgICAgICB4OiAyMjAuOTk5ODAwMzgwNDA0NCxcbiAgICAgICAgICAgIHk6IC03MS40MjA3ODEzNTYzNjU0NVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNjk4MTYyOCcsXG4gICAgICAgICAgICBuYW1lOiAnU3VyZ2ljYWwgaW5zdHJ1bWVudCB3aXRoIGEgbGF0ZXJhbC1tb3ZpbmcgYXJ0aWN1bGF0aW9uIGNvbnRyb2wnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxNTg4LFxuICAgICAgICAgICAgeDogMTU1LjEyMjA5NjY3NzM4NzIyLFxuICAgICAgICAgICAgeTogLTkzLjY5NjI4NzUxNDYwMjk0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3MDAwODE4JyxcbiAgICAgICAgICAgIG5hbWU6ICdTdXJnaWNhbCBzdGFwbGluZyBpbnN0cnVtZW50IGhhdmluZyBzZXBhcmF0ZSBkaXN0aW5jdCBjbG9zaW5nIGFuZCBmaXJpbmcgc3lzdGVtcycsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDE0MjIsXG4gICAgICAgICAgICB4OiAyMjcuMDE3Njg4NDUzNzk2OTIsXG4gICAgICAgICAgICB5OiA3LjAyNDA1NjYxMTQ2MzA1MVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzAyNTc0MycsXG4gICAgICAgICAgICBuYW1lOiAnRXh0ZXJuYWwgaW5mdXNpb24gZGV2aWNlIHdpdGggcmVtb3RlIHByb2dyYW1taW5nLCBib2x1cyBlc3RpbWF0b3IgYW5kL29yIHZpYnJhdGlvbiBhbGFybSBjYXBhYmlsaXRpZXMnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMzQ4LFxuICAgICAgICAgICAgeDogLTEzOS4zMzQ4NzI3NTc0NDI3NSxcbiAgICAgICAgICAgIHk6IDQ2LjUyMDYxMTE1MzM0Mzk4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3MDQ5MTkwJyxcbiAgICAgICAgICAgIG5hbWU6ICdNZXRob2QgZm9yIGZvcm1pbmcgWm5PIGZpbG0sIG1ldGhvZCBmb3IgZm9ybWluZyBabk8gc2VtaWNvbmR1Y3RvciBsYXllciwgbWV0aG9kIGZvciBmYWJyaWNhdGluZyBzZW1pY29uZHVjdG9yIGRldmljZSwgYW5kIHNlbWljb25kdWN0b3IgZGV2aWNlJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMzIzNCxcbiAgICAgICAgICAgIHg6IC0yODkuMTA5MTg4MzM2MTEsXG4gICAgICAgICAgICB5OiAtOTcuOTY3NzY5Mzg1NDk1MzdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzcwNTU3MzEnLFxuICAgICAgICAgICAgbmFtZTogJ1N1cmdpY2FsIHN0YXBsaW5nIGluc3RydW1lbnQgaW5jb3Jwb3JhdGluZyBhIHRhcGVyZWQgZmlyaW5nIGJhciBmb3IgaW5jcmVhc2VkIGZsZXhpYmlsaXR5IGFyb3VuZCB0aGUgYXJ0aWN1bGF0aW9uIGpvaW50JyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTMyNSxcbiAgICAgICAgICAgIHg6IDIzMC40OTUxODM4NjQzOTk4OCxcbiAgICAgICAgICAgIHk6IC01OS42NDIyNDU2Nzg1ODI0OFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzA2MTAxNCcsXG4gICAgICAgICAgICBuYW1lOiAnTmF0dXJhbC1zdXBlcmxhdHRpY2UgaG9tb2xvZ291cyBzaW5nbGUgY3J5c3RhbCB0aGluIGZpbG0sIG1ldGhvZCBmb3IgcHJlcGFyYXRpb24gdGhlcmVvZiwgYW5kIGRldmljZSB1c2luZyBzYWlkIHNpbmdsZSBjcnlzdGFsIHRoaW4gZmlsbScsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDMzMzksXG4gICAgICAgICAgICB4OiAtNS44MDA4ODIwNDQ5MDE0MzksXG4gICAgICAgICAgICB5OiA2OC41MjY0MTU5NTAzMTUyNVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzA2NDM0NicsXG4gICAgICAgICAgICBuYW1lOiAnVHJhbnNpc3RvciBhbmQgc2VtaWNvbmR1Y3RvciBkZXZpY2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAzMjY4LFxuICAgICAgICAgICAgeDogLTMuNDAwMzAzMTUxOTkxMzcxNixcbiAgICAgICAgICAgIHk6IDI1Ljk4MTM1NjgzNjA0MzY4OFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzEwNTg2OCcsXG4gICAgICAgICAgICBuYW1lOiAnSGlnaC1lbGVjdHJvbiBtb2JpbGl0eSB0cmFuc2lzdG9yIHdpdGggemluYyBveGlkZScsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDMyMzMsXG4gICAgICAgICAgICB4OiAtMTcuODM1Nzg1NzQ5Nzg1ODE3LFxuICAgICAgICAgICAgeTogMTk5LjkxODgzNzIwMjEwMzA1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3MTExNzY5JyxcbiAgICAgICAgICAgIG5hbWU6ICdTdXJnaWNhbCBpbnN0cnVtZW50IGluY29ycG9yYXRpbmcgYW4gYXJ0aWN1bGF0aW9uIG1lY2hhbmlzbSBoYXZpbmcgcm90YXRpb24gYWJvdXQgdGhlIGxvbmdpdHVkaW5hbCBheGlzJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI3OCxcbiAgICAgICAgICAgIHg6IDE1MS4yMjU3OTgzMjUyNDA0NSxcbiAgICAgICAgICAgIHk6IC0zNy4xNzA5OTA3NDc0OTAxM1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzE0NzEzOCcsXG4gICAgICAgICAgICBuYW1lOiAnU3VyZ2ljYWwgc3RhcGxpbmcgaW5zdHJ1bWVudCBoYXZpbmcgYW4gZWxlY3Ryb2FjdGl2ZSBwb2x5bWVyIGFjdHVhdGVkIGJ1dHRyZXNzIGRlcGxveW1lbnQgbWVjaGFuaXNtJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTQyOCxcbiAgICAgICAgICAgIHg6IDE4OS4wODYxNDMyMzg1NzUsXG4gICAgICAgICAgICB5OiAtNzMuNjkxMzAzOTI2ODM5MjRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzcxNTk3NTAnLFxuICAgICAgICAgICAgbmFtZTogJ1N1cmdpY2FsIHN0YXBsaW5nIGRldmljZScsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEyNTgsXG4gICAgICAgICAgICB4OiAtNDEuMjk5OTUxODY1MTk0NDMsXG4gICAgICAgICAgICB5OiAyOTIuODQ2MjY3NDUzNzgyMlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzIxMTgyNScsXG4gICAgICAgICAgICBuYW1lOiAnSW5kaXVtIG94aWRlLWJhc2VkIHRoaW4gZmlsbSB0cmFuc2lzdG9ycyBhbmQgY2lyY3VpdHMnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAzMjQ1LFxuICAgICAgICAgICAgeDogLTMxMi4zODM5MDU3MjIxNDc3LFxuICAgICAgICAgICAgeTogLTUuNjE0NTQxNTY3MTMzMDA3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3MjQ2NzM0JyxcbiAgICAgICAgICAgIG5hbWU6ICdSb3RhcnkgaHlkcmF1bGljIHB1bXAgYWN0dWF0ZWQgbXVsdGktc3Ryb2tlIHN1cmdpY2FsIGluc3RydW1lbnQnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjg4LFxuICAgICAgICAgICAgeDogMjAwLjQ0NTYzMzgwMDg2NTE1LFxuICAgICAgICAgICAgeTogLTYzLjE4ODY1NTg4MDc2ODg2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3MjgyNzgyJyxcbiAgICAgICAgICAgIG5hbWU6ICdDb21iaW5lZCBiaW5hcnkgb3hpZGUgc2VtaWNvbmR1Y3RvciBkZXZpY2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAzMjczLFxuICAgICAgICAgICAgeDogLTEyNS44MzA5MDQxNDc3OTg2LFxuICAgICAgICAgICAgeTogLTMxLjI3Nzg3Nzg5MzU4MDQ4OFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzI5Nzk3NycsXG4gICAgICAgICAgICBuYW1lOiAnU2VtaWNvbmR1Y3RvciBkZXZpY2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAzMzE4LFxuICAgICAgICAgICAgeDogLTEyOC4yODI4ODYyOTY5NjcyNixcbiAgICAgICAgICAgIHk6IC01NS4yNjE0NzU1NzgwMzMyOVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzMyMzM1NicsXG4gICAgICAgICAgICBuYW1lOiAnTG5DdU8oUyxTZSxUZSltb25vY3J5c3RhbGxpbmUgdGhpbiBmaWxtLCBpdHMgbWFudWZhY3R1cmluZyBtZXRob2QsIGFuZCBvcHRpY2FsIGRldmljZSBvciBlbGVjdHJvbmljIGRldmljZSB1c2luZyB0aGUgbW9ub2NyeXN0YWxsaW5lIHRoaW4gZmlsbScsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDMyNTEsXG4gICAgICAgICAgICB4OiAtMTguNTk3NTUzMDUzOTU1NzQsXG4gICAgICAgICAgICB5OiA4OC45NTUzMTYxMDgzODk2OFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzM0MDQxMScsXG4gICAgICAgICAgICBuYW1lOiAnU3lzdGVtIGFuZCBtZXRob2QgZm9yIGdlbmVyYXRpbmcsIGNhcHR1cmluZywgYW5kIG1hbmFnaW5nIGN1c3RvbWVyIGxlYWQgaW5mb3JtYXRpb24gb3ZlciBhIGNvbXB1dGVyIG5ldHdvcmsnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMjgyLFxuICAgICAgICAgICAgeDogMTcxLjE0MDgzMTU1OTE2OTgsXG4gICAgICAgICAgICB5OiAtMjAyLjI0ODgzNzA4MDQ0ODA4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3MzgwNjk1JyxcbiAgICAgICAgICAgIG5hbWU6ICdTdXJnaWNhbCBzdGFwbGluZyBpbnN0cnVtZW50IGhhdmluZyBhIHNpbmdsZSBsb2Nrb3V0IG1lY2hhbmlzbSBmb3IgcHJldmVudGlvbiBvZiBmaXJpbmcnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAxMzg2LFxuICAgICAgICAgICAgeDogMTg2LjI1ODMzNTMwMTEwMTk0LFxuICAgICAgICAgICAgeTogLTIxLjY2MzIxODczMjQ1MjA5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3MzgwNjk2JyxcbiAgICAgICAgICAgIG5hbWU6ICdBcnRpY3VsYXRpbmcgc3VyZ2ljYWwgc3RhcGxpbmcgaW5zdHJ1bWVudCBpbmNvcnBvcmF0aW5nIGEgdHdvLXBpZWNlIEUtYmVhbSBmaXJpbmcgbWVjaGFuaXNtJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTM4OCxcbiAgICAgICAgICAgIHg6IDIwNy45MDI5NTkzOTAzMTc5LFxuICAgICAgICAgICAgeTogLTguNTMxNTMzNzM3NjIxODg1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3Mzg1MjI0JyxcbiAgICAgICAgICAgIG5hbWU6ICdUaGluIGZpbG0gdHJhbnNpc3RvciBoYXZpbmcgYW4gZXRjaGluZyBwcm90ZWN0aW9uIGZpbG0gYW5kIG1hbnVmYWN0dXJpbmcgbWV0aG9kIHRoZXJlb2YnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAzMjI0LFxuICAgICAgICAgICAgeDogLTIwOS44MjIzMDQ4MjU1NTMzNSxcbiAgICAgICAgICAgIHk6IC0xMzguNTEwMDQwOTkwMDI5M1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzQwMjUwNicsXG4gICAgICAgICAgICBuYW1lOiAnTWV0aG9kcyBvZiBtYWtpbmcgdGhpbiBmaWxtIHRyYW5zaXN0b3JzIGNvbXByaXNpbmcgemluYy1veGlkZS1iYXNlZCBzZW1pY29uZHVjdG9yIG1hdGVyaWFscyBhbmQgdHJhbnNpc3RvcnMgbWFkZSB0aGVyZWJ5JyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMzI1OCxcbiAgICAgICAgICAgIHg6IDIwNS4wMjQ3NTY2NzQ0Nzc3NCxcbiAgICAgICAgICAgIHk6IDE4NS42Nzg3ODA2NjQ0MzAzOFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzQwNDUwOCcsXG4gICAgICAgICAgICBuYW1lOiAnU3VyZ2ljYWwgc3RhcGxpbmcgYW5kIGN1dHRpbmcgZGV2aWNlJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTUxNyxcbiAgICAgICAgICAgIHg6IDE0Mi44NTM0ODg2MTczMjM3LFxuICAgICAgICAgICAgeTogMS4zMzI1ODg1MjgxNzQ4NTUzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3NDExMjA5JyxcbiAgICAgICAgICAgIG5hbWU6ICdGaWVsZC1lZmZlY3QgdHJhbnNpc3RvciBhbmQgbWV0aG9kIGZvciBtYW51ZmFjdHVyaW5nIHRoZSBzYW1lJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMzI1NSxcbiAgICAgICAgICAgIHg6IDk4LjQ2MjA3MjIxMTgzNTI4LFxuICAgICAgICAgICAgeTogMTIzLjAzMDg0Nzc1MzcwMjc5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3NDUzMDY1JyxcbiAgICAgICAgICAgIG5hbWU6ICdTZW5zb3IgYW5kIGltYWdlIHBpY2t1cCBkZXZpY2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAzMjMwLFxuICAgICAgICAgICAgeDogLTAuMTY1NzM3NDM5NDI2NzE4NTQsXG4gICAgICAgICAgICB5OiAxNDEuMjg5MjI5MzUyOTkwMjJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzc0NTMwODcnLFxuICAgICAgICAgICAgbmFtZTogJ1RoaW4tZmlsbSB0cmFuc2lzdG9yIGFuZCB0aGluLWZpbG0gZGlvZGUgaGF2aW5nIGFtb3JwaG91cy1veGlkZSBzZW1pY29uZHVjdG9yIGxheWVyJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMzI0MixcbiAgICAgICAgICAgIHg6IDY0LjkyNjE5OTA4MjcyMjIyLFxuICAgICAgICAgICAgeTogMTgxLjg0NTkzNjY1MDkwNDQzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3NDYyODYyJyxcbiAgICAgICAgICAgIG5hbWU6ICdUcmFuc2lzdG9yIHVzaW5nIGFuIGlzb3ZhbGVudCBzZW1pY29uZHVjdG9yIG94aWRlIGFzIHRoZSBhY3RpdmUgY2hhbm5lbCBsYXllcicsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDMyNDQsXG4gICAgICAgICAgICB4OiAtNjkuNjE2NzkxNDI4NDgyNTEsXG4gICAgICAgICAgICB5OiAtMTcuOTUxNDMxNzY2NzExOTI0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3NDY0ODQ2JyxcbiAgICAgICAgICAgIG5hbWU6ICdTdXJnaWNhbCBpbnN0cnVtZW50IGhhdmluZyBhIHJlbW92YWJsZSBiYXR0ZXJ5JyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI4NyxcbiAgICAgICAgICAgIHg6IDE4MS44NDE5NDk1NTk5MTY4NixcbiAgICAgICAgICAgIHk6IC02LjEzMDM1NjY0NDU0MTc1OVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzQ2ODMwNCcsXG4gICAgICAgICAgICBuYW1lOiAnTWV0aG9kIG9mIGZhYnJpY2F0aW5nIG94aWRlIHNlbWljb25kdWN0b3IgZGV2aWNlJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMzI0MCxcbiAgICAgICAgICAgIHg6IDQzLjE0NDQ3NDIyODc2NDk5LFxuICAgICAgICAgICAgeTogODQuMzA4NTc0NDk4ODM5MDFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzc1MDEyOTMnLFxuICAgICAgICAgICAgbmFtZTogJ1NlbWljb25kdWN0b3IgZGV2aWNlIGluIHdoaWNoIHppbmMgb3hpZGUgaXMgdXNlZCBhcyBhIHNlbWljb25kdWN0b3IgbWF0ZXJpYWwgYW5kIG1ldGhvZCBmb3IgbWFudWZhY3R1cmluZyB0aGUgc2VtaWNvbmR1Y3RvciBkZXZpY2UnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAzMjE2LFxuICAgICAgICAgICAgeDogMTAwLjc1OTg0NDk1NjE5NzYzLFxuICAgICAgICAgICAgeTogMjYzLjkzOTI4MTE3NzY1Mzg3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3NTA2NzkxJyxcbiAgICAgICAgICAgIG5hbWU6ICdTdXJnaWNhbCBzdGFwbGluZyBpbnN0cnVtZW50IHdpdGggbWVjaGFuaWNhbCBtZWNoYW5pc20gZm9yIGxpbWl0aW5nIG1heGltdW0gdGlzc3VlIGNvbXByZXNzaW9uJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTI1NyxcbiAgICAgICAgICAgIHg6IDE2Mi44OTk0Mzc0OTM4MzgzLFxuICAgICAgICAgICAgeTogLTEzLjUwNzY2NDM2NDYxMTI1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3NjIwNjU1JyxcbiAgICAgICAgICAgIG5hbWU6ICdNZXRob2QsIGRldmljZSBhbmQgY29tcHV0ZXIgcHJvZ3JhbSBwcm9kdWN0IGZvciBpZGVudGlmeWluZyB2aXNpdG9ycyBvZiB3ZWJzaXRlcycsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEyNDMsXG4gICAgICAgICAgICB4OiAyNzMuNzQ1MzI1NzA1ODQ3MSxcbiAgICAgICAgICAgIHk6IC0xMzQuMTE5Njk3MTY4MDY3ODNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzc2MzI5ODUnLFxuICAgICAgICAgICAgbmFtZTogJ1NveWJlYW4gZXZlbnQgTU9OODk3ODggYW5kIG1ldGhvZHMgZm9yIGRldGVjdGlvbiB0aGVyZW9mJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMTQ3NyxcbiAgICAgICAgICAgIHg6IDI1LjE1NjQxMjczMTEzMDk5NSxcbiAgICAgICAgICAgIHk6IDIzMi42MzgzNzQ1MzYzMTY1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc3NjYzNjA3JyxcbiAgICAgICAgICAgIG5hbWU6ICdNdWx0aXBvaW50IHRvdWNoc2NyZWVuJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMjIxNyxcbiAgICAgICAgICAgIHg6IDE0OC4zMTcyOTA3NTcxNDQxMixcbiAgICAgICAgICAgIHk6IC0yNTIuMTIwNTQxMTcyOTU2MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAncGF0ZW50JyxcbiAgICAgICAgICAgIGlkOiAnNzY3NDY1MCcsXG4gICAgICAgICAgICBuYW1lOiAnU2VtaWNvbmR1Y3RvciBkZXZpY2UgYW5kIG1hbnVmYWN0dXJpbmcgbWV0aG9kIHRoZXJlb2YnLFxuICAgICAgICAgICAgbnVtQ2l0YXRpb25zOiAzNDM5LFxuICAgICAgICAgICAgeDogMjY1LjIwNzc1MjczNTExODg1LFxuICAgICAgICAgICAgeTogOTcuMDg3NTMxNzU2NDk4NzlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3BhdGVudCcsXG4gICAgICAgICAgICBpZDogJzc3MzI4MTknLFxuICAgICAgICAgICAgbmFtZTogJ1NlbWljb25kdWN0b3IgZGV2aWNlIGFuZCBtYW51ZmFjdHVyaW5nIG1ldGhvZCB0aGVyZW9mJyxcbiAgICAgICAgICAgIG51bUNpdGF0aW9uczogMzI4OCxcbiAgICAgICAgICAgIHg6IDI0MS4yNzQzMjQ3NTY5NjE0NSxcbiAgICAgICAgICAgIHk6IDkyLjU3OTE3MTU5NjYxNTk1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdwYXRlbnQnLFxuICAgICAgICAgICAgaWQ6ICc4MDUzMTg0JyxcbiAgICAgICAgICAgIG5hbWU6ICdTb3liZWFuIGV2ZW50IE1PTjg5Nzg4IGFuZCBtZXRob2RzIGZvciBkZXRlY3Rpb24gdGhlcmVvZicsXG4gICAgICAgICAgICBudW1DaXRhdGlvbnM6IDEyNDksXG4gICAgICAgICAgICB4OiAxMi43NDE3MzkyNzQ1MTk4NixcbiAgICAgICAgICAgIHk6IDIyMy4zMzA1MDk0Njg1Mzg1NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc0MDgyNjAyLTInLFxuICAgICAgICAgICAgbmFtZTogJ0FkYW0gSGVsbGVyJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDI3OCxcbiAgICAgICAgICAgIHg6IC03OC45NzkxODM2Nzg3ODM5NSxcbiAgICAgICAgICAgIHk6IDE3NS44MzQ1ODU1MTk0NTY5N1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NTUxMjc2LTExJyxcbiAgICAgICAgICAgIG5hbWU6ICdBZHJpYW4gR3V0JyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDE0LFxuICAgICAgICAgICAgeDogLTEyNi40OTE2Mzg5Njg4MjA4MixcbiAgICAgICAgICAgIHk6IDc3LjA1MzkyNTQyODk0NDM3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY1NTEyNzYtMycsXG4gICAgICAgICAgICBuYW1lOiAnQWxhbiBIYXViYWNoJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDE1LFxuICAgICAgICAgICAgeDogLTEzMy41NDQ4MDYxODUxNzU1NixcbiAgICAgICAgICAgIHk6IDEzLjczNjQ0MzM3OTU0MjQzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY3MzIwOTUtMScsXG4gICAgICAgICAgICBuYW1lOiAnQWxleCBXYXJzaGF2c2t5JyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDM4LFxuICAgICAgICAgICAgeDogLTQxLjQzMDA2MDkxMDE0NjgxLFxuICAgICAgICAgICAgeTogLTExNS42OTQ2ODEzNzA2NDgxN1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc0MDgyMDk3LTEnLFxuICAgICAgICAgICAgbmFtZTogJ0FsZnJlZCBFLiBNYW5uJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDczLFxuICAgICAgICAgICAgeDogLTE2Ni4yNTEyNzgyMzQxNzY4OCxcbiAgICAgICAgICAgIHk6IDY0LjIxNDI0NTU2NjIzMzM5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzc0MDI1MDYtMicsXG4gICAgICAgICAgICBuYW1lOiAnQW5kcmVhIEMuIFNjdWRlcmknLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMixcbiAgICAgICAgICAgIHg6IDIzMi4wMjEwMTM1NjQ5NDQsXG4gICAgICAgICAgICB5OiAyMDEuNTQzNjA1NTMyMTQ1NTNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjI5NTUzMC0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdBbmRyZXcgTS4gUml0Y2hpZScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAzLFxuICAgICAgICAgICAgeDogLTE4MC4xMzI3MDEwOTM4MDg4MyxcbiAgICAgICAgICAgIHk6IC0xNzUuODkzMzU4NzUwMzkyODVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTk0NDc5MS0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdBbmRyZXcgVy4gU2NoZXJwYmllcicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA4LFxuICAgICAgICAgICAgeDogODkuMDM1OTY3ODg3MDIyNzEsXG4gICAgICAgICAgICB5OiA3My40MTk2NjYwMTU2MjA1OFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NjY1NjQ4LTQnLFxuICAgICAgICAgICAgbmFtZTogJ0FuZHJ6ZWogUC4gTWF6dXInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMSxcbiAgICAgICAgICAgIHg6IC0xNy43NTk1NzczODEzMzI2OSxcbiAgICAgICAgICAgIHk6IC05MC4wNDMyNzg4NDE0MTEzOFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NTc3NzI2LTQnLFxuICAgICAgICAgICAgbmFtZTogJ0FuaWwgSy4gQW5uYWRhdGEnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTksXG4gICAgICAgICAgICB4OiAtOTAuMjcyMzc3MjY3NTg1ODEsXG4gICAgICAgICAgICB5OiAtMTQyLjExOTgxNTUzMTI3ODRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjMzNjEzNy0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdBbmlsIE11a3VuZGFuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDI0LFxuICAgICAgICAgICAgeDogNDQuOTc1NzAwMDM4ODIwNTksXG4gICAgICAgICAgICB5OiAtMTczLjE5MTI2MzA1MjE2MzVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjgyOTY1NS0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdBbnVwYW0gU2luZ2hhbCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxMixcbiAgICAgICAgICAgIHg6IDY4LjAzMzQxNDk3MDgwODA4LFxuICAgICAgICAgICAgeTogLTE1OS42MTY0MDkwMTgzMDMxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzUyNzYyNjItMicsXG4gICAgICAgICAgICBuYW1lOiAnQXJ0aHVyIEwuIEpvaG5zb24nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogOSxcbiAgICAgICAgICAgIHg6IDE4NS41MDk1NjY0MzUyMjI4LFxuICAgICAgICAgICAgeTogLTIyOC44NDE5OTE1ODk4NDA1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzcwODI4MzItNCcsXG4gICAgICAgICAgICBuYW1lOiAnQXlhbm9yaSBFbmRvJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDUsXG4gICAgICAgICAgICB4OiAxMTYuMDkyNjE1NzMwMTA5NTEsXG4gICAgICAgICAgICB5OiAxNDkuMTcxNzYwODE4NzU1NzNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjM3MDU4NC0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdBemVyIEJlc3RhdnJvcycsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA4LFxuICAgICAgICAgICAgeDogLTI0MC40MTI5MjQxNTE5NDA4NyxcbiAgICAgICAgICAgIHk6IDE5Ny40MDIwMTA3Mjk4NDYzOFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1NzIyOTk3LTInLFxuICAgICAgICAgICAgbmFtZTogJ0JlaHJhZCBBcmlhJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDc1LFxuICAgICAgICAgICAgeDogLTc2Ljg4NjM5NTc5ODk5MjY4LFxuICAgICAgICAgICAgeTogMTQwLjU5NzQzNDgwMjg1MTQ0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzQ5NzIyMjQtMScsXG4gICAgICAgICAgICBuYW1lOiAnQmVubmllIFRob21wc29uJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDQ2LFxuICAgICAgICAgICAgeDogMTI5LjgwNzM1MDUyMzg5ODEyLFxuICAgICAgICAgICAgeTogLTQuNDgxOTcyNTU5ODM5OTgzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzc2MjA2NTUtMicsXG4gICAgICAgICAgICBuYW1lOiAnQmrDtnJuIFNwZXJsaW5nJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEsXG4gICAgICAgICAgICB4OiAyNjUuNjk4MDI0NjYwMjEzNDMsXG4gICAgICAgICAgICB5OiAtMTYzLjE3NDg3NTkyNjgyNDdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjU1MTI3Ni0xMicsXG4gICAgICAgICAgICBuYW1lOiAnQm9iIE11cnRmZWxkdCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxNCxcbiAgICAgICAgICAgIHg6IC0xMDQuNTc2MDI2NDE2MDUwMjMsXG4gICAgICAgICAgICB5OiA0My4yMTkyOTM4NjAxNzQ5MVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2ODA5NjUzLTknLFxuICAgICAgICAgICAgbmFtZTogJ0JyYWQgVC4gSGl0ZScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA0LFxuICAgICAgICAgICAgeDogLTE3OC43NDA2OTQ0Mjk1OTcsXG4gICAgICAgICAgICB5OiAxMTQuNTY0MzAxMDcxMDAzMTFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjY2NTY0OC01JyxcbiAgICAgICAgICAgIG5hbWU6ICdCcmlhbiBHcm92ZXMnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMyxcbiAgICAgICAgICAgIHg6IC00LjA2MzcwMzcyNzU5MzU1OSxcbiAgICAgICAgICAgIHk6IC05My4yNDY2NjAyMTYxNTE3N1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc3MDAwODE4LTMnLFxuICAgICAgICAgICAgbmFtZTogJ0JyaWFuIEouIEhlbW1lbGdhcm4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMixcbiAgICAgICAgICAgIHg6IDI1MS44NzgyNTI3MTY5MjIwOCxcbiAgICAgICAgICAgIHk6IDI4LjI4OTgwMzE5NTI2MDA4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY2NTg1NzctMScsXG4gICAgICAgICAgICBuYW1lOiAnQnJpYW4gUS4gSHVwcGknLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogOTQsXG4gICAgICAgICAgICB4OiAxMjMuMTk2MzE5ODc4MzUyNTgsXG4gICAgICAgICAgICB5OiAtMjY5LjU1NDk1NTI3NzcxMTFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTQ2NTg5NS0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdCcnlhbiBELiBLbm9kZWwnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTQ3LFxuICAgICAgICAgICAgeDogMjQ5LjI3MTU5MzUyNTA5Njk2LFxuICAgICAgICAgICAgeTogMTQ5Ljg5NDIyNjk2NTM0NDRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTk0ODAwNi0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdDYXJsYSBNLiBNYW5uJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMwLFxuICAgICAgICAgICAgeDogLTE0OC40MTE1MzQ3Njk4NzgwNSxcbiAgICAgICAgICAgIHk6IDI2OC4yMTAyMzY4NTMzNzAxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY1NTgzNTEtOCcsXG4gICAgICAgICAgICBuYW1lOiAnQ2FyeSBELiBUYWxib3QnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNTEsXG4gICAgICAgICAgICB4OiAtMjQyLjEyMDEzNzM5NjAwODUsXG4gICAgICAgICAgICB5OiAxLjA4MDkxMDU4NjE3MjI0ODNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTE3NjY0NC0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdDaGFkIFNyaXNhdGhhcGF0JyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDI4LFxuICAgICAgICAgICAgeDogLTEwNi41OTc4MDMyNTY0NTI4OSxcbiAgICAgICAgICAgIHk6IDU2LjcyNDE1OTk2MjQ3MzYzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY3MzIwOTUtMicsXG4gICAgICAgICAgICBuYW1lOiAnQ2hhbmRyYWthbnQgUmFta3Jpc2huYSBCaGF2c2FyJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDcsXG4gICAgICAgICAgICB4OiAtNTYuNDQ2OTI0MjM2MDI4NTgsXG4gICAgICAgICAgICB5OiAtMTE0LjM4OTM2MzU1OTUyNTIxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY4MDQzMzAtNScsXG4gICAgICAgICAgICBuYW1lOiAnQ2hyaXMgSGF2ZW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogOCxcbiAgICAgICAgICAgIHg6IDc2LjU4OTk2OTI2NjA3MDI3LFxuICAgICAgICAgICAgeTogLTIzMy41OTM3NjQyMTc3NDk2OFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1ODU5OTE2LTMnLFxuICAgICAgICAgICAgbmFtZTogJ0NocmlzdG9waGVyIEEuIEp1bGlhbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAzNSxcbiAgICAgICAgICAgIHg6IDMyLjQ5NTI5MjAyOTE1NTI2LFxuICAgICAgICAgICAgeTogMzA3Ljg1NTg3MTU3MzI5OTE3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU5NjM5NTMtMycsXG4gICAgICAgICAgICBuYW1lOiAnQ2hyaXN0b3BoZXIgU3RhdWJlcicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAzLFxuICAgICAgICAgICAgeDogMzguODc2NDk5MTc3MzA4OTM2LFxuICAgICAgICAgICAgeTogLTI1NC42ODUzMzcxNDg1NDA3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY1OTM4MzQtMicsXG4gICAgICAgICAgICBuYW1lOiAnQ2h1bm9uZyBRaXUnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMzAsXG4gICAgICAgICAgICB4OiAtMjk5LjUxMzU3MDczMjc1NzY3LFxuICAgICAgICAgICAgeTogMjguNjkzNTg2MTMzMTc5NTA1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU3MDMzNTctMycsXG4gICAgICAgICAgICBuYW1lOiAnQ2luZHkgWGluZyBRaXUnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMzcsXG4gICAgICAgICAgICB4OiAtMzA3LjYwNDk0NjAyMDg4NDk0LFxuICAgICAgICAgICAgeTogLTM2LjA5OTc0Mjk3NjkyNTU0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzUzODIyMzItMScsXG4gICAgICAgICAgICBuYW1lOiAnQ2xpZmYgSGFndWUnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjUsXG4gICAgICAgICAgICB4OiAtMTU4Ljk0ODg5MTcwNzkyMjE3LFxuICAgICAgICAgICAgeTogNzUuNTczNjYxMjU5NjcwOTFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjUzNTkwOS0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdEYXZpZCBCcmFkbGV5IFJ1c3QnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTAsXG4gICAgICAgICAgICB4OiAyOTMuODkzNzgyNjY4ODEyMTUsXG4gICAgICAgICAgICB5OiAxMDguMjQwNDU1OTI2OTA0NDlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTcxMzkxMS0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdEYXZpZCBDLiBSYWNlbmV0JyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDExNyxcbiAgICAgICAgICAgIHg6IC03MC43MzE5OTk5NjcyOTA3NixcbiAgICAgICAgICAgIHk6IDI4My42ODg0NTAyMTMyNjYxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU1MTI0MjYtMScsXG4gICAgICAgICAgICBuYW1lOiAnRGF2aWQgSC4gTGV2eScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA5NyxcbiAgICAgICAgICAgIHg6IDE3NS42MjI3MzM0NjgyOTU5MyxcbiAgICAgICAgICAgIHk6IDE5NS4wMzM0ODA5MjA0Mjc4NVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1NzU1NzM3LTMnLFxuICAgICAgICAgICAgbmFtZTogJ0RhdmlkIEthcmwgTGVlIFBldGVyc29uJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEwLFxuICAgICAgICAgICAgeDogLTExNi4xOTk5NzU5MzkyMDY4MSxcbiAgICAgICAgICAgIHk6IDIzNS40MjMxNzQ2Nzc2ODcwNlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2MDA0Mjc2LTEzJyxcbiAgICAgICAgICAgIG5hbWU6ICdEYXZpZCBMLiBSYWJiZXJzJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDksXG4gICAgICAgICAgICB4OiA5MC4wNTQ1NTEzODgzOTQ2NyxcbiAgICAgICAgICAgIHk6IC0xOTkuNzY3MjQzMDI2NjA5OTJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNDEyNzIyNy0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdEYXZpZCBULiBHcmVlbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyNTMsXG4gICAgICAgICAgICB4OiAzMjAuMDUzODk1NjQ5MzQ3NCxcbiAgICAgICAgICAgIHk6IC0yLjU2NzQ0MDY5ODM3ODM3NzdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTMyOTY1NS0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdEZWFuIEwuIEdhcm5lcicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA5LFxuICAgICAgICAgICAgeDogODIuOTg2ODM3ODY2NTg0NCxcbiAgICAgICAgICAgIHk6IC03NS4wMTQ3MjE1NTAwMjEzOFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NTUxMjc2LTknLFxuICAgICAgICAgICAgbmFtZTogJ0RlYm9yYWggUnVwcGVydCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyMixcbiAgICAgICAgICAgIHg6IC0xMTguMjY1NTI5Mzc0NTE1MDcsXG4gICAgICAgICAgICB5OiAyMC4xMzE0ODExODkxMDE2OTVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjU1MTI3Ni0xMCcsXG4gICAgICAgICAgICBuYW1lOiAnRGVubmlzIFAuIEJpc2hvcCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxNixcbiAgICAgICAgICAgIHg6IC0xMTMuMDQxMzg0MzI2NTk5NDMsXG4gICAgICAgICAgICB5OiA2OC41MzQ3OTE4MTU2MjI5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU5MTgxNTktMicsXG4gICAgICAgICAgICBuYW1lOiAnRGVuemlsIFdpbGxvdWdoYnkgQ2hlc25leScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA4LFxuICAgICAgICAgICAgeDogLTIyMS4zNDM4MTYzMTk3NzMyLFxuICAgICAgICAgICAgeTogLTE4MC4zMTI1ODg2ODQzNTcyNVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2OTEyODM5LTInLFxuICAgICAgICAgICAgbmFtZTogJ0RlcmVrIERlZSBEZXZpbGxlJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEyNyxcbiAgICAgICAgICAgIHg6IDEyNC4wMDU2MjM2OTcxNDYwOSxcbiAgICAgICAgICAgIHk6IDMwLjMwMzUxODU3MzIxMzMyOFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NzE4MzYxLTgnLFxuICAgICAgICAgICAgbmFtZTogJ0RvbWVuaWMgSi4gTGFSb3NhJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDcsXG4gICAgICAgICAgICB4OiAtMTg1LjE2MzQwMjcxNTE1ODgsXG4gICAgICAgICAgICB5OiAxOTEuNDk4ODA1NTgwOTA4OTZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjg1MDk0OS0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdEb3VnIFdhcm5lcicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxLFxuICAgICAgICAgICAgeDogMTk3LjQxMDk1ODY2MjQ4ODgsXG4gICAgICAgICAgICB5OiAtMTQxLjUxMTM3NDI1OTAxMjc3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY1MzA5MzItMicsXG4gICAgICAgICAgICBuYW1lOiAnRG91Z2xhcyBCLiBIb2ZmbWFuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDQxLFxuICAgICAgICAgICAgeDogMTEyLjY1OTAyMjAyNjc4ODg2LFxuICAgICAgICAgICAgeTogLTQxLjk1MTc5NDE5MzQwODAxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY0MzQ1NTAtMScsXG4gICAgICAgICAgICBuYW1lOiAnRG91Z2xhcyBLLiBXYXJuZXInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTEsXG4gICAgICAgICAgICB4OiAtMjQwLjIxMzA1MTgwMzE0NyxcbiAgICAgICAgICAgIHk6IC01OC4zODUzNDUyMjE3NjA0NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2ODUwODk1LTUnLFxuICAgICAgICAgICAgbmFtZTogJ0R1YW5lIFdhbmRsZXNzJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMsXG4gICAgICAgICAgICB4OiAtMTQxLjc3MTIwMzcwOTU3NTA1LFxuICAgICAgICAgICAgeTogLTIzNS44NDk0NTg4ODU1NTMzNlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc3NjMyOTg1LTQnLFxuICAgICAgICAgICAgbmFtZTogJ0VsbGVuIERpY2tpbnNvbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA1LFxuICAgICAgICAgICAgeDogLTYuNjUwNzEyOTUzNjU5MjMyLFxuICAgICAgICAgICAgeTogMjQzLjg1OTIyNDk0OTc3OTk2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU2MTY1MzItMycsXG4gICAgICAgICAgICBuYW1lOiAnRXBocmFpbSBIZWxsZXInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTI1LFxuICAgICAgICAgICAgeDogLTEzNi42NjI3NjkzMTc4Njc4OCxcbiAgICAgICAgICAgIHk6IDE0OC41MDgzMzI4NzMwNjg0NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NzI0Mzk5LTEnLFxuICAgICAgICAgICAgbmFtZTogJ0VybnN0IEthdGNob3VyJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDIsXG4gICAgICAgICAgICB4OiAyMC40NjA3MDUxNzc4MTY4MTYsXG4gICAgICAgICAgICB5OiAtMTM4LjYzMTYxNzQzNDYwNDdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNDQwMzY4Ny0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdFdWdlbmUgTC4gVGltcGVybWFuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDY5LFxuICAgICAgICAgICAgeDogMTY3LjgxNDA1OTc2MjQwMzIyLFxuICAgICAgICAgICAgeTogMjMuNjUzNzk0MzQ4NjcwNTE2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY5MDUwNTctMicsXG4gICAgICAgICAgICBuYW1lOiAnRnJlZGVyaWNrIEUuIFNoZWx0b24sIElWJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEwNDcsXG4gICAgICAgICAgICB4OiAyMDYuOTQwNTU2MDExNjE5NTgsXG4gICAgICAgICAgICB5OiAtMzMuNjM3OTQ0MDE5MjIxMDVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTA0MTA4Ni00JyxcbiAgICAgICAgICAgIG5hbWU6ICdGcmVkcmljIEMuIENvbG1hbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxMTksXG4gICAgICAgICAgICB4OiAtOTMuMDcxNDE1MjIyMzM1NjUsXG4gICAgICAgICAgICB5OiAxODcuNjEzODI3OTEyMTQ3NzRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjQzMzkyMS0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdHLiBWaWN0b3IgVHJleXonLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTksXG4gICAgICAgICAgICB4OiAtMjUwLjIxNDE5MjIwODcyNDksXG4gICAgICAgICAgICB5OiAxMTcuNzA5MzYxODgxMjg3ODlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjU1ODM1MS0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdHYXJyeSBNLiBTdGVpbCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyMSxcbiAgICAgICAgICAgIHg6IC0xOTcuNTUwMzM4NDM3MDcwODgsXG4gICAgICAgICAgICB5OiAtMTQuOTY5MDU0MTU3MjU1MjYxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU3MDczNjktMicsXG4gICAgICAgICAgICBuYW1lOiAnR2VvZmZyZXkgQy4gSHVlaWwnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMzcsXG4gICAgICAgICAgICB4OiA4OC43NzczMjEyOTk3NTk2OCxcbiAgICAgICAgICAgIHk6IC01OS4zNDI5NDQ2OTA5MDQzMVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2ODI2NTgyLTInLFxuICAgICAgICAgICAgbmFtZTogJ0dlb3JnZSBFcmljc3NvbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxLFxuICAgICAgICAgICAgeDogLTE1OC4wMjA3MDg1NTI0OTkzNyxcbiAgICAgICAgICAgIHk6IC0xMTEuNDEzNTU2NjYwNzU0MTNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnUkUyODkzMi0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdHcmFoYW0gVy4gQnJ5YW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTcsXG4gICAgICAgICAgICB4OiAzMDIuMTUxOTcxNzQ5ODE5OTUsXG4gICAgICAgICAgICB5OiAyLjk3MTE1MzMwMTIxNzE4NlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2MTQ0Njc5LTEnLFxuICAgICAgICAgICAgbmFtZTogJ0dyZWdvcnkgUyBIZXJtYW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNzAsXG4gICAgICAgICAgICB4OiAtMTA3LjA4NzIxMjEyNDM4MjUzLFxuICAgICAgICAgICAgeTogLTIyLjk5OTMyNTk4MDQ3NTM0NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NjAxMDg3LTInLFxuICAgICAgICAgICAgbmFtZTogJ0d1YW5naG9uZyBZYW5nJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDgsXG4gICAgICAgICAgICB4OiAxODEuOTQwMDg2ODA4MDIyMSxcbiAgICAgICAgICAgIHk6IDc3LjY2Nzc4NjIzMzgxMTlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjU3NzcyNi0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdIZW5yeSBELiBKYXknLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNyxcbiAgICAgICAgICAgIHg6IC0xMjIuMDIzMjA0NzY5ODI0OTksXG4gICAgICAgICAgICB5OiAtMTU3Ljk1NTY2NzMyNDE4Mjg1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzQyODMwMjQtMScsXG4gICAgICAgICAgICBuYW1lOiAnSGVucnkgUi4gU2llbmtpZXdpY3onLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMzUsXG4gICAgICAgICAgICB4OiAyNzQuNjA0MTU2MDM3MTI3MjcsXG4gICAgICAgICAgICB5OiAtMjcuMjczMzA5NjI1ODQ1NjdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNzMyMzM1Ni01JyxcbiAgICAgICAgICAgIG5hbWU6ICdIaWRlbm9yaSBIaXJhbWF0c3UnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNCxcbiAgICAgICAgICAgIHg6IC0zNi42MDU0MjQyNTE5NTA0NDYsXG4gICAgICAgICAgICB5OiAxMTUuODUwMDg5MzE5OTg4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzQ3MDMwMTktMicsXG4gICAgICAgICAgICBuYW1lOiAnSGlkZW8gSG9zb25vJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDY4LFxuICAgICAgICAgICAgeDogLTkuODU5NDU3MDk0MjM3MzMzLFxuICAgICAgICAgICAgeTogMTEyLjE4Mzc0Njk2MzQ4OTEzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzQyNTMwNjEtMycsXG4gICAgICAgICAgICBuYW1lOiAnSGlkZW8gT2hubycsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA1NSxcbiAgICAgICAgICAgIHg6IDE2LjQyNDM5NzgzNTkxMzk5MyxcbiAgICAgICAgICAgIHk6IDEuNTk4MTI5MDMyMTE0MTE2MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1MjcyMDY5LTYnLFxuICAgICAgICAgICAgbmFtZTogJ0hpcm9taWNoaSBPdGEnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTksXG4gICAgICAgICAgICB4OiAtNDIuOTMwMjMxMjMzMjk5NTY1LFxuICAgICAgICAgICAgeTogNzIuMDMwODE1NzgyOTYxMThcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTA0MTIwMC0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdIaXJvbWl0c3UgSXNoaWknLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNDAsXG4gICAgICAgICAgICB4OiAtMjQwLjQ1MDk2MjkzMzkyOTYsXG4gICAgICAgICAgICB5OiAtMTUwLjI3NjAxMjY1OTg4MzUyXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY4NjMzNjMtMScsXG4gICAgICAgICAgICBuYW1lOiAnSGlzYXRvIFlhYnV0YScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA0MCxcbiAgICAgICAgICAgIHg6IDYwLjQzNzIxNDc2NjU0NTUsXG4gICAgICAgICAgICB5OiA1Ni40OTY2NDkyMTg4MTM4N1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc3Mzg1MjI0LTInLFxuICAgICAgICAgICAgbmFtZTogJ0hpdG9zaGkgSG9rYXJpJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMsXG4gICAgICAgICAgICB4OiAtMjQxLjgzMTAzMzM3OTk1MTEsXG4gICAgICAgICAgICB5OiAtMTMzLjU0MDQ5Nzc5Mjk1NDI4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzUwNDEyMDAtNCcsXG4gICAgICAgICAgICBuYW1lOiAnSWt1aGlybyBZYW1hZ3VjaGknLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTAsXG4gICAgICAgICAgICB4OiAtMjI4Ljc4MDg2NzAxNzE5MTUzLFxuICAgICAgICAgICAgeTogLTE2Mi4zNjY3MTU4ODU2MDE3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzQ5OTcyNjItMScsXG4gICAgICAgICAgICBuYW1lOiAnSWt1byBTYWtvbm8nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogOSxcbiAgICAgICAgICAgIHg6IC0yMi40NTE1NTY2NTIzOTM5NDMsXG4gICAgICAgICAgICB5OiAtMzQuMDQ3NTAxNjg0MTgyMTFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTA4MTQyMi0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdJc2hpYW5nIFNoaWgnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjgsXG4gICAgICAgICAgICB4OiAtMjg2LjMyNzA3NzU5NDAzOTYsXG4gICAgICAgICAgICB5OiAtMjMuNzMzMTA1MTE5NDU4NDk3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzYyODE4OTgtMicsXG4gICAgICAgICAgICBuYW1lOiAnSmFjcXVlbHluIEEuIE1hcnRpbm8nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNDMsXG4gICAgICAgICAgICB4OiAtNzcuNDA0MjY2NzQ2MzAyNTgsXG4gICAgICAgICAgICB5OiAyMzMuMTQzNjYyMDkzOTc0MDZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjY2NTY0OC0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdKYWktSmVpbiBZdScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAzLFxuICAgICAgICAgICAgeDogLTMxLjg0MDA1Mjg2NDkyNjczLFxuICAgICAgICAgICAgeTogLTkxLjYyMzc1NzQ3MzY0MTE5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzQ4MDk2OTctMScsXG4gICAgICAgICAgICBuYW1lOiAnSmFtZXMgRC4gQ2F1c2V5LCBJSUknLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTA4LFxuICAgICAgICAgICAgeDogLTE3OC4yNjUyMTYxMjA0MjIsXG4gICAgICAgICAgICB5OiA1MS43NTU2ODA5MzA3NDY2ODVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNDg2MzQyNS0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdKYW1lcyBMLiBIZW5rZScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyNSxcbiAgICAgICAgICAgIHg6IC0yMjkuODI2MzIzMjY2OTMxNDQsXG4gICAgICAgICAgICB5OiA4MS4xNDgzOTE4MzUwNDUxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU1MzMyMzgtMScsXG4gICAgICAgICAgICBuYW1lOiAnSmFtZXMgU2F5JyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDExNSxcbiAgICAgICAgICAgIHg6IC0xMTAuMjY1MTQ2NTA1NTAzMTMsXG4gICAgICAgICAgICB5OiAxODkuNzM4NDE5MDcyNjEzNzRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjcxMTU2NS0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdKYXNvbiBab3NzJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDE0LFxuICAgICAgICAgICAgeDogLTM2Ljc5NzYzNTgzMDQxMzM4LFxuICAgICAgICAgICAgeTogLTMwMy4zNjA2MjkzMTQwMDU3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY1NTEyNzYtOCcsXG4gICAgICAgICAgICBuYW1lOiAnSmF5IFlvbmVtb3RvJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDI2LFxuICAgICAgICAgICAgeDogLTEwOC4zOTA2MDExNTA2NTY5NixcbiAgICAgICAgICAgIHk6IDMwLjY2NzUzMDk2NDk4NDgxN1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1ODYzMzI2LTEnLFxuICAgICAgICAgICAgbmFtZTogJ0plZmZyZXkgRS4gTmF1c2UnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNyxcbiAgICAgICAgICAgIHg6IC0zNC45NzQ2ODc4MjY1MTM5OSxcbiAgICAgICAgICAgIHk6IDIyNS41Mzc4MTI3NjY3MjQyN1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc0OTUxMjc4LTInLFxuICAgICAgICAgICAgbmFtZTogJ0plZmZyZXkgSS4gQ29oZW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNDUsXG4gICAgICAgICAgICB4OiAtMTA2LjY3NzI5MjU2MDAzNDIyLFxuICAgICAgICAgICAgeTogLTI3NS45NjY1NTc2NTE4MjEyM1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2MzkzNjA1LTEnLFxuICAgICAgICAgICAgbmFtZTogJ0plZmZyZXkgTG9vbWFucycsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA0LFxuICAgICAgICAgICAgeDogLTEyLjA4OTUyMzI4MDg2MjE2NCxcbiAgICAgICAgICAgIHk6IC0xNDYuODcyOTU2ODkyNTA1NjRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTI0MzYyMi0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdKZWZmcmV5IE0uIEZpc2NoZXInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjMsXG4gICAgICAgICAgICB4OiAtNjkuMTE1MTA1NzY0MDM2NjMsXG4gICAgICAgICAgICB5OiAtMTIxLjU5NTk2MjM4Mjc4OTExXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU4OTc1NjMtNCcsXG4gICAgICAgICAgICBuYW1lOiAnSmVmZnJleSBTLiBTd2F5emUnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjM3LFxuICAgICAgICAgICAgeDogMTgyLjc1NzUyMTg3NzA3MTIsXG4gICAgICAgICAgICB5OiAtNDIuNjUyMjY0ODc1Mzk3OTI1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzc2MDg3NjEtNCcsXG4gICAgICAgICAgICBuYW1lOiAnSmVubmlmZXIgUmluZWhhcnQnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogOSxcbiAgICAgICAgICAgIHg6IDE0LjYwMzAzMzcxNzY0NDg3NyxcbiAgICAgICAgICAgIHk6IDI1OC4wMTY5MzgwNzk0MzA3NlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc3MzgwNjk2LTMnLFxuICAgICAgICAgICAgbmFtZTogJ0plcnJ5IFIuIE1vcmdhbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxLFxuICAgICAgICAgICAgeDogMjQwLjc3OTIzNTEyNTM5MTcyLFxuICAgICAgICAgICAgeTogMC43NTYxODU2NTUyMjI2MjVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTcxNTQ1MC0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdKZXNzZSBBbWJyb3NlJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDE5LFxuICAgICAgICAgICAgeDogMzYuMTgwNDIzNTE0NTA4MjA2LFxuICAgICAgICAgICAgeTogLTI3MS4xMTgxNTE4OTE2NjY1N1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NzExNTY1LTMnLFxuICAgICAgICAgICAgbmFtZTogJ0ppYW4tSnVuZyBZaW5nJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDE1LFxuICAgICAgICAgICAgeDogLTUyLjQwNTk0MzYyOTE2MDI3LFxuICAgICAgICAgICAgeTogLTI5OC42MjA5ODUyNDQ2NTc3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY1MTYyMjctNCcsXG4gICAgICAgICAgICBuYW1lOiAnSm9leSBDaGVuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDUwLFxuICAgICAgICAgICAgeDogLTE1NC41NDY2NzEzNjI5MDk5MyxcbiAgICAgICAgICAgIHk6IDIwOC45NTA3MjI4MDczNDMzN1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2MjMzNjE3LTInLFxuICAgICAgICAgICAgbmFtZTogJ0pvaG4gQ29rZXInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjksXG4gICAgICAgICAgICB4OiAtMTA3LjgxODkzODE1NjMyMTQ0LFxuICAgICAgICAgICAgeTogLTE3MC45MDc0Njc2MjMxNjU2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzQ1NjE0NDQtMScsXG4gICAgICAgICAgICBuYW1lOiAnSm9obiBILiBMaXZpbmdzdG9uJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMxLFxuICAgICAgICAgICAgeDogLTE1Mi44NTMwMDQ0NDU4Mzk1NixcbiAgICAgICAgICAgIHk6IDg1LjEwOTQwMDA4OTY0OTY3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzUyMzcxNzgtMicsXG4gICAgICAgICAgICBuYW1lOiAnSm9obiBKLiBNYXN0cm90b3Rhcm8nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNzcsXG4gICAgICAgICAgICB4OiAtMjA1LjQ5NzM5NTkwOTU4NTMyLFxuICAgICAgICAgICAgeTogNTAuMzE0Nzc5NzA0ODQ4NjhcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjQyNDg0Ny0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdKb2huIEouIFNoaW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNixcbiAgICAgICAgICAgIHg6IC0xODUuMzc0NDYzNTU3MTAzODQsXG4gICAgICAgICAgICB5OiAtMy4yODcyMDI3MTA2MjM1ODk1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU3MTM5MTEtMicsXG4gICAgICAgICAgICBuYW1lOiAnSm9obiBXLiBCZWFyZHNsZXknLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTEwLFxuICAgICAgICAgICAgeDogLTMzLjgxNDc1OTg4NjM4MjAyLFxuICAgICAgICAgICAgeTogMjYyLjg4MjY3MjExMTEzNzI1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY2OTAzODctMScsXG4gICAgICAgICAgICBuYW1lOiAnSm9obiBaaW1tZXJtYW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTYsXG4gICAgICAgICAgICB4OiAtMTAzLjg2NDM2NDI4NTAxLFxuICAgICAgICAgICAgeTogMjg3LjAzMjQxNTIwNzcwMzVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjI5NTUzMC0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdKb25hdGhhbiBCcmFkc2hhdycsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA3LFxuICAgICAgICAgICAgeDogLTIxMS44NzE0MjYwOTEwNDc4LFxuICAgICAgICAgICAgeTogLTIyNC41MDkwNDc4NzQ0NTEyM1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2OTY0MzYzLTInLFxuICAgICAgICAgICAgbmFtZTogJ0pvc2VwaCBDaGFybGVzIEhldWlsJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEsXG4gICAgICAgICAgICB4OiAxNTcuODk0OTA5NjA5NzU0MjgsXG4gICAgICAgICAgICB5OiAtMTI2LjQ0NzgxODMxOTc1MDY0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY4MDQzMzAtNCcsXG4gICAgICAgICAgICBuYW1lOiAnSm9zZXBoIEhhcmInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTYsXG4gICAgICAgICAgICB4OiA2MS4xMjY2NDgyMjQ1ODU2NixcbiAgICAgICAgICAgIHk6IC0yNjguMTkwODgxNjYxMTg5OVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc3MTU0NDc3LTInLFxuICAgICAgICAgICAgbmFtZTogJ0pvc2h1YSBBLiBTdHJpY2tvbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAzMSxcbiAgICAgICAgICAgIHg6IDE0My42MDc3Mjc2NDU5OTksXG4gICAgICAgICAgICB5OiAtMjgxLjY2OTM2OTI2MTE0MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NjY1NjQ4LTEnLFxuICAgICAgICAgICAgbmFtZTogJ0thcmVuIEJyb2RlcnNlbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyLFxuICAgICAgICAgICAgeDogLTUyLjg4Nzc2MTYxNzQwNjc0NixcbiAgICAgICAgICAgIHk6IC0xMzUuMjUzMjQ2MDEyMTI3NDhcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjkxNDE4Mi0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdLYXRzdXRvc2hpIFRha2VkYScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxMixcbiAgICAgICAgICAgIHg6IC0zMDEuODk0MzM0ODc2OTExODQsXG4gICAgICAgICAgICB5OiAtNzAuNDMzMjQ2NTA4MDg5MDZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTkyNTIyNC0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdLYXp1a2kgS29iYXlhc2hpJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDIyLFxuICAgICAgICAgICAgeDogLTQxLjkwMDY3NjkxODA5NjQxNixcbiAgICAgICAgICAgIHk6IDcuMzAxMzU4NTk2NjIyOTEyXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzcwNjEwMTQtNCcsXG4gICAgICAgICAgICBuYW1lOiAnS2F6dXNoaWdlIFVlZGEnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogOCxcbiAgICAgICAgICAgIHg6IC0zNy42NjQ5NjM2MzQ0ODMyMyxcbiAgICAgICAgICAgIHk6IDU5LjYyNDc1NTY1NzM4Mjg2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzQzNTY0NTUtMycsXG4gICAgICAgICAgICBuYW1lOiAnS2Vpc2hpIFNhaXRvJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDYwLFxuICAgICAgICAgICAgeDogMTAuMjE5MTQwNjMzOTEwMDg1LFxuICAgICAgICAgICAgeTogMTE0LjYwNjExMDA4NDYwNTY3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzYxNzU3NTItOScsXG4gICAgICAgICAgICBuYW1lOiAnS2VpdGggQS4gRnJpZWRtYW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNTYsXG4gICAgICAgICAgICB4OiAtNzIuNzY0NzgzOTk0MzI2OTIsXG4gICAgICAgICAgICB5OiAxNTcuOTYyODAyNDYwMTQ3MzRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnRDI2Mzk4Ny0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdLZWl0aCBMLiBNaWxsaW1hbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxNDgsXG4gICAgICAgICAgICB4OiAyODUuMjcwNTUxNDYzMDk4MDYsXG4gICAgICAgICAgICB5OiAtNC4xNjE2MDc2OTk5NTI4NDVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnRDMwNDIzNC0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdLZWl0aCBSYXRjbGlmZicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA3NixcbiAgICAgICAgICAgIHg6IDI5OC4yNTQzODY1NTY0NDU4NyxcbiAgICAgICAgICAgIHk6IC02Mi4wMzc3MzM5OTA3MzA2MTVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjgzODM5Ny0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdLZW5nbyBBa2ltb3RvJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMwMSxcbiAgICAgICAgICAgIHg6IDIzMy4zMDU5MTA4OTI4NDEyNCxcbiAgICAgICAgICAgIHk6IDExOC4xMjg2NTgxNDc0NDI4M1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc0MDcyMjM2LTEnLFxuICAgICAgICAgICAgbmFtZTogJ0tlbmppIE5vbXVyYScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA3MixcbiAgICAgICAgICAgIHg6IC0xOC40OTE1NzM2MjA3NDg0NTQsXG4gICAgICAgICAgICB5OiAxNjQuMzMxOTc0Mzg4MjA4NVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc0ODkwNjExLTMnLFxuICAgICAgICAgICAgbmFtZTogJ0tlbm5ldGggSC4gTW9sbGVuYXVlcicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxMzksXG4gICAgICAgICAgICB4OiAxNzEuMTIxMzkwOTkxMjUyODQsXG4gICAgICAgICAgICB5OiAxNDkuODI3ODkzMjE4MzIwN1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1NDA5NDk4LTQnLFxuICAgICAgICAgICAgbmFtZTogJ0tlbm5ldGggUy4gV2FsZXMnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMzQsXG4gICAgICAgICAgICB4OiAxNTEuNjE1MDY1MDA0ODYzNjUsXG4gICAgICAgICAgICB5OiAtNjguMTcxNTMwMTA5Njk3NVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NTU4MzUxLTInLFxuICAgICAgICAgICAgbmFtZTogJ0tlcnN0aW4gUmVicmluJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDgsXG4gICAgICAgICAgICB4OiAtMjEzLjk5ODMyNjQ4MjE5ODkzLFxuICAgICAgICAgICAgeTogLTE4LjIxMDIwMzUwOTcwNjk1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzcwODMwNzUtMycsXG4gICAgICAgICAgICBuYW1lOiAnS2V2aW4gUi4gRG9sbCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAzMyxcbiAgICAgICAgICAgIHg6IDE5NS4xNzE2MTg2MTI5NjQxMixcbiAgICAgICAgICAgIHk6IDIxLjgyNzU3MTkwNzE4Mjg2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY4MjY3NDUtMycsXG4gICAgICAgICAgICBuYW1lOiAnS2V2aW4gUi4gTml4JyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDUsXG4gICAgICAgICAgICB4OiAtMTEzLjUyMzE4MzQ5Njc5Nzg2LFxuICAgICAgICAgICAgeTogLTE4Ni42NTg1MDQ2NDA5Nzc2N1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc0NjgyNTk2LTInLFxuICAgICAgICAgICAgbmFtZTogJ0tldmluIFcuIFNtaXRoJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDI0NSxcbiAgICAgICAgICAgIHg6IDE0Mi4wMTUxNzA1MjYxOTIyNCxcbiAgICAgICAgICAgIHk6IDM1LjMxNzEzMDMyMDQwMDE4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzYzMzYxMzctMScsXG4gICAgICAgICAgICBuYW1lOiAnS2luZy1Id2EgTGVlJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDcsXG4gICAgICAgICAgICB4OiAyOS4xMzY0MTY4MjEzODk1NDUsXG4gICAgICAgICAgICB5OiAtMTUyLjgzODkyMjc5MTAwMTM1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY1NTM1NjMtMycsXG4gICAgICAgICAgICBuYW1lOiAnS2xhdXMgVy4gU3Ryb2JlbCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAzLFxuICAgICAgICAgICAgeDogMTguNTAyMjY5ODAyODk2MTg3LFxuICAgICAgICAgICAgeTogLTI3Ny44NDIyOTExOTE2NDQ4NVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1NzE1Njc1LTInLFxuICAgICAgICAgICAgbmFtZTogJ0tvcmV5IEtsaW5lJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDY3LFxuICAgICAgICAgICAgeDogMTA3LjM5MjgwODY0MDQ2NTYsXG4gICAgICAgICAgICB5OiAwLjEyNDk3MTY4MzkxMjA4ODgxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY3MTgzNjEtMicsXG4gICAgICAgICAgICBuYW1lOiAnS3Jpc2huYSBNYW5naWFwdWRpJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDIsXG4gICAgICAgICAgICB4OiAtMjIxLjQyMzUxMTgxMDk1Mzc2LFxuICAgICAgICAgICAgeTogMjEwLjY4NDYyMTA3NjIxNjk2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY1Nzc3MjYtMScsXG4gICAgICAgICAgICBuYW1lOiAnS3VhbmctWWFuZyBIdWFuZycsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA3LFxuICAgICAgICAgICAgeDogLTExMC45MDI5MzQ3NDQxOTYzNCxcbiAgICAgICAgICAgIHk6IC0xNDQuMTEwNzQ3NzI3NDAxOVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc3MTU5NzUwLTUnLFxuICAgICAgICAgICAgbmFtZTogJ0xlZSBBbm4gT2xzb24nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTAyLFxuICAgICAgICAgICAgeDogLTEyLjI5MTA0NTcyOTgxNjU5MyxcbiAgICAgICAgICAgIHk6IDI4NC4zMjI4MjQwMjc2NzFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjcxODM2MS00JyxcbiAgICAgICAgICAgIG5hbWU6ICdMZXJveSBSLiBLYXJnZScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA2LFxuICAgICAgICAgICAgeDogLTI0Ni41Njg5ODQ5NTkwMTgyOCxcbiAgICAgICAgICAgIHk6IDE3Ni44NjQzMDgyNDg5MTI4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY1NTEyNzYtNCcsXG4gICAgICAgICAgICBuYW1lOiAnTHVpcyBKLiBNYWxhdmUnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjUsXG4gICAgICAgICAgICB4OiAtMTUwLjQ2OTU1MTU4NDEyMTA2LFxuICAgICAgICAgICAgeTogMTUuNDY2NjgxMzU1NTk0MDQzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzYwNDgxMTAtMycsXG4gICAgICAgICAgICBuYW1lOiAnTHluIE0uIElydmluZycsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA1MCxcbiAgICAgICAgICAgIHg6IDE4NS44OTM2ODI1NTIwMzYzOCxcbiAgICAgICAgICAgIHk6IDIxMS43MzQ5NzMxNjgzNzQ0NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NzE4MzYxLTMnLFxuICAgICAgICAgICAgbmFtZTogJ0x5bm5lIE0uIE11cmFjaCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA2LFxuICAgICAgICAgICAgeDogLTE4NC41OTczMTYxMjU5OTM3OSxcbiAgICAgICAgICAgIHk6IDE2OC45NTQ1OTAzMDEyODQwNFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1OTQ4Nzg5LTEnLFxuICAgICAgICAgICAgbmFtZTogJ01hZ251cyBMYXJzc29uJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMyLFxuICAgICAgICAgICAgeDogMjgyLjM0OTg3NDM0OTIzMDQsXG4gICAgICAgICAgICB5OiAtMTA1Ljg1MzkwNTc2ODM5NDA5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY4Mjk2NTUtMicsXG4gICAgICAgICAgICBuYW1lOiAnTWFnbnVzIFZlamxzdHJ1cCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA1LFxuICAgICAgICAgICAgeDogODQuNTc2ODM0MjA1MDU4NDksXG4gICAgICAgICAgICB5OiAtMjExLjYwNTQ2NTkxMTI5MTIyXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY3MTE1NjUtNCcsXG4gICAgICAgICAgICBuYW1lOiAnTWFyYyBDYWx0YWJpYW5vJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDE4LFxuICAgICAgICAgICAgeDogLTIxLjU3MjUwMzU0NzAzMTc2NSxcbiAgICAgICAgICAgIHk6IC0zMDMuMjUwMDEyMDQ4MDA4ODRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNzA3ODUwMy0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdNYXJpYW5uZSBNYWx2ZW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjQsXG4gICAgICAgICAgICB4OiAzOS4zNjQ3ODkxMjE4Mzk4MixcbiAgICAgICAgICAgIHk6IDIwNC41MDc2MTA4ODIzNzk2MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2MjIzMjA1LTInLFxuICAgICAgICAgICAgbmFtZTogJ01hcmsgRS4gQ3JvdmVsbGEnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTEsXG4gICAgICAgICAgICB4OiAtMjM5LjEzMDY3MzM5MjA3NixcbiAgICAgICAgICAgIHk6IDE1OS41Mzg2MjY4MTIwNzAzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY2MjE4MzQtMicsXG4gICAgICAgICAgICBuYW1lOiAnTWFyayBSYW5kbGUgQm95bnMnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogOSxcbiAgICAgICAgICAgIHg6IDkyLjk1MTU5OTEzNDA4NDQsXG4gICAgICAgICAgICB5OiAxMzkuNzI0OTE2OTk0MTgxMjlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTUzNDEzMi0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdNYXJrIFMuIFZyZWVrZScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA5OSxcbiAgICAgICAgICAgIHg6IC0xMjYuMTc0MTQyNDA4MjUyMDIsXG4gICAgICAgICAgICB5OiAxODIuMTQ4ODY4MDE3NDg1MzRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNDg5MjI0NC00JyxcbiAgICAgICAgICAgIG5hbWU6ICdNYXJrIFMuIFplaW5lcicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxMTIsXG4gICAgICAgICAgICB4OiA4Ny44NjU1MTIzMzk0NDc5MixcbiAgICAgICAgICAgIHk6IC05My42MTQzNTk0OTkwNjg2NlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2ODI5NjU1LTYnLFxuICAgICAgICAgICAgbmFtZTogJ01hcnRpbiBTdXNzZXInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogOCxcbiAgICAgICAgICAgIHg6IDg2LjUxNjY0NDk3MTYzMTEsXG4gICAgICAgICAgICB5OiAtMTc2LjM2ODA1Njg2MjQ4NDJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNDQ4NjcyMC0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdNYXNhaGlybyBIaXJhbm8nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNjQsXG4gICAgICAgICAgICB4OiAtMjYuNDczOTQxMDIxMzI4ODM0LFxuICAgICAgICAgICAgeTogNTAuNTgzODc3NTAxMjg3NDc1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU2MjI2NTMtMScsXG4gICAgICAgICAgICBuYW1lOiAnTWFzYWhpcm8gT3JpdGEnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTMsXG4gICAgICAgICAgICB4OiAtNDMuMzExOTQzNTEyNDY5NTA0LFxuICAgICAgICAgICAgeTogODguMDU4NTI0MDEwOTIzNjJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjA4MDk5OC0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdNYXNhbyBJc29tdXJhJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMsXG4gICAgICAgICAgICB4OiAtMjc3LjE2NzM5Njg3MzM0MTksXG4gICAgICAgICAgICB5OiAtNjkuMTYzMTM1OTAzNTg3NjlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNDkwMjY3MS0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdNYXNhc2hpIEthd2FzYWtpJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDQ0LFxuICAgICAgICAgICAgeDogMjUuNDk5ODM0OTgxNzUxNTA1LFxuICAgICAgICAgICAgeTogMTIuNDU4ODM1OTYyOTA3NzY4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzUxMTc4MzgtMScsXG4gICAgICAgICAgICBuYW1lOiAnTWF0dGhldyBBLiBQYWxtZXInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjEzLFxuICAgICAgICAgICAgeDogMTExLjg0NDQwNzE5NTEyODcxLFxuICAgICAgICAgICAgeTogMTcuNTUzNTIyNDM4NTQ3MzFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjU3NzcyNi0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdNYXR0aGV3IFMuIE1hbGRlbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxNSxcbiAgICAgICAgICAgIHg6IC04OS43NzI4MTcxNTc2MjExMixcbiAgICAgICAgICAgIHk6IC0yMTIuNTIwMDA5OTQ4MDc0NVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NjY1NjU1LTInLFxuICAgICAgICAgICAgbmFtZTogJ01pY2hhZWwgQS4gTXllcicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAzLFxuICAgICAgICAgICAgeDogLTIyMi4xNTQ4OTg0MjY2Mjc4LFxuICAgICAgICAgICAgeTogLTkxLjg4MzcwNzc5OTg3MTI1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU2MzI0MzItNCcsXG4gICAgICAgICAgICBuYW1lOiAnTWljaGFlbCBFLiBTZXRzZXInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNDYsXG4gICAgICAgICAgICB4OiAyMzYuMTQ1MzQ4NjkwNTkxNSxcbiAgICAgICAgICAgIHk6IC0yOS41MzMwNDM0Mzc0MTY2NzZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTMwNjYyMy0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdNaWNoYWVsIEYuIFRvbWFzY28nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogODksXG4gICAgICAgICAgICB4OiAtMTM2LjM1MDM0MDIyMzAxOTI2LFxuICAgICAgICAgICAgeTogMTY2Ljg3Mzc2Nzg2MDk1MzYyXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY2MDY3NDQtMScsXG4gICAgICAgICAgICBuYW1lOiAnTWljaGFlbCBHLiBNaWt1cmFrJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDE0LFxuICAgICAgICAgICAgeDogMTQzLjA2MTA3MTIzODI4Nzg3LFxuICAgICAgICAgICAgeTogMjAzLjY4NjUwMDMwODY0Njg2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzYyNjQwODctMScsXG4gICAgICAgICAgICBuYW1lOiAnTWljaGFlbCBQLiBXaGl0bWFuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEzNCxcbiAgICAgICAgICAgIHg6IDg4LjMxMzMwNzkwOTg4ODIyLFxuICAgICAgICAgICAgeTogMjM3LjEwNDc2NTI4MDU4NDIyXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY2NjU2NDgtMicsXG4gICAgICAgICAgICBuYW1lOiAnTWljaGFlbCBUc3VuZ2hzaSBZdScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyLFxuICAgICAgICAgICAgeDogNy4zMDQ1NTk3NDExODgxMDA1LFxuICAgICAgICAgICAgeTogLTEwMS42Mjg5MzM0Njk4NjMyM1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2MDgxNTE4LTEnLFxuICAgICAgICAgICAgbmFtZTogJ01pY2hlbCBLLiBCb3dtYW4tQW11YWgnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNTYsXG4gICAgICAgICAgICB4OiAxNTMuNTU4MDU3MDMyOTI2NzQsXG4gICAgICAgICAgICB5OiAyNzguNzU4NDE2MzU5MDQwM1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc0MjI0NzI1LTEnLFxuICAgICAgICAgICAgbmFtZTogJ01pY2hpbyBLYWRvdGEnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTczLFxuICAgICAgICAgICAgeDogNzAuMjUyNDkxMTAwNjcwMTEsXG4gICAgICAgICAgICB5OiAyNjAuMTc2MzA2ODQ1MDA3ODRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjg1MDk0OS0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdNaWtlIE15ZXInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMSxcbiAgICAgICAgICAgIHg6IDIwMC45ODQxMDAyNzI5MDY3NyxcbiAgICAgICAgICAgIHk6IC0xNjUuMTgwMDk5NDE1OTE4N1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1MjYxMDM3LTInLFxuICAgICAgICAgICAgbmFtZTogJ01pbiBaaHUnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTE5LFxuICAgICAgICAgICAgeDogMTg3LjIxNzg3OTkwNTE5NDQ1LFxuICAgICAgICAgICAgeTogMTE5LjE4MDUyMzIyMjQxMTI0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY3MzIxMDAtNCcsXG4gICAgICAgICAgICBuYW1lOiAnTWluZ3RlIEouIENoZW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMSxcbiAgICAgICAgICAgIHg6IC03NC44OTM5NjgyMTEzNTA1NCxcbiAgICAgICAgICAgIHk6IC0xNDQuNDgxNTEwMTE4NDA5ODZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTE3NjUwMi0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdNaXRjaGVsbCBKLiBQYWxtZXInLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNDAsXG4gICAgICAgICAgICB4OiAzMTUuNzkwOTI2MjEzMzc1MzcsXG4gICAgICAgICAgICB5OiAtNTguNzk2NjY5Mzk0MTk3NjNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNzM4NTIyNC0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdNb3RvaGlrbyBZb3NoaWRhJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDUsXG4gICAgICAgICAgICB4OiAtMjMxLjE4NzY4MzI0ODQ3NDQzLFxuICAgICAgICAgICAgeTogLTExNi40NTEwNzc1Njc5MTI3MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1OTE4MTU5LTEnLFxuICAgICAgICAgICAgbmFtZTogJ011bmRpIEZvbXVrb25nJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEyLFxuICAgICAgICAgICAgeDogLTIyMS42MjUyNjgxNTM1MzE4NixcbiAgICAgICAgICAgIHk6IC0yMDEuNzUzMTczODgyNjU0NzVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNzYzMjk4NS0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdOYW5jeSBUYXlsb3InLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNSxcbiAgICAgICAgICAgIHg6IDUwLjAxNTg4NjQ5Mjk1Njg0NSxcbiAgICAgICAgICAgIHk6IDIyNy4yNzU5NTQwNzgwNDk3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzc0NjgzMDQtMScsXG4gICAgICAgICAgICBuYW1lOiAnTm9idXl1a2kgS2FqaScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxNixcbiAgICAgICAgICAgIHg6IDQxLjgyMjM3NjA4MjE2MTY5NixcbiAgICAgICAgICAgIHk6IDUyLjUxNDI0Njc1Mjg1NDI1NVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc3MjA1NzE2LTUnLFxuICAgICAgICAgICAgbmFtZTogJ05vcmloaXRvIFNvbmUnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTksXG4gICAgICAgICAgICB4OiAyNjkuMTE1MDY1NTY3MzE0LFxuICAgICAgICAgICAgeTogNzAuMDEyMjQ4MzYyNDkzNThcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTM1ODUxNC0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdQYXVsIE0uIE1lYWRvd3MnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNzAsXG4gICAgICAgICAgICB4OiAtMTcxLjI2OTc1NTMxNjM4NDcsXG4gICAgICAgICAgICB5OiAyNTYuNTQ3OTQzOTA4ODcxNzNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjU1ODM1MS0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdQYXVsIFYuIEdvb2RlJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDE1NCxcbiAgICAgICAgICAgIHg6IC0yMzAuMTYxMTQxOTYzOTA5MzYsXG4gICAgICAgICAgICB5OiAtMTMuNDEwMzE0ODQ1MDAxOTEzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY3MTE1NjUtMScsXG4gICAgICAgICAgICBuYW1lOiAnUGF2aXRyYSBTdWJyYW1hbmlhbScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyMCxcbiAgICAgICAgICAgIHg6IC02LjM3Mjc0ODM0Nzk0NzMzOCxcbiAgICAgICAgICAgIHk6IC0yOTcuOTY3MDI2NDkwOTA2OFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICdENDIzNzYxLTMnLFxuICAgICAgICAgICAgbmFtZTogJ1BldGVyIEhvbmcnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjUsXG4gICAgICAgICAgICB4OiAtMjA3LjAyOTEzNDQ0NDU4NzU2LFxuICAgICAgICAgICAgeTogMTEzLjIwNDQ0NzcyMDc3NDZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjE1Mjk4Ny0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdQZXRlciBNYXJkaWxvdmljaCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxMTAsXG4gICAgICAgICAgICB4OiAtMTEzLjcwNTQxNDYyNzYzNDE0LFxuICAgICAgICAgICAgeTogLTcxLjYzODY2ODc4NDQ4OTI4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU4NzMwOTYtMScsXG4gICAgICAgICAgICBuYW1lOiAnUGV0ZXIgUy4gTGltJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDE5LFxuICAgICAgICAgICAgeDogLTQxLjQ5NzE1NzU5OTQ3NzksXG4gICAgICAgICAgICB5OiAtMjI5Ljg2MzQ3Mzg0ODYzMDhcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjczMjExMS00JyxcbiAgICAgICAgICAgIG5hbWU6ICdQZXRlciBTaWFtIFN5IExpbSBJSUknLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMSxcbiAgICAgICAgICAgIHg6IC0xMTkuNjg3NzYwODcxODEyOTEsXG4gICAgICAgICAgICB5OiAtMjY0Ljc0NDExNTMxNDkyNDJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjg1MDg5NS0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdQZXRlciBTaWFtIFN5IExpbSwgSUlJJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMsXG4gICAgICAgICAgICB4OiAtMTM3LjUxMzI3ODYxODY4OTkyLFxuICAgICAgICAgICAgeTogLTI1My4wNTAxNTI2MzQxNjAxM1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc3MTU5NzUwLTQnLFxuICAgICAgICAgICAgbmFtZTogJ1BoaWxpcCBSb3knLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNDUsXG4gICAgICAgICAgICB4OiAtNTUuOTE1MzMxODM3MzM0NTg0LFxuICAgICAgICAgICAgeTogMjY1LjQ1MjczOTk4NTkwNTlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjEwMzAzMy03JyxcbiAgICAgICAgICAgIG5hbWU6ICdQaGlsbGlwIEpvaG4gUGxhbnRlJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDc2LFxuICAgICAgICAgICAgeDogLTg5LjU2MTcyNjM0MjczOTM4LFxuICAgICAgICAgICAgeTogMTI4LjQ5MzU5OTU0MDIwOTM3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU5Nzg4MjktMScsXG4gICAgICAgICAgICBuYW1lOiAnUGktWXUgQ2h1bmcnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTUsXG4gICAgICAgICAgICB4OiA3OS4wMzMzMDMwOTc2ODMzMyxcbiAgICAgICAgICAgIHk6IC0xNjYuODk2MjAzMDE0MDI2OTVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjA5MjA4My0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdQcmFzaGFudCBDaGF0dGVyamVlJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEyLFxuICAgICAgICAgICAgeDogLTEyNy45ODE2NjI0ODk3ODA0NSxcbiAgICAgICAgICAgIHk6IC0yMjYuMDk1OTAzMjI5ODMwNjdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNzM0MDQxMS0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdSYWNoYWVsIEwuIENvb2snLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMSxcbiAgICAgICAgICAgIHg6IDE0NS41ODE2NDM0OTUzNjg1LFxuICAgICAgICAgICAgeTogLTE4NS45MTE1MjI3ODQ4MjUxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzQ4NzI2MDMtMScsXG4gICAgICAgICAgICBuYW1lOiAnUmFscGggU3RlYXJucycsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA4MixcbiAgICAgICAgICAgIHg6IC0xNy42MzgyNjExMzk3NDAwNzcsXG4gICAgICAgICAgICB5OiAzMTEuODc0NDAwOTYwMTYyMzVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjgzNjU0MC02JyxcbiAgICAgICAgICAgIG5hbWU6ICdSYW5keSBIb2ZmbWFuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDY2LFxuICAgICAgICAgICAgeDogLTk2LjY3OTE1MDYyMjcxNTIzLFxuICAgICAgICAgICAgeTogLTE4Ljg2MzI2NzY0MjMzODM1N1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc0Nzk4NTk0LTEnLFxuICAgICAgICAgICAgbmFtZTogJ1JpY2hhcmQgQS4gSGlsbHN0ZWFkJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDU2LFxuICAgICAgICAgICAgeDogMjIwLjk0MDQzMDQzMjU4ODcsXG4gICAgICAgICAgICB5OiAxNTUuOTIxMjQ5MzIxNzE3MVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1MDk3MTIyLTInLFxuICAgICAgICAgICAgbmFtZTogJ1JpY2hhcmQgRS4gUHVydmlzJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDIyLFxuICAgICAgICAgICAgeDogLTIzMS42MjIxMTczNDg1MzEyLFxuICAgICAgICAgICAgeTogNTguNTMyNzg4NTkzNDA2NDY1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzYyNjg4MDMtMycsXG4gICAgICAgICAgICBuYW1lOiAnUmljaGFyZCBHb3JtYW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTAsXG4gICAgICAgICAgICB4OiA3Ni43MTY2NzQzOTIyODIwMixcbiAgICAgICAgICAgIHk6IC0yNDcuNDA3NTY4NDc1NDMzNjZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTI3MTU0My0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdSaWNoYXJkIEwuIEdyYW50JyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDIyLFxuICAgICAgICAgICAgeDogMTA4LjM3NzkwMjYxNjM4MTU2LFxuICAgICAgICAgICAgeTogLTEwOS41MzQyOTc3NDAxMTIwNVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2MDkyMDgzLTEnLFxuICAgICAgICAgICAgbmFtZTogJ1JvYmVydCBBLiBCcm9kZXJzZW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjEsXG4gICAgICAgICAgICB4OiAtMTE2Ljc4Njc3MzI5MzgwMzMyLFxuICAgICAgICAgICAgeTogLTIxMS43NDMxMjE3Mjc1NDg5OFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1ODczMDk2LTInLFxuICAgICAgICAgICAgbmFtZTogJ1JvYmVydCBCcm9kZXJzb24nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMyxcbiAgICAgICAgICAgIHg6IDMyLjQ3MDU2NDM2MjcxMDMzNCxcbiAgICAgICAgICAgIHk6IC0yMTIuMzU2NTAzNzYxNjkwNFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1OTYzOTUzLTEnLFxuICAgICAgICAgICAgbmFtZTogJ1JvYmVydCBDcmFtJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMsXG4gICAgICAgICAgICB4OiAzOS43MzE2NTYyMjgwMzYwNDQsXG4gICAgICAgICAgICB5OiAtMTU5LjcwMTE3NDE5NjYyODUzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzQzNjIzODctMScsXG4gICAgICAgICAgICBuYW1lOiAnUm95IENsYXJrJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDIzLFxuICAgICAgICAgICAgeDogLTE0My4zODA2NTQ2NzgwNTU4MyxcbiAgICAgICAgICAgIHk6IC04My4xODY0NjkzMjMzMjg5NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1NDE3NzcwLTgnLFxuICAgICAgICAgICAgbmFtZTogJ1J5byBIYXlhc2hpJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDcxLFxuICAgICAgICAgICAgeDogMTA5LjU2OTAwMjcwMTgxMzIyLFxuICAgICAgICAgICAgeTogOTQuMjY5MDc3NjE5MzMzOVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2MDgxODc1LTInLFxuICAgICAgICAgICAgbmFtZTogJ1NhbmpveSBDaGF0dGVyamVlJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDIsXG4gICAgICAgICAgICB4OiAtMTY4LjU1MzUxNzE5MzczMjc0LFxuICAgICAgICAgICAgeTogLTU1LjAwMzkxMzI3NzEwMDcyXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU0MTYyNTUtMScsXG4gICAgICAgICAgICBuYW1lOiAnU2NvdHQgQS4gQmVyZ2VtYW5uJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEwNixcbiAgICAgICAgICAgIHg6IDIzNi45ODQzNjU4NDM3ODMxLFxuICAgICAgICAgICAgeTogLTE1NC41Mzg1MzI4OTM2MzE0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY3MjQzOTktMicsXG4gICAgICAgICAgICBuYW1lOiAnU2hhbmthciBTLiBOYXRoYW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMSxcbiAgICAgICAgICAgIHg6IDguMDE3NjUxMzI2NzEzODAzLFxuICAgICAgICAgICAgeTogLTEzMi42NzQzOTIwNTYzMjY2NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2ODA0MzMwLTEnLFxuICAgICAgICAgICAgbmFtZTogJ1NoYW5ub24gSm9uZXMnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNSxcbiAgICAgICAgICAgIHg6IDcxLjEzMjA2OTgxODQ0NjMxLFxuICAgICAgICAgICAgeTogLTI1OC40OTkzNDIzOTk0MTM3NlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2ODg3NzM2LTQnLFxuICAgICAgICAgICAgbmFtZTogJ1NoYW50aGkgR2FuZXNhbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA0LFxuICAgICAgICAgICAgeDogLTM2Ljk5NDg4MjEwNzU2NDA3NCxcbiAgICAgICAgICAgIHk6IDE3Ni40NDM1MjEwMzk1MzE2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzYxODM1ODktMScsXG4gICAgICAgICAgICBuYW1lOiAnU2hpbiBLaW0nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNDcsXG4gICAgICAgICAgICB4OiAtMjg3LjY3MjY2NDY2Njc5OCxcbiAgICAgICAgICAgIHk6IDQ1LjgxMjYxMTY0MTM5MDY3NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NjU0MDMyLTQnLFxuICAgICAgICAgICAgbmFtZTogJ1Nvbmd4aWFuZyBXZWknLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNyxcbiAgICAgICAgICAgIHg6IDEzMi4zMTk5MTcxMDQ0MDgyLFxuICAgICAgICAgICAgeTogODYuMzMzNjkyMDE4MTE4NzVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjc4MzUyNC0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdTdGVwaGVuIEMuIEFuZGVyc29uJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEsXG4gICAgICAgICAgICB4OiA2Mi42MjAwNzIwMTM5NTA1LFxuICAgICAgICAgICAgeTogMzAyLjQ5NjE4ODU3MDgzMDI3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU3NzQzNTctMScsXG4gICAgICAgICAgICBuYW1lOiAnU3RldmVuIE0uIEhvZmZiZXJnJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEwNixcbiAgICAgICAgICAgIHg6IC0yOTguMTQ5ODE1Nzg5Mzk5NDQsXG4gICAgICAgICAgICB5OiA4OC41NjgwMzUxMDQ1MDM5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU1OTQxNjktMicsXG4gICAgICAgICAgICBuYW1lOiAnU3RldmVuIFAuIEhvdGVsbGluZycsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAzMDYsXG4gICAgICAgICAgICB4OiAxNzguMzEzNTYyMjQ0MjA3NTYsXG4gICAgICAgICAgICB5OiAtMjU1LjQzMDQyNTA3NDgwNTc4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY1MjYzMzUtMicsXG4gICAgICAgICAgICBuYW1lOiAnU3VzYW4gTS4gVHJleXonLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTUsXG4gICAgICAgICAgICB4OiAtMjc5LjIzMzg0NzEzMDQxODMsXG4gICAgICAgICAgICB5OiAxMzkuOTkyNTczMzY3Mjc5NDVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjYzOTI0Ni0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdUYXRzdXlhIEhvbmRhJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEwOSxcbiAgICAgICAgICAgIHg6IDI1MC4wNjAyMDc3MjAxNjg0LFxuICAgICAgICAgICAgeTogNjYuMzM0MDEzMjIyNjg2MzdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTM0NTYzOS02JyxcbiAgICAgICAgICAgIG5hbWU6ICdUYXRzdXlhIEl3YXNha2knLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTE2LFxuICAgICAgICAgICAgeDogODYuMzMzNjEzNDQ3MTc3MyxcbiAgICAgICAgICAgIHk6IDE1Ny44MjU5MzQ2MjA2MDc0M1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2MzI0NTY4LTEnLFxuICAgICAgICAgICAgbmFtZTogJ1RoYW5oIERpZWMnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMyxcbiAgICAgICAgICAgIHg6IC03OC4wMzE0NzQ2OTEyNTE4NCxcbiAgICAgICAgICAgIHk6IC0yNzIuNTg4NjYwNjg2MTcxOFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1NzE1NDUwLTInLFxuICAgICAgICAgICAgbmFtZTogJ1Rob21hcyBNLiBSb3Rod2VpbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxMyxcbiAgICAgICAgICAgIHg6IC0xOS4xNjUxMDEwMTMyNDE0OTMsXG4gICAgICAgICAgICB5OiAtMjA4LjE4MDQ2NDA4NDA2MTlcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnUkUzOTg0MS00JyxcbiAgICAgICAgICAgIG5hbWU6ICdUb2RkIFBoaWxsaXAgT21haXRzJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDcsXG4gICAgICAgICAgICB4OiAxMjkuOTkzMDY4NTQ2MjUwMDcsXG4gICAgICAgICAgICB5OiAtMjIuMDQ5OTAxNjE1MDM4NDA4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzY4NTA5NDktMycsXG4gICAgICAgICAgICBuYW1lOiAnVG9tIEFic2hpcmUnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMSxcbiAgICAgICAgICAgIHg6IDE0MC4yNjU2NjkwMjcxNTIyOCxcbiAgICAgICAgICAgIHk6IC0xNTMuMzkxNzI5NDg0Mzk1OFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc3MDYxMDE0LTYnLFxuICAgICAgICAgICAgbmFtZTogJ1Rvc2hpbyBLYW1peWEnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjUsXG4gICAgICAgICAgICB4OiA5LjEyNjI3MTI3NjI1NDM3NyxcbiAgICAgICAgICAgIHk6IDEwMS44MjI5ODYzMDU1NjMyNlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NzE4MzYxLTEnLFxuICAgICAgICAgICAgbmFtZTogJ1ZpamF5IFIuIEJhc2FuaScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA5LFxuICAgICAgICAgICAgeDogLTIwMS4zODIyNzE3MzIwNTAyNyxcbiAgICAgICAgICAgIHk6IDIwOC43NDMyNzA0OTkyNjMyOFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc2NzE4MzYxLTUnLFxuICAgICAgICAgICAgbmFtZTogJ1ZpdGFseSBTLiBSZXZzaW4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMTMsXG4gICAgICAgICAgICB4OiAtMTk4LjcwNDczMDc4MDI0OTgzLFxuICAgICAgICAgICAgeTogMTUyLjQwNTIyMTE2NjU5NDNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjk3ODkyMS0zJyxcbiAgICAgICAgICAgIG5hbWU6ICdXaWxsaWFtIEIuIFdlaXNlbmJ1cmdoLCBJSScsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxNTIsXG4gICAgICAgICAgICB4OiAyNDguMjQzOTM5MDYyOTM3MzMsXG4gICAgICAgICAgICB5OiAtOTAuMjkzNDI1MjQzNjkzMjRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNTI1Nzk3MS0yJyxcbiAgICAgICAgICAgIG5hbWU6ICdXaWxsaWFtIFAuIFZhbiBBbnR3ZXJwJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDY5LFxuICAgICAgICAgICAgeDogLTI0My41MjA5OTE5MTY3NzksXG4gICAgICAgICAgICB5OiAyMy40MTc2Nzk5Nzc5MTEzMjdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNjgyOTY1NS0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdYaWFvZmVpIEh1YW5nJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDUsXG4gICAgICAgICAgICB4OiA4OS45ODg3NDE2MTAzODU2LFxuICAgICAgICAgICAgeTogLTE4Ny43OTQxMzk5ODE2MzQ4M1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1MjgzNDUyLTEnLFxuICAgICAgICAgICAgbmFtZTogJ1lpLUNoaSBTaGloJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMzLFxuICAgICAgICAgICAgeDogLTMyMy43MTM1OTY0MTg3MTE2MyxcbiAgICAgICAgICAgIHk6IDIzLjkwODkzNjU4NjQ5NDA4NlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaW52ZW50b3InLFxuICAgICAgICAgICAgaWQ6ICc1OTAxODk2LTEnLFxuICAgICAgICAgICAgbmFtZTogJ1lvcmFtIEdhbCcsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA3NixcbiAgICAgICAgICAgIHg6IC0xMDcuMjMyMjU1MTA2MjA0ODksXG4gICAgICAgICAgICB5OiAxMjQuNzM1NDE3MzkwMjYxMTJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2ludmVudG9yJyxcbiAgICAgICAgICAgIGlkOiAnNDU3MzQ3Mi0xJyxcbiAgICAgICAgICAgIG5hbWU6ICdZb3NoaWhpcm8gSXRvJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDE4OSxcbiAgICAgICAgICAgIHg6IDExOC4yMDI1MDkzODM4Mzg5MixcbiAgICAgICAgICAgIHk6IDI4Ny45NjE1MzI2NDM0MjgzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnZlbnRvcicsXG4gICAgICAgICAgICBpZDogJzU4NTU5NTctMScsXG4gICAgICAgICAgICBuYW1lOiAnWmhlbmcgWXVhbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA1OCxcbiAgICAgICAgICAgIHg6IDEzOC4wOTIwNjk1MjE3MzE5LFxuICAgICAgICAgICAgeTogMTI0LjA2NDQwMTE3OTc2OTNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnX1o1OWFVQkd0WjlQNVF6ZEZpS21aJyxcbiAgICAgICAgICAgIG5hbWU6ICdBYmxhaXNlIExpbWl0ZWQnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMixcbiAgICAgICAgICAgIHg6IC0xOTAuNDgyMTEzMDAxMDc0MixcbiAgICAgICAgICAgIHk6IC0yMzYuNTM2MTk2OTg1Mzk0ODdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnXzR6TzJCYzA4eDU2WGpEcTVUZUJwJyxcbiAgICAgICAgICAgIG5hbWU6ICdBY2NlbnR1cmUgTExQJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDIxMCxcbiAgICAgICAgICAgIHg6IDE3Mi44NjYwMjMwMDgzMzk1NyxcbiAgICAgICAgICAgIHk6IDI1My43MDMzMDgxNTQxNjU4NVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfYndxODNqYmNjS3FGNGpKclBjYVInLFxuICAgICAgICAgICAgbmFtZTogJ0FkdmFuY2VkIEJpb25pY3MgQUcnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNjMzLFxuICAgICAgICAgICAgeDogLTE3Ni45MTQ2ODQ3Mjk4MTU1NSxcbiAgICAgICAgICAgIHk6IDIzMy42MzM4ODM1MjU5NjE5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ19JRFViUzA5WlIwSmhKOGpGRXB0VCcsXG4gICAgICAgICAgICBuYW1lOiAnQXBwbGUgSW5jLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyMTAyMyxcbiAgICAgICAgICAgIHg6IDE1MS42ODI0NjY0MTU3ODg2NyxcbiAgICAgICAgICAgIHk6IC0yMjIuMTI0ODc0ODgxNDQ4OVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfRWhZRlBJSkVtWVFZUm9ZdnNucHknLFxuICAgICAgICAgICAgbmFtZTogJ0Nhbm9uIEthYnVzaGlraSBLYWlzaGEnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNzQ1OTYsXG4gICAgICAgICAgICB4OiA0OS40ODIyMzkyMDU3MzI5NixcbiAgICAgICAgICAgIHk6IDEzNC4wOTIyODg3MzExNTU5MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfSW1lZzlXNlAxVEU2STJRdXRTNHknLFxuICAgICAgICAgICAgbmFtZTogJ0Nhc2lvIENvbXB1dGVyIENvLiwgTHRkLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA0NTIxLFxuICAgICAgICAgICAgeDogLTE3OS44MTc1OTM0MTIwNTE1LFxuICAgICAgICAgICAgeTogLTE0Mi43MTgyODg1MjkyMTA0NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfOGNzTWd0Z25OMG1SRVpwTlAxSmknLFxuICAgICAgICAgICAgbmFtZTogJ0NlcmVicmFsIFZhc2N1bGFyIEFwcGxpY2F0aW9ucywgSW5jLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA0LFxuICAgICAgICAgICAgeDogMjY4LjgwMDQ1NDE0NDQzODcsXG4gICAgICAgICAgICB5OiAxNjQuNTIzNjk0NzgzMTU2ODNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnXzBlVHIzWElCakFLcFhrQzY4MjNyJyxcbiAgICAgICAgICAgIG5hbWU6ICdDZXJtZXQsIEluYy4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNyxcbiAgICAgICAgICAgIHg6IC00OC40MDM3Mjc2ODk1NTE1NixcbiAgICAgICAgICAgIHk6IDIwNS40NDAyNTg4MzgyNjA2NlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfMTA3V0tOUGJ2RERLclpCbG13OFUnLFxuICAgICAgICAgICAgbmFtZTogJ0NvbnRpZ28gU29mdHdhcmUsIEluYy4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMixcbiAgICAgICAgICAgIHg6IDI5OS4zMTc0MzU5MDk1OTUzLFxuICAgICAgICAgICAgeTogNDguMDM0OTI0Njk4MDA4MzNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnX3BwRWxrRXRRdkZ0RzZBNDc1NFVJJyxcbiAgICAgICAgICAgIG5hbWU6ICdFYXN0bWFuIEtvZGFrIENvbXBhbnknLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjE1MzksXG4gICAgICAgICAgICB4OiAyMTEuMzc1MjU5NDEzNTI3ODYsXG4gICAgICAgICAgICB5OiAyMTcuNTgyODc3ODY1MzIxMDhcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnXzBqUFdNN1lxaHRYbTBsbTNmbTFZJyxcbiAgICAgICAgICAgIG5hbWU6ICdFTUMgQ29ycG9yYXRpb24nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNDk3NixcbiAgICAgICAgICAgIHg6IC0xODkuNzAxNTYyNzQ4Mzg5NzMsXG4gICAgICAgICAgICB5OiAtMTEwLjAxNTU5ODkwNDM3NjI4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ19XaDJjbk9JektsaHpqdXFWbU9xWScsXG4gICAgICAgICAgICBuYW1lOiAnRW5lY3RvIEFCJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEsXG4gICAgICAgICAgICB4OiAyNDMuNjc2NTQxMjI0NjI1OCxcbiAgICAgICAgICAgIHk6IC0xMzEuMjA5MDMxMTg2NjA5OVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfWHU2Z1hTc2x0REJaVEFoTUZCV0QnLFxuICAgICAgICAgICAgbmFtZTogJ0V0aGljb24gRW5kby1TdXJnZXIsIEluYy4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMyxcbiAgICAgICAgICAgIHg6IDIyNC43MTI0MzU4MDMxNjQ3NyxcbiAgICAgICAgICAgIHk6IDM5LjYwOTg0MjUyNTQ3ODY1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ19OZktCQjlUV0Y0QXM4VFNhc0o1bicsXG4gICAgICAgICAgICBuYW1lOiAnRXRoaWNvbiBFbmRvLVN1cmdlcnksIEluYy4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMjE5NCxcbiAgICAgICAgICAgIHg6IDE3MS4wNzQzNzAyMjQ3NjY0LFxuICAgICAgICAgICAgeTogLTU1LjAzNjgwNzA5ODk0NjA5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ192UzZyY0t5YzJxTjNyRmRYMFAySycsXG4gICAgICAgICAgICBuYW1lOiAnSGV3bGV0dC1QYWNrYXJkIERldmVsb3BtZW50IENvbXBhbnksIEwuUC4nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMzUxMTgsXG4gICAgICAgICAgICB4OiAtOTAuMzEwMzk2ODUyNjY5NCxcbiAgICAgICAgICAgIHk6IC01MC4wNTIxNjI4OTI5NDU0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ3Blcl90WDJlMnlWTGd5TmdvYkVweldLVCcsXG4gICAgICAgICAgICBuYW1lOiAnSGlkZW8gT2hubycsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA0LFxuICAgICAgICAgICAgeDogLTM5LjUzNjEyODQyNzA0NDM2LFxuICAgICAgICAgICAgeTogLTIwLjI3MDI3MzM1NDk3NzI1MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfTUt2Ym5DY3lQdWRYZXhVdnNTd0YnLFxuICAgICAgICAgICAgbmFtZTogXCJIb2xkZW4ncyBGb3VuZGF0aW9uIFNlZWRzLCBJbmMuXCIsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA4MyxcbiAgICAgICAgICAgIHg6IDI0MC4wOTk5MDU5ODUxOTA4LFxuICAgICAgICAgICAgeTogLTIwNi4wMjYzNzYxNDgwNjEyNVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfZkEwYXpxb0JHRXpvUG95ODVKeXYnLFxuICAgICAgICAgICAgbmFtZTogJ0lOVFVJVElWRSBTVVJHSUNBTCBPUEVSQVRJT05TLCBJTkMuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEyMDIsXG4gICAgICAgICAgICB4OiAxNS4zNzg4NjI4NjU0NDc2MjQsXG4gICAgICAgICAgICB5OiAyOTAuMjE3ODIyMjg3NTIyM1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfRHR0Wk12a3l2VzNmVjZvQ1VNVEYnLFxuICAgICAgICAgICAgbmFtZTogJ0phcGFuIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgQWdlbmN5JyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDExNTcsXG4gICAgICAgICAgICB4OiAxMy4xNzM0NTA3MzEwNjEwODYsXG4gICAgICAgICAgICB5OiA1Ni40ODYxNDA5OTU3Nzc2N1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfYzV2eUJ6SzdpaWtrVTREalFGSFQnLFxuICAgICAgICAgICAgbmFtZTogJ0phcGFuIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgQ29ycG9yYXRpb24nLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNDE4LFxuICAgICAgICAgICAgeDogNjMuNTYzMTcwNTgyNzUsXG4gICAgICAgICAgICB5OiA2LjI3MzY3MzUxOTA5MDc1M1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfRnZndkdGZThKWjBpWWxaODB3ZUYnLFxuICAgICAgICAgICAgbmFtZTogJ0tvbmlua2xpamtlIFBoaWxpcHMgRWxlY3Ryb25pY3MgTi5WLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxNzEzOCxcbiAgICAgICAgICAgIHg6IC0xMjMuMjQxNzkxMjM3OTAxOTEsXG4gICAgICAgICAgICB5OiAyNzAuOTk3NDY1NDg0NDEwMTZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnX1hjcUNqdFQ4cGk4TWszVWpRbER0JyxcbiAgICAgICAgICAgIG5hbWU6ICdMRyBFbGVjdHJvbmljcyBJbmMuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMyNzI1LFxuICAgICAgICAgICAgeDogLTI3Ny4zNDYwMjI5OTg0NTU4LFxuICAgICAgICAgICAgeTogNy4xMzM2OTgyMjI1NDMwMVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdwZXJfRElqVVRNN2xIaERzQXoydThqaU8nLFxuICAgICAgICAgICAgbmFtZTogJ01hc2FzaGkgS2F3YXNha2knLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogMyxcbiAgICAgICAgICAgIHg6IDE5Ljg5NTQzNjU5NjY2MjkwOCxcbiAgICAgICAgICAgIHk6IC0xMC43MTcxNzgyNTA5MDA5MThcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnX0dWTWxMVmJ3Q0RTaXFQOU9nOFRuJyxcbiAgICAgICAgICAgIG5hbWU6ICdNZWR0cm9uaWMgTWluaU1lZCwgSW5jLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA4MDAsXG4gICAgICAgICAgICB4OiAtMTgzLjc0MDIzNDE5MDU3NDE3LFxuICAgICAgICAgICAgeTogMzcuNjg3MjE4NzY5ODM5MDg1XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ19RdzhFc3JOME01Mm5WUVVNNnZzVicsXG4gICAgICAgICAgICBuYW1lOiAnTW9uc2FudG8gVGVjaG5vbG9neSBMTEMnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogODY4OSxcbiAgICAgICAgICAgIHg6IDE5Ljc2MzkwMTQ4ODM1MjY3MyxcbiAgICAgICAgICAgIHk6IDE5Ni42MjIzNjg2MjU4OTc3NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfajVVNUlFYTFGSWJndHI3aU5zUU0nLFxuICAgICAgICAgICAgbmFtZTogJ011cmF0YSBNYW51ZmFjdHVyaW5nIENvLiwgTHRkLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA3MzQyLFxuICAgICAgICAgICAgeDogODcuNjQ4NzgxOTcxMDg4MTcsXG4gICAgICAgICAgICB5OiAyOTEuMTAyMzE5NTg3MjM1MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfMXA0RldFb0l0anlLYndUcENKb2wnLFxuICAgICAgICAgICAgbmFtZTogJ05ldHdvcmsgQXBwbGlhbmNlLCBJbmMuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDUzMCxcbiAgICAgICAgICAgIHg6IC0yMjIuMjkyMDM3MjExODA1MixcbiAgICAgICAgICAgIHk6IDE0OS4wODM3MjE1NTI3MjA2MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfQVRPV0hkNEdHYW9oMTR6dXRYcTcnLFxuICAgICAgICAgICAgbmFtZTogJ1Bvd2VyIE1lZGljYWwgSW50ZXJ2ZW50aW9ucywgSW5jLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAzMCxcbiAgICAgICAgICAgIHg6IDEwOC44ODExMDM5OTc0OTcwNixcbiAgICAgICAgICAgIHk6IDE4Ni44NTMzODc4MjYyNjU5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ19rOFY3YzVnbm1DN1NWbXVwNVZ1NycsXG4gICAgICAgICAgICBuYW1lOiAnUmFpbmRhbmNlIENvbW11bmljYXRpb25zLCBJbmMuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDMsXG4gICAgICAgICAgICB4OiA2NS4xNTcxNzY5NDI2NDQxNyxcbiAgICAgICAgICAgIHk6IDgzLjQxOTQzNjM3ODIwNDAxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ18yNDJoSmVnd2ZRQ2VQOWhzZndwVycsXG4gICAgICAgICAgICBuYW1lOiAnUmlnaHQgTm93IFRlY2hub2xvZ2llcywgSW5jLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyLFxuICAgICAgICAgICAgeDogMTg2LjgxOTY1MjgxNjAyMjY4LFxuICAgICAgICAgICAgeTogLTE4My40MDE3MDI1MTQ1ODUzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ182cjl0N1pBNllUMDMxT2Q0a01QZycsXG4gICAgICAgICAgICBuYW1lOiAnUmlnaHRub3cgVGVjaG5vbG9naWVzLCBJbmMuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEwLFxuICAgICAgICAgICAgeDogLTIzMS43MzYxNTg4MDEyMjIzNixcbiAgICAgICAgICAgIHk6IC03NC4wOTkxNjk3MDkzNDI1MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfMklGOTd6VnltU3VyYVNuVUFYbXEnLFxuICAgICAgICAgICAgbmFtZTogJ1NhbnlvIEVsZWN0cmljIENvLiwgTHRkLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA4MzgzLFxuICAgICAgICAgICAgeDogLTI4My45MDI4MjUzNjA4OTQ2LFxuICAgICAgICAgICAgeTogLTEyNy44NzI1MzM4MTk2OTE3MVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfcGxaYkx4aXlzRVNiYUk5cE9leW0nLFxuICAgICAgICAgICAgbmFtZTogJ1NFTUlDT05EVUNUT1IgRU5FUkdZIExBQk9SQVRPUlkgQ08uLCBMVEQuJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDEzODg1LFxuICAgICAgICAgICAgeDogMjU2LjIyODM5ODc2Mzc5MDUsXG4gICAgICAgICAgICB5OiAxMjQuNDYxNDE2OTYwNjY1MjJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnX0NNV2NvQ0pXUE9maXNMV3JLdnlkJyxcbiAgICAgICAgICAgIG5hbWU6ICdTaGFycCBLYWJ1c2hpa2kgS2Fpc2hhJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDIyNTQwLFxuICAgICAgICAgICAgeDogNC4wOTU1NjA0MDY0ODI2NzEsXG4gICAgICAgICAgICB5OiAtMzIuMTM2MTg0ODI1Nzk5MzhcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnXzgzTk5nSnJQNWxrSU44NzZrTmVHJyxcbiAgICAgICAgICAgIG5hbWU6ICdTaWViZWwgU3lzdGVtcywgSW5jLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyOTgsXG4gICAgICAgICAgICB4OiAtMzMuOTE5OTQ3NTIzMTQ4NDIsXG4gICAgICAgICAgICB5OiAtMjEyLjU5OTQyODg5ODg4MTFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnX0o4Vm5BekZxRWpXZ3hxNGV2NzF6JyxcbiAgICAgICAgICAgIG5hbWU6ICdTdGFyaW9uIEluc3RydW1lbnRzIENvcnBvcmF0aW9uJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDIwLFxuICAgICAgICAgICAgeDogMTc4Ljk4NDE2NjU0MTE2MzQ2LFxuICAgICAgICAgICAgeTogMTY5LjU0ODIxMjExMTkwMjc2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ19tMnROUEprQTJnMUFXT2M3dXpTMScsXG4gICAgICAgICAgICBuYW1lOiAnVGhlcmFTZW5zZSwgSW5jLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiA1MyxcbiAgICAgICAgICAgIHg6IC0xMjUuOTE0NTk5ODQ2MDg1MSxcbiAgICAgICAgICAgIHk6IDEzMi40MTczOTA1NDUxNjExN1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnYXNzaWduZWUnLFxuICAgICAgICAgICAgaWQ6ICdvcmdfSmpyTTZVbWVPWTBRNU1tb05pUDgnLFxuICAgICAgICAgICAgbmFtZTogJ1RPS1lPIElOU1RJVFVURSBPRiBURUNITk9MT0dZJyxcbiAgICAgICAgICAgIG51bVBhdGVudHM6IDM5NSxcbiAgICAgICAgICAgIHg6IDE4LjYxNDEzMDA4MTE2NjQ2LFxuICAgICAgICAgICAgeTogMTY1LjIxMjUzNjk5NTU0MjE0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ19ld1ZzQ3V0cFJ6RDlwVDA3a0JvRScsXG4gICAgICAgICAgICBuYW1lOiAnVHljbyBIZWFsdGNhcmUgR3JvdXAgTFAnLFxuICAgICAgICAgICAgbnVtUGF0ZW50czogNSxcbiAgICAgICAgICAgIHg6IC02Ny4yNTQzMDUyNjc0MjEwNyxcbiAgICAgICAgICAgIHk6IDMwOC42MTQ5MjgyMDQxNTc5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdhc3NpZ25lZScsXG4gICAgICAgICAgICBpZDogJ29yZ181d05Ocko0ekZRNUtROE9XbnpSQycsXG4gICAgICAgICAgICBuYW1lOiAnVW5pdGVkIFN0YXRlcyBTdXJ0aWNhbCBDb3Jwb3JhdGlvbicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAxLFxuICAgICAgICAgICAgeDogMjgyLjc4MTAwOTIyNDQzMSxcbiAgICAgICAgICAgIHk6IC01Mi45ODE1OTAxMTUwODcxNDRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2Fzc2lnbmVlJyxcbiAgICAgICAgICAgIGlkOiAnb3JnXzN2STJaNWtDMVNhU2xiVUJvT0JUJyxcbiAgICAgICAgICAgIG5hbWU6ICdXZWJFeCBDb21tdW5pY2F0aW9ucywgSW5jLicsXG4gICAgICAgICAgICBudW1QYXRlbnRzOiAyMixcbiAgICAgICAgICAgIHg6IDE4Ny4zNjc2Mzk1MTEyODcxNCxcbiAgICAgICAgICAgIHk6IDEwMS4yMDg0OTg0NzA4MDE4MVxuICAgICAgICB9XG4gICAgXSxcbiAgICBsaW5rczogW1xuICAgICAgICB7IHNvdXJjZTogJzY1MTYyMjcnLCB0YXJnZXQ6ICc1MzU4NTE0LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjUxNjIyNycsIHRhcmdldDogJzU3NTU3MzctMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTE2MjI3JywgdGFyZ2V0OiAnNTk0ODAwNi0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1MTYyMjcnLCB0YXJnZXQ6ICc2NTE2MjI3LTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjUxNjIyNycsIHRhcmdldDogJ29yZ19id3E4M2piY2NLcUY0akpyUGNhUicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTM1OTA5JywgdGFyZ2V0OiAnNjUzNTkwOS0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1MzU5MDknLCB0YXJnZXQ6ICdvcmdfMTA3V0tOUGJ2RERLclpCbG13OFUnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU0OTkwOCcsIHRhcmdldDogJzYzOTM2MDUtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTQ5OTA4JywgdGFyZ2V0OiAnb3JnXzgzTk5nSnJQNWxrSU44NzZrTmVHJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NTM1NjMnLCB0YXJnZXQ6ICc1NzE1NDUwLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU1MzU2MycsIHRhcmdldDogJzU3MTU0NTAtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTUzNTYzJywgdGFyZ2V0OiAnNjU1MzU2My0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NTM1NjMnLCB0YXJnZXQ6ICdvcmdfODNOTmdKclA1bGtJTjg3NmtOZUcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU1ODMyMCcsIHRhcmdldDogJzQ4MDk2OTctMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTU4MzIwJywgdGFyZ2V0OiAnNDg2MzQyNS0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NTgzMjAnLCB0YXJnZXQ6ICc1MDk3MTIyLTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU1ODMyMCcsIHRhcmdldDogJ29yZ19HVk1sTFZid0NEU2lxUDlPZzhUbicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTU4MzUxJywgdGFyZ2V0OiAnNTA5NzEyMi0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NTgzNTEnLCB0YXJnZXQ6ICc1MjM3MTc4LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU1ODM1MScsIHRhcmdldDogJzUyNTc5NzEtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTU4MzUxJywgdGFyZ2V0OiAnNjQyNDg0Ny0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NTgzNTEnLCB0YXJnZXQ6ICc2NTU4MzUxLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU1ODM1MScsIHRhcmdldDogJzY1NTgzNTEtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTU4MzUxJywgdGFyZ2V0OiAnNjU1ODM1MS0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NTgzNTEnLCB0YXJnZXQ6ICc2NTU4MzUxLTgnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU1ODM1MScsIHRhcmdldDogJ29yZ19HVk1sTFZid0NEU2lxUDlPZzhUbicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTYwNDYxJywgdGFyZ2V0OiAnNTkxODE1OS0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NjA0NjEnLCB0YXJnZXQ6ICc1OTE4MTU5LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU2MzE3NCcsIHRhcmdldDogJzQyNTMwNjEtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTYzMTc0JywgdGFyZ2V0OiAnNDkwMjY3MS0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NjMxNzQnLCB0YXJnZXQ6ICc0OTk3MjYyLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU2MzE3NCcsIHRhcmdldDogJzU5MjUyMjQtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTYzMTc0JywgdGFyZ2V0OiAnb3JnX0NNV2NvQ0pXUE9maXNMV3JLdnlkJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NjMxNzQnLCB0YXJnZXQ6ICdwZXJfRElqVVRNN2xIaERzQXoydThqaU8nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU2MzE3NCcsIHRhcmdldDogJ3Blcl90WDJlMnlWTGd5TmdvYkVweldLVCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTY1NTA5JywgdGFyZ2V0OiAnNDA4MjYwMi0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NjU1MDknLCB0YXJnZXQ6ICc1MDQxMDg2LTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU2NTUwOScsIHRhcmdldDogJzUzMDY2MjMtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTY1NTA5JywgdGFyZ2V0OiAnNTUzMzIzOC0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NjU1MDknLCB0YXJnZXQ6ICc1NTM0MTMyLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU2NTUwOScsIHRhcmdldDogJzU2MTY1MzItMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTY1NTA5JywgdGFyZ2V0OiAnNTcyMjk5Ny0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NjU1MDknLCB0YXJnZXQ6ICc1OTAxODk2LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU2NTUwOScsIHRhcmdldDogJzYxMDMwMzMtNycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTY1NTA5JywgdGFyZ2V0OiAnNjE3NTc1Mi05JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NjU1MDknLCB0YXJnZXQ6ICdvcmdfbTJ0TlBKa0EyZzFBV09jN3V6UzEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU3MTI4MicsIHRhcmdldDogJzYwODE1MTgtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTcxMjgyJywgdGFyZ2V0OiAnb3JnXzR6TzJCYzA4eDU2WGpEcTVUZUJwJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NzQ2MzUnLCB0YXJnZXQ6ICc1NzE1NDUwLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU3NDYzNScsIHRhcmdldDogJzU3MTU0NTAtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTc0NjM1JywgdGFyZ2V0OiAnNTk2Mzk1My0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1NzQ2MzUnLCB0YXJnZXQ6ICdvcmdfODNOTmdKclA1bGtJTjg3NmtOZUcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU3NzcyNicsIHRhcmdldDogJzY1Nzc3MjYtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTc3NzI2JywgdGFyZ2V0OiAnNjU3NzcyNi0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1Nzc3MjYnLCB0YXJnZXQ6ICc2NTc3NzI2LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU3NzcyNicsIHRhcmdldDogJzY1Nzc3MjYtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NTc3NzI2JywgdGFyZ2V0OiAnb3JnXzgzTk5nSnJQNWxrSU44NzZrTmVHJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY1ODc4MzUnLCB0YXJnZXQ6ICc2NDMzOTIxLTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjU4NzgzNScsIHRhcmdldDogJzY1MjYzMzUtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjAxMDg3JywgdGFyZ2V0OiAnNTI2MTAzNy0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2MDEwODcnLCB0YXJnZXQ6ICc2NjAxMDg3LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjYwMTA4NycsIHRhcmdldDogJ29yZ18zdkkyWjVrQzFTYVNsYlVCb09CVCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjAyMjUyJywgdGFyZ2V0OiAnNDg5MDYxMS0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2MDIyNTInLCB0YXJnZXQ6ICdvcmdfSjhWbkF6RnFFaldneHE0ZXY3MXonIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjYwNDExNycsIHRhcmdldDogJzU4NzMwOTYtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjA0MTE3JywgdGFyZ2V0OiAnNTg3MzA5Ni0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2MDQxMTcnLCB0YXJnZXQ6ICdvcmdfODNOTmdKclA1bGtJTjg3NmtOZUcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjYwNDEyOCcsIHRhcmdldDogJzYzMjQ1NjgtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjA0MTI4JywgdGFyZ2V0OiAnb3JnXzgzTk5nSnJQNWxrSU44NzZrTmVHJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2MDY3NDQnLCB0YXJnZXQ6ICc2NjA2NzQ0LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjYwNjc0NCcsIHRhcmdldDogJ29yZ180ek8yQmMwOHg1NlhqRHE1VGVCcCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjA5MTUwJywgdGFyZ2V0OiAnNTk2Mzk1My0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2MDkxNTAnLCB0YXJnZXQ6ICc2MzM2MTM3LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjYwOTE1MCcsIHRhcmdldDogJzYzMzYxMzctMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjA5MTUwJywgdGFyZ2V0OiAnb3JnXzgzTk5nSnJQNWxrSU44NzZrTmVHJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2MjE4MzQnLCB0YXJnZXQ6ICc1OTQ0NzkxLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjYyMTgzNCcsIHRhcmdldDogJzY2MjE4MzQtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjIxODM0JywgdGFyZ2V0OiAnb3JnX2s4VjdjNWdubUM3U1ZtdXA1VnU3JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NDE1MzMnLCB0YXJnZXQ6ICc0ODA5Njk3LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY0MTUzMycsIHRhcmdldDogJzQ4NjM0MjUtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjQxNTMzJywgdGFyZ2V0OiAnNTA5NzEyMi0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NDE1MzMnLCB0YXJnZXQ6ICdvcmdfR1ZNbExWYndDRFNpcVA5T2c4VG4nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY0NDUzMicsIHRhcmdldDogJzQxMjcyMjctMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjQ0NTMyJywgdGFyZ2V0OiAnNDI4MzAyNC0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NDQ1MzInLCB0YXJnZXQ6ICc1MTc2NTAyLTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY0NDUzMicsIHRhcmdldDogJ0QyNjM5ODctMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjQ0NTMyJywgdGFyZ2V0OiAnRDMwNDIzNC0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NDQ1MzInLCB0YXJnZXQ6ICdSRTI4OTMyLTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY0NDUzMicsIHRhcmdldDogJ29yZ181d05Ocko0ekZRNUtROE9XbnpSQycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjU0MDMyJywgdGFyZ2V0OiAnNTI2MTAzNy0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NTQwMzInLCB0YXJnZXQ6ICc1ODU1OTU3LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY1NDAzMicsIHRhcmdldDogJzY2MDEwODctMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjU0MDMyJywgdGFyZ2V0OiAnNjY1NDAzMi00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NTQwMzInLCB0YXJnZXQ6ICdvcmdfM3ZJMlo1a0MxU2FTbGJVQm9PQlQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY1NjE5MycsIHRhcmdldDogJzQ4OTIyNDQtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjU2MTkzJywgdGFyZ2V0OiAnNTI3MTU0My0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NTYxOTMnLCB0YXJnZXQ6ICc1MzI5NjU1LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY1NjE5MycsIHRhcmdldDogJzU0MDk0OTgtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjU2MTkzJywgdGFyZ2V0OiAnNTcwNzM2OS0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NTYxOTMnLCB0YXJnZXQ6ICdvcmdfTmZLQkI5VFdGNEFzOFRTYXNKNW4nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY2NTY0OCcsIHRhcmdldDogJzY2NjU2NDgtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjY1NjQ4JywgdGFyZ2V0OiAnNjY2NTY0OC0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NjU2NDgnLCB0YXJnZXQ6ICc2NjY1NjQ4LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY2NTY0OCcsIHRhcmdldDogJzY2NjU2NDgtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjY1NjQ4JywgdGFyZ2V0OiAnNjY2NTY0OC01JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NjU2NDgnLCB0YXJnZXQ6ICdvcmdfODNOTmdKclA1bGtJTjg3NmtOZUcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY2NTY1NScsIHRhcmdldDogJzY0MzQ1NTAtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjY1NjU1JywgdGFyZ2V0OiAnNjY2NTY1NS0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2NjU2NTUnLCB0YXJnZXQ6ICdvcmdfNnI5dDdaQTZZVDAzMU9kNGtNUGcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY4NDQzOCcsIHRhcmdldDogJzU4NzMwOTYtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2Njg0NDM4JywgdGFyZ2V0OiAnNjA5MjA4My0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2ODQ0MzgnLCB0YXJnZXQ6ICdvcmdfODNOTmdKclA1bGtJTjg3NmtOZUcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY5MDM4NycsIHRhcmdldDogJzYyODE4OTgtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjkwMzg3JywgdGFyZ2V0OiAnNjY5MDM4Ny0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2OTAzODcnLCB0YXJnZXQ6ICdvcmdfRnZndkdGZThKWjBpWWxaODB3ZUYnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY5MzIzMicsIHRhcmdldDogJzU0MTYyNTUtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NjkzMjMyJywgdGFyZ2V0OiAnb3JnX01LdmJuQ2N5UHVkWGV4VXZzU3dGJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY2OTg2NDMnLCB0YXJnZXQ6ICc2MjY0MDg3LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjY5ODY0MycsIHRhcmdldDogJ29yZ19BVE9XSGQ0R0dhb2gxNHp1dFhxNycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzExNTY1JywgdGFyZ2V0OiAnNjcxMTU2NS0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MTE1NjUnLCB0YXJnZXQ6ICc2NzExNTY1LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjcxMTU2NScsIHRhcmdldDogJzY3MTE1NjUtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzExNTY1JywgdGFyZ2V0OiAnNjcxMTU2NS00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MTE1NjUnLCB0YXJnZXQ6ICdvcmdfODNOTmdKclA1bGtJTjg3NmtOZUcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjcxNjIzMycsIHRhcmdldDogJzYyNjQwODctMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzE2MjMzJywgdGFyZ2V0OiAnb3JnX0FUT1dIZDRHR2FvaDE0enV0WHE3JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MTgzNjEnLCB0YXJnZXQ6ICc2MjIzMjA1LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjcxODM2MScsIHRhcmdldDogJzYzNzA1ODQtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzE4MzYxJywgdGFyZ2V0OiAnNjcxODM2MS0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MTgzNjEnLCB0YXJnZXQ6ICc2NzE4MzYxLTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjcxODM2MScsIHRhcmdldDogJzY3MTgzNjEtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzE4MzYxJywgdGFyZ2V0OiAnNjcxODM2MS00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MTgzNjEnLCB0YXJnZXQ6ICc2NzE4MzYxLTUnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjcxODM2MScsIHRhcmdldDogJzY3MTgzNjEtOCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzE4MzYxJywgdGFyZ2V0OiAnb3JnXzFwNEZXRW9JdGp5S2J3VHBDSm9sJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MjQzOTknLCB0YXJnZXQ6ICc2NzI0Mzk5LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjcyNDM5OScsIHRhcmdldDogJzY3MjQzOTktMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzI0Mzk5JywgdGFyZ2V0OiAnb3JnXzgzTk5nSnJQNWxrSU44NzZrTmVHJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3Mjc1MjInLCB0YXJnZXQ6ICc0MjUzMDYxLTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjcyNzUyMicsIHRhcmdldDogJzQ5MDI2NzEtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzI3NTIyJywgdGFyZ2V0OiAnb3JnX2M1dnlCeks3aWlra1U0RGpRRkhUJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3Mjg3MDInLCB0YXJnZXQ6ICc2NTc3NzI2LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjcyODcwMicsIHRhcmdldDogJzY3MTE1NjUtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzI4NzAyJywgdGFyZ2V0OiAnNjcxMTU2NS0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3Mjg3MDInLCB0YXJnZXQ6ICc2NzExNTY1LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjcyODcwMicsIHRhcmdldDogJzY3MTE1NjUtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzI4NzAyJywgdGFyZ2V0OiAnb3JnXzgzTk5nSnJQNWxrSU44NzZrTmVHJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3Mjg5NjAnLCB0YXJnZXQ6ICc2MzkzNjA1LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjcyODk2MCcsIHRhcmdldDogJ29yZ184M05OZ0pyUDVsa0lOODc2a05lRycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzMyMDk1JywgdGFyZ2V0OiAnNTI0MzYyMi0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MzIwOTUnLCB0YXJnZXQ6ICc2NzMyMDk1LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjczMjA5NScsIHRhcmdldDogJzY3MzIwOTUtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzMyMDk1JywgdGFyZ2V0OiAnb3JnXzgzTk5nSnJQNWxrSU44NzZrTmVHJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MzIxMDAnLCB0YXJnZXQ6ICc1NzE1NDUwLTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjczMjEwMCcsIHRhcmdldDogJzY1Nzc3MjYtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzMyMTAwJywgdGFyZ2V0OiAnNjU3NzcyNi00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MzIxMDAnLCB0YXJnZXQ6ICc2NjY1NjQ4LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjczMjEwMCcsIHRhcmdldDogJzY3MzIxMDAtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzMyMTAwJywgdGFyZ2V0OiAnb3JnXzgzTk5nSnJQNWxrSU44NzZrTmVHJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MzIxMTEnLCB0YXJnZXQ6ICc0OTUxMjc4LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjczMjExMScsIHRhcmdldDogJzYwOTIwODMtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzMyMTExJywgdGFyZ2V0OiAnNjA5MjA4My0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3MzIxMTEnLCB0YXJnZXQ6ICc2NzMyMTExLTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjczMjExMScsIHRhcmdldDogJ29yZ184M05OZ0pyUDVsa0lOODc2a05lRycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzU0NjgxJywgdGFyZ2V0OiAnNTg3MzA5Ni0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3NTQ2ODEnLCB0YXJnZXQ6ICc2MDkyMDgzLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjc1NDY4MScsIHRhcmdldDogJzYwOTIwODMtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzU0NjgxJywgdGFyZ2V0OiAnb3JnXzgzTk5nSnJQNWxrSU44NzZrTmVHJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3NjMzNTEnLCB0YXJnZXQ6ICc2NzExNTY1LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjc2MzM1MScsIHRhcmdldDogJzY3MTE1NjUtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzYzMzUxJywgdGFyZ2V0OiAnNjcxMTU2NS0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3NjMzNTEnLCB0YXJnZXQ6ICc2NzExNTY1LTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjc2MzM1MScsIHRhcmdldDogJ29yZ184M05OZ0pyUDVsa0lOODc2a05lRycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzYzNTAxJywgdGFyZ2V0OiAnNTI2MTAzNy0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3NjM1MDEnLCB0YXJnZXQ6ICc1ODU1OTU3LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjc2MzUwMScsIHRhcmdldDogJzY2MDEwODctMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzYzNTAxJywgdGFyZ2V0OiAnNjY1NDAzMi00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3NjM1MDEnLCB0YXJnZXQ6ICdvcmdfM3ZJMlo1a0MxU2FTbGJVQm9PQlQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjc2ODkwNCcsIHRhcmdldDogJzYxODM1ODktMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzY4OTA0JywgdGFyZ2V0OiAnb3JnX1hjcUNqdFQ4cGk4TWszVWpRbER0JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3ODIzODMnLCB0YXJnZXQ6ICc2NzExNTY1LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjc4MjM4MycsIHRhcmdldDogJzY3MTE1NjUtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzgyMzgzJywgdGFyZ2V0OiAnNjcxMTU2NS0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3ODIzODMnLCB0YXJnZXQ6ICc2NzExNTY1LTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjc4MjM4MycsIHRhcmdldDogJ29yZ184M05OZ0pyUDVsa0lOODc2a05lRycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2NzgzNTI0JywgdGFyZ2V0OiAnNTg1OTkxNi0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3ODM1MjQnLCB0YXJnZXQ6ICc2NzgzNTI0LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjc4MzUyNCcsIHRhcmdldDogJ29yZ19mQTBhenFvQkdFem9Qb3k4NUp5dicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2Nzg2MzgyJywgdGFyZ2V0OiAnNjUzMDkzMi0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY3ODYzODInLCB0YXJnZXQ6ICdvcmdfTmZLQkI5VFdGNEFzOFRTYXNKNW4nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgwNDMzMCcsIHRhcmdldDogJzU3MTU0NTAtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODA0MzMwJywgdGFyZ2V0OiAnNjI2ODgwMy0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4MDQzMzAnLCB0YXJnZXQ6ICc2ODA0MzMwLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgwNDMzMCcsIHRhcmdldDogJzY4MDQzMzAtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODA0MzMwJywgdGFyZ2V0OiAnNjgwNDMzMC01JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4MDQzMzAnLCB0YXJnZXQ6ICdvcmdfODNOTmdKclA1bGtJTjg3NmtOZUcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgwOTY1MycsIHRhcmdldDogJzQwODIwOTctMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODA5NjUzJywgdGFyZ2V0OiAnNDU2MTQ0NC0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4MDk2NTMnLCB0YXJnZXQ6ICc0ODA5Njk3LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgwOTY1MycsIHRhcmdldDogJzQ4NjM0MjUtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODA5NjUzJywgdGFyZ2V0OiAnNTA5NzEyMi0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4MDk2NTMnLCB0YXJnZXQ6ICc1MjM3MTc4LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgwOTY1MycsIHRhcmdldDogJzUzODIyMzItMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODA5NjUzJywgdGFyZ2V0OiAnNjgwOTY1My05JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4MDk2NTMnLCB0YXJnZXQ6ICdENDIzNzYxLTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgwOTY1MycsIHRhcmdldDogJ29yZ19HVk1sTFZid0NEU2lxUDlPZzhUbicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODI2NTY1JywgdGFyZ2V0OiAnNjI5NTUzMC0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4MjY1NjUnLCB0YXJnZXQ6ICc2Mjk1NTMwLTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgyNjU2NScsIHRhcmdldDogJ29yZ19aNTlhVUJHdFo5UDVRemRGaUttWicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODI2NTgyJywgdGFyZ2V0OiAnNDM2MjM4Ny0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4MjY1ODInLCB0YXJnZXQ6ICc2MDgxODc1LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgyNjU4MicsIHRhcmdldDogJzY4MjY1ODItMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODI2NTgyJywgdGFyZ2V0OiAnb3JnXzBqUFdNN1lxaHRYbTBsbTNmbTFZJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4MjY3NDUnLCB0YXJnZXQ6ICc2MjMzNjE3LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgyNjc0NScsIHRhcmdldDogJzY1Nzc3MjYtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODI2NzQ1JywgdGFyZ2V0OiAnNjgyNjc0NS0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4MjY3NDUnLCB0YXJnZXQ6ICdvcmdfODNOTmdKclA1bGtJTjg3NmtOZUcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgyOTY1NScsIHRhcmdldDogJzU5Nzg4MjktMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODI5NjU1JywgdGFyZ2V0OiAnNjAwNDI3Ni0xMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODI5NjU1JywgdGFyZ2V0OiAnNjgyOTY1NS0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4Mjk2NTUnLCB0YXJnZXQ6ICc2ODI5NjU1LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgyOTY1NScsIHRhcmdldDogJzY4Mjk2NTUtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODI5NjU1JywgdGFyZ2V0OiAnNjgyOTY1NS02JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4Mjk2NTUnLCB0YXJnZXQ6ICdvcmdfODNOTmdKclA1bGtJTjg3NmtOZUcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjgzMDE3NCcsIHRhcmdldDogJzQ3OTg1OTQtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODMwMTc0JywgdGFyZ2V0OiAnNTQ2NTg5NS0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4MzAxNzQnLCB0YXJnZXQ6ICdvcmdfOGNzTWd0Z25OMG1SRVpwTlAxSmknIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjg0Mjc0OCcsIHRhcmdldDogJzY0MzQ1NTAtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODQyNzQ4JywgdGFyZ2V0OiAnNjY2NTY1NS0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4NDI3NDgnLCB0YXJnZXQ6ICdvcmdfNnI5dDdaQTZZVDAzMU9kNGtNUGcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjg0MzQwMycsIHRhcmdldDogJzYyNjQwODctMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODQzNDAzJywgdGFyZ2V0OiAnb3JnX0FUT1dIZDRHR2FvaDE0enV0WHE3JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4NTAyNTInLCB0YXJnZXQ6ICc1Nzc0MzU3LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjg1MDg5NScsIHRhcmdldDogJzYwOTIwODMtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODUwODk1JywgdGFyZ2V0OiAnNjA5MjA4My0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4NTA4OTUnLCB0YXJnZXQ6ICc2NTc3NzI2LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjg1MDg5NScsIHRhcmdldDogJzY4NTA4OTUtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODUwODk1JywgdGFyZ2V0OiAnNjg1MDg5NS01JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4NTA4OTUnLCB0YXJnZXQ6ICdvcmdfODNOTmdKclA1bGtJTjg3NmtOZUcnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjg1MDk0OScsIHRhcmdldDogJzY4NTA5NDktMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODUwOTQ5JywgdGFyZ2V0OiAnNjg1MDk0OS0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4NTA5NDknLCB0YXJnZXQ6ICc2ODUwOTQ5LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjg1MDk0OScsIHRhcmdldDogJ29yZ18yNDJoSmVnd2ZRQ2VQOWhzZndwVycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2ODUyOTE1JywgdGFyZ2V0OiAnNTI3NjI2Mi0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY4NTI5MTUnLCB0YXJnZXQ6ICdvcmdfTUt2Ym5DY3lQdWRYZXhVdnNTd0YnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjkwNTA1NycsIHRhcmdldDogJzU4OTc1NjMtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2OTA1MDU3JywgdGFyZ2V0OiAnNjkwNTA1Ny0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY5MDUwNTcnLCB0YXJnZXQ6ICdvcmdfTmZLQkI5VFdGNEFzOFRTYXNKNW4nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjk1OTg1MicsIHRhcmdldDogJzU2MzI0MzItNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2OTU5ODUyJywgdGFyZ2V0OiAnNjkwNTA1Ny0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY5NTk4NTInLCB0YXJnZXQ6ICdvcmdfTmZLQkI5VFdGNEFzOFRTYXNKNW4nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjk2NDM2MycsIHRhcmdldDogJzU0MDk0OTgtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2OTY0MzYzJywgdGFyZ2V0OiAnNjk2NDM2My0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY5NjQzNjMnLCB0YXJnZXQ6ICdvcmdfTmZLQkI5VFdGNEFzOFRTYXNKNW4nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjk3ODkyMScsIHRhcmdldDogJzU2MzI0MzItNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2OTc4OTIxJywgdGFyZ2V0OiAnNjkwNTA1Ny0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY5Nzg5MjEnLCB0YXJnZXQ6ICc2OTc4OTIxLTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNjk3ODkyMScsIHRhcmdldDogJ29yZ19OZktCQjlUV0Y0QXM4VFNhc0o1bicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc2OTgxNjI4JywgdGFyZ2V0OiAnNTQwOTQ5OC00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzY5ODE2MjgnLCB0YXJnZXQ6ICdvcmdfTmZLQkI5VFdGNEFzOFRTYXNKNW4nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzAwMDgxOCcsIHRhcmdldDogJzU2MzI0MzItNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MDAwODE4JywgdGFyZ2V0OiAnNjkwNTA1Ny0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcwMDA4MTgnLCB0YXJnZXQ6ICc3MDAwODE4LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzAwMDgxOCcsIHRhcmdldDogJ29yZ19YdTZnWFNzbHREQlpUQWhNRkJXRCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MDI1NzQzJywgdGFyZ2V0OiAnNDA4MjA5Ny0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcwMjU3NDMnLCB0YXJnZXQ6ICc0NTYxNDQ0LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzAyNTc0MycsIHRhcmdldDogJzQ4MDk2OTctMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MDI1NzQzJywgdGFyZ2V0OiAnNTE3NjY0NC0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcwMjU3NDMnLCB0YXJnZXQ6ICc1MzgyMjMyLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzAyNTc0MycsIHRhcmdldDogJzY1NTEyNzYtMTAnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzAyNTc0MycsIHRhcmdldDogJzY1NTEyNzYtMTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzAyNTc0MycsIHRhcmdldDogJzY1NTEyNzYtMTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzAyNTc0MycsIHRhcmdldDogJzY1NTEyNzYtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MDI1NzQzJywgdGFyZ2V0OiAnNjU1MTI3Ni00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcwMjU3NDMnLCB0YXJnZXQ6ICc2NTUxMjc2LTgnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzAyNTc0MycsIHRhcmdldDogJzY1NTEyNzYtOScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MDI1NzQzJywgdGFyZ2V0OiAnb3JnX0dWTWxMVmJ3Q0RTaXFQOU9nOFRuJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcwNDkxOTAnLCB0YXJnZXQ6ICc2MDgwOTk4LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzA0OTE5MCcsIHRhcmdldDogJzY5MTQxODItMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MDQ5MTkwJywgdGFyZ2V0OiAnb3JnXzJJRjk3elZ5bVN1cmFTblVBWG1xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcwNTU3MzEnLCB0YXJnZXQ6ICc1NjMyNDMyLTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzA1NTczMScsIHRhcmdldDogJzY5MDUwNTctMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MDU1NzMxJywgdGFyZ2V0OiAnNjk3ODkyMS0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcwNTU3MzEnLCB0YXJnZXQ6ICdvcmdfTmZLQkI5VFdGNEFzOFRTYXNKNW4nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzA2MTAxNCcsIHRhcmdldDogJzQ0ODY3MjAtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MDYxMDE0JywgdGFyZ2V0OiAnNDcwMzAxOS0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcwNjEwMTQnLCB0YXJnZXQ6ICc1MjcyMDY5LTYnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzA2MTAxNCcsIHRhcmdldDogJzU2MjI2NTMtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MDYxMDE0JywgdGFyZ2V0OiAnNzA2MTAxNC00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcwNjEwMTQnLCB0YXJnZXQ6ICc3MDYxMDE0LTYnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzA2MTAxNCcsIHRhcmdldDogJ29yZ19EdHRaTXZreXZXM2ZWNm9DVU1URicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MDY0MzQ2JywgdGFyZ2V0OiAnNDI1MzA2MS0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcwNjQzNDYnLCB0YXJnZXQ6ICc0OTAyNjcxLTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzA2NDM0NicsIHRhcmdldDogJ29yZ19EdHRaTXZreXZXM2ZWNm9DVU1URicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MTA1ODY4JywgdGFyZ2V0OiAnNTg2MzMyNi0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcxMDU4NjgnLCB0YXJnZXQ6ICc2ODg3NzM2LTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzEwNTg2OCcsIHRhcmdldDogJ29yZ18wZVRyM1hJQmpBS3BYa0M2ODIzcicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MTExNzY5JywgdGFyZ2V0OiAnNTQwOTQ5OC00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcxMTE3NjknLCB0YXJnZXQ6ICc1ODk3NTYzLTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzExMTc2OScsIHRhcmdldDogJzY1MzA5MzItMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MTExNzY5JywgdGFyZ2V0OiAnNjkwNTA1Ny0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcxMTE3NjknLCB0YXJnZXQ6ICdvcmdfTmZLQkI5VFdGNEFzOFRTYXNKNW4nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzE0NzEzOCcsIHRhcmdldDogJzY5MDUwNTctMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MTQ3MTM4JywgdGFyZ2V0OiAnb3JnX05mS0JCOVRXRjRBczhUU2FzSjVuJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcxNTk3NTAnLCB0YXJnZXQ6ICc0ODcyNjAzLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzE1OTc1MCcsIHRhcmdldDogJzU3MTM5MTEtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MTU5NzUwJywgdGFyZ2V0OiAnNTcxMzkxMS0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcxNTk3NTAnLCB0YXJnZXQ6ICc3MTU5NzUwLTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzE1OTc1MCcsIHRhcmdldDogJzcxNTk3NTAtNScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MTU5NzUwJywgdGFyZ2V0OiAnb3JnX2V3VnNDdXRwUnpEOXBUMDdrQm9FJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcyMTE4MjUnLCB0YXJnZXQ6ICc1MDgxNDIyLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzIxMTgyNScsIHRhcmdldDogJzUyODM0NTItMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MjExODI1JywgdGFyZ2V0OiAnNTcwMzM1Ny0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcyMTE4MjUnLCB0YXJnZXQ6ICc2NTkzODM0LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzI0NjczNCcsIHRhcmdldDogJzY5MDUwNTctMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MjQ2NzM0JywgdGFyZ2V0OiAnb3JnX05mS0JCOVRXRjRBczhUU2FzSjVuJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcyODI3ODInLCB0YXJnZXQ6ICc2MTQ0Njc5LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzI4Mjc4MicsIHRhcmdldDogJzYxNTI5ODctMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MjgyNzgyJywgdGFyZ2V0OiAnNjgzNjU0MC02JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcyODI3ODInLCB0YXJnZXQ6ICdvcmdfdlM2cmNLeWMycU4zckZkWDBQMksnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzI5Nzk3NycsIHRhcmdldDogJzYxNDQ2NzktMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3Mjk3OTc3JywgdGFyZ2V0OiAnNjE1Mjk4Ny0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzcyOTc5NzcnLCB0YXJnZXQ6ICc2ODM2NTQwLTYnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzI5Nzk3NycsIHRhcmdldDogJ29yZ192UzZyY0t5YzJxTjNyRmRYMFAySycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MzIzMzU2JywgdGFyZ2V0OiAnNDQ4NjcyMC0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzczMjMzNTYnLCB0YXJnZXQ6ICc0NzAzMDE5LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzMyMzM1NicsIHRhcmdldDogJzUyNzIwNjktNicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MzIzMzU2JywgdGFyZ2V0OiAnNTYyMjY1My0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzczMjMzNTYnLCB0YXJnZXQ6ICc3MDYxMDE0LTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzMyMzM1NicsIHRhcmdldDogJzczMjMzNTYtNScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MzIzMzU2JywgdGFyZ2V0OiAnb3JnX0R0dFpNdmt5dlczZlY2b0NVTVRGJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzczNDA0MTEnLCB0YXJnZXQ6ICc3MzQwNDExLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzM4MDY5NScsIHRhcmdldDogJzU0MDk0OTgtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MzgwNjk1JywgdGFyZ2V0OiAnNTYzMjQzMi00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzczODA2OTUnLCB0YXJnZXQ6ICc2OTA1MDU3LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzM4MDY5NScsIHRhcmdldDogJzcwODMwNzUtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MzgwNjk1JywgdGFyZ2V0OiAnb3JnX05mS0JCOVRXRjRBczhUU2FzSjVuJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzczODA2OTYnLCB0YXJnZXQ6ICc1NjMyNDMyLTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzM4MDY5NicsIHRhcmdldDogJzY5MDUwNTctMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3MzgwNjk2JywgdGFyZ2V0OiAnNzA4MzA3NS0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzczODA2OTYnLCB0YXJnZXQ6ICc3MzgwNjk2LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzM4MDY5NicsIHRhcmdldDogJ29yZ19OZktCQjlUV0Y0QXM4VFNhc0o1bicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3Mzg1MjI0JywgdGFyZ2V0OiAnNTA0MTIwMC0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzczODUyMjQnLCB0YXJnZXQ6ICc1MDQxMjAwLTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzM4NTIyNCcsIHRhcmdldDogJzczODUyMjQtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3Mzg1MjI0JywgdGFyZ2V0OiAnNzM4NTIyNC0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzczODUyMjQnLCB0YXJnZXQ6ICdvcmdfSW1lZzlXNlAxVEU2STJRdXRTNHknIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQwMjUwNicsIHRhcmdldDogJzU1MTI0MjYtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDAyNTA2JywgdGFyZ2V0OiAnNjA0ODExMC0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc0MDI1MDYnLCB0YXJnZXQ6ICc3NDAyNTA2LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQwMjUwNicsIHRhcmdldDogJ29yZ19wcEVsa0V0UXZGdEc2QTQ3NTRVSScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDA0NTA4JywgdGFyZ2V0OiAnNDY4MjU5Ni0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc0MDQ1MDgnLCB0YXJnZXQ6ICc1MTE3ODM4LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQwNDUwOCcsIHRhcmdldDogJzU3MTU2NzUtMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDA0NTA4JywgdGFyZ2V0OiAnNjkxMjgzOS0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc0MDQ1MDgnLCB0YXJnZXQ6ICdvcmdfTmZLQkI5VFdGNEFzOFRTYXNKNW4nIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQxMTIwOScsIHRhcmdldDogJzUzNDU2MzktNicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDExMjA5JywgdGFyZ2V0OiAnNTQxNzc3MC04JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc0MTEyMDknLCB0YXJnZXQ6ICc3MDgyODMyLTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQxMTIwOScsIHRhcmdldDogJ29yZ19FaFlGUElKRW1ZUVlSb1l2c25weScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDUzMDY1JywgdGFyZ2V0OiAnNDA3MjIzNi0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc0NTMwNjUnLCB0YXJnZXQ6ICc0MzU2NDU1LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQ1MzA2NScsIHRhcmdldDogJzQ3MDMwMTktMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDUzMDY1JywgdGFyZ2V0OiAnNzA2MTAxNC02JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc0NTMwNjUnLCB0YXJnZXQ6ICdvcmdfRWhZRlBJSkVtWVFZUm9ZdnNucHknIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQ1MzA2NScsIHRhcmdldDogJ29yZ19KanJNNlVtZU9ZMFE1TW1vTmlQOCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDUzMDg3JywgdGFyZ2V0OiAnNTM0NTYzOS02JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc0NTMwODcnLCB0YXJnZXQ6ICdvcmdfRWhZRlBJSkVtWVFZUm9ZdnNucHknIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQ2Mjg2MicsIHRhcmdldDogJzYxNDQ2NzktMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDYyODYyJywgdGFyZ2V0OiAnNjgzNjU0MC02JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc0NjI4NjInLCB0YXJnZXQ6ICdvcmdfdlM2cmNLeWMycU4zckZkWDBQMksnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQ2NDg0NicsIHRhcmdldDogJzQ0MDM2ODctMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDY0ODQ2JywgdGFyZ2V0OiAnNTg5NzU2My00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc0NjQ4NDYnLCB0YXJnZXQ6ICc2OTA1MDU3LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQ2NDg0NicsIHRhcmdldDogJzcwODMwNzUtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDY0ODQ2JywgdGFyZ2V0OiAnb3JnX05mS0JCOVRXRjRBczhUU2FzSjVuJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc0NjgzMDQnLCB0YXJnZXQ6ICc2ODYzMzYzLTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzQ2ODMwNCcsIHRhcmdldDogJzc0NjgzMDQtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NDY4MzA0JywgdGFyZ2V0OiAnb3JnX0VoWUZQSUpFbVlRWVJvWXZzbnB5JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc1MDEyOTMnLCB0YXJnZXQ6ICc0MjI0NzI1LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzUwMTI5MycsIHRhcmdldDogJzQ1NzM0NzItMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NTAxMjkzJywgdGFyZ2V0OiAnb3JnX2o1VTVJRWExRkliZ3RyN2lOc1FNJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc1MDY3OTEnLCB0YXJnZXQ6ICc0NDAzNjg3LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzUwNjc5MScsIHRhcmdldDogJzQ5NzIyMjQtMScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NTA2NzkxJywgdGFyZ2V0OiAnNjkwNTA1Ny0yJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc1MDY3OTEnLCB0YXJnZXQ6ICdSRTM5ODQxLTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzUwNjc5MScsIHRhcmdldDogJ29yZ19OZktCQjlUV0Y0QXM4VFNhc0o1bicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NjIwNjU1JywgdGFyZ2V0OiAnNTk0ODc4OS0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc2MjA2NTUnLCB0YXJnZXQ6ICc3NjIwNjU1LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzYyMDY1NScsIHRhcmdldDogJ29yZ19XaDJjbk9JektsaHpqdXFWbU9xWScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NjMyOTg1JywgdGFyZ2V0OiAnNzA3ODUwMy0zJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc2MzI5ODUnLCB0YXJnZXQ6ICc3NjA4NzYxLTQnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzYzMjk4NScsIHRhcmdldDogJzc2MzI5ODUtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NjMyOTg1JywgdGFyZ2V0OiAnNzYzMjk4NS00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc2MzI5ODUnLCB0YXJnZXQ6ICdvcmdfUXc4RXNyTjBNNTJuVlFVTTZ2c1YnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzY2MzYwNycsIHRhcmdldDogJzU1OTQxNjktMicgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NjYzNjA3JywgdGFyZ2V0OiAnNjY1ODU3Ny0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc2NjM2MDcnLCB0YXJnZXQ6ICc3MTU0NDc3LTInIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzY2MzYwNycsIHRhcmdldDogJ29yZ19JRFViUzA5WlIwSmhKOGpGRXB0VCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3Njc0NjUwJywgdGFyZ2V0OiAnNjYzOTI0Ni0xJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc2NzQ2NTAnLCB0YXJnZXQ6ICc2ODM4Mzk3LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzY3NDY1MCcsIHRhcmdldDogJzcyMDU3MTYtNScgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3Njc0NjUwJywgdGFyZ2V0OiAnb3JnX3BsWmJMeGl5c0VTYmFJOXBPZXltJyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc3MzI4MTknLCB0YXJnZXQ6ICc2NjM5MjQ2LTEnIH0sXG4gICAgICAgIHsgc291cmNlOiAnNzczMjgxOScsIHRhcmdldDogJzY4MzgzOTctMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc3NzMyODE5JywgdGFyZ2V0OiAnNzIwNTcxNi01JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzc3MzI4MTknLCB0YXJnZXQ6ICdvcmdfcGxaYkx4aXlzRVNiYUk5cE9leW0nIH0sXG4gICAgICAgIHsgc291cmNlOiAnODA1MzE4NCcsIHRhcmdldDogJzcwNzg1MDMtMycgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc4MDUzMTg0JywgdGFyZ2V0OiAnNzYwODc2MS00JyB9LFxuICAgICAgICB7IHNvdXJjZTogJzgwNTMxODQnLCB0YXJnZXQ6ICc3NjMyOTg1LTMnIH0sXG4gICAgICAgIHsgc291cmNlOiAnODA1MzE4NCcsIHRhcmdldDogJzc2MzI5ODUtNCcgfSxcbiAgICAgICAgeyBzb3VyY2U6ICc4MDUzMTg0JywgdGFyZ2V0OiAnb3JnX1F3OEVzck4wTTUyblZRVU02dnNWJyB9XG4gICAgXVxufTtcblxuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9pbmRleC50c1wiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3NyYy9pbmRleC50cyAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBAYXV0aG9yIEppYWNoZW5nIFBhbiA8amFja2llYW54aXNAZ21haWwuY29tPlxuICogQGRlc2NyaXB0aW9uIFByb3ZpZGUgdGhlIGVudHJhbmNlIG9mIE5ldFYuanMuXG4gKiBAZGVwZW5kZW5jZXMgaW50ZXJmYWNlcy50cywgdXRpbHMvbWFwMi5qcywgbm9kZS50cywgbGluay50c1xuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5ldFYgPSB2b2lkIDA7XG5jb25zdCBtYXAyXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWxzL21hcDIgKi8gXCIuL3NyYy91dGlscy9tYXAyLnRzXCIpO1xuY29uc3Qgbm9kZV8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9ub2RlICovIFwiLi9zcmMvbm9kZS50c1wiKTtcbmNvbnN0IGxpbmtfMSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbGluayAqLyBcIi4vc3JjL2xpbmsudHNcIik7XG5jb25zdCBkZWZhdWx0Q29uZmlncyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY29uZmlncyAqLyBcIi4vc3JjL2NvbmZpZ3MudHNcIik7XG5jb25zdCBkYXRhc2V0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kYXRhc2V0ICovIFwiLi9zcmMvZGF0YXNldC9pbmRleC50c1wiKTtcbmNvbnN0IHJlbmRlcmVyXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3JlbmRlcmVyICovIFwiLi9zcmMvcmVuZGVyZXIvaW5kZXgudHNcIik7XG5jb25zdCBpbnRlcmFjdGlvbl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9pbnRlcmFjdGlvbi9pbnRlcmFjdGlvbiAqLyBcIi4vc3JjL2ludGVyYWN0aW9uL2ludGVyYWN0aW9uLnRzXCIpO1xuY29uc3QgVXRpbHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWxzL3V0aWxzICovIFwiLi9zcmMvdXRpbHMvdXRpbHMudHNcIik7XG5jb25zdCBsYWJlbF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9sYWJlbC9sYWJlbCAqLyBcIi4vc3JjL2xhYmVsL2xhYmVsLnRzXCIpO1xuY2xhc3MgTmV0ViB7XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIGNyZWF0ZSBOZXRWIG9iamVjdC5cbiAgICAgKiBAcGFyYW0gY29uZmlncyBjb25maWd1cmF0aW9ucyBvZiBOZXRWLCBtdXN0IGluY2x1ZGUgYSBgY29udGFpbmVyOiBIVE1MRGl2RWxlbWVudGAgdGVybVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZ3MpIHtcbiAgICAgICAgdGhpcy5VdGlscyA9IFV0aWxzO1xuICAgICAgICB0aGlzLiRfaWQybm9kZSA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy4kX2VuZHMybGluayA9IG5ldyBtYXAyXzEuZGVmYXVsdCgpO1xuICAgICAgICB0aGlzLiRfc291cmNlSWQybGlua3MgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuJF90YXJnZXRJZDJsaW5rcyA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy4kX2NvbmZpZ3MgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRlZmF1bHRDb25maWdzKSk7IC8vIE5PVEU6IGRlZXAgY29weSBjb25maWdzXG4gICAgICAgIHRoaXMuJF9sYXp5TGlua1VwZGF0ZSA9IGZhbHNlOyAvLyBmbGFnIHRvIGNvbnRyb2wgbGF6eSB1cGRhdGUgbGluayBvciBub3RcbiAgICAgICAgdGhpcy4kX2RhdGEgPSB7IG5vZGVzOiBbXSwgbGlua3M6IFtdIH07XG4gICAgICAgIHRoaXMuJF9tb2RpZmllZExpbmtDb3VudCA9IDA7IC8vIHJlY29yZCBtb2RpZmllZCBsaW5rIG51bSB0byBjb250cm9sIGxhenkgdXBkYXRlXG4gICAgICAgIGlmICghKCdjb250YWluZXInIGluIGNvbmZpZ3MpIHx8IGNvbmZpZ3MuY29udGFpbmVyLnRhZ05hbWUgIT09ICdESVYnKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignQ29udGFpbmVyIHNob3VsZCBiZSBzcGVjaWZpZWQgYXMgYSBkaXYgZWxlbWVudCEnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLiRfY29udGFpbmVyID0gY29uZmlncy5jb250YWluZXI7XG4gICAgICAgIC8vIG92ZXJyaWRlIGNvbmZpZ3NcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gY29uZmlncykge1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gJ2NvbnRhaW5lcicpXG4gICAgICAgICAgICAgICAgY29udGludWU7IC8vIE5PVEU6IGV4Y2x1ZGUgY29udGFpbmVyIGluIGNvbmZpZ3NcbiAgICAgICAgICAgIGlmIChjb25maWdzW2tleV0gPT09IE9iamVjdChjb25maWdzW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kX2NvbmZpZ3Nba2V5XSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcy4kX2NvbmZpZ3Nba2V5XSksIGNvbmZpZ3Nba2V5XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRfY29uZmlnc1trZXldID0gY29uZmlnc1trZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpOyAvLyBUT0RPOiBjb25zaWRlciBub2RlIGVudmlyb21lbnQsIGRvY3VtZW50IG5vdCBkZWZpbmVkXG4gICAgICAgIGNvbnN0IHBpeGVsUmF0aW8gPSB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyB8fCAxO1xuICAgICAgICBjYW52YXMuc3R5bGUud2lkdGggPSB0aGlzLiRfY29uZmlncy53aWR0aCArICdweCc7XG4gICAgICAgIGNhbnZhcy5zdHlsZS5oZWlnaHQgPSB0aGlzLiRfY29uZmlncy5oZWlnaHQgKyAncHgnO1xuICAgICAgICBjYW52YXMuc2V0QXR0cmlidXRlKCd3aWR0aCcsIFN0cmluZyh0aGlzLiRfY29uZmlncy53aWR0aCAqIHBpeGVsUmF0aW8pKTtcbiAgICAgICAgY2FudmFzLnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgU3RyaW5nKHRoaXMuJF9jb25maWdzLmhlaWdodCAqIHBpeGVsUmF0aW8pKTtcbiAgICAgICAgdGhpcy4kX2NvbnRhaW5lci5hcHBlbmRDaGlsZChjYW52YXMpO1xuICAgICAgICB0aGlzLiRfcmVuZGVyZXIgPSBuZXcgcmVuZGVyZXJfMS5SZW5kZXJlcih7XG4gICAgICAgICAgICBjYW52YXMsXG4gICAgICAgICAgICB3aWR0aDogdGhpcy4kX2NvbmZpZ3Mud2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IHRoaXMuJF9jb25maWdzLmhlaWdodCxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhpcy4kX2NvbmZpZ3MuYmFja2dyb3VuZENvbG9yLFxuICAgICAgICAgICAgbm9kZUxpbWl0OiB0aGlzLiRfY29uZmlncy5ub2RlTGltaXQsXG4gICAgICAgICAgICBsaW5rTGltaXQ6IHRoaXMuJF9jb25maWdzLmxpbmtMaW1pdFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5sYWJlbE1hbmFnZXIgPSBuZXcgbGFiZWxfMS5MYWJlbE1hbmFnZXIodGhpcyk7XG4gICAgICAgIHRoaXMuJF9pbnRlcmFjdGlvbiA9IG5ldyBpbnRlcmFjdGlvbl8xLkludGVyYWN0aW9uTWFuYWdlcih0aGlzKTtcbiAgICAgICAgaWYgKHRoaXMuJF9jb25maWdzLmVuYWJsZVBhblpvb20pIHtcbiAgICAgICAgICAgIHRoaXMuJF9pbnRlcmFjdGlvbi5pbml0Wm9vbSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuJF9pbnRlcmFjdGlvbi5pbml0TW91c2UoKTtcbiAgICB9XG4gICAgJF9hZGRNb2RpZmllZExpbmtDb3VudChuKSB7XG4gICAgICAgIHRoaXMuJF9tb2RpZmllZExpbmtDb3VudCArPSBuO1xuICAgICAgICBpZiAodGhpcy4kX21vZGlmaWVkTGlua0NvdW50ID4gdGhpcy4kX2NvbmZpZ3MubGF6eUxpbmtVcGRhdGVUaHJlc2hvbGQpIHtcbiAgICAgICAgICAgIHRoaXMuJF9sYXp5TGlua1VwZGF0ZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIGRhdGEgZ2V0dGVyIHNldHRlclxuICAgICAqIEBwYXJhbSBub2RlTGlua0RhdGE/IHRoZSBub2RlLWxpbmstZGF0YSBvZiBhIGdyYXBoLCBwcm92aWRlZD9zZXR0ZXI6Z2V0dGVyO1xuICAgICAqL1xuICAgIGRhdGEobm9kZUxpbmtEYXRhKSB7XG4gICAgICAgIGlmIChub2RlTGlua0RhdGEgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuJF9kYXRhO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gZGVsZXRlIG9sZCBkYXRhXG4gICAgICAgICAgICB0aGlzLiRfZGF0YSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcy4kX2RhdGEpLCBub2RlTGlua0RhdGEpO1xuICAgICAgICAgICAgdGhpcy4kX2lkMm5vZGUgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICB0aGlzLiRfZW5kczJsaW5rID0gbmV3IG1hcDJfMS5kZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLiRfc291cmNlSWQybGlua3MgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICB0aGlzLiRfdGFyZ2V0SWQybGlua3MgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICB0aGlzLmFkZE5vZGVzKHRoaXMuJF9kYXRhLm5vZGVzKTtcbiAgICAgICAgICAgIHRoaXMuYWRkTGlua3ModGhpcy4kX2RhdGEubGlua3MpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBkZXNjcmlwdGlvbiBpbml0aWFsaXplIGFuZCBhZGQgYSBub2RlXG4gICAgICogQHBhcmFtIG5vZGVEYXRhIHRoZSBkYXRhIG9mIGEgbm9kZSwgaW5jbHVkZSBpZCwgc3R5bGVzLi4uXG4gICAgICovXG4gICAgYWRkTm9kZShub2RlRGF0YSkge1xuICAgICAgICByZXR1cm4gdGhpcy5hZGROb2Rlcyhbbm9kZURhdGFdKVswXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIGluaXRpYWxpemUgYW5kIGFkZCBhIGxpbmtcbiAgICAgKiBAcGFyYW0gbGlua0RhdGEgdGhlIGRhdGEgb2YgYSBsaW5rLCBpbmNsdWRlIHNvdXJjZSwgdGFyZ2V0LCBhbmQgc3R5bGVzLi4uXG4gICAgICovXG4gICAgYWRkTGluayhsaW5rRGF0YSkge1xuICAgICAgICByZXR1cm4gdGhpcy5hZGRMaW5rcyhbbGlua0RhdGFdKVswXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIGluaXRpYWxpemUgYW5kIGFkZCBhbiBhcnJheSBvZiBub2Rlcy5cbiAgICAgKiBAcGFyYW0ge2ludGVyZmFjZXMuTm9kZURhdGFbXX0gbm9kZXNEYXRhOiBhIGRhdGEgYXJyYXkgb2Ygbm9kZXMgdG9iZSBhZGRlZFxuICAgICAqIEBtZW1iZXJvZiBOZXRWXG4gICAgICovXG4gICAgYWRkTm9kZXMobm9kZXNEYXRhKSB7XG4gICAgICAgIGNvbnN0IG5ld05vZGVzID0gbm9kZXNEYXRhLm1hcCgobm9kZURhdGEpID0+IHtcbiAgICAgICAgICAgIG5vZGVEYXRhLmlkID0gbm9kZURhdGEuaWQudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIGNvbnN0IG5vZGUgPSBuZXcgbm9kZV8xLmRlZmF1bHQodGhpcywgbm9kZURhdGEpO1xuICAgICAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLiRfcmVuZGVyZXIuYWRkTm9kZXMobmV3Tm9kZXMpO1xuICAgICAgICByZXR1cm4gbmV3Tm9kZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBkZXNjcmlwdGlvbiBpbml0aWFsaXplIGFuZCBhZGQgYW4gYXJyYXkgb2YgbGlua3MuXG4gICAgICogQHBhcmFtIHtpbnRlcmZhY2VzLkxpbmtEYXRhW119IGxpbmtzRGF0YTogYSBkYXRhIGFycmF5IG9mIGxpbmtzIHRvYmUgYWRkZWRcbiAgICAgKiBAbWVtYmVyb2YgTmV0VlxuICAgICAqL1xuICAgIGFkZExpbmtzKGxpbmtzRGF0YSkge1xuICAgICAgICBjb25zdCBuZXdMaW5rcyA9IGxpbmtzRGF0YS5tYXAoKGxpbmtEYXRhKSA9PiB7XG4gICAgICAgICAgICBsaW5rRGF0YS5zb3VyY2UgPSBsaW5rRGF0YS5zb3VyY2UudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIGxpbmtEYXRhLnRhcmdldCA9IGxpbmtEYXRhLnRhcmdldC50b1N0cmluZygpO1xuICAgICAgICAgICAgY29uc3QgbGluayA9IG5ldyBsaW5rXzEuZGVmYXVsdCh0aGlzLCBsaW5rRGF0YSk7XG4gICAgICAgICAgICByZXR1cm4gbGluaztcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIHRoaXMuJF9yZW5kZXJlci5hZGRMaW5rcyhuZXdMaW5rcylcbiAgICAgICAgdGhpcy4kX3JlbmRlcmVyLmFkZExpbmtzKFsuLi50aGlzLiRfZW5kczJsaW5rLnZhbHVlcygpXSk7IC8vIE5PVEU6IHByZXNlcnZlIGxpbmsgb3JkZXIsIG5vdCBlbGVnYW50XG4gICAgICAgIHJldHVybiBuZXdMaW5rcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIGdldCBhIE5vZGUgb2JqZWN0IGZyb20gdGhlIGlkMm5vZGUgTWFwIGRhdGEgc3RydWN0dXJlXG4gICAgICogQHBhcmFtIGlkIG5vZGUgaWRcbiAgICAgKi9cbiAgICBnZXROb2RlQnlJZChpZCkge1xuICAgICAgICByZXR1cm4gdGhpcy4kX2lkMm5vZGUuZ2V0KGlkKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIGdldCBhIExpbmsgb2JqZWN0IGZyb20gdGhlIGVuZHMybGluayBNYXAyIGRhdGEgc3RydWN0dXJlXG4gICAgICogQHBhcmFtIGVuZElkMSBvbmUgZW5kIGlkIG9mIHRoZSBsaW5rIChzb3VyY2Ugb3IgdGFyZ2V0KVxuICAgICAqIEBwYXJhbSBlbmRJZDIgYW5vdGhlciBlbmQgaWQgb2YgdGhlIGxpbmsgKHNvdXJjZSBvciB0YXJnZXQpXG4gICAgICovXG4gICAgZ2V0TGlua0J5RW5kcyhlbmRJZDEsIGVuZElkMikge1xuICAgICAgICByZXR1cm4gdGhpcy4kX2VuZHMybGluay5nZXQoW2VuZElkMSwgZW5kSWQyXSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBkZXNjcmlwdGlvbiBnZXQgYWxsIG5vZGVzXG4gICAgICovXG4gICAgbm9kZXMoKSB7XG4gICAgICAgIHJldHVybiBbLi4udGhpcy4kX2lkMm5vZGUudmFsdWVzKCldO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAZGVzY3JpcHRpb24gZ2V0IGFsbCBsaW5rc1xuICAgICAqL1xuICAgIGxpbmtzKCkge1xuICAgICAgICByZXR1cm4gWy4uLnRoaXMuJF9lbmRzMmxpbmsudmFsdWVzKCldO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAZGVzY3JpcHRpb24gd2lwZSBhbGwgdGhlIGRhdGEgaW4gdGhlIGluc3RhbmNlXG4gICAgICogQG1lbWJlcm9mIE5ldFZcbiAgICAgKi9cbiAgICB3aXBlKCkge1xuICAgICAgICB0aGlzLiRfZGF0YSA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy4kX2lkMm5vZGUgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuJF9lbmRzMmxpbmsgPSBuZXcgbWFwMl8xLmRlZmF1bHQoKTtcbiAgICAgICAgdGhpcy4kX3NvdXJjZUlkMmxpbmtzID0gbmV3IE1hcCgpO1xuICAgICAgICB0aGlzLiRfdGFyZ2V0SWQybGlua3MgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBkZXNjcmlwdGlvbiByZXR1cm4gYnVpbGQtaW4gZGF0YXNldCBhY2NvcmRpbmcgdG8gbmFtZVxuICAgICAqIEBwYXJhbSBuYW1lIGRhdGFzZXQgbmFtZVxuICAgICAqL1xuICAgIGxvYWREYXRhc2V0KG5hbWUpIHtcbiAgICAgICAgaWYgKG5hbWUgaW4gZGF0YXNldClcbiAgICAgICAgICAgIHJldHVybiBkYXRhc2V0W25hbWVdO1xuICAgICAgICBjb25zb2xlLmVycm9yKGBOZXRWIGRvZXMgbm90IGhhdmUgYnVpbGQtaW4gZGF0YXNldDogJHtuYW1lfWApO1xuICAgICAgICByZXR1cm4geyBub2RlczogW10sIGxpbmtzOiBbXSB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBnaXZlbiBwb3NpdGlvbiwgcmV0dXJuIGVsZW1lbnQgb24gdGhpcyBwaXhlbCBpZiBleGlzdHNcbiAgICAgKiBAcGFyYW0geCB4IHBvc1xuICAgICAqIEBwYXJhbSB5IHkgcG9zXG4gICAgICovXG4gICAgZ2V0RWxlbWVudEJ5UG9zaXRpb24ocG9zaXRpb24pIHtcbiAgICAgICAgY29uc3QgaWQgPSB0aGlzLiRfcmVuZGVyZXIuZ2V0SWRCeVBvc2l0aW9uKHBvc2l0aW9uKTtcbiAgICAgICAgaWYgKGlkKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGlkID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5vZGUgPSB0aGlzLmdldE5vZGVCeUlkKGlkKTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnbm9kZScsXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IG5vZGVcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoaWQpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbGluayA9IHRoaXMuZ2V0TGlua0J5RW5kcyhpZFswXSwgaWRbMV0pO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdsaW5rJyxcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogbGlua1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIGRyYXcgZWxlbWVudHNcbiAgICAgKi9cbiAgICBkcmF3KCkge1xuICAgICAgICBpZiAodGhpcy4kX2xhenlMaW5rVXBkYXRlKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiBtYXliZSBuZWVkIG1vcmUgZWZmaWNpZW50IGFuZCByZWxpYWJsZSB3YXkgdG8gc3RvcmUgYW5kIGdldCBhbGwgbGlua3NcbiAgICAgICAgICAgIHRoaXMuJF9yZW5kZXJlci5saW5rTWFuYWdlci5yZWZyZXNoUG9zaXRpb24oWy4uLnRoaXMuJF9lbmRzMmxpbmsudmFsdWVzKCldKTtcbiAgICAgICAgICAgIHRoaXMuJF9sYXp5TGlua1VwZGF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy4kX21vZGlmaWVkTGlua0NvdW50ID0gMDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLiRfcmVuZGVyZXIuZHJhdygpO1xuICAgIH1cbn1cbmV4cG9ydHMuTmV0ViA9IE5ldFY7XG5cblxuLyoqKi8gfSksXG5cbi8qKiovIFwiLi9zcmMvaW50ZXJhY3Rpb24vaW50ZXJhY3Rpb24udHNcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9zcmMvaW50ZXJhY3Rpb24vaW50ZXJhY3Rpb24udHMgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQGF1dGhvciBYaWFvZG9uZyBaaGFvIDx6aGFveGlhb2RvbmdAemp1LmVkdS5jbj5cbiAqIEBkZXNjcmlwdGlvbiBoYW5kbGUgYWxsIGludGVyYWN0aW9uIGluIE5ldFZcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnRlcmFjdGlvbk1hbmFnZXIgPSB2b2lkIDA7XG5jbGFzcyBJbnRlcmFjdGlvbk1hbmFnZXIge1xuICAgIGNvbnN0cnVjdG9yKG5ldHYpIHtcbiAgICAgICAgdGhpcy50cmFuc2Zvcm0gPSB7XG4gICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgeTogMCxcbiAgICAgICAgICAgIGs6IDFcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5pc01vdXNlRG93biA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzTW91c2VNb3ZlID0gZmFsc2U7XG4gICAgICAgIHRoaXMubmV0diA9IG5ldHY7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGluaXQgem9vbSZwYW4gaW50ZXJhY3Rpb25cbiAgICAgKiBjdXJyZW50bHkgbm8gY2FsbGJhY2tcbiAgICAgKi9cbiAgICBpbml0Wm9vbSgpIHtcbiAgICAgICAgY29uc3QgY2FudmFzID0gdGhpcy5uZXR2LiRfY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJ2NhbnZhcycpO1xuICAgICAgICBjb25zdCBoYW5kbGVTY3JvbGwgPSAoZXZ0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCB4ID0gZXZ0Lm9mZnNldFggfHwgZXZ0LnBhZ2VYIC0gY2FudmFzLm9mZnNldExlZnQ7XG4gICAgICAgICAgICBjb25zdCB5ID0gZXZ0Lm9mZnNldFkgfHwgZXZ0LnBhZ2VZIC0gY2FudmFzLm9mZnNldFRvcDtcbiAgICAgICAgICAgIGNvbnN0IGRlbHRhID0gZXZ0LmRlbHRhWSA/IGV2dC5kZWx0YVkgLyA0MCA6IGV2dC5kZXRhaWwgPyAtZXZ0LmRldGFpbCA6IDA7XG4gICAgICAgICAgICBpZiAoZGVsdGEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBrID0gTWF0aC5wb3coMS4xLCBkZWx0YSk7XG4gICAgICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0ueCA9ICgxIC0gaykgKiB4ICsgayAqIHRoaXMudHJhbnNmb3JtLng7XG4gICAgICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0ueSA9ICgxIC0gaykgKiB5ICsgayAqIHRoaXMudHJhbnNmb3JtLnk7XG4gICAgICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0uayAqPSBrO1xuICAgICAgICAgICAgICAgIHRoaXMubmV0di4kX3JlbmRlcmVyLnNldFRyYW5zZm9ybSh0aGlzLnRyYW5zZm9ybSk7XG4gICAgICAgICAgICAgICAgdGhpcy5uZXR2LmxhYmVsTWFuYWdlci5zZXRUcmFuc2Zvcm0odGhpcy50cmFuc2Zvcm0pO1xuICAgICAgICAgICAgICAgIHRoaXMubmV0di5kcmF3KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfTtcbiAgICAgICAgY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ0RPTU1vdXNlU2Nyb2xsJywgaGFuZGxlU2Nyb2xsLCBmYWxzZSk7XG4gICAgICAgIGNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXdoZWVsJywgaGFuZGxlU2Nyb2xsLCBmYWxzZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHNldHVwIGNsaWNrIHV0aWxpdHlcbiAgICAgKi9cbiAgICBpbml0TW91c2UoKSB7XG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IHRoaXMubmV0di4kX2NvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCdjYW52YXMnKTtcbiAgICAgICAgY29uc3QgaGFuZGxlTW91c2VEb3duID0gKGV2dCkgPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgY29uc3QgeCA9IGV2dC5vZmZzZXRYIHx8IGV2dC5wYWdlWCAtIGNhbnZhcy5vZmZzZXRMZWZ0O1xuICAgICAgICAgICAgY29uc3QgeSA9IGV2dC5vZmZzZXRZIHx8IGV2dC5wYWdlWSAtIGNhbnZhcy5vZmZzZXRUb3A7XG4gICAgICAgICAgICBjb25zdCB5SW52ID0gdGhpcy5uZXR2LiRfY29uZmlncy5oZWlnaHQgLSB5O1xuICAgICAgICAgICAgdGhpcy5pc01vdXNlRG93biA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLm1vdXNlRG93blBvcyA9IHsgeCwgeSB9O1xuICAgICAgICAgICAgdGhpcy5kcmFnU3RhcnRUcmFuc2Zvcm0gPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMudHJhbnNmb3JtKSk7XG4gICAgICAgICAgICB0aGlzLm1vdXNlRG93bkVsZW1lbnQgPSB0aGlzLm5ldHYuZ2V0RWxlbWVudEJ5UG9zaXRpb24oe1xuICAgICAgICAgICAgICAgIHgsXG4gICAgICAgICAgICAgICAgeTogeUludlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoKF9hID0gdGhpcy5tb3VzZURvd25FbGVtZW50KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZWxlbWVudC5wb3NpdGlvbikge1xuICAgICAgICAgICAgICAgIC8vIHJlY29yZCBvcmdpbiBwb3NpdGlvbiBmb3IgZHJhZ1xuICAgICAgICAgICAgICAgIHRoaXMubW91c2VEb3duRWxlbWVudE9yaWdpblBvcyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMubW91c2VEb3duRWxlbWVudC5lbGVtZW50LnBvc2l0aW9uKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBoYW5kbGVNb3VzZU1vdmUgPSAoZXZ0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCB4ID0gZXZ0Lm9mZnNldFggfHwgZXZ0LnBhZ2VYIC0gY2FudmFzLm9mZnNldExlZnQ7XG4gICAgICAgICAgICBjb25zdCB5ID0gZXZ0Lm9mZnNldFkgfHwgZXZ0LnBhZ2VZIC0gY2FudmFzLm9mZnNldFRvcDtcbiAgICAgICAgICAgIGlmICh0aGlzLmlzTW91c2VEb3duKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pc01vdXNlTW92ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLm1vdXNlRG93bkVsZW1lbnQgfHwgIXRoaXMubW91c2VEb3duRWxlbWVudC5lbGVtZW50LnBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHBhbiwgd2hlbiBub3QgZHJhZ2dpbmcgbm9kZVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRyYW5zZm9ybS54ID0gdGhpcy5kcmFnU3RhcnRUcmFuc2Zvcm0ueCArIHggLSB0aGlzLm1vdXNlRG93blBvcy54O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRyYW5zZm9ybS55ID0gdGhpcy5kcmFnU3RhcnRUcmFuc2Zvcm0ueSArIHkgLSB0aGlzLm1vdXNlRG93blBvcy55O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5ldHYuJF9yZW5kZXJlci5zZXRUcmFuc2Zvcm0odGhpcy50cmFuc2Zvcm0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5ldHYubGFiZWxNYW5hZ2VyLnNldFRyYW5zZm9ybSh0aGlzLnRyYW5zZm9ybSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubmV0di5kcmF3KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBkcmFnIG5vZGVcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb3VzZURvd25FbGVtZW50LmVsZW1lbnQucG9zaXRpb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgeDogdGhpcy5tb3VzZURvd25FbGVtZW50T3JpZ2luUG9zLnggK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICh4IC0gdGhpcy5tb3VzZURvd25Qb3MueCkgLyB0aGlzLnRyYW5zZm9ybS5rLFxuICAgICAgICAgICAgICAgICAgICAgICAgeTogdGhpcy5tb3VzZURvd25FbGVtZW50T3JpZ2luUG9zLnkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICh5IC0gdGhpcy5tb3VzZURvd25Qb3MueSkgLyB0aGlzLnRyYW5zZm9ybS5rXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5ldHYuZHJhdygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IHlJbnYgPSB0aGlzLm5ldHYuJF9jb25maWdzLmhlaWdodCAtIHk7XG4gICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMubmV0di5nZXRFbGVtZW50QnlQb3NpdGlvbih7IHgsIHk6IHlJbnYgfSk7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQgPT09IG51bGwgfHwgZWxlbWVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZWxlbWVudC5lbGVtZW50LiRfaG92ZXJDYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmVsZW1lbnQuJF9ob3ZlckNhbGxiYWNrKGVsZW1lbnQuZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybjsgLy8gY3VycmVudGx5IG5vdCBzdXBwb3J0IGhvdmVyXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGhhbmRsZU1vdXNlVXAgPSAoZXZ0KSA9PiB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNNb3VzZU1vdmUgJiYgdGhpcy5tb3VzZURvd25FbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gY2xpY2tcbiAgICAgICAgICAgICAgICBpZiAoKF9hID0gdGhpcy5tb3VzZURvd25FbGVtZW50KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZWxlbWVudC4kX2NsaWNrQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb3VzZURvd25FbGVtZW50LmVsZW1lbnQuJF9jbGlja0NhbGxiYWNrKHRoaXMubW91c2VEb3duRWxlbWVudC5lbGVtZW50KTsgLy8gVE9ETzogbm90IGVsZWdhbnRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmlzTW91c2VEb3duID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmlzTW91c2VNb3ZlID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLm1vdXNlRG93bkVsZW1lbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgIH07XG4gICAgICAgIGNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBoYW5kbGVNb3VzZURvd24pO1xuICAgICAgICBjYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgaGFuZGxlTW91c2VNb3ZlKTtcbiAgICAgICAgY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVNb3VzZVVwKTtcbiAgICB9XG59XG5leHBvcnRzLkludGVyYWN0aW9uTWFuYWdlciA9IEludGVyYWN0aW9uTWFuYWdlcjtcblxuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9sYWJlbC9sYWJlbC50c1wiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3NyYy9sYWJlbC9sYWJlbC50cyAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBAYXV0aG9yIFhpYW9kb25nIFpoYW8gPHpoYW94aWFvZG9uZ0B6anUuZWR1LmNuPlxuICogQGRlc2NyaXB0aW9uIGdyYXBoIGxhYmVsIHJlbGF0ZWQgY2xhc3Mgb3IgbWV0aG9kXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTGFiZWxNYW5hZ2VyID0gdm9pZCAwO1xuY2xhc3MgTGFiZWxNYW5hZ2VyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb3JlKSB7XG4gICAgICAgIHRoaXMuJF9jb3JlID0gY29yZTtcbiAgICAgICAgdGhpcy4kX3N2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAnc3ZnJyk7XG4gICAgICAgIGNvcmUuJF9jb250YWluZXIucHJlcGVuZCh0aGlzLiRfc3ZnKTtcbiAgICAgICAgdGhpcy4kX3N2Zy5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgY29yZS4kX2NvbmZpZ3Mud2lkdGgpO1xuICAgICAgICB0aGlzLiRfc3ZnLnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgY29yZS4kX2NvbmZpZ3MuaGVpZ2h0KTtcbiAgICAgICAgY29yZS4kX2NvbnRhaW5lci5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XG4gICAgICAgIGNvcmUuJF9jb250YWluZXIuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICAgICAgY29yZS4kX2NvbnRhaW5lci5zdHlsZS53aWR0aCA9IGNvcmUuJF9jb25maWdzLndpZHRoO1xuICAgICAgICBjb3JlLiRfY29udGFpbmVyLnN0eWxlLmhlaWdodCA9IGNvcmUuJF9jb25maWdzLmhlaWdodDtcbiAgICAgICAgdGhpcy4kX3N2Zy5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gICAgICAgIHRoaXMuJF9zdmcuc3R5bGUub3ZlcmZsb3cgPSAndmlzaWJsZSc7XG4gICAgICAgIHRoaXMuJF9zdmcuc3R5bGUucG9pbnRlckV2ZW50cyA9ICdub25lJztcbiAgICAgICAgdGhpcy4kX29mZnNldCA9IHRoaXMuJF9jb3JlLiRfY29uZmlncy5sYWJlbC5vZmZzZXQ7XG4gICAgICAgIHRoaXMuJF9mb250U2l6ZSA9IHRoaXMuJF9jb3JlLiRfY29uZmlncy5sYWJlbC5mb250U2l6ZTtcbiAgICAgICAgdGhpcy4kX3N0cm9rZVdpZHRoID0gdGhpcy4kX2NvcmUuJF9jb25maWdzLmxhYmVsLnN0cm9rZVdpZHRoO1xuICAgICAgICB0aGlzLiRfc3ZnLnNldEF0dHJpYnV0ZSgndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgke3RoaXMuJF9vZmZzZXQueH0gJHt0aGlzLiRfb2Zmc2V0Lnl9KWApO1xuICAgICAgICB0aGlzLiRfc3ZnLnNldEF0dHJpYnV0ZSgnZm9udC1zaXplJywgYCR7dGhpcy4kX2ZvbnRTaXplfXB4YCk7XG4gICAgICAgIHRoaXMuJF9zdmcuc2V0QXR0cmlidXRlKCdzdHJva2UnLCBgd2hpdGVgKTtcbiAgICAgICAgdGhpcy4kX3N2Zy5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS13aWR0aCcsIGAke3RoaXMuJF9zdHJva2VXaWR0aH1weGApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBkcmF3IG5vZGUncyBsYWJlbFxuICAgICAqIEBwYXJhbSBub2RlIG5vZGUgdG8gYWRkIGxhYmVsXG4gICAgICovXG4gICAgZHJhd0xhYmVsKG5vZGUpIHtcbiAgICAgICAgY29uc3QgcG9zID0gbm9kZS5wb3NpdGlvbigpO1xuICAgICAgICBjb25zdCB0ZXh0ID0gbm9kZS50ZXh0KCk7XG4gICAgICAgIGlmICghdGV4dClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgdGV4dEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJywgJ3RleHQnKTtcbiAgICAgICAgdGV4dEVsZW1lbnQuc2V0QXR0cmlidXRlKCdpZCcsIG5vZGUuaWQoKSk7XG4gICAgICAgIHRleHRFbGVtZW50LnNldEF0dHJpYnV0ZSgneCcsIFN0cmluZyhwb3MueCkpO1xuICAgICAgICB0ZXh0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3knLCBTdHJpbmcocG9zLnkpKTtcbiAgICAgICAgdGV4dEVsZW1lbnQuc2V0QXR0cmlidXRlKCd0ZXh0LWFuY2hvcicsICdzdGFydCcpO1xuICAgICAgICB0ZXh0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FsaWdubWVudC1iYXNlbGluZScsICdtaWRkbGUnKTtcbiAgICAgICAgdGV4dEVsZW1lbnQuaW5uZXJIVE1MID0gdGV4dDtcbiAgICAgICAgdGhpcy4kX3N2Zy5hcHBlbmRDaGlsZCh0ZXh0RWxlbWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHJlbW92ZSBub2RlJ3MgbGFiZWxcbiAgICAgKiBAcGFyYW0gbm9kZSBub2RlIHRvIGRlbGV0ZSBsYWJlbFxuICAgICAqL1xuICAgIHJlbW92ZUxhYmVsKG5vZGUpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIChfYSA9IHRoaXMuJF9zdmcuZ2V0RWxlbWVudEJ5SWQobm9kZS5pZCgpKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJlbW92ZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBzZXQgdmlld3BvcnQgdHJhbnNmb3JtXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybVxuICAgICAqL1xuICAgIHNldFRyYW5zZm9ybSh0cmFuc2Zvcm0pIHtcbiAgICAgICAgdGhpcy4kX3N2Zy5zZXRBdHRyaWJ1dGUoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoJHt0aGlzLiRfb2Zmc2V0LnggKyAoMSAtIHRyYW5zZm9ybS5rKSAqIC00MDAgKyB0cmFuc2Zvcm0ueH1cbiAgICAgICAgICAgICAke3RoaXMuJF9vZmZzZXQueSArICgxIC0gdHJhbnNmb3JtLmspICogLTMwMCArIHRyYW5zZm9ybS55fSlcbiAgICAgICAgICAgICBzY2FsZSgke3RyYW5zZm9ybS5rfSlgKTtcbiAgICAgICAgdGhpcy4kX3N2Zy5zZXRBdHRyaWJ1dGUoJ2ZvbnQtc2l6ZScsIGAke3RoaXMuJF9mb250U2l6ZSAvIHRyYW5zZm9ybS5rfXB4YCk7XG4gICAgICAgIHRoaXMuJF9zdmcuc2V0QXR0cmlidXRlKCdzdHJva2Utd2lkdGgnLCBgJHt0aGlzLiRfc3Ryb2tlV2lkdGggLyB0cmFuc2Zvcm0ua31weGApO1xuICAgIH1cbn1cbmV4cG9ydHMuTGFiZWxNYW5hZ2VyID0gTGFiZWxNYW5hZ2VyO1xuXG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vc3JjL2xpbmsudHNcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3NyYy9saW5rLnRzICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQGF1dGhvciBKaWFjaGVuZyBQYW4gPGphY2tpZWFueGlzQGdtYWlsLmNvbT5cbiAqIEBkZXNjcmlwdGlvbiBQcm92aWRlIGEgTGluayBjbGFzcy5cbiAqIEBkZXBlbmRlbmNlcyBpbnRlcmZhY2VzLnRzLCB1dGlscy9pcy50c1xuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBMaW5rIHtcbiAgICBjb25zdHJ1Y3Rvcihjb3JlLCBsaW5rRGF0YSkge1xuICAgICAgICB0aGlzLiRfY29yZSA9IGNvcmU7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRDb25maWdzID0gdGhpcy4kX2NvcmUuJF9jb25maWdzO1xuICAgICAgICBjb25zdCBkYXRhID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICAgICAgICBzdHJva2VXaWR0aDogZGVmYXVsdENvbmZpZ3MubGluay5zdHJva2VXaWR0aCxcbiAgICAgICAgICAgIHN0cm9rZUNvbG9yOiBkZWZhdWx0Q29uZmlncy5saW5rLnN0cm9rZUNvbG9yLFxuICAgICAgICAgICAgY2xpY2tDYWxsYmFjazogZGVmYXVsdENvbmZpZ3MubGluay5jbGlja0NhbGxiYWNrLFxuICAgICAgICAgICAgaG92ZXJDYWxsYmFjazogZGVmYXVsdENvbmZpZ3MubGluay5ob3ZlckNhbGxiYWNrXG4gICAgICAgIH0sIGxpbmtEYXRhKTtcbiAgICAgICAgY29uc3Qgc291cmNlTm9kZSA9IHRoaXMuJF9jb3JlLmdldE5vZGVCeUlkKGRhdGEuc291cmNlKTtcbiAgICAgICAgY29uc3QgdGFyZ2V0Tm9kZSA9IHRoaXMuJF9jb3JlLmdldE5vZGVCeUlkKGRhdGEudGFyZ2V0KTtcbiAgICAgICAgdGhpcy5zb3VyY2VUYXJnZXQoe1xuICAgICAgICAgICAgc291cmNlOiBzb3VyY2VOb2RlLFxuICAgICAgICAgICAgdGFyZ2V0OiB0YXJnZXROb2RlXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLiRfc3Ryb2tlV2lkdGggPSBkYXRhLnN0cm9rZVdpZHRoO1xuICAgICAgICB0aGlzLiRfc3Ryb2tlQ29sb3IgPSBkYXRhLnN0cm9rZUNvbG9yO1xuICAgICAgICB0aGlzLnNldENsaWNrQ2FsbGJhY2soZGF0YS5jbGlja0NhbGxiYWNrKTtcbiAgICAgICAgdGhpcy5zZXRIb3ZlckNhbGxiYWNrKGRhdGEuaG92ZXJDYWxsYmFjayk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGdldHRlci9zZXR0ZXIgb2YgdGhlIHNvdXJjZVxuICAgICAqIEBwYXJhbSB7Tm9kZX0gW25vZGVdXG4gICAgICogQHJldHVybnMge05vZGV9IGEgc291cmNlIE5vZGUgT2JqZWN0XG4gICAgICogQG1lbWJlcm9mIExpbmtcbiAgICAgKi9cbiAgICBzb3VyY2Uobm9kZSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgLy8gc2V0dGVyXG4gICAgICAgICAgICB0aGlzLnNvdXJjZVRhcmdldCh7XG4gICAgICAgICAgICAgICAgc291cmNlOiBub2RlLFxuICAgICAgICAgICAgICAgIHRhcmdldDogdGhpcy4kX3RhcmdldFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuJF9zb3VyY2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGdldHRlci9zZXR0ZXIgb2YgdGhlIHRhcmdldFxuICAgICAqIEBwYXJhbSB7Tm9kZX0gW25vZGVdXG4gICAgICogQHJldHVybnMge05vZGV9IGEgdGFyZ2V0IE5vZGUgT2JqZWN0XG4gICAgICogQG1lbWJlcm9mIExpbmtcbiAgICAgKi9cbiAgICB0YXJnZXQobm9kZSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgLy8gc2V0dGVyXG4gICAgICAgICAgICB0aGlzLnNvdXJjZVRhcmdldCh7XG4gICAgICAgICAgICAgICAgc291cmNlOiB0aGlzLiRfc291cmNlLFxuICAgICAgICAgICAgICAgIHRhcmdldDogbm9kZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuJF90YXJnZXQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGdldHRlci9zZXR0ZXIgb2Ygc291cmNlIGFuZCB0YXJnZXRcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c291cmNlVGFyZ2V0T2JqfSBbe3NvdXJjZTogTm9kZSwgdGFyZ2V0OiBOb2RlfV1cbiAgICAgKiBAcmV0dXJucyBPYmplY3Qge3NvdXJjZTogTm9kZSwgdGFyZ2V0OiBOb2RlfVxuICAgICAqIEBtZW1iZXJvZiBMaW5rXG4gICAgICovXG4gICAgc291cmNlVGFyZ2V0KHNvdXJjZVRhcmdldE9iaikge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGNvbnN0IG9sZFNvdXJjZSA9IHRoaXMuJF9zb3VyY2U7XG4gICAgICAgICAgICBjb25zdCBvbGRUYXJnZXQgPSB0aGlzLiRfdGFyZ2V0O1xuICAgICAgICAgICAgY29uc3QgbmV3U291cmNlID0gc291cmNlVGFyZ2V0T2JqLnNvdXJjZTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1RhcmdldCA9IHNvdXJjZVRhcmdldE9iai50YXJnZXQ7XG4gICAgICAgICAgICBjb25zdCBuZXdTb3VyY2VJZCA9IG5ld1NvdXJjZS5pZCgpO1xuICAgICAgICAgICAgY29uc3QgbmV3VGFyZ2V0SWQgPSBuZXdUYXJnZXQuaWQoKTtcbiAgICAgICAgICAgIGlmIChuZXdTb3VyY2UgPT09IG5ld1RhcmdldCkge1xuICAgICAgICAgICAgICAgIC8vIGVycm9yOiBzZWxmIGxvb3BcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFNlbGYgbG9vcCAoJHtuZXdTb3VyY2VJZH0gPD0+ICR7bmV3VGFyZ2V0SWR9KSBpcyBub3QgYWxsb3dlZC5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLiRfY29yZS4kX2VuZHMybGluay5oYXMoW25ld1NvdXJjZUlkLCBuZXdUYXJnZXRJZF0pKSB7XG4gICAgICAgICAgICAgICAgLy8gZXJyb3I6IG11bHRpcGxlIGxpbmtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE11bHRpcGxlIGxpbmsgKCR7bmV3U291cmNlSWR9IDw9PiAke25ld1RhcmdldElkfSkgaXMgbm90IGFsbG93ZC5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvbGRTb3VyY2UgJiYgb2xkVGFyZ2V0KSB7XG4gICAgICAgICAgICAgICAgLy8gZGVsZXRlIG9sZCBNYXBcbiAgICAgICAgICAgICAgICB0aGlzLiRfY29yZS4kX2VuZHMybGluay5kZWxldGUoW29sZFNvdXJjZS5pZCgpLCBvbGRUYXJnZXQuaWQoKV0pO1xuICAgICAgICAgICAgICAgIChfYSA9IHRoaXMuJF9jb3JlLiRfc291cmNlSWQybGlua3MuZ2V0KG9sZFNvdXJjZS5pZCgpKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmRlbGV0ZSh0aGlzKTtcbiAgICAgICAgICAgICAgICAoX2IgPSB0aGlzLiRfY29yZS4kX3RhcmdldElkMmxpbmtzLmdldChvbGRUYXJnZXQuaWQoKSkpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5kZWxldGUodGhpcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLiRfc291cmNlID0gbmV3U291cmNlO1xuICAgICAgICAgICAgdGhpcy4kX3RhcmdldCA9IG5ld1RhcmdldDtcbiAgICAgICAgICAgIHRoaXMuJF9jb3JlLiRfZW5kczJsaW5rLnNldChbbmV3U291cmNlSWQsIG5ld1RhcmdldElkXSwgdGhpcyk7XG4gICAgICAgICAgICBpZiAoIXRoaXMuJF9jb3JlLiRfc291cmNlSWQybGlua3MuaGFzKG5ld1NvdXJjZUlkKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuJF9jb3JlLiRfc291cmNlSWQybGlua3Muc2V0KG5ld1NvdXJjZUlkLCBuZXcgU2V0KFt0aGlzXSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kX2NvcmUuJF9zb3VyY2VJZDJsaW5rcy5nZXQobmV3U291cmNlSWQpLmFkZCh0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghdGhpcy4kX2NvcmUuJF90YXJnZXRJZDJsaW5rcy5oYXMobmV3VGFyZ2V0SWQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kX2NvcmUuJF90YXJnZXRJZDJsaW5rcy5zZXQobmV3VGFyZ2V0SWQsIG5ldyBTZXQoW3RoaXNdKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRfY29yZS4kX3RhcmdldElkMmxpbmtzLmdldChuZXdUYXJnZXRJZCkuYWRkKHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzb3VyY2U6IHRoaXMuJF9zb3VyY2UsXG4gICAgICAgICAgICB0YXJnZXQ6IHRoaXMuJF90YXJnZXRcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogc2V0L2dldCBzdHJva2Ugd2lkdGggb2YgYSBub2RlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFt2YWx1ZV1cbiAgICAgKiBAbWVtYmVyb2YgTm9kZVxuICAgICAqL1xuICAgIHN0cm9rZVdpZHRoKHZhbHVlKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICB0aGlzLiRfc3Ryb2tlV2lkdGggPSB2YWx1ZTtcbiAgICAgICAgICAgIHRoaXMuJF9jb3JlLiRfcmVuZGVyZXIubGlua01hbmFnZXIuY2hhbmdlQXR0cmlidXRlKHRoaXMsICdzdHJva2VXaWR0aCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLiRfc3Ryb2tlV2lkdGg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHNldC9nZXQgc3Ryb2tlIGNvbG9yIG9mIGEgbm9kZVxuICAgICAqIEBwYXJhbSB7Q29sb3J9IFt2YWx1ZV1cbiAgICAgKi9cbiAgICBzdHJva2VDb2xvcih2YWx1ZSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgdGhpcy4kX3N0cm9rZUNvbG9yID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLiRfY29yZS4kX3JlbmRlcmVyLmxpbmtNYW5hZ2VyLmNoYW5nZUF0dHJpYnV0ZSh0aGlzLCAnc3Ryb2tlQ29sb3InKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy4kX3N0cm9rZUNvbG9yO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBzZXQgaG92ZXIgY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgaG92ZXIgY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgKi9cbiAgICBzZXRIb3ZlckNhbGxiYWNrKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuJF9ob3ZlckNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHNldCBjbGljayBjYWxsYmFjayBmdW5jdGlvblxuICAgICAqIEBwYXJhbSBjYWxsYmFjayBjbGljayBjYWxsYmFjayBmdW5jdGlvblxuICAgICAqL1xuICAgIHNldENsaWNrQ2FsbGJhY2soY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy4kX2NsaWNrQ2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBMaW5rO1xuXG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vc3JjL25vZGUudHNcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3NyYy9ub2RlLnRzICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQGF1dGhvciBKaWFjaGVuZyBQYW4gPGphY2tpZWFueGlzQGdtYWlsLmNvbT5cbiAqIEBkZXNjcmlwdGlvbiBQcm92aWRlIGEgTm9kZSBjbGFzcy5cbiAqIEBkZXBlbmRlbmNlcyBpbnRlcmZhY2VzLnRzLCB1dGlscy9pcy50c1xuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBpc18xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlscy9pcyAqLyBcIi4vc3JjL3V0aWxzL2lzLnRzXCIpO1xuY2xhc3MgTm9kZSB7XG4gICAgY29uc3RydWN0b3IoY29yZSwgbm9kZURhdGEpIHtcbiAgICAgICAgdGhpcy4kX3Bvc2l0aW9uID0ge1xuICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgIHk6IDBcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy4kX2NvcmUgPSBjb3JlO1xuICAgICAgICBjb25zdCBkZWZhdWx0Q29uZmlncyA9IHRoaXMuJF9jb3JlLiRfY29uZmlncztcbiAgICAgICAgY29uc3QgZGF0YSA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgICAgeDogdGhpcy4kX3Bvc2l0aW9uLngsXG4gICAgICAgICAgICB5OiB0aGlzLiRfcG9zaXRpb24ueSxcbiAgICAgICAgICAgIHN0cm9rZVdpZHRoOiBkZWZhdWx0Q29uZmlncy5ub2RlLnN0cm9rZVdpZHRoLFxuICAgICAgICAgICAgc3Ryb2tlQ29sb3I6IGRlZmF1bHRDb25maWdzLm5vZGUuc3Ryb2tlQ29sb3IsXG4gICAgICAgICAgICByOiBkZWZhdWx0Q29uZmlncy5ub2RlLnIsXG4gICAgICAgICAgICBmaWxsOiBkZWZhdWx0Q29uZmlncy5ub2RlLmZpbGwsXG4gICAgICAgICAgICBzaG93TGFiZWw6IGRlZmF1bHRDb25maWdzLm5vZGUuc2hvd0xhYmVsLFxuICAgICAgICAgICAgdGV4dDogZGVmYXVsdENvbmZpZ3Mubm9kZS50ZXh0LFxuICAgICAgICAgICAgY2xpY2tDYWxsYmFjazogZGVmYXVsdENvbmZpZ3Mubm9kZS5jbGlja0NhbGxiYWNrLFxuICAgICAgICAgICAgaG92ZXJDYWxsYmFjazogZGVmYXVsdENvbmZpZ3Mubm9kZS5ob3ZlckNhbGxiYWNrXG4gICAgICAgIH0sIG5vZGVEYXRhKTtcbiAgICAgICAgdGhpcy4kX3NldElkKGRhdGEuaWQpO1xuICAgICAgICB0aGlzLiRfcG9zaXRpb24gPSB7XG4gICAgICAgICAgICB4OiBkYXRhLngsXG4gICAgICAgICAgICB5OiBkYXRhLnlcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy4kX3N0cm9rZVdpZHRoID0gZGF0YS5zdHJva2VXaWR0aDtcbiAgICAgICAgdGhpcy4kX3N0cm9rZUNvbG9yID0gZGF0YS5zdHJva2VDb2xvcjtcbiAgICAgICAgdGhpcy4kX2ZpbGwgPSBkYXRhLmZpbGw7XG4gICAgICAgIHRoaXMuJF9yID0gZGF0YS5yO1xuICAgICAgICB0aGlzLiRfc2hvd0xhYmVsID0gZGF0YS5zaG93TGFiZWw7XG4gICAgICAgIHRoaXMuJF90ZXh0ID0gZGF0YS50ZXh0O1xuICAgICAgICBpZiAodGhpcy4kX3Nob3dMYWJlbCkge1xuICAgICAgICAgICAgdGhpcy5zaG93TGFiZWwodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRDbGlja0NhbGxiYWNrKGRhdGEuY2xpY2tDYWxsYmFjayk7XG4gICAgICAgIHRoaXMuc2V0SG92ZXJDYWxsYmFjayhkYXRhLmhvdmVyQ2FsbGJhY2spO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBnZXR0ZXIgb2YgcHJpdmF0ZSBwcm9wZXJ0eSAkX2lkXG4gICAgICogQG1lbWJlcm9mIE5vZGVcbiAgICAgKi9cbiAgICBpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuJF9pZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogc2V0L2dldCB4IHBvc3Rpb25cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW3ZhbHVlXVxuICAgICAqIEBtZW1iZXJvZiBOb2RlXG4gICAgICovXG4gICAgeCh2YWx1ZSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMucG9zaXRpb24oe1xuICAgICAgICAgICAgICAgIHg6IHZhbHVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy4kX3Bvc2l0aW9uLng7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHNldC9nZXQgeSBwb3N0aW9uXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFt2YWx1ZV1cbiAgICAgKiBAbWVtYmVyb2YgTm9kZVxuICAgICAqL1xuICAgIHkodmFsdWUpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uKHtcbiAgICAgICAgICAgICAgICB5OiB2YWx1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuJF9wb3NpdGlvbi55O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBzZXQvZ2V0IHBvc3Rpb25cbiAgICAgKiBAbWVtYmVyb2YgTm9kZVxuICAgICAqL1xuICAgIHBvc2l0aW9uKHBvc2l0aW9uKSB7XG4gICAgICAgIGxldCBsaW5rU2V0cyA9IHt9O1xuICAgICAgICAvLyBlLmcuIHNldE9uZVBvc2l0aW9uKCd4JywgMSkgbWVhbnMgc2V0IHggcG9zaXRpb24gd2l0aCB2YWx1ZSAxXG4gICAgICAgIGNvbnN0IHNldE9uZVBvc2l0aW9uID0gKGtleSwgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIHRoaXMuJF9wb3NpdGlvbltrZXldID0gdmFsdWU7IC8vIGtleTogJ3gnIG9yICd5J1xuICAgICAgICAgICAgaWYgKCF0aGlzLiRfY29yZS4kX2xhenlMaW5rVXBkYXRlKSB7XG4gICAgICAgICAgICAgICAgLy8gbGF6ZUxpbmtVcGRhdGUgbWVhbnMgdXBkYXRlIGxpbmtzIGluIGJhdGNoIG1vZGVcbiAgICAgICAgICAgICAgICBPYmplY3QuZW50cmllcyhsaW5rU2V0cykuZm9yRWFjaCgoZW50cnkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZW50cnlbMF06ICdzb3VyY2UnIC8gJ3RhcmdldCdcbiAgICAgICAgICAgICAgICAgICAgLy8gZW50cnlbMV06IHRoZSBsaW5rIHNldFxuICAgICAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBlbnRyeVswXTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2V0ID0gZW50cnlbMV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJF9jb3JlLiRfYWRkTW9kaWZpZWRMaW5rQ291bnQoc2V0LnNpemUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBsaW5rIG9mIHNldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJF9jb3JlLiRfcmVuZGVyZXIubGlua01hbmFnZXIuY2hhbmdlQXR0cmlidXRlKGxpbmssIGtleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAwICYmICgneCcgaW4gcG9zaXRpb24gfHwgJ3knIGluIHBvc2l0aW9uKSkge1xuICAgICAgICAgICAgbGlua1NldHMgPSB7XG4gICAgICAgICAgICAgICAgLy8gZmluZCBsaW5rcyBmcm9tL3RvIHRoaXMgbm9kZVxuICAgICAgICAgICAgICAgIHNvdXJjZTogdGhpcy4kX2NvcmUuJF9zb3VyY2VJZDJsaW5rcy5nZXQodGhpcy4kX2lkKSxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IHRoaXMuJF9jb3JlLiRfdGFyZ2V0SWQybGlua3MuZ2V0KHRoaXMuJF9pZClcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAoJ3gnIGluIHBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgc2V0T25lUG9zaXRpb24oJ3gnLCBwb3NpdGlvbi54KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgneScgaW4gcG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICBzZXRPbmVQb3NpdGlvbigneScsIHBvc2l0aW9uLnkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy4kX2NvcmUuJF9yZW5kZXJlci5ub2RlTWFuYWdlci5jaGFuZ2VBdHRyaWJ1dGUodGhpcywgJ3Bvc2l0aW9uJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuJF9wb3NpdGlvbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogc2V0L2dldCBzdHJva2Ugd2lkdGggb2YgYSBub2RlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFt2YWx1ZV1cbiAgICAgKiBAbWVtYmVyb2YgTm9kZVxuICAgICAqL1xuICAgIHN0cm9rZVdpZHRoKHZhbHVlKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICB0aGlzLiRfc3Ryb2tlV2lkdGggPSB2YWx1ZTtcbiAgICAgICAgICAgIHRoaXMuJF9jb3JlLiRfcmVuZGVyZXIubm9kZU1hbmFnZXIuY2hhbmdlQXR0cmlidXRlKHRoaXMsICdzdHJva2VXaWR0aCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLiRfc3Ryb2tlV2lkdGg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHNldC9nZXQgc3Ryb2tlIGNvbG9yIG9mIGEgbm9kZVxuICAgICAqIEBwYXJhbSB7Q29sb3J9IFt2YWx1ZV1cbiAgICAgKi9cbiAgICBzdHJva2VDb2xvcih2YWx1ZSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgdGhpcy4kX3N0cm9rZUNvbG9yID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLiRfY29yZS4kX3JlbmRlcmVyLm5vZGVNYW5hZ2VyLmNoYW5nZUF0dHJpYnV0ZSh0aGlzLCAnc3Ryb2tlQ29sb3InKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy4kX3N0cm9rZUNvbG9yO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBzZXQvZ2V0IGZpbGwgY29sb3Igb2YgYSBub2RlXG4gICAgICogQHBhcmFtIHtDb2xvcn0gW3ZhbHVlXVxuICAgICAqL1xuICAgIGZpbGwodmFsdWUpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIHRoaXMuJF9maWxsID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLiRfY29yZS4kX3JlbmRlcmVyLm5vZGVNYW5hZ2VyLmNoYW5nZUF0dHJpYnV0ZSh0aGlzLCAnZmlsbCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLiRfZmlsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogc2V0L2dldCByYWRpdXMgb2YgYSBub2RlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtyXVxuICAgICAqL1xuICAgIHIodmFsdWUpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIHRoaXMuJF9yID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLiRfY29yZS4kX3JlbmRlcmVyLm5vZGVNYW5hZ2VyLmNoYW5nZUF0dHJpYnV0ZSh0aGlzLCAncmFkaXVzJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuJF9yO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBjb250cm9sIGxhYmVsIHNob3cgb3Igbm90XG4gICAgICogQHBhcmFtIHZhbHVlXG4gICAgICovXG4gICAgc2hvd0xhYmVsKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuJF9zaG93TGFiZWwgPSB2YWx1ZTtcbiAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzLiRfY29yZS5sYWJlbE1hbmFnZXIuZHJhd0xhYmVsKHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy4kX2NvcmUubGFiZWxNYW5hZ2VyLnJlbW92ZUxhYmVsKHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGdldC9zZXQgbm9kZSdzIGxhYmVsXG4gICAgICogQHBhcmFtIHZhbHVlIGxhYmVsIHRleHRcbiAgICAgKi9cbiAgICB0ZXh0KHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy4kX3RleHQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy4kX3RleHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGdldC9zZXQgb2Zmc2V0IHZhbHVlXG4gICAgICogQHBhcmFtIHZhbHVlIG9mZnNldCB2YWx1ZVxuICAgICAqIEBkZXByZWNhdGVkIG5vdCB1c2VkIGN1cnJlbnRseSwgbm90IHN1cHBvcnQgc2V0IG5vZGUncyBsYWJlbCBvZmZzZXQgaW5kaXZpZHVhbGx5XG4gICAgICovXG4gICAgdGV4dE9mZnNldCh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMuJF90ZXh0T2Zmc2V0ID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuJF90ZXh0T2Zmc2V0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBzZXQgdGhlIGlkIG9mIHRoaXMgbm9kZS5cbiAgICAgKiBpdCBpcyBvbmx5IHVzZWQgZm9yIGNvbnN0cnVjdG9yXG4gICAgICogYmVjYXVzZSBhIG5vZGUncyBpZCBpcyBub3QgYWxsb3dlZCB0byBiZSBjaGFuZ2VkLlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gICAgICogQHJldHVybnMgbm90aGluZ1xuICAgICAqIEBtZW1iZXJvZiBOb2RlXG4gICAgICovXG4gICAgJF9zZXRJZCh2YWx1ZSkge1xuICAgICAgICBpZiAoaXNfMS5pc1ZhbGlkSWQodmFsdWUpKSB7XG4gICAgICAgICAgICBpZiAodGhpcy4kX2NvcmUuJF9pZDJub2RlLmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYER1cGxpY2F0ZSBub2RlICgke3ZhbHVlfSkgaXMgbm90IGFsbG93ZWQuYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXNfMS5pc1ZhbGlkSWQodGhpcy4kX2lkKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2FuIG5vdCBjaGFuZ2UgdGhlIGlkIG9mIGFuIGV4aXN0IG5vZGUuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLiRfY29yZS4kX2lkMm5vZGUuc2V0KHZhbHVlLCB0aGlzKTtcbiAgICAgICAgICAgIHRoaXMuJF9pZCA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIElEICR7dmFsdWV9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogc2V0IGhvdmVyIGNhbGxiYWNrIGZ1bmN0aW9uXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIGhvdmVyIGNhbGxiYWNrIGZ1bmN0aW9uXG4gICAgICovXG4gICAgc2V0SG92ZXJDYWxsYmFjayhjYWxsYmFjaykge1xuICAgICAgICB0aGlzLiRfaG92ZXJDYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBzZXQgY2xpY2sgY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgY2xpY2sgY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgKi9cbiAgICBzZXRDbGlja0NhbGxiYWNrKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuJF9jbGlja0NhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTm9kZTtcblxuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9saW5rL2ZyYWdtZW50Lmdsc2xcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vc3JjL3JlbmRlcmVyL2VsZW1lbnRzL2xpbmsvZnJhZ21lbnQuZ2xzbCAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImRlZmF1bHRcIl0gPSAoXCIjdmVyc2lvbiAzMDAgZXNcXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuaW4gdmVjNCBjb2xvcjtcXG5cXG5vdXQgdmVjNCBmcmFnbWVudENvbG9yO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICAgIGZyYWdtZW50Q29sb3IgPSB2ZWM0KGNvbG9yLnJnYiAqIGNvbG9yLmEsIGNvbG9yLmEpO1xcbn1cIik7XG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vc3JjL3JlbmRlcmVyL2VsZW1lbnRzL2xpbmsvaWQtZnJhZ21lbnQuZ2xzbFwiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9zcmMvcmVuZGVyZXIvZWxlbWVudHMvbGluay9pZC1mcmFnbWVudC5nbHNsICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZGVmYXVsdFwiXSA9IChcIiN2ZXJzaW9uIDMwMCBlc1xcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5pbiB2ZWM0IGNvbG9yO1xcblxcbmluIHZlYzQgaWQ7XFxuXFxuLy8gVE9ETzogYWxsIGlkIHJlbGF0ZWQgc2hhZGVyIG5lZWQgY2xlYW4gdXBcXG5vdXQgdmVjNCBmcmFnbWVudENvbG9yO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICAgIGZyYWdtZW50Q29sb3IgPSBpZDtcXG59XCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9saW5rL2lkLXZlcnRleC5nbHNsXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9zcmMvcmVuZGVyZXIvZWxlbWVudHMvbGluay9pZC12ZXJ0ZXguZ2xzbCAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJkZWZhdWx0XCJdID0gKFwiI3ZlcnNpb24gMzAwIGVzXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbmluIHZlYzMgaW5WZXJ0ZXhQb3M7XFxuaW4gdmVjMiBpblNvdXJjZVBvc2l0aW9uO1xcbmluIHZlYzIgaW5UYXJnZXRQb3NpdGlvbjtcXG5pbiBmbG9hdCBpblN0cm9rZVdpZHRoO1xcbmluIHZlYzQgaW5TdHJva2VDb2xvcjtcXG5cXG5pbiB2ZWM0IGluSWQ7XFxuXFxub3V0IHZlYzQgY29sb3I7XFxuXFxub3V0IHZlYzQgaWQ7XFxuXFxudW5pZm9ybSBtYXQzIHByb2plY3Rpb247XFxudW5pZm9ybSB2ZWMyIHNjYWxlO1xcbnVuaWZvcm0gdmVjMiB0cmFuc2xhdGU7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gICAgaWQgPSBpbklkO1xcblxcbiAgICBjb2xvciA9IGluU3Ryb2tlQ29sb3I7XFxuXFxuICAgIHZlYzIgc291cmNlID0gaW5Tb3VyY2VQb3NpdGlvbiAqIHNjYWxlICsgdHJhbnNsYXRlO1xcbiAgICB2ZWMyIHRhcmdldCA9IGluVGFyZ2V0UG9zaXRpb24gKiBzY2FsZSArIHRyYW5zbGF0ZTtcXG4gICAgdmVjMiBkZWx0YSA9IHNvdXJjZSAtIHRhcmdldDtcXG4gICAgdmVjMiBjZW50ZXIgPSAwLjUgKiAoc291cmNlICsgdGFyZ2V0KTtcXG4gICAgZmxvYXQgbGVuID0gbGVuZ3RoKGRlbHRhKTtcXG4gICAgZmxvYXQgcGhpID0gYXRhbihkZWx0YS55IC8gZGVsdGEueCk7XFxuXFxuICAgIG1hdDMgbGluZV9zY2FsZSA9IG1hdDMoXFxuICAgICAgICBsZW4sIDAsIDAsXFxuICAgICAgICAwLCBpblN0cm9rZVdpZHRoLCAwLFxcbiAgICAgICAgMCwgMCwgMVxcbiAgICApO1xcbiAgICBtYXQzIGxpbmVfcm90YXRlID0gbWF0MyhcXG4gICAgICAgIGNvcyhwaGkpLCBzaW4ocGhpKSwgMCxcXG4gICAgICAgIC1zaW4ocGhpKSwgY29zKHBoaSksIDAsXFxuICAgICAgICAwLCAwLCAxXFxuICAgICk7XFxuICAgIG1hdDMgbGluZV90cmFuc2xhdGUgPSBtYXQzKFxcbiAgICAgICAgMSwgMCwgMCxcXG4gICAgICAgIDAsIDEsIDAsXFxuICAgICAgICBjZW50ZXIueCwgY2VudGVyLnksIDFcXG4gICAgKTtcXG4gICAgXFxuICAgIG1hdDMgdHJhbnNmb3JtID0gbGluZV90cmFuc2xhdGUgKiBsaW5lX3JvdGF0ZSAqIGxpbmVfc2NhbGU7XFxuXFxuICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwcm9qZWN0aW9uICogdHJhbnNmb3JtICogaW5WZXJ0ZXhQb3MsIDEuKTtcXG59XCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9saW5rL3JlbmRlci1saW5rLnRzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9zcmMvcmVuZGVyZXIvZWxlbWVudHMvbGluay9yZW5kZXItbGluay50cyAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIEBhdXRob3IgWGlhb2RvbmcgWmhhbyA8emhhb3hpYW9kb25nQHpqdS5lZHUuY24+XG4gKiBAZGVzY3JpcHRpb24gTGluayB1c2VkIGluIHJlbmRlcmVyXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVuZGVyTGlua01hbmFnZXIgPSB2b2lkIDA7XG5jb25zdCB2ZXJ0ZXhfZ2xzbF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi92ZXJ0ZXguZ2xzbCAqLyBcIi4vc3JjL3JlbmRlcmVyL2VsZW1lbnRzL2xpbmsvdmVydGV4Lmdsc2xcIik7XG5jb25zdCBmcmFnbWVudF9nbHNsXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2ZyYWdtZW50Lmdsc2wgKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9saW5rL2ZyYWdtZW50Lmdsc2xcIik7XG5jb25zdCBpZF92ZXJ0ZXhfZ2xzbF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9pZC12ZXJ0ZXguZ2xzbCAqLyBcIi4vc3JjL3JlbmRlcmVyL2VsZW1lbnRzL2xpbmsvaWQtdmVydGV4Lmdsc2xcIik7XG5jb25zdCBpZF9mcmFnbWVudF9nbHNsXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2lkLWZyYWdtZW50Lmdsc2wgKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9saW5rL2lkLWZyYWdtZW50Lmdsc2xcIik7XG5jb25zdCB1dGlsc18xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbHMgKi8gXCIuL3NyYy9yZW5kZXJlci91dGlscy50c1wiKTtcbmNvbnN0IG1hcDJfMSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uLy4uL3V0aWxzL21hcDIgKi8gXCIuL3NyYy91dGlscy9tYXAyLnRzXCIpO1xudmFyIExpbmtBdHRyS2V5O1xuKGZ1bmN0aW9uIChMaW5rQXR0cktleSkge1xuICAgIExpbmtBdHRyS2V5W0xpbmtBdHRyS2V5W1wiVEVNUExBVEVcIl0gPSAwXSA9IFwiVEVNUExBVEVcIjtcbiAgICBMaW5rQXR0cktleVtMaW5rQXR0cktleVtcIlNPVVJDRVwiXSA9IDFdID0gXCJTT1VSQ0VcIjtcbiAgICBMaW5rQXR0cktleVtMaW5rQXR0cktleVtcIlRBUkdFVFwiXSA9IDJdID0gXCJUQVJHRVRcIjtcbiAgICBMaW5rQXR0cktleVtMaW5rQXR0cktleVtcIldJRFRIXCJdID0gM10gPSBcIldJRFRIXCI7XG4gICAgTGlua0F0dHJLZXlbTGlua0F0dHJLZXlbXCJDT0xPUlwiXSA9IDRdID0gXCJDT0xPUlwiO1xufSkoTGlua0F0dHJLZXkgfHwgKExpbmtBdHRyS2V5ID0ge30pKTtcbnZhciBMaW5rSWRBdHRyS2V5O1xuKGZ1bmN0aW9uIChMaW5rSWRBdHRyS2V5KSB7XG4gICAgTGlua0lkQXR0cktleVtMaW5rSWRBdHRyS2V5W1wiVEVNUExBVEVcIl0gPSAwXSA9IFwiVEVNUExBVEVcIjtcbiAgICBMaW5rSWRBdHRyS2V5W0xpbmtJZEF0dHJLZXlbXCJTT1VSQ0VcIl0gPSAxXSA9IFwiU09VUkNFXCI7XG4gICAgTGlua0lkQXR0cktleVtMaW5rSWRBdHRyS2V5W1wiVEFSR0VUXCJdID0gMl0gPSBcIlRBUkdFVFwiO1xuICAgIExpbmtJZEF0dHJLZXlbTGlua0lkQXR0cktleVtcIldJRFRIXCJdID0gM10gPSBcIldJRFRIXCI7XG4gICAgTGlua0lkQXR0cktleVtMaW5rSWRBdHRyS2V5W1wiQ09MT1JcIl0gPSA0XSA9IFwiQ09MT1JcIjtcbiAgICBMaW5rSWRBdHRyS2V5W0xpbmtJZEF0dHJLZXlbXCJJRFwiXSA9IDVdID0gXCJJRFwiO1xufSkoTGlua0lkQXR0cktleSB8fCAoTGlua0lkQXR0cktleSA9IHt9KSk7XG5jb25zdCBMaW5rQXR0ck1hcCA9IHtcbiAgICBzb3VyY2U6IExpbmtBdHRyS2V5LlNPVVJDRSxcbiAgICB0YXJnZXQ6IExpbmtBdHRyS2V5LlRBUkdFVCxcbiAgICBzdHJva2VXaWR0aDogTGlua0F0dHJLZXkuV0lEVEgsXG4gICAgc3Ryb2tlQ29sb3I6IExpbmtBdHRyS2V5LkNPTE9SXG59O1xuY2xhc3MgUmVuZGVyTGlua01hbmFnZXIge1xuICAgIC8qKlxuICAgICAqIGNyZWF0ZSByZW5kZXIgbGluayBtYW5hZ2VyXG4gICAgICogQHBhcmFtIGdsIFdlYkdMIGNvbnRleHRcbiAgICAgKiBAcGFyYW0gcGFyYW1zIG5lc3Nlc2FyeSBjb25maWdzIGZvciBsaW5rIG1hbmFnZXJcbiAgICAgKiBAcGFyYW0gaWRUZXh0dXJlIHRleHR1cmUgc3RvcmUgZWxlbWVudHMgaWQgb2YgZWFjaCBwaXhlbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGdsLCBwYXJhbXMsIGlkVGV4dHVyZSkge1xuICAgICAgICB0aGlzLmNvdW50ID0gMDtcbiAgICAgICAgdGhpcy5pZHNUb0luZGV4ID0gbmV3IG1hcDJfMS5kZWZhdWx0KCk7XG4gICAgICAgIGNvbnN0IHsgbGltaXQsIHdpZHRoLCBoZWlnaHQgfSA9IHBhcmFtcztcbiAgICAgICAgdGhpcy5nbCA9IGdsO1xuICAgICAgICB0aGlzLmxpbWl0ID0gbGltaXQ7XG4gICAgICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgIHRoaXMucGl4ZWxSYXRpbyA9IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IDE7XG4gICAgICAgIHRoaXMuYXR0cmlidXRlcyA9IHV0aWxzXzEuZXh0cmFjdEF0dHJpYnV0ZXNGcm9tU2hhZGVyKHZlcnRleF9nbHNsXzEuZGVmYXVsdCk7XG4gICAgICAgIHRoaXMucHJvZ3JhbSA9IHV0aWxzXzEuY3JlYXRlUHJvZ3JhbSh0aGlzLmdsLCB2ZXJ0ZXhfZ2xzbF8xLmRlZmF1bHQsIGZyYWdtZW50X2dsc2xfMS5kZWZhdWx0LCB0aGlzLmF0dHJpYnV0ZXMpO1xuICAgICAgICB0aGlzLmlkQXR0cmlidXRlcyA9IHV0aWxzXzEuZXh0cmFjdEF0dHJpYnV0ZXNGcm9tU2hhZGVyKGlkX3ZlcnRleF9nbHNsXzEuZGVmYXVsdCk7XG4gICAgICAgIHRoaXMuaWRQcm9ncmFtID0gdXRpbHNfMS5jcmVhdGVQcm9ncmFtKHRoaXMuZ2wsIGlkX3ZlcnRleF9nbHNsXzEuZGVmYXVsdCwgaWRfZnJhZ21lbnRfZ2xzbF8xLmRlZmF1bHQsIHRoaXMuaWRBdHRyaWJ1dGVzKTtcbiAgICAgICAgdGhpcy5pZFRleHR1cmUgPSBpZFRleHR1cmU7XG4gICAgICAgIHRoaXMucmVuZGVySWRUb0lkcyA9IHt9O1xuICAgICAgICAvLyBpbml0IGFycmF5c1xuICAgICAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW0xpbmtBdHRyS2V5LlRFTVBMQVRFXS5hcnJheSA9IG5ldyBGbG9hdDMyQXJyYXkoW1xuICAgICAgICAgICAgLTAuNSwgMC41LCAxLjAsXG4gICAgICAgICAgICAtMC41LCAtMC41LCAxLjAsXG4gICAgICAgICAgICAwLjUsIDAuNSwgMS4wLFxuICAgICAgICAgICAgMC41LCAtMC41LCAxLjAsXG4gICAgICAgIF0pO1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMuZm9yRWFjaCgoYXR0cikgPT4ge1xuICAgICAgICAgICAgaWYgKCFhdHRyLmlzQnVpbGRJbilcbiAgICAgICAgICAgICAgICBhdHRyLmFycmF5ID0gbmV3IEZsb2F0MzJBcnJheShhdHRyLnNpemUgKiB0aGlzLmxpbWl0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIGluaXQgYnVmZmVyc1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMuZm9yRWFjaCgoYXR0cikgPT4ge1xuICAgICAgICAgICAgYXR0ci5idWZmZXIgPSB1dGlsc18xLmNyZWF0ZUFycmF5QnVmZmVyKHRoaXMuZ2wsIGF0dHIuYXJyYXkpO1xuICAgICAgICB9KTtcbiAgICAgICAgLy8gaW5pdCBpZCBhdHRyaWJ1dGVzIGFuZCBidWZmZXJzXG4gICAgICAgIC8vIFRPRE86IGhhcmRjb2RlIGNoZWNrLCBuZWVkIHJlZmFjdG9yXG4gICAgICAgIHRoaXMuaWRBdHRyaWJ1dGVzLmZvckVhY2goKGF0dHIsIGlkeCkgPT4ge1xuICAgICAgICAgICAgaWYgKGlkeCA8IHRoaXMuYXR0cmlidXRlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlkQXR0cmlidXRlc1tpZHhdID0gdGhpcy5hdHRyaWJ1dGVzW2lkeF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoIWF0dHIuaXNCdWlsZEluKVxuICAgICAgICAgICAgICAgICAgICBhdHRyLmFycmF5ID0gbmV3IEZsb2F0MzJBcnJheShhdHRyLnNpemUgKiB0aGlzLmxpbWl0KTtcbiAgICAgICAgICAgICAgICBhdHRyLmJ1ZmZlciA9IHV0aWxzXzEuY3JlYXRlQXJyYXlCdWZmZXIodGhpcy5nbCwgYXR0ci5hcnJheSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBpbml0IHVuaWZvcm1zXG4gICAgICAgIHRoaXMuZ2wudXNlUHJvZ3JhbSh0aGlzLnByb2dyYW0pO1xuICAgICAgICBjb25zdCBwcm9qZWN0aW9uTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCAncHJvamVjdGlvbicpO1xuICAgICAgICBjb25zdCBzY2FsZUxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgJ3NjYWxlJyk7XG4gICAgICAgIGNvbnN0IHRyYW5zbGF0ZUxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgJ3RyYW5zbGF0ZScpO1xuICAgICAgICAvLyB0aGlzLmdsLnZpZXdwb3J0KDAsIDAsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KSAvLyBUT0RPOiB2aWV3cG9ydCBzZXQsIG5vdCBuZWVkZWQ/IHB1dCBoZXJlIGluIGNhc2UgYnVnIGFwcGVhclxuICAgICAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAgICAgY29uc3QgcHJvamVjdGlvbiA9IG5ldyBGbG9hdDMyQXJyYXkoW1xuICAgICAgICAgICAgMiAvIHRoaXMud2lkdGgsIDAsIDAsXG4gICAgICAgICAgICAwLCAtMiAvIHRoaXMuaGVpZ2h0LCAwLFxuICAgICAgICAgICAgLTEsIDEsIDFcbiAgICAgICAgXSk7XG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybU1hdHJpeDNmdihwcm9qZWN0aW9uTG9jLCBmYWxzZSwgcHJvamVjdGlvbik7XG4gICAgICAgIGNvbnN0IHNjYWxlID0gbmV3IEZsb2F0MzJBcnJheShbMSwgMV0pO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZnYoc2NhbGVMb2MsIHNjYWxlKTtcbiAgICAgICAgY29uc3QgdHJhbnNsYXRlID0gbmV3IEZsb2F0MzJBcnJheShbMCwgMF0pO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZnYodHJhbnNsYXRlTG9jLCB0cmFuc2xhdGUpO1xuICAgICAgICAvLyBpZCB1bmlmb3JtcywgaWRlbnRpY2FsIHRvIGxpbmtcbiAgICAgICAgLy8gVE9ETzogbmVlZCByZWZhY3RvciB0b29cbiAgICAgICAgdGhpcy5nbC51c2VQcm9ncmFtKHRoaXMuaWRQcm9ncmFtKTtcbiAgICAgICAgY29uc3QgaWRQcm9qZWN0aW9uTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5pZFByb2dyYW0sICdwcm9qZWN0aW9uJyk7XG4gICAgICAgIGNvbnN0IGlkU2NhbGVMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLmlkUHJvZ3JhbSwgJ3NjYWxlJyk7XG4gICAgICAgIGNvbnN0IGlkVHJhbnNsYXRlTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5pZFByb2dyYW0sICd0cmFuc2xhdGUnKTtcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtTWF0cml4M2Z2KGlkUHJvamVjdGlvbkxvYywgZmFsc2UsIHByb2plY3Rpb24pO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZnYoaWRTY2FsZUxvYywgc2NhbGUpO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZnYoaWRUcmFuc2xhdGVMb2MsIHRyYW5zbGF0ZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGNoYW5nZSBsaW5rJ3MgYXR0cmlidXRlXG4gICAgICogQHBhcmFtIGxpbmsgbGluayBkYXRhXG4gICAgICogQHBhcmFtIGF0dHJpYnV0ZSBhdHRyaWJ1dGUga2V5IHRvIGNoYW5nZVxuICAgICAqL1xuICAgIGNoYW5nZUF0dHJpYnV0ZShsaW5rLCBhdHRyaWJ1dGUpIHtcbiAgICAgICAgY29uc3Qga2V5ID0gTGlua0F0dHJNYXBbYXR0cmlidXRlXTtcbiAgICAgICAgY29uc3QgYXR0ciA9IHRoaXMuYXR0cmlidXRlc1trZXldO1xuICAgICAgICBjb25zdCBub2RlcyA9IGxpbmsuc291cmNlVGFyZ2V0KCk7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5pZHNUb0luZGV4LmdldChbbm9kZXMuc291cmNlLmlkKCksIG5vZGVzLnRhcmdldC5pZCgpXSk7XG4gICAgICAgIGxldCBkYXRhID0gbnVsbDtcbiAgICAgICAgaWYgKGF0dHJpYnV0ZSA9PT0gJ3NvdXJjZScpIHtcbiAgICAgICAgICAgIGNvbnN0IHBvcyA9IG5vZGVzLnNvdXJjZS5wb3NpdGlvbigpO1xuICAgICAgICAgICAgZGF0YSA9IFtwb3MueCwgcG9zLnldO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGF0dHJpYnV0ZSA9PT0gJ3RhcmdldCcpIHtcbiAgICAgICAgICAgIGNvbnN0IHBvcyA9IG5vZGVzLnRhcmdldC5wb3NpdGlvbigpO1xuICAgICAgICAgICAgZGF0YSA9IFtwb3MueCwgcG9zLnldO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGF0dHJpYnV0ZSA9PT0gJ3N0cm9rZVdpZHRoJykge1xuICAgICAgICAgICAgZGF0YSA9IFtsaW5rLnN0cm9rZVdpZHRoKCkgKiB0aGlzLnBpeGVsUmF0aW9dO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGF0dHJpYnV0ZSA9PT0gJ3N0cm9rZUNvbG9yJykge1xuICAgICAgICAgICAgY29uc3QgY29sID0gbGluay5zdHJva2VDb2xvcigpO1xuICAgICAgICAgICAgZGF0YSA9IFtjb2wuciwgY29sLmcsIGNvbC5iLCBjb2wuYV07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdMaW5rIGF0dHJpYnV0ZSBub3Qgc3VwcG9ydGVkLicpO1xuICAgICAgICAgICAgcmV0dXJuOyAvLyBlYXJseSByZXR1cm4sIHNraXAgZm9sbG93aW5nIGJ1ZmZlciBjaGFuZ2VcbiAgICAgICAgfVxuICAgICAgICBhdHRyLmFycmF5LnNldChkYXRhLCBhdHRyLnNpemUgKiBpbmRleCk7XG4gICAgICAgIHRoaXMuZ2wuYmluZEJ1ZmZlcih0aGlzLmdsLkFSUkFZX0JVRkZFUiwgYXR0ci5idWZmZXIpO1xuICAgICAgICB0aGlzLmdsLmJ1ZmZlclN1YkRhdGEodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGF0dHIuc2l6ZSAqIGluZGV4ICogYXR0ci5hcnJheS5CWVRFU19QRVJfRUxFTUVOVCwgYXR0ci5hcnJheSwgYXR0ci5zaXplICogaW5kZXgsIGF0dHIuc2l6ZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHJlZnJlc2ggYWxsIHBvc2l0aW9uIG9mIGVkZ2VzXG4gICAgICogQHBhcmFtIGxpbmtzIGFsbCBsaW5rIGRhdGFcbiAgICAgKi9cbiAgICByZWZyZXNoUG9zaXRpb24obGlua3MpIHtcbiAgICAgICAgbGV0IGNvdW50ID0gMDtcbiAgICAgICAgbGlua3MuZm9yRWFjaCgobGluaywgaSkgPT4ge1xuICAgICAgICAgICAgLy8gVE9ETzogY29uc2lkZXIgbGluayBhbmQgcmVuZGVyIGxpbmsgYXR0cmlidXRlIG1hcHBpbmdcbiAgICAgICAgICAgIGNvbnN0IHNvdXJjZSA9IGxpbmsuc291cmNlKCk7XG4gICAgICAgICAgICBjb25zdCBzb3VyY2VQb3NpdGlvbiA9IHNvdXJjZS5wb3NpdGlvbigpO1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW0xpbmtBdHRyS2V5LlNPVVJDRV0uYXJyYXlbMiAqIChjb3VudCArIGkpXSA9IHNvdXJjZVBvc2l0aW9uLng7XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbTGlua0F0dHJLZXkuU09VUkNFXS5hcnJheVsyICogKGNvdW50ICsgaSkgKyAxXSA9IHNvdXJjZVBvc2l0aW9uLnk7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBsaW5rLnRhcmdldCgpO1xuICAgICAgICAgICAgY29uc3QgdGFyZ2V0UG9zaXRpb24gPSB0YXJnZXQucG9zaXRpb24oKTtcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlc1tMaW5rQXR0cktleS5UQVJHRVRdLmFycmF5WzIgKiAoY291bnQgKyBpKV0gPSB0YXJnZXRQb3NpdGlvbi54O1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW0xpbmtBdHRyS2V5LlRBUkdFVF0uYXJyYXlbMiAqIChjb3VudCArIGkpICsgMV0gPSB0YXJnZXRQb3NpdGlvbi55O1xuICAgICAgICAgICAgLy8gY3VycmVudGx5IG5vIG5lZWQgZm9yIGNvbG9yJnJlbmRlcklkIGNoYW5nZVxuICAgICAgICAgICAgLypcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlc1tMaW5rQXR0cktleS5XSURUSF0uYXJyYXlbdGhpcy5jb3VudCArIGldID1cbiAgICAgICAgICAgICAgICBsaW5rLnN0cm9rZVdpZHRoKCkgKiB0aGlzLnBpeGVsUmF0aW9cblxuICAgICAgICAgICAgY29uc3QgY29sb3IgPSBsaW5rLnN0cm9rZUNvbG9yKClcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlc1tMaW5rQXR0cktleS5DT0xPUl0uYXJyYXlbNCAqICh0aGlzLmNvdW50ICsgaSldID0gY29sb3IuclxuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW0xpbmtBdHRyS2V5LkNPTE9SXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKSArIDFdID0gY29sb3IuZ1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW0xpbmtBdHRyS2V5LkNPTE9SXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKSArIDJdID0gY29sb3IuYlxuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW0xpbmtBdHRyS2V5LkNPTE9SXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKSArIDNdID0gY29sb3IuYVxuXG4gICAgICAgICAgICBjb25zdCByZW5kZXJJZENvbG9yID0gZW5jb2RlUmVuZGVySWQoMiAqICh0aGlzLmNvdW50ICsgaSkgKyAxKSAvLyBOT1RFOiBsaW5rIHJlbmRlciBpZCwgdXNlIG9kZCBpbnRlZ2VyXG4gICAgICAgICAgICB0aGlzLmlkQXR0cmlidXRlc1tMaW5rSWRBdHRyS2V5LklEXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKV0gPSByZW5kZXJJZENvbG9yLnJcbiAgICAgICAgICAgIHRoaXMuaWRBdHRyaWJ1dGVzW0xpbmtJZEF0dHJLZXkuSURdLmFycmF5WzQgKiAodGhpcy5jb3VudCArIGkpICsgMV0gPSByZW5kZXJJZENvbG9yLmdcbiAgICAgICAgICAgIHRoaXMuaWRBdHRyaWJ1dGVzW0xpbmtJZEF0dHJLZXkuSURdLmFycmF5WzQgKiAodGhpcy5jb3VudCArIGkpICsgMl0gPSByZW5kZXJJZENvbG9yLmJcbiAgICAgICAgICAgIHRoaXMuaWRBdHRyaWJ1dGVzW0xpbmtJZEF0dHJLZXkuSURdLmFycmF5WzQgKiAodGhpcy5jb3VudCArIGkpICsgM10gPSByZW5kZXJJZENvbG9yLmFcbiAgICAgICAgICAgICovXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBzb3VyY2VBdHRyID0gdGhpcy5hdHRyaWJ1dGVzW0xpbmtBdHRyS2V5LlNPVVJDRV07XG4gICAgICAgIGNvbnN0IHRhcmdldEF0dHIgPSB0aGlzLmF0dHJpYnV0ZXNbTGlua0F0dHJLZXkuVEFSR0VUXTtcbiAgICAgICAgY29uc3QgYXJyID0gW3NvdXJjZUF0dHIsIHRhcmdldEF0dHJdO1xuICAgICAgICBhcnIuZm9yRWFjaCgoYXR0cikgPT4ge1xuICAgICAgICAgICAgaWYgKCFhdHRyLmlzQnVpbGRJbikge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2wuYmluZEJ1ZmZlcih0aGlzLmdsLkFSUkFZX0JVRkZFUiwgYXR0ci5idWZmZXIpO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2wuYnVmZmVyU3ViRGF0YSh0aGlzLmdsLkFSUkFZX0JVRkZFUiwgYXR0ci5zaXplICogY291bnQgKiBhdHRyLmFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULCBhdHRyLmFycmF5LCBhdHRyLnNpemUgKiBjb3VudCwgYXR0ci5zaXplICogbGlua3MubGVuZ3RoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGFkZCBsaW5rcyBkYXRhIHRvIGVuZ2luZVxuICAgICAqIEBwYXJhbSBsaW5rcyBsaW5rcyBkYXRhXG4gICAgICovXG4gICAgYWRkRGF0YShsaW5rcykge1xuICAgICAgICAvLyBzZXQgYXJyYXlcbiAgICAgICAgbGlua3MuZm9yRWFjaCgobGluaywgaSkgPT4ge1xuICAgICAgICAgICAgLy8gVE9ETzogY29uc2lkZXIgbGluayBhbmQgcmVuZGVyIGxpbmsgYXR0cmlidXRlIG1hcHBpbmdcbiAgICAgICAgICAgIGNvbnN0IHNvdXJjZSA9IGxpbmsuc291cmNlKCk7XG4gICAgICAgICAgICBjb25zdCBzb3VyY2VQb3NpdGlvbiA9IHNvdXJjZS5wb3NpdGlvbigpO1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW0xpbmtBdHRyS2V5LlNPVVJDRV0uYXJyYXlbMiAqICh0aGlzLmNvdW50ICsgaSldID0gc291cmNlUG9zaXRpb24ueDtcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlc1tMaW5rQXR0cktleS5TT1VSQ0VdLmFycmF5WzIgKiAodGhpcy5jb3VudCArIGkpICsgMV0gPSBzb3VyY2VQb3NpdGlvbi55O1xuICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gbGluay50YXJnZXQoKTtcbiAgICAgICAgICAgIGNvbnN0IHRhcmdldFBvc2l0aW9uID0gdGFyZ2V0LnBvc2l0aW9uKCk7XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbTGlua0F0dHJLZXkuVEFSR0VUXS5hcnJheVsyICogKHRoaXMuY291bnQgKyBpKV0gPSB0YXJnZXRQb3NpdGlvbi54O1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW0xpbmtBdHRyS2V5LlRBUkdFVF0uYXJyYXlbMiAqICh0aGlzLmNvdW50ICsgaSkgKyAxXSA9IHRhcmdldFBvc2l0aW9uLnk7XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbTGlua0F0dHJLZXkuV0lEVEhdLmFycmF5W3RoaXMuY291bnQgKyBpXSA9XG4gICAgICAgICAgICAgICAgbGluay5zdHJva2VXaWR0aCgpICogdGhpcy5waXhlbFJhdGlvO1xuICAgICAgICAgICAgY29uc3QgY29sb3IgPSBsaW5rLnN0cm9rZUNvbG9yKCk7XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbTGlua0F0dHJLZXkuQ09MT1JdLmFycmF5WzQgKiAodGhpcy5jb3VudCArIGkpXSA9IGNvbG9yLnI7XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbTGlua0F0dHJLZXkuQ09MT1JdLmFycmF5WzQgKiAodGhpcy5jb3VudCArIGkpICsgMV0gPSBjb2xvci5nO1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW0xpbmtBdHRyS2V5LkNPTE9SXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKSArIDJdID0gY29sb3IuYjtcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlc1tMaW5rQXR0cktleS5DT0xPUl0uYXJyYXlbNCAqICh0aGlzLmNvdW50ICsgaSkgKyAzXSA9IGNvbG9yLmE7XG4gICAgICAgICAgICBjb25zdCByZW5kZXJJZENvbG9yID0gdXRpbHNfMS5lbmNvZGVSZW5kZXJJZCgyICogKHRoaXMuY291bnQgKyBpKSArIDEpOyAvLyBOT1RFOiBsaW5rIHJlbmRlciBpZCwgdXNlIG9kZCBpbnRlZ2VyXG4gICAgICAgICAgICB0aGlzLmlkQXR0cmlidXRlc1tMaW5rSWRBdHRyS2V5LklEXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKV0gPSByZW5kZXJJZENvbG9yLnI7XG4gICAgICAgICAgICB0aGlzLmlkQXR0cmlidXRlc1tMaW5rSWRBdHRyS2V5LklEXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKSArIDFdID0gcmVuZGVySWRDb2xvci5nO1xuICAgICAgICAgICAgdGhpcy5pZEF0dHJpYnV0ZXNbTGlua0lkQXR0cktleS5JRF0uYXJyYXlbNCAqICh0aGlzLmNvdW50ICsgaSkgKyAyXSA9IHJlbmRlcklkQ29sb3IuYjtcbiAgICAgICAgICAgIHRoaXMuaWRBdHRyaWJ1dGVzW0xpbmtJZEF0dHJLZXkuSURdLmFycmF5WzQgKiAodGhpcy5jb3VudCArIGkpICsgM10gPSByZW5kZXJJZENvbG9yLmE7XG4gICAgICAgICAgICBjb25zdCBzb3VyY2VUYXJnZXQgPSBsaW5rLnNvdXJjZVRhcmdldCgpO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJJZFRvSWRzWzIgKiAodGhpcy5jb3VudCArIGkpICsgMV0gPSBbXG4gICAgICAgICAgICAgICAgc291cmNlVGFyZ2V0LnNvdXJjZS5pZCgpLFxuICAgICAgICAgICAgICAgIHNvdXJjZVRhcmdldC50YXJnZXQuaWQoKVxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIHRoaXMuaWRzVG9JbmRleC5zZXQoW3NvdXJjZVRhcmdldC5zb3VyY2UuaWQoKSwgc291cmNlVGFyZ2V0LnRhcmdldC5pZCgpXSwgdGhpcy5jb3VudCArIGkpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzLmZvckVhY2goKGF0dHIpID0+IHtcbiAgICAgICAgICAgIGlmICghYXR0ci5pc0J1aWxkSW4pIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGF0dHIuYnVmZmVyKTtcbiAgICAgICAgICAgICAgICB0aGlzLmdsLmJ1ZmZlclN1YkRhdGEodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGF0dHIuc2l6ZSAqIHRoaXMuY291bnQgKiBhdHRyLmFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULCBhdHRyLmFycmF5LCBhdHRyLnNpemUgKiB0aGlzLmNvdW50LCBhdHRyLnNpemUgKiBsaW5rcy5sZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gaWQgYnVmZmVyIGRhdGFcbiAgICAgICAgY29uc3QgYXR0ciA9IHRoaXMuaWRBdHRyaWJ1dGVzW0xpbmtJZEF0dHJLZXkuSURdO1xuICAgICAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGF0dHIuYnVmZmVyKTtcbiAgICAgICAgdGhpcy5nbC5idWZmZXJTdWJEYXRhKHRoaXMuZ2wuQVJSQVlfQlVGRkVSLCBhdHRyLnNpemUgKiB0aGlzLmNvdW50ICogYXR0ci5hcnJheS5CWVRFU19QRVJfRUxFTUVOVCwgYXR0ci5hcnJheSwgYXR0ci5zaXplICogdGhpcy5jb3VudCwgYXR0ci5zaXplICogbGlua3MubGVuZ3RoKTtcbiAgICAgICAgdGhpcy5jb3VudCArPSBsaW5rcy5sZW5ndGg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHNldCBUcmFuc2Zvcm0gaW4gUmVuZGVyIExpbmtcbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIGN1cnJlbnQgdHJhbnNmb3JtKHBhbiZ6b29tIGNvbmRpdGlvbilcbiAgICAgKi9cbiAgICBzZXRUcmFuc2Zvcm0odHJhbnNmb3JtKSB7XG4gICAgICAgIHRoaXMuZ2wudXNlUHJvZ3JhbSh0aGlzLnByb2dyYW0pO1xuICAgICAgICBjb25zdCBzY2FsZUxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgJ3NjYWxlJyk7XG4gICAgICAgIGNvbnN0IHRyYW5zbGF0ZUxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgJ3RyYW5zbGF0ZScpO1xuICAgICAgICBjb25zdCBzY2FsZSA9IG5ldyBGbG9hdDMyQXJyYXkoW3RyYW5zZm9ybS5rLCB0cmFuc2Zvcm0ua10pO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZnYoc2NhbGVMb2MsIHNjYWxlKTtcbiAgICAgICAgY29uc3QgdHJhbnNsYXRlID0gbmV3IEZsb2F0MzJBcnJheShbdHJhbnNmb3JtLngsIHRyYW5zZm9ybS55XSk7XG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybTJmdih0cmFuc2xhdGVMb2MsIHRyYW5zbGF0ZSk7XG4gICAgICAgIC8vIGlkIHVuaWZvcm1zLCBpZGVudGljYWwgdG8gbGlua1xuICAgICAgICAvLyBUT0RPOiBuZWVkIHJlZmFjdG9yIHRvb1xuICAgICAgICB0aGlzLmdsLnVzZVByb2dyYW0odGhpcy5pZFByb2dyYW0pO1xuICAgICAgICBjb25zdCBpZFNjYWxlTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5pZFByb2dyYW0sICdzY2FsZScpO1xuICAgICAgICBjb25zdCBpZFRyYW5zbGF0ZUxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMuaWRQcm9ncmFtLCAndHJhbnNsYXRlJyk7XG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybTJmdihpZFNjYWxlTG9jLCBzY2FsZSk7XG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybTJmdihpZFRyYW5zbGF0ZUxvYywgdHJhbnNsYXRlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogcmVuZGVyIGlkIHRvIGxpbmsgaWRzKHNvdXJjZSBhbmQgdGFyZ2V0KVxuICAgICAqIEBwYXJhbSByZW5kZXJJZFxuICAgICAqL1xuICAgIGdldElkc0J5UmVuZGVySWQocmVuZGVySWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVySWRUb0lkc1tyZW5kZXJJZF07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGRyYXcgbGlua3NcbiAgICAgKi9cbiAgICBkcmF3KCkge1xuICAgICAgICBpZiAodGhpcy5jb3VudCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuZ2wuZW5hYmxlKHRoaXMuZ2wuQkxFTkQpO1xuICAgICAgICAgICAgdGhpcy5nbC5ibGVuZEZ1bmModGhpcy5nbC5PTkUsIHRoaXMuZ2wuT05FX01JTlVTX1NSQ19BTFBIQSk7XG4gICAgICAgICAgICB0aGlzLmdsLnVzZVByb2dyYW0odGhpcy5wcm9ncmFtKTtcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlcy5mb3JFYWNoKChhdHRyKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5nbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShhdHRyLmluZGV4KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzLmZvckVhY2goKGF0dHIsIGkpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGF0dHIuYnVmZmVyKTtcbiAgICAgICAgICAgICAgICB0aGlzLmdsLnZlcnRleEF0dHJpYlBvaW50ZXIoYXR0ci5pbmRleCwgYXR0ci5zaXplLCB0aGlzLmdsLkZMT0FULCBmYWxzZSwgYXR0ci5pc0J1aWxkSW4gPyAwIDogYXR0ci5zaXplICogYXR0ci5hcnJheS5CWVRFU19QRVJfRUxFTUVOVCwgMCk7XG4gICAgICAgICAgICAgICAgaWYgKCFhdHRyLmlzQnVpbGRJbilcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nbC52ZXJ0ZXhBdHRyaWJEaXZpc29yKGF0dHIuaW5kZXgsIDEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5nbC5kcmF3QXJyYXlzSW5zdGFuY2VkKHRoaXMuZ2wuVFJJQU5HTEVfU1RSSVAsIDAsIDQsIHRoaXMuY291bnQpO1xuICAgICAgICAvLyBkcmF3IGlkXG4gICAgICAgIHRoaXMuZ2wuYmxlbmRGdW5jKHRoaXMuZ2wuT05FLCB0aGlzLmdsLlpFUk8pO1xuICAgICAgICB0aGlzLmdsLnVzZVByb2dyYW0odGhpcy5pZFByb2dyYW0pO1xuICAgICAgICB0aGlzLmdsLmJpbmRGcmFtZWJ1ZmZlcih0aGlzLmdsLkZSQU1FQlVGRkVSLCB0aGlzLmlkVGV4dHVyZSk7XG4gICAgICAgIHRoaXMuaWRBdHRyaWJ1dGVzLmZvckVhY2goKGF0dHIpID0+IHtcbiAgICAgICAgICAgIHRoaXMuZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoYXR0ci5pbmRleCk7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBhdHRyID0gdGhpcy5pZEF0dHJpYnV0ZXNbTGlua0lkQXR0cktleS5JRF07XG4gICAgICAgIHRoaXMuZ2wuYmluZEJ1ZmZlcih0aGlzLmdsLkFSUkFZX0JVRkZFUiwgYXR0ci5idWZmZXIpO1xuICAgICAgICB0aGlzLmdsLnZlcnRleEF0dHJpYlBvaW50ZXIoYXR0ci5pbmRleCwgYXR0ci5zaXplLCB0aGlzLmdsLkZMT0FULCBmYWxzZSwgYXR0ci5zaXplICogYXR0ci5hcnJheS5CWVRFU19QRVJfRUxFTUVOVCwgMCk7XG4gICAgICAgIHRoaXMuZ2wudmVydGV4QXR0cmliRGl2aXNvcihhdHRyLmluZGV4LCAxKTtcbiAgICAgICAgdGhpcy5nbC5kcmF3QXJyYXlzSW5zdGFuY2VkKHRoaXMuZ2wuVFJJQU5HTEVfU1RSSVAsIDAsIDQsIHRoaXMuY291bnQpO1xuICAgICAgICB0aGlzLmdsLmJpbmRGcmFtZWJ1ZmZlcih0aGlzLmdsLkZSQU1FQlVGRkVSLCBudWxsKTtcbiAgICAgICAgdGhpcy5nbC5lbmFibGUodGhpcy5nbC5CTEVORCk7XG4gICAgICAgIHRoaXMuZ2wuYmxlbmRGdW5jKHRoaXMuZ2wuT05FLCB0aGlzLmdsLk9ORV9NSU5VU19TUkNfQUxQSEEpO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVuZGVyTGlua01hbmFnZXIgPSBSZW5kZXJMaW5rTWFuYWdlcjtcblxuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9saW5rL3ZlcnRleC5nbHNsXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9zcmMvcmVuZGVyZXIvZWxlbWVudHMvbGluay92ZXJ0ZXguZ2xzbCAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJkZWZhdWx0XCJdID0gKFwiI3ZlcnNpb24gMzAwIGVzXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbmluIHZlYzMgaW5WZXJ0ZXhQb3M7XFxuaW4gdmVjMiBpblNvdXJjZVBvc2l0aW9uO1xcbmluIHZlYzIgaW5UYXJnZXRQb3NpdGlvbjtcXG5pbiBmbG9hdCBpblN0cm9rZVdpZHRoO1xcbmluIHZlYzQgaW5TdHJva2VDb2xvcjtcXG5cXG5vdXQgdmVjNCBjb2xvcjtcXG5cXG51bmlmb3JtIG1hdDMgcHJvamVjdGlvbjtcXG51bmlmb3JtIHZlYzIgc2NhbGU7XFxudW5pZm9ybSB2ZWMyIHRyYW5zbGF0ZTtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgICBjb2xvciA9IGluU3Ryb2tlQ29sb3I7XFxuXFxuICAgIHZlYzIgc291cmNlID0gaW5Tb3VyY2VQb3NpdGlvbiAqIHNjYWxlICsgdHJhbnNsYXRlO1xcbiAgICB2ZWMyIHRhcmdldCA9IGluVGFyZ2V0UG9zaXRpb24gKiBzY2FsZSArIHRyYW5zbGF0ZTtcXG4gICAgdmVjMiBkZWx0YSA9IHNvdXJjZSAtIHRhcmdldDtcXG4gICAgdmVjMiBjZW50ZXIgPSAwLjUgKiAoc291cmNlICsgdGFyZ2V0KTtcXG4gICAgZmxvYXQgbGVuID0gbGVuZ3RoKGRlbHRhKTtcXG4gICAgZmxvYXQgcGhpID0gYXRhbihkZWx0YS55IC8gZGVsdGEueCk7XFxuXFxuICAgIG1hdDMgbGluZV9zY2FsZSA9IG1hdDMoXFxuICAgICAgICBsZW4sIDAsIDAsXFxuICAgICAgICAwLCBpblN0cm9rZVdpZHRoLCAwLFxcbiAgICAgICAgMCwgMCwgMVxcbiAgICApO1xcbiAgICBtYXQzIGxpbmVfcm90YXRlID0gbWF0MyhcXG4gICAgICAgIGNvcyhwaGkpLCBzaW4ocGhpKSwgMCxcXG4gICAgICAgIC1zaW4ocGhpKSwgY29zKHBoaSksIDAsXFxuICAgICAgICAwLCAwLCAxXFxuICAgICk7XFxuICAgIG1hdDMgbGluZV90cmFuc2xhdGUgPSBtYXQzKFxcbiAgICAgICAgMSwgMCwgMCxcXG4gICAgICAgIDAsIDEsIDAsXFxuICAgICAgICBjZW50ZXIueCwgY2VudGVyLnksIDFcXG4gICAgKTtcXG4gICAgXFxuICAgIG1hdDMgdHJhbnNmb3JtID0gbGluZV90cmFuc2xhdGUgKiBsaW5lX3JvdGF0ZSAqIGxpbmVfc2NhbGU7XFxuXFxuICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwcm9qZWN0aW9uICogdHJhbnNmb3JtICogaW5WZXJ0ZXhQb3MsIDEuKTtcXG59XCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9ub2RlL2ZyYWdtZW50Lmdsc2xcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vc3JjL3JlbmRlcmVyL2VsZW1lbnRzL25vZGUvZnJhZ21lbnQuZ2xzbCAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImRlZmF1bHRcIl0gPSAoXCIjdmVyc2lvbiAzMDAgZXNcXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuaW4gdmVjMiBwb3M7XFxuaW4gZmxvYXQgcmFkaXVzO1xcbmluIHZlYzQgY29sb3I7XFxuaW4gZmxvYXQgc3Ryb2tlV2lkdGg7XFxuaW4gdmVjNCBzdHJva2VDb2xvcjtcXG5cXG5vdXQgdmVjNCBmcmFnbWVudENvbG9yO1xcblxcbnVuaWZvcm0gdmVjMiB2aWV3cG9ydDtcXG51bmlmb3JtIGZsb2F0IHBpeGVsUmF0aW87XFxuXFxuZmxvYXQgaW5DaXJjbGUoKSB7XFxuICB2ZWMyIGZsaXBfcG9zID0gcG9zO1xcbiAgZmxpcF9wb3MueSA9IHZpZXdwb3J0LnkgLSBwb3MueTtcXG4gIGZsb2F0IHIgPSBkaXN0YW5jZShnbF9GcmFnQ29vcmQueHkgLyBwaXhlbFJhdGlvLCBmbGlwX3Bvcyk7XFxuICBmbG9hdCBkcmF3ID0gMS4gLSBzdGVwKHJhZGl1cyAtIHN0cm9rZVdpZHRoIC8gMi4sIHIpO1xcbiAgcmV0dXJuIGRyYXc7XFxufVxcblxcbmZsb2F0IGluQm9yZGVyKCkge1xcbiAgaWYgKHN0cm9rZVdpZHRoID09IDAuKSB7XFxuICAgIHJldHVybiAwLjtcXG4gIH1cXG4gIHZlYzIgZmxpcF9wb3MgPSBwb3M7XFxuICBmbGlwX3Bvcy55ID0gdmlld3BvcnQueSAtIHBvcy55O1xcbiAgZmxvYXQgciA9IGRpc3RhbmNlKGdsX0ZyYWdDb29yZC54eSAvIHBpeGVsUmF0aW8sIGZsaXBfcG9zKTtcXG4gIGZsb2F0IGRyYXdPdXRlciA9IDEuIC0gc21vb3Roc3RlcCgocmFkaXVzICsgc3Ryb2tlV2lkdGggLyAyLikgKiAwLjk1LCAocmFkaXVzICsgc3Ryb2tlV2lkdGggLyAyLikgKiAxLjA1LCByKTtcXG4gIGZsb2F0IGRyYXdJbm5lciA9IDEuIC0gc3RlcChyYWRpdXMgLSBzdHJva2VXaWR0aCAvIDIuLCByKTtcXG4gIHJldHVybiBkcmF3T3V0ZXIgKiAoMS4gLSBkcmF3SW5uZXIpO1xcbiAgLy8gcmV0dXJuIGRyYXdPdXRlcjtcXG59XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gICAgLy8gYm9yZGVyIGNoZWNrLCB1c2luZyAwLjUoY2VudGVyIG9mIHNtb290aHN0ZXApXFxuICAgIGlmIChpbkNpcmNsZSgpIDwgMS4gJiYgKHN0cm9rZVdpZHRoIDwgMC44IHx8IGluQm9yZGVyKCkgPCAwLjUpKSB7XFxuICAgICAgICBkaXNjYXJkO1xcbiAgICB9XFxuICAgIGZyYWdtZW50Q29sb3IgPSBpbkJvcmRlcigpICogdmVjNChzdHJva2VDb2xvci5yZ2IgKiBzdHJva2VDb2xvci5hLCBzdHJva2VDb2xvci5hKSArIGluQ2lyY2xlKCkgKiB2ZWM0KGNvbG9yLnJnYiAqIGNvbG9yLmEsIGNvbG9yLmEpO1xcbn1cIik7XG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vc3JjL3JlbmRlcmVyL2VsZW1lbnRzL25vZGUvaWQtZnJhZ21lbnQuZ2xzbFwiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9zcmMvcmVuZGVyZXIvZWxlbWVudHMvbm9kZS9pZC1mcmFnbWVudC5nbHNsICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZGVmYXVsdFwiXSA9IChcIiN2ZXJzaW9uIDMwMCBlc1xcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5pbiB2ZWMyIHBvcztcXG5pbiBmbG9hdCByYWRpdXM7XFxuaW4gdmVjNCBjb2xvcjtcXG5pbiBmbG9hdCBzdHJva2VXaWR0aDtcXG5pbiB2ZWM0IHN0cm9rZUNvbG9yO1xcblxcbmluIHZlYzQgaWQ7XFxuXFxub3V0IHZlYzQgZnJhZ21lbnRDb2xvcjtcXG5cXG51bmlmb3JtIHZlYzIgdmlld3BvcnQ7XFxudW5pZm9ybSBmbG9hdCBwaXhlbFJhdGlvO1xcblxcbmZsb2F0IGluQ2lyY2xlKCkge1xcbiAgdmVjMiBmbGlwX3BvcyA9IHBvcztcXG4gIGZsaXBfcG9zLnkgPSB2aWV3cG9ydC55IC0gcG9zLnk7XFxuICBmbG9hdCByID0gZGlzdGFuY2UoZ2xfRnJhZ0Nvb3JkLnh5IC8gcGl4ZWxSYXRpbywgZmxpcF9wb3MpO1xcbiAgZmxvYXQgZHJhdyA9IDEuIC0gc3RlcChyYWRpdXMgLSBzdHJva2VXaWR0aCAvIDIuLCByKTtcXG4gIHJldHVybiBkcmF3O1xcbn1cXG5cXG5mbG9hdCBpbkJvcmRlcigpIHtcXG4gIGlmIChzdHJva2VXaWR0aCA9PSAwLikge1xcbiAgICByZXR1cm4gMC47XFxuICB9XFxuICB2ZWMyIGZsaXBfcG9zID0gcG9zO1xcbiAgZmxpcF9wb3MueSA9IHZpZXdwb3J0LnkgLSBwb3MueTtcXG4gIGZsb2F0IHIgPSBkaXN0YW5jZShnbF9GcmFnQ29vcmQueHkgLyBwaXhlbFJhdGlvLCBmbGlwX3Bvcyk7XFxuICBmbG9hdCBkcmF3T3V0ZXIgPSAxLiAtIHNtb290aHN0ZXAoKHJhZGl1cyArIHN0cm9rZVdpZHRoIC8gMi4pICogMC45NSwgKHJhZGl1cyArIHN0cm9rZVdpZHRoIC8gMi4pICogMS4wNSwgcik7XFxuICBmbG9hdCBkcmF3SW5uZXIgPSAxLiAtIHN0ZXAocmFkaXVzIC0gc3Ryb2tlV2lkdGggLyAyLiwgcik7XFxuICByZXR1cm4gZHJhd091dGVyICogKDEuIC0gZHJhd0lubmVyKTtcXG4gIC8vIHJldHVybiBkcmF3T3V0ZXI7XFxufVxcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICAgIC8vIGJvcmRlciBjaGVjaywgdXNpbmcgMC41KGNlbnRlciBvZiBzbW9vdGhzdGVwKVxcbiAgICBpZiAoaW5DaXJjbGUoKSA8IDEuICYmIChzdHJva2VXaWR0aCA8IDAuOCB8fCBpbkJvcmRlcigpIDwgMC41KSkge1xcbiAgICAgICAgZGlzY2FyZDtcXG4gICAgfVxcbiAgICBmcmFnbWVudENvbG9yID0gaWQ7XFxufVwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIFwiLi9zcmMvcmVuZGVyZXIvZWxlbWVudHMvbm9kZS9pZC12ZXJ0ZXguZ2xzbFwiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vc3JjL3JlbmRlcmVyL2VsZW1lbnRzL25vZGUvaWQtdmVydGV4Lmdsc2wgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZGVmYXVsdFwiXSA9IChcIiN2ZXJzaW9uIDMwMCBlc1xcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5pbiB2ZWMzIGluVmVydGV4UG9zO1xcbmluIHZlYzIgaW5Qb3NpdGlvbjtcXG5pbiBmbG9hdCBpblJhZGl1cztcXG5pbiB2ZWM0IGluRmlsbDtcXG5pbiBmbG9hdCBpblN0cm9rZVdpZHRoO1xcbmluIHZlYzQgaW5TdHJva2VDb2xvcjtcXG5cXG5pbiB2ZWM0IGluSWQ7XFxuXFxub3V0IHZlYzIgcG9zO1xcbm91dCBmbG9hdCByYWRpdXM7XFxub3V0IHZlYzQgY29sb3I7XFxub3V0IGZsb2F0IHN0cm9rZVdpZHRoO1xcbm91dCB2ZWM0IHN0cm9rZUNvbG9yO1xcblxcbm91dCB2ZWM0IGlkO1xcblxcbnVuaWZvcm0gbWF0MyBwcm9qZWN0aW9uO1xcbnVuaWZvcm0gdmVjMiBzY2FsZTtcXG51bmlmb3JtIHZlYzIgdHJhbnNsYXRlO1xcbnVuaWZvcm0gdmVjMiB2aWV3cG9ydDtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgICBpZCA9IGluSWQ7XFxuXFxuICAgIGZsb2F0IHNpemUgPSBpblJhZGl1cyArIGluU3Ryb2tlV2lkdGggLyAyLjtcXG4gICAgcmFkaXVzID0gaW5SYWRpdXM7XFxuICAgIGNvbG9yID0gaW5GaWxsO1xcbiAgICBzdHJva2VXaWR0aCA9IGluU3Ryb2tlV2lkdGg7XFxuICAgIHN0cm9rZUNvbG9yID0gaW5TdHJva2VDb2xvcjtcXG4gICAgZmxvYXQgdmVydGV4U2l6ZSA9IHNpemUgKiAoMi4gKiBzcXJ0KDIuKSkgKiAxLjU7IC8vIE5PVEU6IHggMS41IHRvIHByZXZlbnQgYm9yZGVyIGZhY3RvclxcbiAgICBwb3MgPSBzY2FsZSAqIGluUG9zaXRpb24gKyB0cmFuc2xhdGU7XFxuICAgIG1hdDMgdHJhbnNmb3JtID0gbWF0MyhcXG4gICAgICAgIHZlcnRleFNpemUsIDAsIDAsXFxuICAgICAgICAwLCB2ZXJ0ZXhTaXplLCAwLFxcbiAgICAgICAgcG9zLngsIHBvcy55LCAxXFxuICAgICk7XFxuXFxuICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwcm9qZWN0aW9uICogdHJhbnNmb3JtICogaW5WZXJ0ZXhQb3MsIDEuKTtcXG59XCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9ub2RlL3JlbmRlci1ub2RlLnRzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9zcmMvcmVuZGVyZXIvZWxlbWVudHMvbm9kZS9yZW5kZXItbm9kZS50cyAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIEBhdXRob3IgWGlhb2RvbmcgWmhhbyA8emhhb3hpYW9kb25nQHpqdS5lZHUuY24+XG4gKiBAZGVzY3JpcHRpb24gTm9kZSB1c2luZyBpbiBSZW5kZXJlclxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlbmRlck5vZGVNYW5hZ2VyID0gdm9pZCAwO1xuY29uc3QgdmVydGV4X2dsc2xfMSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdmVydGV4Lmdsc2wgKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9ub2RlL3ZlcnRleC5nbHNsXCIpO1xuY29uc3QgZnJhZ21lbnRfZ2xzbF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9mcmFnbWVudC5nbHNsICovIFwiLi9zcmMvcmVuZGVyZXIvZWxlbWVudHMvbm9kZS9mcmFnbWVudC5nbHNsXCIpO1xuY29uc3QgaWRfdmVydGV4X2dsc2xfMSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaWQtdmVydGV4Lmdsc2wgKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9ub2RlL2lkLXZlcnRleC5nbHNsXCIpO1xuY29uc3QgaWRfZnJhZ21lbnRfZ2xzbF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9pZC1mcmFnbWVudC5nbHNsICovIFwiLi9zcmMvcmVuZGVyZXIvZWxlbWVudHMvbm9kZS9pZC1mcmFnbWVudC5nbHNsXCIpO1xuY29uc3QgdXRpbHNfMSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWxzICovIFwiLi9zcmMvcmVuZGVyZXIvdXRpbHMudHNcIik7XG52YXIgTm9kZUF0dHJLZXk7XG4oZnVuY3Rpb24gKE5vZGVBdHRyS2V5KSB7XG4gICAgTm9kZUF0dHJLZXlbTm9kZUF0dHJLZXlbXCJURU1QTEFURVwiXSA9IDBdID0gXCJURU1QTEFURVwiO1xuICAgIE5vZGVBdHRyS2V5W05vZGVBdHRyS2V5W1wiUE9TSVRJT05cIl0gPSAxXSA9IFwiUE9TSVRJT05cIjtcbiAgICBOb2RlQXR0cktleVtOb2RlQXR0cktleVtcIlJBRElVU1wiXSA9IDJdID0gXCJSQURJVVNcIjtcbiAgICBOb2RlQXR0cktleVtOb2RlQXR0cktleVtcIkNPTE9SXCJdID0gM10gPSBcIkNPTE9SXCI7XG4gICAgTm9kZUF0dHJLZXlbTm9kZUF0dHJLZXlbXCJTVFJPS0VfV0lEVEhcIl0gPSA0XSA9IFwiU1RST0tFX1dJRFRIXCI7XG4gICAgTm9kZUF0dHJLZXlbTm9kZUF0dHJLZXlbXCJTVFJPS0VfQ09MT1JcIl0gPSA1XSA9IFwiU1RST0tFX0NPTE9SXCI7XG59KShOb2RlQXR0cktleSB8fCAoTm9kZUF0dHJLZXkgPSB7fSkpO1xudmFyIE5vZGVJZEF0dHJLZXk7XG4oZnVuY3Rpb24gKE5vZGVJZEF0dHJLZXkpIHtcbiAgICBOb2RlSWRBdHRyS2V5W05vZGVJZEF0dHJLZXlbXCJURU1QTEFURVwiXSA9IDBdID0gXCJURU1QTEFURVwiO1xuICAgIE5vZGVJZEF0dHJLZXlbTm9kZUlkQXR0cktleVtcIlBPU0lUSU9OXCJdID0gMV0gPSBcIlBPU0lUSU9OXCI7XG4gICAgTm9kZUlkQXR0cktleVtOb2RlSWRBdHRyS2V5W1wiUkFESVVTXCJdID0gMl0gPSBcIlJBRElVU1wiO1xuICAgIE5vZGVJZEF0dHJLZXlbTm9kZUlkQXR0cktleVtcIkNPTE9SXCJdID0gM10gPSBcIkNPTE9SXCI7XG4gICAgTm9kZUlkQXR0cktleVtOb2RlSWRBdHRyS2V5W1wiU1RST0tFX1dJRFRIXCJdID0gNF0gPSBcIlNUUk9LRV9XSURUSFwiO1xuICAgIE5vZGVJZEF0dHJLZXlbTm9kZUlkQXR0cktleVtcIlNUUk9LRV9DT0xPUlwiXSA9IDVdID0gXCJTVFJPS0VfQ09MT1JcIjtcbiAgICBOb2RlSWRBdHRyS2V5W05vZGVJZEF0dHJLZXlbXCJJRFwiXSA9IDZdID0gXCJJRFwiO1xufSkoTm9kZUlkQXR0cktleSB8fCAoTm9kZUlkQXR0cktleSA9IHt9KSk7XG5jb25zdCBOb2RlQXR0ck1hcCA9IHtcbiAgICBwb3NpdGlvbjogTm9kZUF0dHJLZXkuUE9TSVRJT04sXG4gICAgcmFkaXVzOiBOb2RlQXR0cktleS5SQURJVVMsXG4gICAgZmlsbDogTm9kZUF0dHJLZXkuQ09MT1IsXG4gICAgc3Ryb2tlV2lkdGg6IE5vZGVBdHRyS2V5LlNUUk9LRV9XSURUSCxcbiAgICBzdHJva2VDb2xvcjogTm9kZUF0dHJLZXkuU1RST0tFX0NPTE9SXG59O1xuY2xhc3MgUmVuZGVyTm9kZU1hbmFnZXIge1xuICAgIC8qKlxuICAgICAqIGNyZWF0ZSByZW5kZXIgbm9kZSBtYW5hZ2VyXG4gICAgICogQHBhcmFtIGdsIFdlYkdMIGNvbnRleHRcbiAgICAgKiBAcGFyYW0gcGFyYW1zIG5lc3Nlc2FyeSBjb25maWdzIGZvciBub2RlIG1hbmFnZXJcbiAgICAgKiBAcGFyYW0gaWRUZXh0dXJlIHRleHR1cmUgc3RvcmUgZWxlbWVudHMgaWQgb2YgZWFjaCBwaXhlbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGdsLCBwYXJhbXMsIGlkVGV4dHVyZSkge1xuICAgICAgICB0aGlzLmNvdW50ID0gMDtcbiAgICAgICAgY29uc3QgeyBsaW1pdCwgd2lkdGgsIGhlaWdodCB9ID0gcGFyYW1zO1xuICAgICAgICB0aGlzLmdsID0gZ2w7XG4gICAgICAgIHRoaXMubGltaXQgPSBsaW1pdDtcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgdGhpcy5waXhlbFJhdGlvID0gd2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMTtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzID0gdXRpbHNfMS5leHRyYWN0QXR0cmlidXRlc0Zyb21TaGFkZXIodmVydGV4X2dsc2xfMS5kZWZhdWx0KTtcbiAgICAgICAgdGhpcy5wcm9ncmFtID0gdXRpbHNfMS5jcmVhdGVQcm9ncmFtKHRoaXMuZ2wsIHZlcnRleF9nbHNsXzEuZGVmYXVsdCwgZnJhZ21lbnRfZ2xzbF8xLmRlZmF1bHQsIHRoaXMuYXR0cmlidXRlcyk7XG4gICAgICAgIHRoaXMuaWRBdHRyaWJ1dGVzID0gdXRpbHNfMS5leHRyYWN0QXR0cmlidXRlc0Zyb21TaGFkZXIoaWRfdmVydGV4X2dsc2xfMS5kZWZhdWx0KTtcbiAgICAgICAgdGhpcy5pZFByb2dyYW0gPSB1dGlsc18xLmNyZWF0ZVByb2dyYW0odGhpcy5nbCwgaWRfdmVydGV4X2dsc2xfMS5kZWZhdWx0LCBpZF9mcmFnbWVudF9nbHNsXzEuZGVmYXVsdCwgdGhpcy5pZEF0dHJpYnV0ZXMpO1xuICAgICAgICB0aGlzLmlkVGV4dHVyZSA9IGlkVGV4dHVyZTtcbiAgICAgICAgdGhpcy5yZW5kZXJJZFRvSWQgPSB7fTtcbiAgICAgICAgdGhpcy5pZFRvSW5kZXggPSB7fTtcbiAgICAgICAgLy8gaW5pdCBhcnJheXNcbiAgICAgICAgLy8gcHJldHRpZXItaWdub3JlXG4gICAgICAgIHRoaXMuYXR0cmlidXRlc1tOb2RlQXR0cktleS5URU1QTEFURV0uYXJyYXkgPSBuZXcgRmxvYXQzMkFycmF5KFtcbiAgICAgICAgICAgIC0wLjUsIDAuMCwgMS4wLFxuICAgICAgICAgICAgMC4wLCAtMC41LCAxLjAsXG4gICAgICAgICAgICAwLjAsIDAuNSwgMS4wLFxuICAgICAgICAgICAgMC41LCAwLjAsIDEuMCxcbiAgICAgICAgXSk7XG4gICAgICAgIC8vIFRPRE86IGNvbWJpbmUgdGhlIGZvbGxvd2luZyB0d28gbG9vcD9cbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzLmZvckVhY2goKGF0dHIpID0+IHtcbiAgICAgICAgICAgIGlmICghYXR0ci5pc0J1aWxkSW4pXG4gICAgICAgICAgICAgICAgYXR0ci5hcnJheSA9IG5ldyBGbG9hdDMyQXJyYXkoYXR0ci5zaXplICogdGhpcy5saW1pdCk7XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBpbml0IGJ1ZmZlcnNcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzLmZvckVhY2goKGF0dHIpID0+IHtcbiAgICAgICAgICAgIGF0dHIuYnVmZmVyID0gdXRpbHNfMS5jcmVhdGVBcnJheUJ1ZmZlcih0aGlzLmdsLCBhdHRyLmFycmF5KTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIGluaXQgaWQgYXR0cmlidXRlcyBhbmQgYnVmZmVyc1xuICAgICAgICAvLyBUT0RPOiBoYXJkY29kZSBjaGVjaywgbmVlZCByZWZhY3RvclxuICAgICAgICB0aGlzLmlkQXR0cmlidXRlcy5mb3JFYWNoKChhdHRyLCBpZHgpID0+IHtcbiAgICAgICAgICAgIGlmIChpZHggPCB0aGlzLmF0dHJpYnV0ZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pZEF0dHJpYnV0ZXNbaWR4XSA9IHRoaXMuYXR0cmlidXRlc1tpZHhdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKCFhdHRyLmlzQnVpbGRJbilcbiAgICAgICAgICAgICAgICAgICAgYXR0ci5hcnJheSA9IG5ldyBGbG9hdDMyQXJyYXkoYXR0ci5zaXplICogdGhpcy5saW1pdCk7XG4gICAgICAgICAgICAgICAgYXR0ci5idWZmZXIgPSB1dGlsc18xLmNyZWF0ZUFycmF5QnVmZmVyKHRoaXMuZ2wsIGF0dHIuYXJyYXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gaW5pdCB1bmlmb3Jtc1xuICAgICAgICB0aGlzLmdsLnVzZVByb2dyYW0odGhpcy5wcm9ncmFtKTtcbiAgICAgICAgY29uc3QgcHJvamVjdGlvbkxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgJ3Byb2plY3Rpb24nKTtcbiAgICAgICAgY29uc3Qgc2NhbGVMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sICdzY2FsZScpO1xuICAgICAgICBjb25zdCB0cmFuc2xhdGVMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sICd0cmFuc2xhdGUnKTtcbiAgICAgICAgY29uc3Qgdmlld3BvcnRMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sICd2aWV3cG9ydCcpO1xuICAgICAgICBjb25zdCBwaXhlbFJhdGlvTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCAncGl4ZWxSYXRpbycpO1xuICAgICAgICAvLyB0aGlzLmdsLnZpZXdwb3J0KDAsIDAsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KSAvLyBUT0RPOiB2aWV3cG9ydCBzZXQsIG5vdCBuZWVkZWQ/IHB1dCBoZXJlIGluIGNhc2UgYnVnIGFwcGVhclxuICAgICAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAgICAgY29uc3QgcHJvamVjdGlvbiA9IG5ldyBGbG9hdDMyQXJyYXkoW1xuICAgICAgICAgICAgMiAvIHRoaXMud2lkdGgsIDAsIDAsXG4gICAgICAgICAgICAwLCAtMiAvIHRoaXMuaGVpZ2h0LCAwLFxuICAgICAgICAgICAgLTEsIDEsIDFcbiAgICAgICAgXSk7XG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybU1hdHJpeDNmdihwcm9qZWN0aW9uTG9jLCBmYWxzZSwgcHJvamVjdGlvbik7XG4gICAgICAgIGNvbnN0IHNjYWxlID0gbmV3IEZsb2F0MzJBcnJheShbMSwgMV0pO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZnYoc2NhbGVMb2MsIHNjYWxlKTtcbiAgICAgICAgY29uc3QgdHJhbnNsYXRlID0gbmV3IEZsb2F0MzJBcnJheShbMCwgMF0pO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZnYodHJhbnNsYXRlTG9jLCB0cmFuc2xhdGUpO1xuICAgICAgICBjb25zdCB2aWV3cG9ydCA9IG5ldyBGbG9hdDMyQXJyYXkoW3RoaXMud2lkdGgsIHRoaXMuaGVpZ2h0XSk7XG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybTJmdih2aWV3cG9ydExvYywgdmlld3BvcnQpO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0xZihwaXhlbFJhdGlvTG9jLCB0aGlzLnBpeGVsUmF0aW8pO1xuICAgICAgICAvLyBpZCB1bmlmb3JtcywgaWRlbnRpY2FsIHRvIG5vZGVcbiAgICAgICAgLy8gVE9ETzogbmVlZCByZWZhY3RvciB0b29cbiAgICAgICAgdGhpcy5nbC51c2VQcm9ncmFtKHRoaXMuaWRQcm9ncmFtKTtcbiAgICAgICAgY29uc3QgaWRQcm9qZWN0aW9uTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5pZFByb2dyYW0sICdwcm9qZWN0aW9uJyk7XG4gICAgICAgIGNvbnN0IGlkU2NhbGVMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLmlkUHJvZ3JhbSwgJ3NjYWxlJyk7XG4gICAgICAgIGNvbnN0IGlkVHJhbnNsYXRlTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5pZFByb2dyYW0sICd0cmFuc2xhdGUnKTtcbiAgICAgICAgY29uc3QgaWRWaWV3cG9ydExvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMuaWRQcm9ncmFtLCAndmlld3BvcnQnKTtcbiAgICAgICAgY29uc3QgaWRQaXhlbFJhdGlvTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5pZFByb2dyYW0sICdwaXhlbFJhdGlvJyk7XG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybU1hdHJpeDNmdihpZFByb2plY3Rpb25Mb2MsIGZhbHNlLCBwcm9qZWN0aW9uKTtcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMmZ2KGlkU2NhbGVMb2MsIHNjYWxlKTtcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMmZ2KGlkVHJhbnNsYXRlTG9jLCB0cmFuc2xhdGUpO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZnYoaWRWaWV3cG9ydExvYywgdmlld3BvcnQpO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0xZihpZFBpeGVsUmF0aW9Mb2MsIHRoaXMucGl4ZWxSYXRpbyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHNldCBUcmFuc2Zvcm0gaW4gUmVuZGVyIE5vZGVcbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIGN1cnJlbnQgdHJhbnNmb3JtKHBhbiZ6b29tIGNvbmRpdGlvbilcbiAgICAgKi9cbiAgICBzZXRUcmFuc2Zvcm0odHJhbnNmb3JtKSB7XG4gICAgICAgIHRoaXMuZ2wudXNlUHJvZ3JhbSh0aGlzLnByb2dyYW0pO1xuICAgICAgICBjb25zdCBzY2FsZUxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgJ3NjYWxlJyk7XG4gICAgICAgIGNvbnN0IHRyYW5zbGF0ZUxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgJ3RyYW5zbGF0ZScpO1xuICAgICAgICBjb25zdCBzY2FsZSA9IG5ldyBGbG9hdDMyQXJyYXkoW3RyYW5zZm9ybS5rLCB0cmFuc2Zvcm0ua10pO1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZnYoc2NhbGVMb2MsIHNjYWxlKTtcbiAgICAgICAgY29uc3QgdHJhbnNsYXRlID0gbmV3IEZsb2F0MzJBcnJheShbdHJhbnNmb3JtLngsIHRyYW5zZm9ybS55XSk7XG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybTJmdih0cmFuc2xhdGVMb2MsIHRyYW5zbGF0ZSk7XG4gICAgICAgIC8vIGlkIHVuaWZvcm1zLCBpZGVudGljYWwgdG8gbm9kZVxuICAgICAgICAvLyBUT0RPOiBuZWVkIHJlZmFjdG9yIHRvb1xuICAgICAgICB0aGlzLmdsLnVzZVByb2dyYW0odGhpcy5pZFByb2dyYW0pO1xuICAgICAgICBjb25zdCBpZFNjYWxlTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5pZFByb2dyYW0sICdzY2FsZScpO1xuICAgICAgICBjb25zdCBpZFRyYW5zbGF0ZUxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMuaWRQcm9ncmFtLCAndHJhbnNsYXRlJyk7XG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybTJmdihpZFNjYWxlTG9jLCBzY2FsZSk7XG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybTJmdihpZFRyYW5zbGF0ZUxvYywgdHJhbnNsYXRlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogY2hhbmdlIG5vZGUncyBhdHRyaWJ1dGVcbiAgICAgKiBAcGFyYW0gbm9kZSBub2RlIGRhdGFcbiAgICAgKiBAcGFyYW0gYXR0cmlidXRlIGF0dHJpYnV0ZSBrZXkgdG8gY2hhbmdlXG4gICAgICovXG4gICAgY2hhbmdlQXR0cmlidXRlKG5vZGUsIGF0dHJpYnV0ZSkge1xuICAgICAgICBjb25zdCBrZXkgPSBOb2RlQXR0ck1hcFthdHRyaWJ1dGVdO1xuICAgICAgICBjb25zdCBhdHRyID0gdGhpcy5hdHRyaWJ1dGVzW2tleV07XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5pZFRvSW5kZXhbbm9kZS5pZCgpXTtcbiAgICAgICAgbGV0IGRhdGEgPSBudWxsO1xuICAgICAgICBpZiAoYXR0cmlidXRlID09PSAncG9zaXRpb24nKSB7XG4gICAgICAgICAgICBjb25zdCBwb3MgPSBub2RlLnBvc2l0aW9uKCk7XG4gICAgICAgICAgICBkYXRhID0gW3Bvcy54LCBwb3MueV07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYXR0cmlidXRlID09PSAnZmlsbCcpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbCA9IG5vZGUuZmlsbCgpO1xuICAgICAgICAgICAgZGF0YSA9IFtjb2wuciwgY29sLmcsIGNvbC5iLCBjb2wuYV07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYXR0cmlidXRlID09PSAncmFkaXVzJykge1xuICAgICAgICAgICAgZGF0YSA9IFtub2RlLnIoKSAqIHRoaXMucGl4ZWxSYXRpb107XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYXR0cmlidXRlID09PSAnc3Ryb2tlV2lkdGgnKSB7XG4gICAgICAgICAgICBkYXRhID0gW25vZGUuc3Ryb2tlV2lkdGgoKSAqIHRoaXMucGl4ZWxSYXRpb107XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYXR0cmlidXRlID09PSAnc3Ryb2tlQ29sb3InKSB7XG4gICAgICAgICAgICBjb25zdCBjb2wgPSBub2RlLnN0cm9rZUNvbG9yKCk7XG4gICAgICAgICAgICBkYXRhID0gW2NvbC5yLCBjb2wuZywgY29sLmIsIGNvbC5hXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ05vdCBzdXBwb3J0ZWQgTm9kZSBhdHRyaWJ1dGUuJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgYXR0ci5hcnJheS5zZXQoZGF0YSwgYXR0ci5zaXplICogaW5kZXgpO1xuICAgICAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGF0dHIuYnVmZmVyKTtcbiAgICAgICAgdGhpcy5nbC5idWZmZXJTdWJEYXRhKHRoaXMuZ2wuQVJSQVlfQlVGRkVSLCBhdHRyLnNpemUgKiBpbmRleCAqIGF0dHIuYXJyYXkuQllURVNfUEVSX0VMRU1FTlQsIGF0dHIuYXJyYXksIGF0dHIuc2l6ZSAqIGluZGV4LCBhdHRyLnNpemUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBhZGQgbm9kZXMgZGF0YSB0byBlbmdpbmVcbiAgICAgKiBAcGFyYW0gbm9kZXMgbm9kZXMgZGF0YVxuICAgICAqL1xuICAgIGFkZERhdGEobm9kZXMpIHtcbiAgICAgICAgLy8gc2V0IGFycmF5XG4gICAgICAgIG5vZGVzLmZvckVhY2goKG5vZGUsIGkpID0+IHtcbiAgICAgICAgICAgIC8vIFRPRE86IGNvbnNpZGVyIG5vZGUgYW5kIHJlbmRlciBub2RlIGF0dHJpYnV0ZSBtYXBwaW5nXG4gICAgICAgICAgICBjb25zdCBwb3NpdGlvbiA9IG5vZGUucG9zaXRpb24oKTtcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlc1tOb2RlQXR0cktleS5QT1NJVElPTl0uYXJyYXlbMiAqICh0aGlzLmNvdW50ICsgaSldID0gcG9zaXRpb24ueDtcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlc1tOb2RlQXR0cktleS5QT1NJVElPTl0uYXJyYXlbMiAqICh0aGlzLmNvdW50ICsgaSkgKyAxXSA9IHBvc2l0aW9uLnk7XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbTm9kZUF0dHJLZXkuUkFESVVTXS5hcnJheVt0aGlzLmNvdW50ICsgaV0gPSBub2RlLnIoKSAqIHRoaXMucGl4ZWxSYXRpbztcbiAgICAgICAgICAgIGNvbnN0IGZpbGwgPSBub2RlLmZpbGwoKTtcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlc1tOb2RlQXR0cktleS5DT0xPUl0uYXJyYXlbNCAqICh0aGlzLmNvdW50ICsgaSldID0gZmlsbC5yO1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW05vZGVBdHRyS2V5LkNPTE9SXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKSArIDFdID0gZmlsbC5nO1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW05vZGVBdHRyS2V5LkNPTE9SXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKSArIDJdID0gZmlsbC5iO1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW05vZGVBdHRyS2V5LkNPTE9SXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKSArIDNdID0gZmlsbC5hO1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW05vZGVBdHRyS2V5LlNUUk9LRV9XSURUSF0uYXJyYXlbdGhpcy5jb3VudCArIGldID1cbiAgICAgICAgICAgICAgICBub2RlLnN0cm9rZVdpZHRoKCkgKiB0aGlzLnBpeGVsUmF0aW87XG4gICAgICAgICAgICBjb25zdCBzdHJva2VDb2xvciA9IG5vZGUuc3Ryb2tlQ29sb3IoKTtcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlc1tOb2RlQXR0cktleS5TVFJPS0VfQ09MT1JdLmFycmF5WzQgKiAodGhpcy5jb3VudCArIGkpXSA9IHN0cm9rZUNvbG9yLnI7XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbTm9kZUF0dHJLZXkuU1RST0tFX0NPTE9SXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKSArIDFdID1cbiAgICAgICAgICAgICAgICBzdHJva2VDb2xvci5nO1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW05vZGVBdHRyS2V5LlNUUk9LRV9DT0xPUl0uYXJyYXlbNCAqICh0aGlzLmNvdW50ICsgaSkgKyAyXSA9XG4gICAgICAgICAgICAgICAgc3Ryb2tlQ29sb3IuYjtcbiAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlc1tOb2RlQXR0cktleS5TVFJPS0VfQ09MT1JdLmFycmF5WzQgKiAodGhpcy5jb3VudCArIGkpICsgM10gPVxuICAgICAgICAgICAgICAgIHN0cm9rZUNvbG9yLmE7XG4gICAgICAgICAgICBjb25zdCByZW5kZXJJZENvbG9yID0gdXRpbHNfMS5lbmNvZGVSZW5kZXJJZCgyICogKHRoaXMuY291bnQgKyBpKSk7IC8vIE5PVEU6IG5vZGUgcmVuZGVyIGlkLCB1c2UgZXZlbiBpbnRlZ2VyXG4gICAgICAgICAgICB0aGlzLmlkQXR0cmlidXRlc1tOb2RlSWRBdHRyS2V5LklEXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKV0gPSByZW5kZXJJZENvbG9yLnI7XG4gICAgICAgICAgICB0aGlzLmlkQXR0cmlidXRlc1tOb2RlSWRBdHRyS2V5LklEXS5hcnJheVs0ICogKHRoaXMuY291bnQgKyBpKSArIDFdID0gcmVuZGVySWRDb2xvci5nO1xuICAgICAgICAgICAgdGhpcy5pZEF0dHJpYnV0ZXNbTm9kZUlkQXR0cktleS5JRF0uYXJyYXlbNCAqICh0aGlzLmNvdW50ICsgaSkgKyAyXSA9IHJlbmRlcklkQ29sb3IuYjtcbiAgICAgICAgICAgIHRoaXMuaWRBdHRyaWJ1dGVzW05vZGVJZEF0dHJLZXkuSURdLmFycmF5WzQgKiAodGhpcy5jb3VudCArIGkpICsgM10gPSByZW5kZXJJZENvbG9yLmE7XG4gICAgICAgICAgICB0aGlzLnJlbmRlcklkVG9JZFsyICogKHRoaXMuY291bnQgKyBpKV0gPSBub2RlLmlkKCk7XG4gICAgICAgICAgICB0aGlzLmlkVG9JbmRleFtub2RlLmlkKCldID0gdGhpcy5jb3VudCArIGk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMuZm9yRWFjaCgoYXR0cikgPT4ge1xuICAgICAgICAgICAgaWYgKCFhdHRyLmlzQnVpbGRJbikge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2wuYmluZEJ1ZmZlcih0aGlzLmdsLkFSUkFZX0JVRkZFUiwgYXR0ci5idWZmZXIpO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2wuYnVmZmVyU3ViRGF0YSh0aGlzLmdsLkFSUkFZX0JVRkZFUiwgYXR0ci5zaXplICogdGhpcy5jb3VudCAqIGF0dHIuYXJyYXkuQllURVNfUEVSX0VMRU1FTlQsIGF0dHIuYXJyYXksIGF0dHIuc2l6ZSAqIHRoaXMuY291bnQsIGF0dHIuc2l6ZSAqIG5vZGVzLmxlbmd0aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBpZCBidWZmZXIgZGF0YVxuICAgICAgICBjb25zdCBhdHRyID0gdGhpcy5pZEF0dHJpYnV0ZXNbTm9kZUlkQXR0cktleS5JRF07XG4gICAgICAgIHRoaXMuZ2wuYmluZEJ1ZmZlcih0aGlzLmdsLkFSUkFZX0JVRkZFUiwgYXR0ci5idWZmZXIpO1xuICAgICAgICB0aGlzLmdsLmJ1ZmZlclN1YkRhdGEodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGF0dHIuc2l6ZSAqIHRoaXMuY291bnQgKiBhdHRyLmFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULCBhdHRyLmFycmF5LCBhdHRyLnNpemUgKiB0aGlzLmNvdW50LCBhdHRyLnNpemUgKiBub2Rlcy5sZW5ndGgpO1xuICAgICAgICB0aGlzLmNvdW50ICs9IG5vZGVzLmxlbmd0aDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogcmVuZGVyIGlkIHRvIGlkXG4gICAgICogQHBhcmFtIHJlbmRlcklkIHJlbmRlciBpZCBpbiBudW1iZXJcbiAgICAgKi9cbiAgICBnZXRJZEJ5UmVuZGVySWQocmVuZGVySWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVySWRUb0lkW3JlbmRlcklkXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogZHJhdyBub2Rlc1xuICAgICAqL1xuICAgIGRyYXcoKSB7XG4gICAgICAgIGlmICh0aGlzLmNvdW50ID4gMCkge1xuICAgICAgICAgICAgdGhpcy5nbC5lbmFibGUodGhpcy5nbC5CTEVORCk7XG4gICAgICAgICAgICB0aGlzLmdsLmJsZW5kRnVuYyh0aGlzLmdsLk9ORSwgdGhpcy5nbC5PTkVfTUlOVVNfU1JDX0FMUEhBKTtcbiAgICAgICAgICAgIHRoaXMuZ2wudXNlUHJvZ3JhbSh0aGlzLnByb2dyYW0pO1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzLmZvckVhY2goKGF0dHIpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KGF0dHIuaW5kZXgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXMuZm9yRWFjaCgoYXR0ciwgaSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2wuYmluZEJ1ZmZlcih0aGlzLmdsLkFSUkFZX0JVRkZFUiwgYXR0ci5idWZmZXIpO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2wudmVydGV4QXR0cmliUG9pbnRlcihhdHRyLmluZGV4LCBhdHRyLnNpemUsIHRoaXMuZ2wuRkxPQVQsIGZhbHNlLCBhdHRyLnNpemUgKiBhdHRyLmFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULCAwKTtcbiAgICAgICAgICAgICAgICBpZiAoIWF0dHIuaXNCdWlsZEluKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdsLnZlcnRleEF0dHJpYkRpdmlzb3IoYXR0ci5pbmRleCwgMSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmdsLmRyYXdBcnJheXNJbnN0YW5jZWQodGhpcy5nbC5UUklBTkdMRV9TVFJJUCwgMCwgNCwgdGhpcy5jb3VudCk7XG4gICAgICAgIC8vIGRyYXcgaWRcbiAgICAgICAgdGhpcy5nbC5ibGVuZEZ1bmModGhpcy5nbC5PTkUsIHRoaXMuZ2wuWkVSTyk7XG4gICAgICAgIHRoaXMuZ2wudXNlUHJvZ3JhbSh0aGlzLmlkUHJvZ3JhbSk7XG4gICAgICAgIHRoaXMuZ2wuYmluZEZyYW1lYnVmZmVyKHRoaXMuZ2wuRlJBTUVCVUZGRVIsIHRoaXMuaWRUZXh0dXJlKTtcbiAgICAgICAgdGhpcy5pZEF0dHJpYnV0ZXMuZm9yRWFjaCgoYXR0cikgPT4ge1xuICAgICAgICAgICAgdGhpcy5nbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShhdHRyLmluZGV4KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGF0dHIgPSB0aGlzLmlkQXR0cmlidXRlc1tOb2RlSWRBdHRyS2V5LklEXTtcbiAgICAgICAgdGhpcy5nbC5iaW5kQnVmZmVyKHRoaXMuZ2wuQVJSQVlfQlVGRkVSLCBhdHRyLmJ1ZmZlcik7XG4gICAgICAgIHRoaXMuZ2wudmVydGV4QXR0cmliUG9pbnRlcihhdHRyLmluZGV4LCBhdHRyLnNpemUsIHRoaXMuZ2wuRkxPQVQsIGZhbHNlLCBhdHRyLnNpemUgKiBhdHRyLmFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULCAwKTtcbiAgICAgICAgdGhpcy5nbC52ZXJ0ZXhBdHRyaWJEaXZpc29yKGF0dHIuaW5kZXgsIDEpO1xuICAgICAgICB0aGlzLmdsLmRyYXdBcnJheXNJbnN0YW5jZWQodGhpcy5nbC5UUklBTkdMRV9TVFJJUCwgMCwgNCwgdGhpcy5jb3VudCk7XG4gICAgICAgIHRoaXMuZ2wuYmluZEZyYW1lYnVmZmVyKHRoaXMuZ2wuRlJBTUVCVUZGRVIsIG51bGwpO1xuICAgICAgICB0aGlzLmdsLmVuYWJsZSh0aGlzLmdsLkJMRU5EKTtcbiAgICAgICAgdGhpcy5nbC5ibGVuZEZ1bmModGhpcy5nbC5PTkUsIHRoaXMuZ2wuT05FX01JTlVTX1NSQ19BTFBIQSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZW5kZXJOb2RlTWFuYWdlciA9IFJlbmRlck5vZGVNYW5hZ2VyO1xuXG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vc3JjL3JlbmRlcmVyL2VsZW1lbnRzL25vZGUvdmVydGV4Lmdsc2xcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9ub2RlL3ZlcnRleC5nbHNsICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImRlZmF1bHRcIl0gPSAoXCIjdmVyc2lvbiAzMDAgZXNcXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuaW4gdmVjMyBpblZlcnRleFBvcztcXG5pbiB2ZWMyIGluUG9zaXRpb247XFxuaW4gZmxvYXQgaW5SYWRpdXM7XFxuaW4gdmVjNCBpbkZpbGw7XFxuaW4gZmxvYXQgaW5TdHJva2VXaWR0aDtcXG5pbiB2ZWM0IGluU3Ryb2tlQ29sb3I7XFxuXFxub3V0IHZlYzIgcG9zO1xcbm91dCBmbG9hdCByYWRpdXM7XFxub3V0IHZlYzQgY29sb3I7XFxub3V0IGZsb2F0IHN0cm9rZVdpZHRoO1xcbm91dCB2ZWM0IHN0cm9rZUNvbG9yO1xcblxcbnVuaWZvcm0gbWF0MyBwcm9qZWN0aW9uO1xcbnVuaWZvcm0gdmVjMiBzY2FsZTtcXG51bmlmb3JtIHZlYzIgdHJhbnNsYXRlO1xcbnVuaWZvcm0gdmVjMiB2aWV3cG9ydDtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgICBmbG9hdCBzaXplID0gaW5SYWRpdXMgKyBpblN0cm9rZVdpZHRoIC8gMi47XFxuICAgIHJhZGl1cyA9IGluUmFkaXVzO1xcbiAgICBjb2xvciA9IGluRmlsbDtcXG4gICAgc3Ryb2tlV2lkdGggPSBpblN0cm9rZVdpZHRoO1xcbiAgICBzdHJva2VDb2xvciA9IGluU3Ryb2tlQ29sb3I7XFxuICAgIGZsb2F0IHZlcnRleFNpemUgPSBzaXplICogKDIuICogc3FydCgyLikpICogMS41OyAvLyBOT1RFOiB4IDEuNSB0byBwcmV2ZW50IGJvcmRlciBmYWN0b3JcXG4gICAgcG9zID0gc2NhbGUgKiBpblBvc2l0aW9uICsgdHJhbnNsYXRlO1xcbiAgICBtYXQzIHRyYW5zZm9ybSA9IG1hdDMoXFxuICAgICAgICB2ZXJ0ZXhTaXplLCAwLCAwLFxcbiAgICAgICAgMCwgdmVydGV4U2l6ZSwgMCxcXG4gICAgICAgIHBvcy54LCBwb3MueSwgMVxcbiAgICApO1xcblxcbiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQocHJvamVjdGlvbiAqIHRyYW5zZm9ybSAqIGluVmVydGV4UG9zLCAxLik7XFxufVwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIFwiLi9zcmMvcmVuZGVyZXIvaW5kZXgudHNcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9zcmMvcmVuZGVyZXIvaW5kZXgudHMgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uIHJlbmRlciBncmFwaCB1c2luZyB3ZWJnbFxuICogQGF1dGhvciBYaWFvZG9uZyBaaGFvIDx6aGFveGlhb2RvbmdAemp1LmVkdS5jbj5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZW5kZXJlciA9IHZvaWQgMDtcbmNvbnN0IHJlbmRlcl9ub2RlXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2VsZW1lbnRzL25vZGUvcmVuZGVyLW5vZGUgKi8gXCIuL3NyYy9yZW5kZXJlci9lbGVtZW50cy9ub2RlL3JlbmRlci1ub2RlLnRzXCIpO1xuY29uc3QgcmVuZGVyX2xpbmtfMSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZWxlbWVudHMvbGluay9yZW5kZXItbGluayAqLyBcIi4vc3JjL3JlbmRlcmVyL2VsZW1lbnRzL2xpbmsvcmVuZGVyLWxpbmsudHNcIik7XG5jb25zdCB1dGlsc18xID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlscyAqLyBcIi4vc3JjL3JlbmRlcmVyL3V0aWxzLnRzXCIpO1xuY2xhc3MgUmVuZGVyZXIge1xuICAgIC8qKlxuICAgICAqIGNyZWF0ZSByZW5kZXJlciBvYmplY3RcbiAgICAgKiBAcGFyYW0gY29uZmlncyB7Y2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudCwgd2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIsIGJhY2tncm91bmRDb2xvcjogQ29sb3IsIGRlZmF1bHRDb25maWdzOiBPYmplY3R9IGNvbmZpZ3MgcGFzc2VkIHRvIHJlbmRlcmVyXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29uZmlncykge1xuICAgICAgICBjb25zdCB7IGNhbnZhcywgd2lkdGgsIGhlaWdodCwgYmFja2dyb3VuZENvbG9yLCBub2RlTGltaXQsIGxpbmtMaW1pdCB9ID0gY29uZmlncztcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMuZ2wgPSBjYW52YXMuZ2V0Q29udGV4dCgnd2ViZ2wyJyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05ldFYgcmVxdWlyZXMgV2ViR0wyIHN1cHBvcnRlZCBieSB5b3VyIGJyb3dzZXInKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmJhY2tncm91bmRDb2xvciA9IGJhY2tncm91bmRDb2xvcjtcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgdGhpcy5pbml0SWRUZXh0dXJlKCk7XG4gICAgICAgIHRoaXMubm9kZU1hbmFnZXIgPSBuZXcgcmVuZGVyX25vZGVfMS5SZW5kZXJOb2RlTWFuYWdlcih0aGlzLmdsLCB7IHdpZHRoLCBoZWlnaHQsIGxpbWl0OiBub2RlTGltaXQgfSwgdGhpcy5pZFRleHR1cmUpO1xuICAgICAgICB0aGlzLmxpbmtNYW5hZ2VyID0gbmV3IHJlbmRlcl9saW5rXzEuUmVuZGVyTGlua01hbmFnZXIodGhpcy5nbCwgeyB3aWR0aCwgaGVpZ2h0LCBsaW1pdDogbGlua0xpbWl0IH0sIHRoaXMuaWRUZXh0dXJlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogYWRkIG5vZGVzIHRvIG5vZGUgbWFuYWdlclxuICAgICAqIEBwYXJhbSBub2RlcyBub2RlIGRhdGEgaW4gTmV0VlxuICAgICAqL1xuICAgIGFkZE5vZGVzKG5vZGVzKSB7XG4gICAgICAgIHRoaXMubm9kZU1hbmFnZXIuYWRkRGF0YShub2Rlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGFkZCBsaW5rcyB0byBsaW5rIG1hbmFnZXJcbiAgICAgKiBAcGFyYW0gbGlua3MgbGluayBkYXRhIGluIE5ldFZcbiAgICAgKi9cbiAgICBhZGRMaW5rcyhsaW5rcykge1xuICAgICAgICB0aGlzLmxpbmtNYW5hZ2VyLmFkZERhdGEobGlua3MpO1xuICAgIH1cbiAgICBzZXRUcmFuc2Zvcm0odHJhbnNmb3JtKSB7XG4gICAgICAgIHRoaXMubm9kZU1hbmFnZXIuc2V0VHJhbnNmb3JtKHRyYW5zZm9ybSk7XG4gICAgICAgIHRoaXMubGlua01hbmFnZXIuc2V0VHJhbnNmb3JtKHRyYW5zZm9ybSk7XG4gICAgICAgIHRoaXMuZHJhdygpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBkcmF3IGFsbCBlbGVtZW50c1xuICAgICAqL1xuICAgIGRyYXcoKSB7XG4gICAgICAgIHRoaXMuZ2wuYmluZEZyYW1lYnVmZmVyKHRoaXMuZ2wuRlJBTUVCVUZGRVIsIHRoaXMuaWRUZXh0dXJlKTtcbiAgICAgICAgdGhpcy5nbC5jbGVhckNvbG9yKDEsIDEsIDEsIDEpO1xuICAgICAgICB0aGlzLmdsLmNsZWFyKHRoaXMuZ2wuQ09MT1JfQlVGRkVSX0JJVCk7XG4gICAgICAgIHRoaXMuZ2wuYmluZEZyYW1lYnVmZmVyKHRoaXMuZ2wuRlJBTUVCVUZGRVIsIG51bGwpO1xuICAgICAgICB0aGlzLmdsLmNsZWFyQ29sb3IodGhpcy5iYWNrZ3JvdW5kQ29sb3IuciwgdGhpcy5iYWNrZ3JvdW5kQ29sb3IuZywgdGhpcy5iYWNrZ3JvdW5kQ29sb3IuYiwgdGhpcy5iYWNrZ3JvdW5kQ29sb3IuYSk7XG4gICAgICAgIHRoaXMuZ2wuY2xlYXIodGhpcy5nbC5DT0xPUl9CVUZGRVJfQklUKTtcbiAgICAgICAgdGhpcy5saW5rTWFuYWdlci5kcmF3KCk7XG4gICAgICAgIHRoaXMubm9kZU1hbmFnZXIuZHJhdygpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBnZXQgZWxlbWVudCdzIGlkIGF0ICh4LCB5KSBvZiBjYW52YXMgaWYgZXhpc3RzXG4gICAgICogQHBhcmFtIHggeCBwb3NcbiAgICAgKiBAcGFyYW0geSB5IHBvc1xuICAgICAqL1xuICAgIGdldElkQnlQb3NpdGlvbihwb3NpdGlvbikge1xuICAgICAgICBjb25zdCByZW5kZXJJZCA9IHRoaXMucmVhZElkVGV4dHVyZShwb3NpdGlvbik7XG4gICAgICAgIGlmIChyZW5kZXJJZCA+PSAwKSB7XG4gICAgICAgICAgICBpZiAocmVuZGVySWQgJSAyID09PSAwKSB7XG4gICAgICAgICAgICAgICAgLy8gTk9URTogbm9kZSBoYXMgZXZlbiByZW5kZXIgaWQsIGxpbmsgaGFzIG9kZCByZW5kZXIgaWRcbiAgICAgICAgICAgICAgICBjb25zdCBub2RlSWQgPSB0aGlzLm5vZGVNYW5hZ2VyLmdldElkQnlSZW5kZXJJZChyZW5kZXJJZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5vZGVJZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxpbmtJZHMgPSB0aGlzLmxpbmtNYW5hZ2VyLmdldElkc0J5UmVuZGVySWQocmVuZGVySWQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBsaW5rSWRzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHJlYWQgcGl4ZWwgdmFsdWUgYXQgKHgsIHkpIG9mIHRleHR1cmVcbiAgICAgKiBAcGFyYW0geCB4IHBvc1xuICAgICAqIEBwYXJhbSB5IHkgcG9zXG4gICAgICovXG4gICAgcmVhZElkVGV4dHVyZShwb3NpdGlvbikge1xuICAgICAgICBjb25zdCByYXRpbyA9IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IDE7XG4gICAgICAgIHRoaXMuZ2wuYmluZEZyYW1lYnVmZmVyKHRoaXMuZ2wuUkVBRF9GUkFNRUJVRkZFUiwgdGhpcy5pZFRleHR1cmUpO1xuICAgICAgICBjb25zdCByZWFkUGl4ZWxCdWZmZXIgPSBuZXcgVWludDhBcnJheShbMjU1LCAyNTUsIDI1NSwgMjU1XSk7IC8vIC0xXG4gICAgICAgIHRoaXMuZ2wucmVhZFBpeGVscyhcbiAgICAgICAgLy8gIVdhcm5pbmc6IHggYW5kIHkgYXJlIG9wdGlvbmFsIGluIFBvc2l0aW9uLCBuZWVkIHRvIGNoZWNrIHRoZW1cbiAgICAgICAgcG9zaXRpb24ueCAqIHJhdGlvLCBwb3NpdGlvbi55ICogcmF0aW8sIDEsIDEsIHRoaXMuZ2wuUkdCQSwgdGhpcy5nbC5VTlNJR05FRF9CWVRFLCByZWFkUGl4ZWxCdWZmZXIpO1xuICAgICAgICBjb25zdCBvYmplY3RJRCA9IHV0aWxzXzEuZGVjb2RlUmVuZGVySWQocmVhZFBpeGVsQnVmZmVyKTtcbiAgICAgICAgcmV0dXJuIG9iamVjdElEO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBpbml0IFdlYkdMIHRleHR1cmUgZm9yIHJlY29yZGluZyBwb3NpdGlvbiBvZiBlbGVtZW50c1xuICAgICAqL1xuICAgIGluaXRJZFRleHR1cmUoKSB7XG4gICAgICAgIGNvbnN0IGdsID0gdGhpcy5nbDtcbiAgICAgICAgY29uc3QgcGl4ZWxSYXRpbyA9IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IDE7XG4gICAgICAgIGNvbnN0IHNjcmVlbldpZHRoID0gdGhpcy53aWR0aCAqIHBpeGVsUmF0aW87XG4gICAgICAgIGNvbnN0IHNjcmVlbkhlaWdodCA9IHRoaXMuaGVpZ2h0ICogcGl4ZWxSYXRpbztcbiAgICAgICAgY29uc3QgZmJvID0gZ2wuY3JlYXRlRnJhbWVidWZmZXIoKTtcbiAgICAgICAgZ2wuYmluZEZyYW1lYnVmZmVyKGdsLkZSQU1FQlVGRkVSLCBmYm8pO1xuICAgICAgICBjb25zdCBpZFRleHR1cmUgPSBnbC5jcmVhdGVUZXh0dXJlKCk7XG4gICAgICAgIGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsIGlkVGV4dHVyZSk7XG4gICAgICAgIGdsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwgMCwgZ2wuUkdCQSwgc2NyZWVuV2lkdGgsIHNjcmVlbkhlaWdodCwgMCwgZ2wuUkdCQSwgZ2wuVU5TSUdORURfQllURSwgbnVsbCk7XG4gICAgICAgIGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCwgZ2wuVEVYVFVSRV9NSU5fRklMVEVSLCBnbC5MSU5FQVIpO1xuICAgICAgICBnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsIGdsLlRFWFRVUkVfTUFHX0ZJTFRFUiwgZ2wuTElORUFSKTtcbiAgICAgICAgZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCwgbnVsbCk7XG4gICAgICAgIGdsLmZyYW1lYnVmZmVyVGV4dHVyZTJEKGdsLkZSQU1FQlVGRkVSLCBnbC5DT0xPUl9BVFRBQ0hNRU5UMCwgZ2wuVEVYVFVSRV8yRCwgaWRUZXh0dXJlLCAwKTtcbiAgICAgICAgLy8gVE9ETzogbmVlZCBzaW1wbGlmeVxuICAgICAgICBnbC5kcmF3QnVmZmVycyhbMF0ubWFwKCh2KSA9PiB2ICsgZ2wuQ09MT1JfQVRUQUNITUVOVDApKTtcbiAgICAgICAgY29uc3QgcmJvID0gZ2wuY3JlYXRlUmVuZGVyYnVmZmVyKCk7XG4gICAgICAgIGdsLmJpbmRSZW5kZXJidWZmZXIoZ2wuUkVOREVSQlVGRkVSLCByYm8pO1xuICAgICAgICBnbC5jbGVhckNvbG9yKDEsIDEsIDEsIDEpO1xuICAgICAgICBnbC5yZW5kZXJidWZmZXJTdG9yYWdlKGdsLlJFTkRFUkJVRkZFUiwgZ2wuREVQVEgyNF9TVEVOQ0lMOCwgc2NyZWVuV2lkdGgsIHNjcmVlbkhlaWdodCk7XG4gICAgICAgIGdsLmJpbmRSZW5kZXJidWZmZXIoZ2wuUkVOREVSQlVGRkVSLCBudWxsKTtcbiAgICAgICAgZ2wuZnJhbWVidWZmZXJSZW5kZXJidWZmZXIoZ2wuRlJBTUVCVUZGRVIsIGdsLkRFUFRIX1NURU5DSUxfQVRUQUNITUVOVCwgZ2wuUkVOREVSQlVGRkVSLCByYm8pO1xuICAgICAgICBpZiAoZ2wuY2hlY2tGcmFtZWJ1ZmZlclN0YXR1cyhnbC5GUkFNRUJVRkZFUikgIT09IGdsLkZSQU1FQlVGRkVSX0NPTVBMRVRFKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZyYW1lYnVmZmVyIGdlbmVyYXRlIGZhaWxlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGdsLmJpbmRGcmFtZWJ1ZmZlcihnbC5GUkFNRUJVRkZFUiwgbnVsbCk7XG4gICAgICAgIHRoaXMuaWRUZXh0dXJlID0gZmJvO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVuZGVyZXIgPSBSZW5kZXJlcjtcblxuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9yZW5kZXJlci91dGlscy50c1wiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3NyYy9yZW5kZXJlci91dGlscy50cyAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBAYXV0aG9yIFhpYW9kb25nIFpoYW8gPHpoYW94aWFvZG9uZ0B6anUuZWR1LmNuPlxuICogQGRlc2NyaXB0aW9uIHV0aWxpdHkgZnVuY3Rpb25zIGZvciByZW5kZXJlclxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZVJlbmRlcklkID0gZXhwb3J0cy5lbmNvZGVSZW5kZXJJZCA9IGV4cG9ydHMuZXh0cmFjdEF0dHJpYnV0ZXNGcm9tU2hhZGVyID0gZXhwb3J0cy5jcmVhdGVBcnJheUJ1ZmZlciA9IGV4cG9ydHMuY3JlYXRlUHJvZ3JhbSA9IGV4cG9ydHMuY29tcGlsZVNoYWRlciA9IHZvaWQgMDtcbi8qKlxuICogY29tcGlsZSB3ZWJnbCBzaGFkZXJcbiAqIEBwYXJhbSBnbCBXZWJHTCBpbnN0YW5jZVxuICogQHBhcmFtIHNoYWRlclN0ciBzaGFkZXIgZmlsZSBpbiBzdHJpbmdcbiAqIEBwYXJhbSBzaGFkZXJUeXBlIHZlcnRleCBvciBmcmFnbWVudCBzaGFkZXJcbiAqL1xuZnVuY3Rpb24gY29tcGlsZVNoYWRlcihnbCwgc2hhZGVyU3RyLCBzaGFkZXJUeXBlKSB7XG4gICAgY29uc3Qgc2hhZGVyID0gZ2wuY3JlYXRlU2hhZGVyKHNoYWRlclR5cGUpO1xuICAgIGdsLnNoYWRlclNvdXJjZShzaGFkZXIsIHNoYWRlclN0cik7XG4gICAgZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpO1xuICAgIGlmICghZ2wuZ2V0U2hhZGVyUGFyYW1ldGVyKHNoYWRlciwgZ2wuQ09NUElMRV9TVEFUVVMpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignU2hhZGVyIGNvbXBpbGUgZmFpbGVkOiAnICsgZ2wuZ2V0U2hhZGVySW5mb0xvZyhzaGFkZXIpKTtcbiAgICB9XG4gICAgcmV0dXJuIHNoYWRlcjtcbn1cbmV4cG9ydHMuY29tcGlsZVNoYWRlciA9IGNvbXBpbGVTaGFkZXI7XG4vKipcbiAqIGdlbmVyYXRlIFdlYkdMIHByb2dyYW1cbiAqIEBwYXJhbSBnbCBXZWJHTCBpbnN0YW5jZVxuICogQHBhcmFtIHZlcnRTaGFkZXJTdHIgdmVydGV4IHNoYWRlciBpbiBzdHJpbmcgZm9ybWF0XG4gKiBAcGFyYW0gZnJhZ1NoYWRlclN0ciBmcmFnbWVudCBzaGFkZXIgaW4gc3RyaW5nIGZvcm1hdFxuICogQHBhcmFtIGF0dHJpYnV0ZXMgYXR0cmlidXRlc1xuICovXG5mdW5jdGlvbiBjcmVhdGVQcm9ncmFtKGdsLCB2ZXJ0U2hhZGVyU3RyLCBmcmFnU2hhZGVyU3RyLCBhdHRyaWJ1dGVzKSB7XG4gICAgY29uc3QgdmVydFNoYWRlciA9IGNvbXBpbGVTaGFkZXIoZ2wsIHZlcnRTaGFkZXJTdHIsIGdsLlZFUlRFWF9TSEFERVIpO1xuICAgIGNvbnN0IGZyYWdTaGFkZXIgPSBjb21waWxlU2hhZGVyKGdsLCBmcmFnU2hhZGVyU3RyLCBnbC5GUkFHTUVOVF9TSEFERVIpO1xuICAgIGNvbnN0IHByb2dyYW0gPSBnbC5jcmVhdGVQcm9ncmFtKCk7XG4gICAgYXR0cmlidXRlcy5mb3JFYWNoKChhdHRyKSA9PiB7XG4gICAgICAgIGdsLmJpbmRBdHRyaWJMb2NhdGlvbihwcm9ncmFtLCBhdHRyLmluZGV4LCBhdHRyLm5hbWUpO1xuICAgIH0pO1xuICAgIGdsLmF0dGFjaFNoYWRlcihwcm9ncmFtLCB2ZXJ0U2hhZGVyKTtcbiAgICBnbC5hdHRhY2hTaGFkZXIocHJvZ3JhbSwgZnJhZ1NoYWRlcik7XG4gICAgZ2wubGlua1Byb2dyYW0ocHJvZ3JhbSk7XG4gICAgaWYgKCFnbC5nZXRQcm9ncmFtUGFyYW1ldGVyKHByb2dyYW0sIGdsLkxJTktfU1RBVFVTKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBsaW5rIHNoYWRlcnM6ICR7Z2wuZ2V0UHJvZ3JhbUluZm9Mb2cocHJvZ3JhbSl9YCk7XG4gICAgfVxuICAgIHJldHVybiBwcm9ncmFtO1xufVxuZXhwb3J0cy5jcmVhdGVQcm9ncmFtID0gY3JlYXRlUHJvZ3JhbTtcbi8qKlxuICogY3JlYXRlIFdlYkdMIGFycmF5IGJ1ZmZlciBnaXZlbiBkYXRhIGFycmF5XG4gKiBAcGFyYW0gZ2wgV2ViR0wgY29udGV4dFxuICogQHBhcmFtIGRhdGEgZGF0YSB0byBzdG9yZSBpbiBidWZmZXJcbiAqIEByZXR1cm5zIFdlYkdMIGJ1ZmZlciBzdG9yZSBnaXZlbiBkYXRhXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUFycmF5QnVmZmVyKGdsLCBkYXRhKSB7XG4gICAgY29uc3QgYnVmZmVyID0gZ2wuY3JlYXRlQnVmZmVyKCk7XG4gICAgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIGJ1ZmZlcik7XG4gICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIGRhdGEsIGdsLkRZTkFNSUNfRFJBVyk7XG4gICAgcmV0dXJuIGJ1ZmZlcjtcbn1cbmV4cG9ydHMuY3JlYXRlQXJyYXlCdWZmZXIgPSBjcmVhdGVBcnJheUJ1ZmZlcjtcbi8qKlxuICogZXh0cmFjdCBhdHRyaWJ1dGVzIGZyb20gYSBzaGFkZXIgc3JpbmdcbiAqIEBwYXJhbSB7c3RyaW5nfSBzaGFkZXJTdHJcbiAqIEByZXR1cm5zIHtSZW5kZXJBdHRyaWJ1dGVbXX0gYXR0cmlidXRlcyBhcnJheVxuICovXG5mdW5jdGlvbiBleHRyYWN0QXR0cmlidXRlc0Zyb21TaGFkZXIoc2hhZGVyU3RyKSB7XG4gICAgY29uc3QgbWF0Y2hpbmdzID0gc2hhZGVyU3RyLm1hdGNoKC9pblxccy4qOy9nKTtcbiAgICByZXR1cm4gbWF0Y2hpbmdzLm1hcCgobWF0Y2gsIGluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBtYXRjaC5zcGxpdCgnICcpWzJdLnNsaWNlKDAsIC0xKTtcbiAgICAgICAgY29uc3QgdHlwZSA9IG1hdGNoLnNwbGl0KCcgJylbMV07XG4gICAgICAgIGxldCBzaXplID0gMTtcbiAgICAgICAgaWYgKHR5cGUuc2xpY2UoMCwgMykgPT09ICd2ZWMnKSB7XG4gICAgICAgICAgICBzaXplID0gTnVtYmVyKHR5cGUuc2xpY2UoLTEpKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgaXNCdWlsZEluID0gZmFsc2U7XG4gICAgICAgIGlmIChuYW1lID09PSAnaW5WZXJ0ZXhQb3MnKSB7XG4gICAgICAgICAgICBpc0J1aWxkSW4gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgc2l6ZSxcbiAgICAgICAgICAgIGluZGV4LFxuICAgICAgICAgICAgaXNCdWlsZEluXG4gICAgICAgIH07XG4gICAgfSk7XG59XG5leHBvcnRzLmV4dHJhY3RBdHRyaWJ1dGVzRnJvbVNoYWRlciA9IGV4dHJhY3RBdHRyaWJ1dGVzRnJvbVNoYWRlcjtcbi8qKlxuICogZW5jb2RlIGEgcmVuZGVyIGlkIGFzIGNvbG9yIHRvIHBhc3MgaW4gdGV4dHVyZVxuICogQHBhcmFtIGlkIHJlbmRlciBpZFxuICovXG5mdW5jdGlvbiBlbmNvZGVSZW5kZXJJZChpZCkge1xuICAgIC8vIHNwbGl0IGEgbGFyZ2UgbnVtYmVyIGJ5IDgtYml0OiBpZCA9IGNvbmNhdChhLCBiLCBnLCByKSwgYW5kIG5vcm1hbGl6ZSB0aGVtIGludG8gKDAsIDEpXG4gICAgY29uc3QgciA9IChpZCAmIDI1NSkgLyAyNTUuMDtcbiAgICBjb25zdCBnID0gKChpZCA+PiA4KSAmIDI1NSkgLyAyNTUuMDtcbiAgICBjb25zdCBiID0gKChpZCA+PiAxNikgJiAyNTUpIC8gMjU1LjA7XG4gICAgY29uc3QgYSA9ICgoaWQgPj4gMjQpICYgMjU1KSAvIDI1NS4wO1xuICAgIHJldHVybiB7IHIsIGcsIGIsIGEgfTtcbn1cbmV4cG9ydHMuZW5jb2RlUmVuZGVySWQgPSBlbmNvZGVSZW5kZXJJZDtcbi8qKlxuICogZGVjb2RlIHBpeGVsIHZhbHVlIHRvIG51bWJlclxuICogQHBhcmFtIHBpeGVsVmFsIGEgcGl4ZWwncyB2YWx1ZSBvbiB0ZXh0dXJlXG4gKi9cbmZ1bmN0aW9uIGRlY29kZVJlbmRlcklkKHBpeGVsVmFsKSB7XG4gICAgLy8gcGFyc2Ugbm9ybWFsaXplZCBwYXJ0cyBvZiBpZCBudW1iZXIsIGJpdCBzaGlmdCB0byBvcmlnaW4gcG9zaXRpb24gYW5kIGNvbmNhdFxuICAgIGNvbnN0IHJlbmRlcklkID0gcGl4ZWxWYWxbMF0gfCAocGl4ZWxWYWxbMV0gPDwgOCkgfCAocGl4ZWxWYWxbMl0gPDwgMTYpIHwgKHBpeGVsVmFsWzNdIDw8IDI0KTtcbiAgICByZXR1cm4gcmVuZGVySWQ7XG59XG5leHBvcnRzLmRlY29kZVJlbmRlcklkID0gZGVjb2RlUmVuZGVySWQ7XG5cblxuLyoqKi8gfSksXG5cbi8qKiovIFwiLi9zcmMvdXRpbHMvaXMudHNcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9zcmMvdXRpbHMvaXMudHMgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNWYWxpZElkID0gdm9pZCAwO1xuLyoqXG4gKiBUZXN0IHdoZXRoZXIgYSBzdHJpbmcgY2FuIGJlIGEgdmFsaWQgaWQgb2YgYSBOb2RlLlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlOiB0aGUgc3RyaW5nIHRvYmUgdGVzdGVkXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZnVuY3Rpb24gaXNWYWxpZElkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5sZW5ndGggPiAwO1xufVxuZXhwb3J0cy5pc1ZhbGlkSWQgPSBpc1ZhbGlkSWQ7XG5cblxuLyoqKi8gfSksXG5cbi8qKiovIFwiLi9zcmMvdXRpbHMvbWFwMi50c1wiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vc3JjL3V0aWxzL21hcDIudHMgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBAYXV0aG9yIEppYWNoZW5nIFBhbiA8amFja2llYW54aXNAZ21haWwuY29tPlxuICogQGRlc2NyaXB0aW9uIE1hcDIgaXMgYSBNYXAgZGF0YSBzdHJ1Y3R1cmUgd2hpY2ggbWFwcyB0d28ga2V5cyB0byBvbmUgdmFsdWUuXG4gKiBAVXNhZ2Ugc2FtZSB0byBNYXAgZGF0YSBzdHJ1Y3R1cmUgaW4gRVM2LlxuICogQGRlcGVuZGVuY2VzIE5vbmVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgSk9JTiA9IFN0cmluZy5mcm9tQ2hhckNvZGUoNyk7XG5jb25zdCBpc0tleXMgPSAoa2V5cykgPT4ge1xuICAgIHJldHVybiAoa2V5cyBpbnN0YW5jZW9mIEFycmF5ICYmXG4gICAgICAgIGtleXMubGVuZ3RoID09PSAyICYmXG4gICAgICAgIGtleXMuZXZlcnkoKGtleSkgPT4ga2V5ICE9PSB1bmRlZmluZWQgJiYga2V5ICE9PSBudWxsKSk7XG59O1xuY2xhc3MgTWFwMiB7XG4gICAgY29uc3RydWN0b3IoZW50cmllcykge1xuICAgICAgICB0aGlzLm1hcCA9IG5ldyBNYXAoKTtcbiAgICAgICAgaWYgKGVudHJpZXMgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgZW50cmllcy5mb3JFYWNoKChlbnRyeSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBba2V5LCB2YWx1ZV0gPSBlbnRyeTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBzaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAuc2l6ZTtcbiAgICB9XG4gICAgZGVsZXRlKGtleXMpIHtcbiAgICAgICAgaWYgKGlzS2V5cyhrZXlzKSkge1xuICAgICAgICAgICAgY29uc3Qga2V5ID0ga2V5cy5qb2luKEpPSU4pO1xuICAgICAgICAgICAgY29uc3Qga2V5XyA9IGtleXNbMV0gKyBKT0lOICsga2V5c1swXTtcbiAgICAgICAgICAgIGxldCBtYXAgPSB0aGlzLm1hcDtcbiAgICAgICAgICAgIG1hcC5kZWxldGUoa2V5KTtcbiAgICAgICAgICAgIG1hcC5kZWxldGUoa2V5Xyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0KGtleXMsIHZhbHVlKSB7XG4gICAgICAgIGlmIChpc0tleXMoa2V5cykpIHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXMuam9pbihKT0lOKTtcbiAgICAgICAgICAgIGNvbnN0IGtleV8gPSBrZXlzWzFdICsgSk9JTiArIGtleXNbMF07XG4gICAgICAgICAgICBsZXQgbWFwID0gdGhpcy5tYXA7XG4gICAgICAgICAgICBpZiAoIW1hcC5oYXMoa2V5XykpIHtcbiAgICAgICAgICAgICAgICBtYXAuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbWFwLnNldChrZXlfLCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGdldChrZXlzKSB7XG4gICAgICAgIGlmIChpc0tleXMoa2V5cykpIHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXMuam9pbihKT0lOKTtcbiAgICAgICAgICAgIGNvbnN0IGtleV8gPSBrZXlzWzFdICsgSk9JTiArIGtleXNbMF07XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5tYXAuZ2V0KGtleSkgfHwgdGhpcy5tYXAuZ2V0KGtleV8pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBoYXMoa2V5cykge1xuICAgICAgICBpZiAoaXNLZXlzKGtleXMpKSB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzLmpvaW4oSk9JTik7XG4gICAgICAgICAgICBjb25zdCBrZXlfID0ga2V5c1sxXSArIEpPSU4gKyBrZXlzWzBdO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFwLmhhcyhrZXkpIHx8IHRoaXMubWFwLmhhcyhrZXlfKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3JFYWNoKGZ1bmMpIHtcbiAgICAgICAgdGhpcy5tYXAuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgbGV0IGtleXMgPSBrZXkuc3BsaXQoSk9JTik7XG4gICAgICAgICAgICBmdW5jKHZhbHVlLCBrZXlzLCB0aGlzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVudHJpZXMoKSB7XG4gICAgICAgIHJldHVybiBbLi4udGhpcy5tYXAuZW50cmllcygpXS5tYXAoKGVudHJ5KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBlbnRyeVswXS5zcGxpdChKT0lOKTtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZW50cnlbMV07XG4gICAgICAgICAgICByZXR1cm4gW2tleSwgdmFsdWVdO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAga2V5cygpIHtcbiAgICAgICAgbGV0IGtleXMgPSBbLi4udGhpcy5tYXAua2V5cygpXTtcbiAgICAgICAgcmV0dXJuIGtleXMubWFwKChrZXkpID0+IGtleS5zcGxpdChKT0lOKSk7XG4gICAgfVxuICAgIHZhbHVlcygpIHtcbiAgICAgICAgcmV0dXJuIFsuLi50aGlzLm1hcC52YWx1ZXMoKV07XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTWFwMjtcblxuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy91dGlscy91dGlscy50c1wiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3NyYy91dGlscy91dGlscy50cyAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBAYXV0aG9yIFhpYW9kb25nIFpoYW8gPHpoYW94aWFvZG9uZ0B6anUuZWR1LmNuPlxuICogQGRlc2NyaXB0aW9uIHNvbWUgdXRpbGl0eSBmdW5jdGlvbnNcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50cmFuc2Zvcm1HcmFwaFBvc2l0aW9uID0gdm9pZCAwO1xuLyoqXG4gKiBnaXZlbiBhIGdyYXBoIGRhdGEgd2l0aCBwb3NpdGlvbiwgcmV0dXJuIGEgY29weSBvZiBncmFwaCwgd2l0aCBwb3NpdGlvbiB0cmFuc2Zvcm1lZCB0byBjZW50ZXIgb2YgZ2l2ZW4gc2l6ZVxuICogQHBhcmFtIGdyYXBoIG5vZGUgbGluayBncmFwaCBkYXRhXG4gKiBAcGFyYW0gc2l6ZSBncmFwaCBzaXplIChtYXgod2lkdGgsIGhlaWdodCkpXG4gKiBAcGFyYW0gY2VudGVyWCB4IHBvcyBvZiBncmFwaCBjZW50ZXJcbiAqIEBwYXJhbSBjZW50ZXJZIHkgcG9zIG9mIGdyYXBoIGNlbnRlclxuICovXG5mdW5jdGlvbiB0cmFuc2Zvcm1HcmFwaFBvc2l0aW9uKGdyYXBoLCBzaXplLCBjZW50ZXJYLCBjZW50ZXJZKSB7XG4gICAgY29uc3QgdGFyZ2V0R3JhcGggPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGdyYXBoKSk7XG4gICAgY29uc3QgeHMgPSB0YXJnZXRHcmFwaC5ub2Rlcy5tYXAoKG5vZGUpID0+IG5vZGUueCk7XG4gICAgY29uc3QgeXMgPSB0YXJnZXRHcmFwaC5ub2Rlcy5tYXAoKG5vZGUpID0+IG5vZGUueSk7XG4gICAgY29uc3QgeE1pbiA9IE1hdGgubWluKC4uLnhzKTtcbiAgICBjb25zdCB4TWF4ID0gTWF0aC5tYXgoLi4ueHMpO1xuICAgIGNvbnN0IHlNaW4gPSBNYXRoLm1pbiguLi55cyk7XG4gICAgY29uc3QgeU1heCA9IE1hdGgubWF4KC4uLnlzKTtcbiAgICBjb25zdCB4TWlkID0gKHhNaW4gKyB4TWF4KSAvIDI7XG4gICAgY29uc3QgeU1pZCA9ICh5TWluICsgeU1heCkgLyAyO1xuICAgIHRhcmdldEdyYXBoLm5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcbiAgICAgICAgbm9kZS54ID0gKChub2RlLnggLSB4TWlkKSAvICh4TWF4IC0geE1pbikpICogc2l6ZSArIGNlbnRlclg7XG4gICAgICAgIG5vZGUueSA9ICgobm9kZS55IC0geU1pZCkgLyAoeU1heCAtIHlNaW4pKSAqIHNpemUgKyBjZW50ZXJZO1xuICAgIH0pO1xuICAgIHJldHVybiB0YXJnZXRHcmFwaDtcbn1cbmV4cG9ydHMudHJhbnNmb3JtR3JhcGhQb3NpdGlvbiA9IHRyYW5zZm9ybUdyYXBoUG9zaXRpb247XG5cblxuLyoqKi8gfSlcblxuLyoqKioqKi8gfSk7XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OHZkMlZpY0dGamF5OTFibWwyWlhKellXeE5iMlIxYkdWRVpXWnBibWwwYVc5dUlpd2lkMlZpY0dGamF6b3ZMeTkzWldKd1lXTnJMMkp2YjNSemRISmhjQ0lzSW5kbFluQmhZMnM2THk4dkxpOXpjbU12WTI5dVptbG5jeTUwY3lJc0luZGxZbkJoWTJzNkx5OHZMaTl6Y21NdlpHRjBZWE5sZEM5cGJtUmxlQzUwY3lJc0luZGxZbkJoWTJzNkx5OHZMaTl6Y21NdlpHRjBZWE5sZEM5dGFYTmxjbUZpYkdWekxuUnpJaXdpZDJWaWNHRmphem92THk4dUwzTnlZeTlrWVhSaGMyVjBMM0JoZEdWdWRITXVkSE1pTENKM1pXSndZV05yT2k4dkx5NHZjM0pqTDJsdVpHVjRMblJ6SWl3aWQyVmljR0ZqYXpvdkx5OHVMM055WXk5cGJuUmxjbUZqZEdsdmJpOXBiblJsY21GamRHbHZiaTUwY3lJc0luZGxZbkJoWTJzNkx5OHZMaTl6Y21NdmJHRmlaV3d2YkdGaVpXd3VkSE1pTENKM1pXSndZV05yT2k4dkx5NHZjM0pqTDJ4cGJtc3VkSE1pTENKM1pXSndZV05yT2k4dkx5NHZjM0pqTDI1dlpHVXVkSE1pTENKM1pXSndZV05yT2k4dkx5NHZjM0pqTDNKbGJtUmxjbVZ5TDJWc1pXMWxiblJ6TDJ4cGJtc3ZabkpoWjIxbGJuUXVaMnh6YkNJc0luZGxZbkJoWTJzNkx5OHZMaTl6Y21NdmNtVnVaR1Z5WlhJdlpXeGxiV1Z1ZEhNdmJHbHVheTlwWkMxbWNtRm5iV1Z1ZEM1bmJITnNJaXdpZDJWaWNHRmphem92THk4dUwzTnlZeTl5Wlc1a1pYSmxjaTlsYkdWdFpXNTBjeTlzYVc1ckwybGtMWFpsY25SbGVDNW5iSE5zSWl3aWQyVmljR0ZqYXpvdkx5OHVMM055WXk5eVpXNWtaWEpsY2k5bGJHVnRaVzUwY3k5c2FXNXJMM0psYm1SbGNpMXNhVzVyTG5Seklpd2lkMlZpY0dGamF6b3ZMeTh1TDNOeVl5OXlaVzVrWlhKbGNpOWxiR1Z0Wlc1MGN5OXNhVzVyTDNabGNuUmxlQzVuYkhOc0lpd2lkMlZpY0dGamF6b3ZMeTh1TDNOeVl5OXlaVzVrWlhKbGNpOWxiR1Z0Wlc1MGN5OXViMlJsTDJaeVlXZHRaVzUwTG1kc2Myd2lMQ0ozWldKd1lXTnJPaTh2THk0dmMzSmpMM0psYm1SbGNtVnlMMlZzWlcxbGJuUnpMMjV2WkdVdmFXUXRabkpoWjIxbGJuUXVaMnh6YkNJc0luZGxZbkJoWTJzNkx5OHZMaTl6Y21NdmNtVnVaR1Z5WlhJdlpXeGxiV1Z1ZEhNdmJtOWtaUzlwWkMxMlpYSjBaWGd1WjJ4emJDSXNJbmRsWW5CaFkyczZMeTh2TGk5emNtTXZjbVZ1WkdWeVpYSXZaV3hsYldWdWRITXZibTlrWlM5eVpXNWtaWEl0Ym05a1pTNTBjeUlzSW5kbFluQmhZMnM2THk4dkxpOXpjbU12Y21WdVpHVnlaWEl2Wld4bGJXVnVkSE12Ym05a1pTOTJaWEowWlhndVoyeHpiQ0lzSW5kbFluQmhZMnM2THk4dkxpOXpjbU12Y21WdVpHVnlaWEl2YVc1a1pYZ3VkSE1pTENKM1pXSndZV05yT2k4dkx5NHZjM0pqTDNKbGJtUmxjbVZ5TDNWMGFXeHpMblJ6SWl3aWQyVmljR0ZqYXpvdkx5OHVMM055WXk5MWRHbHNjeTlwY3k1MGN5SXNJbmRsWW5CaFkyczZMeTh2TGk5emNtTXZkWFJwYkhNdmJXRndNaTUwY3lJc0luZGxZbkJoWTJzNkx5OHZMaTl6Y21NdmRYUnBiSE12ZFhScGJITXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1EwRkJRenRCUVVORUxFODdVVU5XUVR0UlFVTkJPenRSUVVWQk8xRkJRMEU3TzFGQlJVRTdVVUZEUVR0UlFVTkJPMUZCUTBFN1VVRkRRVHRSUVVOQk8xRkJRMEU3VVVGRFFUdFJRVU5CTzFGQlEwRTdPMUZCUlVFN1VVRkRRVHM3VVVGRlFUdFJRVU5CT3p0UlFVVkJPMUZCUTBFN1VVRkRRVHM3TzFGQlIwRTdVVUZEUVRzN1VVRkZRVHRSUVVOQk96dFJRVVZCTzFGQlEwRTdVVUZEUVR0UlFVTkJMREJEUVVFd1F5eG5RMEZCWjBNN1VVRkRNVVU3VVVGRFFUczdVVUZGUVR0UlFVTkJPMUZCUTBFN1VVRkRRU3gzUkVGQmQwUXNhMEpCUVd0Q08xRkJRekZGTzFGQlEwRXNhVVJCUVdsRUxHTkJRV003VVVGREwwUTdPMUZCUlVFN1VVRkRRVHRSUVVOQk8xRkJRMEU3VVVGRFFUdFJRVU5CTzFGQlEwRTdVVUZEUVR0UlFVTkJPMUZCUTBFN1VVRkRRVHRSUVVOQkxIbERRVUY1UXl4cFEwRkJhVU03VVVGRE1VVXNaMGhCUVdkSUxHMUNRVUZ0UWl4RlFVRkZPMUZCUTNKSk8xRkJRMEU3TzFGQlJVRTdVVUZEUVR0UlFVTkJPMUZCUTBFc01rSkJRVEpDTERCQ1FVRXdRaXhGUVVGRk8xRkJRM1pFTEdsRFFVRnBReXhsUVVGbE8xRkJRMmhFTzFGQlEwRTdVVUZEUVRzN1VVRkZRVHRSUVVOQkxITkVRVUZ6UkN3clJFRkJLMFE3TzFGQlJYSklPMUZCUTBFN096dFJRVWRCTzFGQlEwRTdPenM3T3pzN096czdPenM3TzBGRGJFWkJPenM3UjBGSFJ6czdPMEZCUzFVc1lVRkJTeXhIUVVGSExFZEJRVWM3UVVGRFdDeGpRVUZOTEVkQlFVY3NSMEZCUnp0QlFVTmFMSFZDUVVGbExFZEJRVWNzUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRk8wRkJRelZETEhGQ1FVRmhMRWRCUVVjc1NVRkJTVHRCUVVOd1FpeHBRa0ZCVXl4SFFVRkhMRWRCUVVjN1FVRkRaaXhwUWtGQlV5eEhRVUZITEVsQlFVazdRVUZEYUVJc0swSkJRWFZDTEVkQlFVY3NSMEZCUnp0QlFVVTNRaXhaUVVGSkxFZEJRVWM3U1VGRGFFSXNRMEZCUXl4RlFVRkZMRU5CUVVNN1NVRkRTaXhKUVVGSkxFVkJRVVVzUlVGQlJTeERRVUZETEVWQlFVVXNSMEZCUnl4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGSExFVkJRVVVzUTBGQlF5eEZRVUZGTEVkQlFVY3NSVUZCUlN4RFFVRkRMRVZCUVVVc1IwRkJSeXhGUVVGRk8wbEJRM2hETEcxRVFVRnRSRHRKUVVOdVJDeFhRVUZYTEVWQlFVVXNSVUZCUlN4RFFVRkRMRVZCUVVVc1IwRkJSeXhGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZITEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVjc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlJ5eEZRVUZGTzBsQlF5OURMRmRCUVZjc1JVRkJSU3hEUVVGRE8wbEJRMlFzVTBGQlV5eEZRVUZGTEV0QlFVczdTVUZEYUVJc2RVVkJRWFZGTzBsQlEzWkZMR0ZCUVdFc1JVRkJSU3hEUVVGRExFbEJRVlVzUlVGQlJTeEZRVUZGTEVkQlFVVXNRMEZCUXp0SlFVTnFReXhoUVVGaExFVkJRVVVzUTBGQlF5eEpRVUZWTEVWQlFVVXNSVUZCUlN4SFFVRkZMRU5CUVVNN1EwRkRjRU03UVVGRldTeFpRVUZKTEVkQlFVYzdTVUZEYUVJc2JVUkJRVzFFTzBsQlEyNUVMRmRCUVZjc1JVRkJSU3hGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZITEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVjc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkhMRVZCUVVVN1NVRkRMME1zVjBGQlZ5eEZRVUZGTEVOQlFVTTdTVUZEWkN4aFFVRmhMRVZCUVVVc1EwRkJReXhKUVVGVkxFVkJRVVVzUlVGQlJTeEhRVUZGTEVOQlFVTTdTVUZEYWtNc1lVRkJZU3hGUVVGRkxFTkJRVU1zU1VGQlZTeEZRVUZGTEVWQlFVVXNSMEZCUlN4RFFVRkRPME5CUTNCRE8wRkJSVmtzWVVGQlN5eEhRVUZITzBsQlEycENMRTFCUVUwc1JVRkJSU3hGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSVHRKUVVOMFFpeFJRVUZSTEVWQlFVVXNSVUZCUlR0SlFVTmFMRmRCUVZjc1JVRkJSU3hIUVVGSE8wTkJRMjVDT3pzN096czdPenM3T3pzN096dEJRM2hEUkRzN08wZEJSMGM3T3p0QlFVVklMRFJHUVVGNVF6dEJRVWRvUXl3eVJrRklRU3gxUWtGQlZTeFBRVWRCTzBGQlJtNUNMRzFHUVVGdFF6dEJRVVZrTEhkR1FVWmFMR2xDUVVGUExFOUJSVms3T3pzN096czdPenM3T3pzN08wRkRValZDT3pzN1IwRkhSenM3TzBGQlJVZzdPMGRCUlVjN1FVRkZWU3hyUWtGQlZTeEhRVUZITzBsQlEzUkNMRXRCUVVzc1JVRkJSVHRSUVVOSUxFVkJRVVVzUlVGQlJTeEZRVUZGTEZGQlFWRXNSVUZCUlN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTEVWQlFVVXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRka1VzUlVGQlJTeEZRVUZGTEVWQlFVVXNWVUZCVlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSXNSVUZCUlN4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVONFJTeEZRVUZGTEVWQlFVVXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeERRVUZETEVWQlFVVXNhMEpCUVd0Q0xFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYUVZc1JVRkJSU3hGUVVGRkxFVkJRVVVzWTBGQll5eEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeERRVUZETEVWQlFVVXNhVUpCUVdsQ0xFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTTFSU3hGUVVGRkxFVkJRVVVzUlVGQlJTeGpRVUZqTEVWQlFVVXNRMEZCUXl4RlFVRkZMR3RDUVVGclFpeEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUXpkRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEZWQlFWVXNSVUZCUlN4RFFVRkRMRVZCUVVVc1owSkJRV2RDTEVWQlFVVXNRMEZCUXl4RlFVRkZMR3RDUVVGclFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRlRVVzUlVGQlJTeEZRVUZGTEVWQlFVVXNZMEZCWXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSXNSVUZCUlN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVNM1JTeEZRVUZGTEVWQlFVVXNSVUZCUlN4VlFVRlZMRVZCUVVVc1EwRkJReXhGUVVGRkxHbENRVUZwUWl4RlFVRkZMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM3BGTEVWQlFVVXNSVUZCUlN4RlFVRkZMRTlCUVU4c1JVRkJSU3hEUVVGRExFVkJRVVVzYTBKQlFXdENMRVZCUVVVc1EwRkJReXhGUVVGRkxHbENRVUZwUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGRFVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1VVRkJVU3hGUVVGRkxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hEUVVGRExFVkJRVVVzYTBKQlFXdENMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU40UlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hUUVVGVExFVkJRVVVzUTBGQlF5eEZRVUZGTEdkQ1FVRm5RaXhGUVVGRkxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzWkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxGTkJRVk1zUlVGQlJTeERRVUZETEVWQlFVVXNhMEpCUVd0Q0xFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZUVVc1JVRkJSU3hGUVVGRkxFVkJRVVVzV1VGQldTeEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeERRVUZETEVWQlFVVXNhMEpCUVd0Q0xFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTXpSU3hGUVVGRkxFVkJRVVVzUlVGQlJTeFRRVUZUTEVWQlFVVXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFpeEZRVUZGTEVOQlFVTXNSVUZCUlN4clFrRkJhMElzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNoRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEZOQlFWTXNSVUZCUlN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTEVWQlFVVXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRlRVVzUlVGQlJTeEZRVUZGTEVWQlFVVXNVMEZCVXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSXNSVUZCUlN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVONFJTeEZRVUZGTEVWQlFVVXNSVUZCUlN4WFFVRlhMRVZCUVVVc1EwRkJReXhGUVVGRkxHbENRVUZwUWl4RlFVRkZMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRekZGTEVWQlFVVXNSVUZCUlN4RlFVRkZMRmRCUVZjc1JVRkJSU3hEUVVGRExFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1EwRkJReXhGUVVGRkxHdENRVUZyUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRE1VVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1UwRkJVeXhGUVVGRkxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hEUVVGRExFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU4yUlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hoUVVGaExFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlF6TkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxGZEJRVmNzUlVGQlJTeERRVUZETEVWQlFVVXNaMEpCUVdkQ0xFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZUVVc1JVRkJSU3hGUVVGRkxFVkJRVVVzVVVGQlVTeEZRVUZGTEVOQlFVTXNSVUZCUlN4clFrRkJhMElzUlVGQlJTeERRVUZETEVWQlFVVXNhVUpCUVdsQ0xFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjJSU3hGUVVGRkxFVkJRVVVzUlVGQlJTeFRRVUZUTEVWQlFVVXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFpeEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNaRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEZOQlFWTXNSVUZCUlN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTEVWQlFVVXNRMEZCUXl4RlFVRkZMR3RDUVVGclFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRla1VzUlVGQlJTeEZRVUZGTEVWQlFVVXNaMEpCUVdkQ0xFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFTkJRVU1zUlVGQlJTeG5Ra0ZCWjBJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlF6ZEZMRVZCUVVVc1JVRkJSU3hGUVVGRkxGbEJRVmtzUlVGQlJTeERRVUZETEVWQlFVVXNhMEpCUVd0Q0xFVkJRVVVzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZETlVVc1JVRkJSU3hGUVVGRkxFVkJRVVVzVTBGQlV5eEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeERRVUZETEVWQlFVVXNhMEpCUVd0Q0xFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjRSU3hGUVVGRkxFVkJRVVVzUlVGQlJTeFJRVUZSTEVWQlFVVXNRMEZCUXl4RlFVRkZMR3RDUVVGclFpeEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNaRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEdOQlFXTXNSVUZCUlN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTEVWQlFVVXNRMEZCUXl4RlFVRkZMR3RDUVVGclFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRPVVVzUlVGQlJTeEZRVUZGTEVWQlFVVXNXVUZCV1N4RlFVRkZMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSXNSVUZCUlN4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVNelJTeEZRVUZGTEVWQlFVVXNSVUZCUlN4VlFVRlZMRVZCUVVVc1EwRkJReXhGUVVGRkxHdENRVUZyUWl4RlFVRkZMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM3BGTEVWQlFVVXNSVUZCUlN4RlFVRkZMRlZCUVZVc1JVRkJSU3hEUVVGRExFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1EwRkJReXhGUVVGRkxHbENRVUZwUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGVFVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1lVRkJZU3hGUVVGRkxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hEUVVGRExFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU0xUlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hSUVVGUkxFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzWkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxFOUJRVThzUlVGQlJTeERRVUZETEVWQlFVVXNhMEpCUVd0Q0xFVkJRVVVzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZGtVc1JVRkJSU3hGUVVGRkxFVkJRVVVzWTBGQll5eEZRVUZGTEVOQlFVTXNSVUZCUlN4clFrRkJhMElzUlVGQlJTeERRVUZETEVWQlFVVXNhVUpCUVdsQ0xFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTTNSU3hGUVVGRkxFVkJRVVVzUlVGQlJTeFJRVUZSTEVWQlFVVXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFpeEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNSRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEZsQlFWa3NSVUZCUlN4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNRMEZCUXl4RlFVRkZMR3RDUVVGclFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRNMFVzUlVGQlJTeEZRVUZGTEVWQlFVVXNZVUZCWVN4RlFVRkZMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSXNSVUZCUlN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVNM1JTeEZRVUZGTEVWQlFVVXNSVUZCUlN4WFFVRlhMRVZCUVVVc1EwRkJReXhGUVVGRkxHbENRVUZwUWl4RlFVRkZMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRekZGTEVWQlFVVXNSVUZCUlN4RlFVRkZMR05CUVdNc1JVRkJSU3hEUVVGRExFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1EwRkJReXhGUVVGRkxHbENRVUZwUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRE5VVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1UwRkJVeXhGUVVGRkxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hEUVVGRExFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU4yUlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hUUVVGVExFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzWkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxGRkJRVkVzUlVGQlJTeERRVUZETEVWQlFVVXNhVUpCUVdsQ0xFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZEVVc1JVRkJSU3hGUVVGRkxFVkJRVVVzWjBKQlFXZENMRVZCUVVVc1EwRkJReXhGUVVGRkxHdENRVUZyUWl4RlFVRkZMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMmhHTEVWQlFVVXNSVUZCUlN4RlFVRkZMRk5CUVZNc1JVRkJSU3hEUVVGRExFVkJRVVVzYTBKQlFXdENMRVZCUVVVc1EwRkJReXhGUVVGRkxHZENRVUZuUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGRrVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1YwRkJWeXhGUVVGRkxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hEUVVGRExFVkJRVVVzYTBKQlFXdENMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU14UlN4RlFVRkZMRVZCUVVVc1JVRkJSU3haUVVGWkxFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlF6TkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxGVkJRVlVzUlVGQlJTeERRVUZETEVWQlFVVXNhVUpCUVdsQ0xFVkJRVVVzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZWtVc1JVRkJSU3hGUVVGRkxFVkJRVVVzWTBGQll5eEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeERRVUZETEVWQlFVVXNhVUpCUVdsQ0xFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTTFSU3hGUVVGRkxFVkJRVVVzUlVGQlJTeFJRVUZSTEVWQlFVVXNRMEZCUXl4RlFVRkZMR2RDUVVGblFpeEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNKRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEcxQ1FVRnRRaXhGUVVGRkxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hEUVVGRExFVkJRVVVzYTBKQlFXdENMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU5zUml4RlFVRkZMRVZCUVVVc1JVRkJSU3hsUVVGbExFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlF6bEZMRVZCUVVVc1JVRkJSU3hGUVVGRkxHTkJRV01zUlVGQlJTeERRVUZETEVWQlFVVXNhVUpCUVdsQ0xFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZETlVVc1JVRkJSU3hGUVVGRkxFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1EwRkJReXhGUVVGRkxHZENRVUZuUWl4RlFVRkZMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJReTlGTEVWQlFVVXNSVUZCUlN4RlFVRkZMRkZCUVZFc1JVRkJSU3hEUVVGRExFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1EwRkJReXhGUVVGRkxHdENRVUZyUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGRrVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1YwRkJWeXhGUVVGRkxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hEUVVGRExFVkJRVVVzYTBKQlFXdENMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU14UlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hSUVVGUkxFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzWkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxGVkJRVlVzUlVGQlJTeERRVUZETEVWQlFVVXNhVUpCUVdsQ0xFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZUVVc1JVRkJSU3hGUVVGRkxFVkJRVVVzV1VGQldTeEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeERRVUZETEVWQlFVVXNhMEpCUVd0Q0xFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTXpSU3hGUVVGRkxFVkJRVVVzUlVGQlJTeFhRVUZYTEVWQlFVVXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFpeEZRVUZGTEVOQlFVTXNSVUZCUlN4clFrRkJhMElzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUXpGRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEZOQlFWTXNSVUZCUlN4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRka1VzUlVGQlJTeEZRVUZGTEVWQlFVVXNXVUZCV1N4RlFVRkZMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSXNSVUZCUlN4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVNeFJTeEZRVUZGTEVWQlFVVXNSVUZCUlN4VFFVRlRMRVZCUVVVc1EwRkJReXhGUVVGRkxHbENRVUZwUWl4RlFVRkZMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM1pGTEVWQlFVVXNSVUZCUlN4RlFVRkZMRk5CUVZNc1JVRkJSU3hEUVVGRExFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1EwRkJReXhGUVVGRkxHbENRVUZwUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGRrVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1RVRkJUU3hGUVVGRkxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hEUVVGRExFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU53UlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hYUVVGWExFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzcEZMRVZCUVVVc1JVRkJSU3hGUVVGRkxHZENRVUZuUWl4RlFVRkZMRU5CUVVNc1JVRkJSU3huUWtGQlowSXNSVUZCUlN4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVNM1JTeEZRVUZGTEVWQlFVVXNSVUZCUlN4WFFVRlhMRVZCUVVVc1EwRkJReXhGUVVGRkxHdENRVUZyUWl4RlFVRkZMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRekZGTEVWQlFVVXNSVUZCUlN4RlFVRkZMRTlCUVU4c1JVRkJSU3hEUVVGRExFVkJRVVVzYTBKQlFXdENMRVZCUVVVc1EwRkJReXhGUVVGRkxHbENRVUZwUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGRFVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1dVRkJXU3hGUVVGRkxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hEUVVGRExFVkJRVVVzYVVKQlFXbENMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU16UlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hqUVVGakxFVkJRVVVzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlF6VkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxGZEJRVmNzUlVGQlJTeERRVUZETEVWQlFVVXNhVUpCUVdsQ0xFVkJRVVVzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZETVVVc1JVRkJSU3hGUVVGRkxFVkJRVVVzVVVGQlVTeEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeERRVUZETEVWQlFVVXNhVUpCUVdsQ0xFVkJRVVVzUzBGQlN5eEZRVUZGTEVWQlFVVXNSVUZCUlR0UlFVTjJSU3hGUVVGRkxFVkJRVVVzUlVGQlJTeFJRVUZSTEVWQlFVVXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFpeEZRVUZGTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeExRVUZMTEVWQlFVVXNSVUZCUlN4RlFVRkZPMUZCUTNaRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEZGQlFWRXNSVUZCUlN4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNRMEZCUXl4RlFVRkZMR3RDUVVGclFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRka1VzUlVGQlJTeEZRVUZGTEVWQlFVVXNaVUZCWlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSXNSVUZCUlN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRMUVVOcVJqdEpRVVZFTEV0QlFVc3NSVUZCUlR0UlFVTklMRVZCUVVVc1RVRkJUU3hGUVVGRkxGVkJRVlVzUlVGQlJTeE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGJFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNUVUZCVFN4RlFVRkZMRkZCUVZFc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxHTkJRV01zUlVGQlJTeE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRXRCUVVzc1JVRkJSU3hGUVVGRkxFVkJRVVU3VVVGRGRrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1kwRkJZeXhGUVVGRkxFMUJRVTBzUlVGQlJTeHBRa0ZCYVVJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlF5OUVMRVZCUVVVc1RVRkJUU3hGUVVGRkxHTkJRV01zUlVGQlJTeE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGRFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1ZVRkJWU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFJRVUZSTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOc1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4alFVRmpMRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNSRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZWQlFWVXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYkVRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVDBGQlR5eEZRVUZGTEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU12UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hSUVVGUkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMmhFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRiRVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hqUVVGakxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjJSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMR2xDUVVGcFFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRNVVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hSUVVGUkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTnFSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFpRVUZaTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzSkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGJFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOc1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTJ4RUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZEVRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU53UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM0JFTEVWQlFVVXNUVUZCVFN4RlFVRkZMR0ZCUVdFc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRlRVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNZVUZCWVN4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjRSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeGhRVUZoTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzUkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGRFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOMFJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNCRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TlFVRk5MRVZCUVVVc1lVRkJZU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZUVRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVVVGQlVTeEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU51UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hSUVVGUkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMjVFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRkZCUVZFc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRha1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRTFCUVUwc1JVRkJSU3hoUVVGaExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTnlSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFJRVUZSTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEyNUVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGNFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOd1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTJ4RUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1lVRkJZU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZEVRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU53UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMnBFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRjRVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTndSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEyeEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNZVUZCWVN4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGRFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOd1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTJwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYkVRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WlFVRlpMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU55UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMnhFTEVWQlFVVXNUVUZCVFN4RlFVRkZMR2RDUVVGblFpeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU42UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3huUWtGQlowSXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEUxQlFVMHNSVUZCUlN4blFrRkJaMElzUlVGQlJTeExRVUZMTEVWQlFVVXNSVUZCUlN4RlFVRkZPMUZCUXpkRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZsQlFWa3NSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEY2tRc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFVkJRVVVzUlVGQlJUdFJRVU4wUkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEdkQ1FVRm5RaXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFVkJRVVVzUlVGQlJUdFJRVU51UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM0JFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRja1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzUzBGQlN5eEZRVUZGTEVWQlFVVXNSVUZCUlR0UlFVTnNSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFJRVUZSTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEycEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeE5RVUZOTEVWQlFVVXNXVUZCV1N4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGNFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFMUJRVTBzUlVGQlJTeG5Ra0ZCWjBJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzaEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGFrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1kwRkJZeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOMlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4alFVRmpMRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNSRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZsQlFWa3NSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEY2tRc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU53UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3haUVVGWkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM0pFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRlZCUVZVc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRia1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNWVUZCVlN4RlFVRkZMRTFCUVUwc1JVRkJSU3hWUVVGVkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTndSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFZRVUZWTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEyNUVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGVkJRVlVzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGJrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1ZVRkJWU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFJRVUZSTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOc1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4aFFVRmhMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNSRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVVVGQlVTeEZRVUZGTEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU5vUkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hQUVVGUExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMmhFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRTlCUVU4c1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRia1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNZMEZCWXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjJSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeGpRVUZqTEVWQlFVVXNUVUZCVFN4RlFVRkZMRTlCUVU4c1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzSkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxHTkJRV01zUlVGQlJTeE5RVUZOTEVWQlFVVXNXVUZCV1N4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRE1VUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFBRVUZQTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVNdlF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1RVRkJUU3hGUVVGRkxHTkJRV01zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNSRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVVVGQlVTeEZRVUZGTEUxQlFVMHNSVUZCUlN4WlFVRlpMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU53UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3haUVVGWkxFVkJRVVVzVFVGQlRTeEZRVUZGTEU5QlFVOHNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMjVFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmxCUVZrc1JVRkJSU3hOUVVGTkxFVkJRVVVzWTBGQll5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRNVVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNXVUZCV1N4RlFVRkZMRTFCUVUwc1JVRkJSU3hSUVVGUkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTndSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFpRVUZaTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzSkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGbEJRVmtzUlVGQlJTeE5RVUZOTEVWQlFVVXNXVUZCV1N4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGVFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1lVRkJZU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFBRVUZQTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOd1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4aFFVRmhMRVZCUVVVc1RVRkJUU3hGUVVGRkxHTkJRV01zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUXpORUxFVkJRVVVzVFVGQlRTeEZRVUZGTEdGQlFXRXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEY2tRc1JVRkJSU3hOUVVGTkxFVkJRVVVzWVVGQllTeEZRVUZGTEUxQlFVMHNSVUZCUlN4WlFVRlpMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU42UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hoUVVGaExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM1JFTEVWQlFVVXNUVUZCVFN4RlFVRkZMR0ZCUVdFc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRla1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZMRTFCUVUwc1JVRkJSU3haUVVGWkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjJSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeGpRVUZqTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmxCUVZrc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlF6RkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNaMEpCUVdkQ0xFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmxCUVZrc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzSkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGJFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFpRVUZaTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOeVJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxHZENRVUZuUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOcVJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTJwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYUVRc1JVRkJSU3hOUVVGTkxFVkJRVVVzWjBKQlFXZENMRVZCUVVVc1RVRkJUU3hGUVVGRkxHTkJRV01zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUXpsRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEdkQ1FVRm5RaXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxHTkJRV01zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNaRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZsQlFWa3NSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZGtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVlVGQlZTeEZRVUZGTEUxQlFVMHNSVUZCUlN4WlFVRlpMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU4wUkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hWUVVGVkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZsQlFWa3NSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM1JFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRlZCUVZVc1JVRkJSU3hOUVVGTkxFVkJRVVVzVVVGQlVTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRiRVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNWVUZCVlN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTnVSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeGpRVUZqTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzWkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxHTkJRV01zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGRrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFMUJRVTBzUlVGQlJTeGpRVUZqTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOMFJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1RVRkJUU3hGUVVGRkxHZENRVUZuUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGVFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc2JVSkJRVzFDTEVWQlFVVXNUVUZCVFN4RlFVRkZMR05CUVdNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEycEZMRVZCUVVVc1RVRkJUU3hGUVVGRkxHMUNRVUZ0UWl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTTFSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeHRRa0ZCYlVJc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkROVVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNaVUZCWlN4RlFVRkZMRTFCUVUwc1JVRkJSU3h0UWtGQmJVSXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMnhGTEVWQlFVVXNUVUZCVFN4RlFVRkZMR1ZCUVdVc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRNVVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNZMEZCWXl4RlFVRkZMRTFCUVUwc1JVRkJSU3h0UWtGQmJVSXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMnBGTEVWQlFVVXNUVUZCVFN4RlFVRkZMR2xDUVVGcFFpeEZRVUZGTEUxQlFVMHNSVUZCUlN4dFFrRkJiVUlzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNCRkxFVkJRVVVzVFVGQlRTeEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFMUJRVTBzUlVGQlJTeGpRVUZqTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVNdlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4cFFrRkJhVUlzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRE1VUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFMUJRVTBzUlVGQlJTeHRRa0ZCYlVJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlF6TkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeE5RVUZOTEVWQlFVVXNZMEZCWXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hGUVVGRkxFVkJRVVU3VVVGRGRrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOdVJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1RVRkJUU3hGUVVGRkxHbENRVUZwUWl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRVZCUVVVc1JVRkJSVHRSUVVOc1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVVXNSVUZCUlN4RlFVRkZPMUZCUTJ4RUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYmtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVVVGQlVTeEZRVUZGTEUxQlFVMHNSVUZCUlN4WlFVRlpMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU53UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hSUVVGUkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMnBFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRkZCUVZFc1JVRkJSU3hOUVVGTkxFVkJRVVVzVlVGQlZTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRiRVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZMRTFCUVUwc1JVRkJSU3hqUVVGakxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVXNUVUZCVFN4RlFVRkZMRkZCUVZFc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEyNUVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGFFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOcVJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1RVRkJUU3hGUVVGRkxGVkJRVlVzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTJ4RUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZWQlFWVXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYkVRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVlVGQlZTeEZRVUZGTEUxQlFVMHNSVUZCUlN4VlFVRlZMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU53UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hWUVVGVkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMnhFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRlZCUVZVc1JVRkJSU3hOUVVGTkxFVkJRVVVzVVVGQlVTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRiRVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNWVUZCVlN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTnVSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFpRVUZaTEVWQlFVVXNUVUZCVFN4RlFVRkZMRlZCUVZVc1JVRkJSU3hMUVVGTExFVkJRVVVzUlVGQlJTeEZRVUZGTzFGQlEzWkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGbEJRVmtzUlVGQlJTeE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGNFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1dVRkJXU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFZRVUZWTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOMFJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4WlFVRlpMRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNCRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TlFVRk5MRVZCUVVVc1ZVRkJWU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEY2tRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VlFVRlZMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU55UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVVzVFVGQlRTeEZRVUZGTEZsQlFWa3NSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM1pFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVlVGQlZTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRia1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hWUVVGVkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTnVSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzQkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNXVUZCV1N4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGNrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFJRVUZSTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOcVJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTJwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZsQlFWa3NSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEY0VRc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEUxQlFVMHNSVUZCUlN4VlFVRlZMRVZCUVVVc1MwRkJTeXhGUVVGRkxFVkJRVVVzUlVGQlJUdFJRVU4yUkN4RlFVRkZMRTFCUVUwc1JVRkJSU3haUVVGWkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZsQlFWa3NSVUZCUlN4TFFVRkxMRVZCUVVVc1JVRkJSU3hGUVVGRk8xRkJRM3BFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmxCUVZrc1JVRkJSU3hOUVVGTkxFVkJRVVVzVlVGQlZTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRkRVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNXVUZCV1N4RlFVRkZMRTFCUVUwc1JVRkJSU3hSUVVGUkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTndSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFpRVUZaTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzSkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGbEJRVmtzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGNrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1dVRkJXU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOMlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGbEJRVmtzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNKRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1ZVRkJWU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYmtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WlFVRlpMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU55UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMnBFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVlVGQlZTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRia1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTnNSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzQkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGFrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFJRVUZSTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOcVJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGbEJRVmtzUlVGQlJTeExRVUZMTEVWQlFVVXNSVUZCUlN4RlFVRkZPMUZCUTNSRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1ZVRkJWU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYmtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU5zUkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZWQlFWVXNSVUZCUlN4TFFVRkxMRVZCUVVVc1JVRkJSU3hGUVVGRk8xRkJRM0JFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRiRVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTndSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmxCUVZrc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzSkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGFrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOc1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4TlFVRk5MRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUXk5RExFVkJRVVVzVFVGQlRTeEZRVUZGTEUxQlFVMHNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZETDBNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVFVGQlRTeEZRVUZGTEUxQlFVMHNSVUZCUlN4VlFVRlZMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU5vUkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hOUVVGTkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZsQlFWa3NSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMnhFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRTFCUVUwc1JVRkJSU3hOUVVGTkxFVkJRVVVzVlVGQlZTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRhRVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNUVUZCVFN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTXZReXhGUVVGRkxFMUJRVTBzUlVGQlJTeE5RVUZOTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEycEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxFMUJRVTBzUlVGQlJTeE5RVUZOTEVWQlFVVXNXVUZCV1N4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGJFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1RVRkJUU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFJRVUZSTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVNNVF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4TlFVRk5MRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUXpsRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEY0VRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VlFVRlZMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU55UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVVzVFVGQlRTeEZRVUZGTEZsQlFWa3NSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM1pFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRka1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZMRTFCUVUwc1JVRkJSU3hOUVVGTkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTnFSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVXNUVUZCVFN4RlFVRkZMRlZCUVZVc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzSkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGNFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOd1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNSRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEdkQ1FVRm5RaXhGUVVGRkxFMUJRVTBzUlVGQlJTeFJRVUZSTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVONFJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVc1RVRkJUU3hGUVVGRkxGbEJRVmtzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNaRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEY0VRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTEUxQlFVMHNSVUZCUlN4blFrRkJaMElzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUXpORUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYmtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VlFVRlZMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU55UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM0JFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRTlCUVU4c1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRia1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNUMEZCVHl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTnNSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFBRVUZQTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEyaEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxFOUJRVThzUlVGQlJTeE5RVUZOTEVWQlFVVXNaMEpCUVdkQ0xFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjJSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFBRVUZQTEVWQlFVVXNUVUZCVFN4RlFVRkZMRkZCUVZFc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlF5OURMRVZCUVVVc1RVRkJUU3hGUVVGRkxFOUJRVThzUlVGQlJTeE5RVUZOTEVWQlFVVXNWVUZCVlN4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGFrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1QwRkJUeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOb1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4WlFVRlpMRVZCUVVVc1RVRkJUU3hGUVVGRkxGbEJRVmtzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNoRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZsQlFWa3NSVUZCUlN4TlFVRk5MRVZCUVVVc1QwRkJUeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYmtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU4yUkN4RlFVRkZMRTFCUVUwc1JVRkJSU3haUVVGWkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM0pFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmxCUVZrc1JVRkJSU3hOUVVGTkxFVkJRVVVzWjBKQlFXZENMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU0xUkN4RlFVRkZMRTFCUVUwc1JVRkJSU3haUVVGWkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM0JFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmxCUVZrc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRja1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNXVUZCV1N4RlFVRkZMRTFCUVUwc1JVRkJSU3hWUVVGVkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjBSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeGpRVUZqTEVWQlFVVXNUVUZCVFN4RlFVRkZMRkZCUVZFc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEzUkVMRVZCUVVVc1RVRkJUU3hGUVVGRkxHTkJRV01zUlVGQlJTeE5RVUZOTEVWQlFVVXNUMEZCVHl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGNrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1kwRkJZeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4alFVRmpMRVZCUVVVc1RVRkJUU3hGUVVGRkxGbEJRVmtzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUXpGRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEdOQlFXTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEZGtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzWTBGQll5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VlFVRlZMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU40UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hqUVVGakxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM1pFTEVWQlFVVXNUVUZCVFN4RlFVRkZMR05CUVdNc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRNVVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTndSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVXNUVUZCVFN4RlFVRkZMRkZCUVZFc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEyNUVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGNFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFZRVUZWTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOc1JDeEZRVUZGTEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1RVRkJUU3hGUVVGRkxGVkJRVlVzUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTJ4RUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEYUVRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVVVGQlVTeEZRVUZGTEUxQlFVMHNSVUZCUlN4UFFVRlBMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU12UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hSUVVGUkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRMjVFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRkZCUVZFc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRjRVFzUlVGQlJTeE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRTFCUVUwc1JVRkJSU3hWUVVGVkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTnNSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFJRVUZSTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzFGQlEycEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeE5RVUZOTEVWQlFVVXNXVUZCV1N4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRVVU3VVVGRGNFUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFMUJRVTBzUlVGQlJTeGpRVUZqTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSVHRSUVVOMFJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4bFFVRmxMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXl4RlFVRkZPMUZCUTNoRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEdWQlFXVXNSVUZCUlN4TlFVRk5MRVZCUVVVc1RVRkJUU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVTdVVUZEY2tRc1JVRkJSU3hOUVVGTkxFVkJRVVVzWlVGQlpTeEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJUdFJRVU14UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hsUVVGbExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRk8xRkJRM2hFTEVWQlFVVXNUVUZCVFN4RlFVRkZMR1ZCUVdVc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVN1VVRkRNMFFzUlVGQlJTeE5RVUZOTEVWQlFVVXNaVUZCWlN4RlFVRkZMRTFCUVUwc1JVRkJSU3hWUVVGVkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeGxRVUZsTEVWQlFVVXNUVUZCVFN4RlFVRkZMRlZCUVZVc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTzB0QlF6VkVPME5CUTBvN096czdPenM3T3pzN096czdPMEZETVZaRU96czdSMEZIUnpzN08wRkJSVlVzWlVGQlR5eEhRVUZITzBsQlEyNUNMRXRCUVVzc1JVRkJSVHRSUVVOSU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZGQlFWRTdXVUZEWkN4RlFVRkZMRVZCUVVVc1UwRkJVenRaUVVOaUxFbEJRVWtzUlVGQlJTdzBRMEZCTkVNN1dVRkRiRVFzV1VGQldTeEZRVUZGTEVsQlFVazdXVUZEYkVJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMWxCUTNSQ0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1UwRkRka0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlFVVXNhVVpCUVdsR08xbEJRM1pHTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEdkQ1FVRm5RanRUUVVOMFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZEUVN3d1NVRkJNRWs3V1VGRE9Va3NXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xbEJRM1JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGRkJRVkU3V1VGRFpDeEZRVUZGTEVWQlFVVXNVMEZCVXp0WlFVTmlMRWxCUVVrc1JVRkJSU3h4UlVGQmNVVTdXVUZETTBVc1dVRkJXU3hGUVVGRkxFbEJRVWs3V1VGRGJFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZGQlFWRTdXVUZEWkN4RlFVRkZMRVZCUVVVc1UwRkJVenRaUVVOaUxFbEJRVWtzUlVGRFFTd3lSa0ZCTWtZN1dVRkRMMFlzV1VGQldTeEZRVUZGTEVsQlFVazdXVUZEYkVJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMWxCUTNSQ0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1UwRkRka0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlFVVXNjVVJCUVhGRU8xbEJRek5FTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xTkJRM1pDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVRkZMRFpEUVVFMlF6dFpRVU51UkN4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFOQlEzcENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVVVGQlVUdFpRVU5rTEVWQlFVVXNSVUZCUlN4VFFVRlRPMWxCUTJJc1NVRkJTU3hGUVVGRkxHZEVRVUZuUkR0WlFVTjBSQ3haUVVGWkxFVkJRVVVzU1VGQlNUdFpRVU5zUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVUZGTERoRFFVRTRRenRaUVVOd1JDeFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1dVRkRkRUlzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZCUlN3MFJVRkJORVU3V1VGRGJFWXNXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEdkQ1FVRm5RanRaUVVOdVFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVTkJMRFpLUVVFMlNqdFpRVU5xU3l4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGRkJRVkU3V1VGRFpDeEZRVUZGTEVWQlFVVXNVMEZCVXp0WlFVTmlMRWxCUVVrc1JVRkJSU3cwUkVGQk5FUTdXVUZEYkVVc1dVRkJXU3hGUVVGRkxFbEJRVWs3V1VGRGJFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZGQlFWRTdXVUZEWkN4RlFVRkZMRVZCUVVVc1UwRkJVenRaUVVOaUxFbEJRVWtzUlVGQlJTeHZSRUZCYjBRN1dVRkRNVVFzV1VGQldTeEZRVUZGTEVsQlFVazdXVUZEYkVJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1UwRkRka0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlFVVXNNRUpCUVRCQ08xbEJRMmhETEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRUUVVOMlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZCUlN4MVJFRkJkVVE3V1VGRE4wUXNXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRaUVVOeVFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVRkZMSGxGUVVGNVJUdFpRVU12UlN4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFOQlEzcENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVVVGQlVUdFpRVU5rTEVWQlFVVXNSVUZCUlN4VFFVRlRPMWxCUTJJc1NVRkJTU3hGUVVGRkxESkVRVUV5UkR0WlFVTnFSU3haUVVGWkxFVkJRVVVzU1VGQlNUdFpRVU5zUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVU5CTERaR1FVRTJSanRaUVVOcVJ5eFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMWxCUTNCQ0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlEwRXNOa1pCUVRaR08xbEJRMnBITEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVRkZMR2xGUVVGcFJUdFpRVU4yUlN4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hSUVVGUk8xbEJRMlFzUlVGQlJTeEZRVUZGTEZOQlFWTTdXVUZEWWl4SlFVRkpMRVZCUTBFc01rWkJRVEpHTzFsQlF5OUdMRmxCUVZrc1JVRkJSU3hKUVVGSk8xbEJRMnhDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFpRVU4wUWl4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTzFOQlEzWkNPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVVVGQlVUdFpRVU5rTEVWQlFVVXNSVUZCUlN4VFFVRlRPMWxCUTJJc1NVRkJTU3hGUVVGRkxEWkNRVUUyUWp0WlFVTnVReXhaUVVGWkxFVkJRVVVzU1VGQlNUdFpRVU5zUWl4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTzFsQlEzQkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZGQlFWRTdXVUZEWkN4RlFVRkZMRVZCUVVVc1UwRkJVenRaUVVOaUxFbEJRVWtzUlVGQlJTeHBSRUZCYVVRN1dVRkRka1FzV1VGQldTeEZRVUZGTEVsQlFVazdXVUZEYkVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVUZGTERKRlFVRXlSVHRaUVVOcVJpeFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZCUlN4eFEwRkJjVU03V1VGRE0wTXNXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFRRVU42UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGRkJRVkU3V1VGRFpDeEZRVUZGTEVWQlFVVXNVMEZCVXp0WlFVTmlMRWxCUVVrc1JVRkJSU3d3UlVGQk1FVTdXVUZEYUVZc1dVRkJXU3hGUVVGRkxFbEJRVWs3V1VGRGJFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZGQlFWRTdXVUZEWkN4RlFVRkZMRVZCUVVVc1UwRkJVenRaUVVOaUxFbEJRVWtzUlVGRFFTeDFTRUZCZFVnN1dVRkRNMGdzV1VGQldTeEZRVUZGTEVsQlFVazdXVUZEYkVJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRUUVVONlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZCUlN4blJFRkJaMFE3V1VGRGRFUXNXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNaMEpCUVdkQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4blFrRkJaMEk3VTBGRGRFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hSUVVGUk8xbEJRMlFzUlVGQlJTeEZRVUZGTEZOQlFWTTdXVUZEWWl4SlFVRkpMRVZCUVVVc2QwSkJRWGRDTzFsQlF6bENMRmxCUVZrc1JVRkJSU3hKUVVGSk8xbEJRMnhDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVVVGQlVUdFpRVU5rTEVWQlFVVXNSVUZCUlN4VFFVRlRPMWxCUTJJc1NVRkJTU3hGUVVGRkxDdEZRVUVyUlR0WlFVTnlSaXhaUVVGWkxFVkJRVVVzU1VGQlNUdFpRVU5zUWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFJRVUZSTzFsQlEyUXNSVUZCUlN4RlFVRkZMRk5CUVZNN1dVRkRZaXhKUVVGSkxFVkJRVVVzTmtSQlFUWkVPMWxCUTI1RkxGbEJRVmtzUlVGQlJTeEpRVUZKTzFsQlEyeENMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1UwRkRla0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlEwRXNhMGhCUVd0SU8xbEJRM1JJTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZEUVN4dFIwRkJiVWM3V1VGRGRrY3NXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hSUVVGUk8xbEJRMlFzUlVGQlJTeEZRVUZGTEZOQlFWTTdXVUZEWWl4SlFVRkpMRVZCUTBFc2IwZEJRVzlITzFsQlEzaEhMRmxCUVZrc1JVRkJSU3hKUVVGSk8xbEJRMnhDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFJRVUZSTzFsQlEyUXNSVUZCUlN4RlFVRkZMRk5CUVZNN1dVRkRZaXhKUVVGSkxFVkJRVVVzY1VOQlFYRkRPMWxCUXpORExGbEJRVmtzUlVGQlJTeEpRVUZKTzFsQlEyeENMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMU5CUTNwQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVU5CTEd0SVFVRnJTRHRaUVVOMFNDeFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVRkZMRzFGUVVGdFJUdFpRVU42UlN4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFOQlEzcENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVVVGQlVUdFpRVU5rTEVWQlFVVXNSVUZCUlN4VFFVRlRPMWxCUTJJc1NVRkJTU3hGUVVGRkxEWkZRVUUyUlR0WlFVTnVSaXhaUVVGWkxFVkJRVVVzU1VGQlNUdFpRVU5zUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMU5CUTNwQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVUZGTEdkRlFVRm5SVHRaUVVOMFJTeFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1dVRkRkRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xTkJRM3BDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVTkJMSGxJUVVGNVNEdFpRVU0zU0N4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNRMEZCUXl4blFrRkJaMEk3V1VGRGNFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFOQlEzcENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVVVGQlVUdFpRVU5rTEVWQlFVVXNSVUZCUlN4VFFVRlRPMWxCUTJJc1NVRkJTU3hGUVVOQkxHdEdRVUZyUmp0WlFVTjBSaXhaUVVGWkxFVkJRVVVzU1VGQlNUdFpRVU5zUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVUZGTERSRVFVRTBSRHRaUVVOc1JTeFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1dVRkRkRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xTkJRM3BDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVRkZMSGxDUVVGNVFqdFpRVU12UWl4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUk3VTBGRGRrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hSUVVGUk8xbEJRMlFzUlVGQlJTeEZRVUZGTEZOQlFWTTdXVUZEWWl4SlFVRkpMRVZCUVVVc2FVUkJRV2xFTzFsQlEzWkVMRmxCUVZrc1JVRkJSU3hKUVVGSk8xbEJRMnhDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFpRVU4wUWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVVVGQlVUdFpRVU5rTEVWQlFVVXNSVUZCUlN4VFFVRlRPMWxCUTJJc1NVRkJTU3hGUVVGRkxHbEdRVUZwUmp0WlFVTjJSaXhaUVVGWkxFVkJRVVVzU1VGQlNUdFpRVU5zUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVUZGTERCRlFVRXdSVHRaUVVOb1JpeFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMWxCUTNCQ0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlEwRXNlVVpCUVhsR08xbEJRemRHTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVRkZMRzlFUVVGdlJEdFpRVU14UkN4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGRkJRVkU3V1VGRFpDeEZRVUZGTEVWQlFVVXNVMEZCVXp0WlFVTmlMRWxCUVVrc1JVRkJSU3gzUlVGQmQwVTdXVUZET1VVc1dVRkJXU3hGUVVGRkxFbEJRVWs3V1VGRGJFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdVMEZEZGtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFJRVUZSTzFsQlEyUXNSVUZCUlN4RlFVRkZMRk5CUVZNN1dVRkRZaXhKUVVGSkxFVkJRVVVzTkVSQlFUUkVPMWxCUTJ4RkxGbEJRVmtzUlVGQlJTeEpRVUZKTzFsQlEyeENMRU5CUVVNc1JVRkJSU3hEUVVGRExHZENRVUZuUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlFVVXNhVVZCUVdsRk8xbEJRM1pGTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hSUVVGUk8xbEJRMlFzUlVGQlJTeEZRVUZGTEZOQlFWTTdXVUZEWWl4SlFVRkpMRVZCUVVVc09FVkJRVGhGTzFsQlEzQkdMRmxCUVZrc1JVRkJSU3hKUVVGSk8xbEJRMnhDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFJRVUZSTzFsQlEyUXNSVUZCUlN4RlFVRkZMRk5CUVZNN1dVRkRZaXhKUVVGSkxFVkJRMEVzTmtaQlFUWkdPMWxCUTJwSExGbEJRVmtzUlVGQlJTeEpRVUZKTzFsQlEyeENMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdXVUZEY0VJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMU5CUTNwQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVUZGTEc5Q1FVRnZRanRaUVVNeFFpeFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMWxCUTNCQ0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1UwRkRka0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlEwRXNjVVpCUVhGR08xbEJRM3BHTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRaUVVOeVFpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hSUVVGUk8xbEJRMlFzUlVGQlJTeEZRVUZGTEZOQlFWTTdXVUZEWWl4SlFVRkpMRVZCUVVVc1owUkJRV2RFTzFsQlEzUkVMRmxCUVZrc1JVRkJSU3hKUVVGSk8xbEJRMnhDTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUk3V1VGRGNFSXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGRkJRVkU3V1VGRFpDeEZRVUZGTEVWQlFVVXNVMEZCVXp0WlFVTmlMRWxCUVVrc1JVRkJSU3h2UkVGQmIwUTdXVUZETVVRc1dVRkJXU3hGUVVGRkxFbEJRVWs3V1VGRGJFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdVMEZEZGtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFJRVUZSTzFsQlEyUXNSVUZCUlN4RlFVRkZMRk5CUVZNN1dVRkRZaXhKUVVGSkxFVkJRVVVzYjBKQlFXOUNPMWxCUXpGQ0xGbEJRVmtzUlVGQlJTeEpRVUZKTzFsQlEyeENMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0WlFVTjBRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1UwRkRla0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlEwRXNiVVpCUVcxR08xbEJRM1pHTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVRkZMR2REUVVGblF6dFpRVU4wUXl4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFRRVU42UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGRkJRVkU3V1VGRFpDeEZRVUZGTEVWQlFVVXNVMEZCVXp0WlFVTmlMRWxCUVVrc1JVRkRRU3hwUjBGQmFVYzdXVUZEY2tjc1dVRkJXU3hGUVVGRkxFbEJRVWs3V1VGRGJFSXNRMEZCUXl4RlFVRkZMR2RDUVVGblFqdFpRVU51UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFJRVUZSTzFsQlEyUXNSVUZCUlN4RlFVRkZMRk5CUVZNN1dVRkRZaXhKUVVGSkxFVkJRMEVzTmtaQlFUWkdPMWxCUTJwSExGbEJRVmtzUlVGQlJTeEpRVUZKTzFsQlEyeENMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMU5CUTNwQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVU5CTEcxSFFVRnRSenRaUVVOMlJ5eFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZCUlN4MVJVRkJkVVU3V1VGRE4wVXNXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRaUVVOd1FpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hSUVVGUk8xbEJRMlFzUlVGQlJTeEZRVUZGTEZOQlFWTTdXVUZEWWl4SlFVRkpMRVZCUVVVc1owVkJRV2RGTzFsQlEzUkZMRmxCUVZrc1JVRkJSU3hKUVVGSk8xbEJRMnhDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVVVGQlVUdFpRVU5rTEVWQlFVVXNSVUZCUlN4VFFVRlRPMWxCUTJJc1NVRkJTU3hGUVVOQkxHdEdRVUZyUmp0WlFVTjBSaXhaUVVGWkxFVkJRVVVzU1VGQlNUdFpRVU5zUWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdVMEZEZGtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFJRVUZSTzFsQlEyUXNSVUZCUlN4RlFVRkZMRk5CUVZNN1dVRkRZaXhKUVVGSkxFVkJRMEVzZFVkQlFYVkhPMWxCUXpOSExGbEJRVmtzUlVGQlJTeEpRVUZKTzFsQlEyeENMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0WlFVTjBRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMU5CUTNaQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVU5CTEdkS1FVRm5TanRaUVVOd1NpeFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzUTBGQlF5eGxRVUZsTzFsQlEyNUNMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZGQlFWRTdXVUZEWkN4RlFVRkZMRVZCUVVVc1UwRkJVenRaUVVOaUxFbEJRVWtzUlVGRFFTeDVTRUZCZVVnN1dVRkROMGdzV1VGQldTeEZRVUZGTEVsQlFVazdXVUZEYkVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlEwRXNNRWxCUVRCSk8xbEJRemxKTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRaUVVOeVFpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xTkJRM1pDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVRkZMSEZEUVVGeFF6dFpRVU16UXl4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGRkJRVkU3V1VGRFpDeEZRVUZGTEVWQlFVVXNVMEZCVXp0WlFVTmlMRWxCUVVrc1JVRkJSU3h0UkVGQmJVUTdXVUZEZWtRc1dVRkJXU3hGUVVGRkxFbEJRVWs3V1VGRGJFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFJRVUZSTzFsQlEyUXNSVUZCUlN4RlFVRkZMRk5CUVZNN1dVRkRZaXhKUVVGSkxFVkJRMEVzZVVkQlFYbEhPMWxCUXpkSExGbEJRVmtzUlVGQlJTeEpRVUZKTzFsQlEyeENMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVU5CTEhGSFFVRnhSenRaUVVONlJ5eFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzWjBKQlFXZENPMWxCUTI1Q0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZCUlN3d1FrRkJNRUk3V1VGRGFFTXNXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUk3VTBGRGRrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hSUVVGUk8xbEJRMlFzUlVGQlJTeEZRVUZGTEZOQlFWTTdXVUZEWWl4SlFVRkpMRVZCUVVVc2RVUkJRWFZFTzFsQlF6ZEVMRmxCUVZrc1JVRkJSU3hKUVVGSk8xbEJRMnhDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFJRVUZSTzFsQlEyUXNSVUZCUlN4RlFVRkZMRk5CUVZNN1dVRkRZaXhKUVVGSkxFVkJRVVVzYVVWQlFXbEZPMWxCUTNaRkxGbEJRVmtzUlVGQlJTeEpRVUZKTzFsQlEyeENMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVUZGTERSRFFVRTBRenRaUVVOc1JDeFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xTkJRM3BDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVRkZMSE5DUVVGelFqdFpRVU0xUWl4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVVVGQlVUdFpRVU5rTEVWQlFVVXNSVUZCUlN4VFFVRlRPMWxCUTJJc1NVRkJTU3hGUVVOQkxHZEtRVUZuU2p0WlFVTndTaXhaUVVGWkxFVkJRVVVzU1VGQlNUdFpRVU5zUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0VFFVTjJRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZGQlFWRTdXVUZEWkN4RlFVRkZMRVZCUVVVc1UwRkJVenRaUVVOaUxFbEJRVWtzUlVGRFFTdzJSMEZCTmtjN1dVRkRha2dzV1VGQldTeEZRVUZGTEVsQlFVazdXVUZEYkVJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1UwRkRla0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlEwRXNlVVpCUVhsR08xbEJRemRHTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVTkJMRFpHUVVFMlJqdFpRVU5xUnl4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGRkJRVkU3V1VGRFpDeEZRVUZGTEVWQlFVVXNVMEZCVXp0WlFVTmlMRWxCUVVrc1JVRkRRU3g1UmtGQmVVWTdXVUZETjBZc1dVRkJXU3hGUVVGRkxFbEJRVWs3V1VGRGJFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZGQlFWRTdXVUZEWkN4RlFVRkZMRVZCUVVVc1UwRkJVenRaUVVOaUxFbEJRVWtzUlVGRFFTd3dTRUZCTUVnN1dVRkRPVWdzV1VGQldTeEZRVUZGTEVsQlFVazdXVUZEYkVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNVVUZCVVR0WlFVTmtMRVZCUVVVc1JVRkJSU3hUUVVGVE8xbEJRMklzU1VGQlNTeEZRVUZGTEhORFFVRnpRenRaUVVNMVF5eFpRVUZaTEVWQlFVVXNTVUZCU1R0WlFVTnNRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMWxCUTNCQ0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlFVVXNLMFJCUVN0RU8xbEJRM0pGTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZCUlN4blEwRkJaME03V1VGRGRFTXNXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNiVUpCUVcxQ08xbEJRM1pDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hSUVVGUk8xbEJRMlFzUlVGQlJTeEZRVUZGTEZOQlFWTTdXVUZEWWl4SlFVRkpMRVZCUTBFc2NVWkJRWEZHTzFsQlEzcEdMRmxCUVZrc1JVRkJSU3hKUVVGSk8xbEJRMnhDTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUk3V1VGRGNFSXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGRkJRVkU3V1VGRFpDeEZRVUZGTEVWQlFVVXNVMEZCVXp0WlFVTmlMRWxCUVVrc1JVRkJSU3dyUlVGQkswVTdXVUZEY2tZc1dVRkJXU3hGUVVGRkxFbEJRVWs3V1VGRGJFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZGQlFWRTdXVUZEWkN4RlFVRkZMRVZCUVVVc1UwRkJVenRaUVVOaUxFbEJRVWtzUlVGQlJTeG5SRUZCWjBRN1dVRkRkRVFzV1VGQldTeEZRVUZGTEVsQlFVazdXVUZEYkVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlFVVXNhMFJCUVd0RU8xbEJRM2hFTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRUUVVOMlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZEUVN4dlNVRkJiMGs3V1VGRGVFa3NXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRaUVVOeVFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVTkJMR2RIUVVGblJ6dFpRVU53Unl4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGRkJRVkU3V1VGRFpDeEZRVUZGTEVWQlFVVXNVMEZCVXp0WlFVTmlMRWxCUVVrc1JVRkRRU3hyUmtGQmEwWTdXVUZEZEVZc1dVRkJXU3hGUVVGRkxFbEJRVWs3V1VGRGJFSXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFpRVU53UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFJRVUZSTzFsQlEyUXNSVUZCUlN4RlFVRkZMRk5CUVZNN1dVRkRZaXhKUVVGSkxFVkJRVVVzTUVSQlFUQkVPMWxCUTJoRkxGbEJRVmtzUlVGQlJTeEpRVUZKTzFsQlEyeENMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0VFFVTjJRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZGQlFWRTdXVUZEWkN4RlFVRkZMRVZCUVVVc1UwRkJVenRaUVVOaUxFbEJRVWtzUlVGQlJTeDNRa0ZCZDBJN1dVRkRPVUlzV1VGQldTeEZRVUZGTEVsQlFVazdXVUZEYkVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4UlFVRlJPMWxCUTJRc1JVRkJSU3hGUVVGRkxGTkJRVk03V1VGRFlpeEpRVUZKTEVWQlFVVXNkVVJCUVhWRU8xbEJRemRFTEZsQlFWa3NSVUZCUlN4SlFVRkpPMWxCUTJ4Q0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRUUVVOMlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRkZCUVZFN1dVRkRaQ3hGUVVGRkxFVkJRVVVzVTBGQlV6dFpRVU5pTEVsQlFVa3NSVUZCUlN4MVJFRkJkVVE3V1VGRE4wUXNXVUZCV1N4RlFVRkZMRWxCUVVrN1dVRkRiRUlzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRaUVVOeVFpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xTkJRM1pDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1VVRkJVVHRaUVVOa0xFVkJRVVVzUlVGQlJTeFRRVUZUTzFsQlEySXNTVUZCU1N4RlFVRkZMREJFUVVFd1JEdFpRVU5vUlN4WlFVRlpMRVZCUVVVc1NVRkJTVHRaUVVOc1FpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHRkJRV0U3V1VGRGJrSXNWVUZCVlN4RlFVRkZMRWRCUVVjN1dVRkRaaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZsQlFWazdXVUZEYUVJc1NVRkJTU3hGUVVGRkxGbEJRVms3V1VGRGJFSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1dVRkRkRUlzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRUUVVOMlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1kwRkJZenRaUVVOd1FpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0WlFVTjBRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMU5CUTNaQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4cFFrRkJhVUk3V1VGRGRrSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xTkJRM3BDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3huUWtGQlowSTdXVUZEZEVJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzYlVKQlFXMUNPMWxCUTNwQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMR2RDUVVGblFqdFpRVU51UWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeHRRa0ZCYlVJN1dVRkRla0lzVlVGQlZTeEZRVUZGTEVOQlFVTTdXVUZEWWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMU5CUTNwQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4elFrRkJjMEk3V1VGRE5VSXNWVUZCVlN4RlFVRkZMRU5CUVVNN1dVRkRZaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMWxCUTNCQ0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1UwRkRka0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR3RDUVVGclFqdFpRVU40UWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRaUVVOeVFpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHdENRVUZyUWp0WlFVTjRRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEdWQlFXVTdXVUZEY2tJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWjBKQlFXZENPMWxCUTNSQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFpRVU53UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEcxQ1FVRnRRanRaUVVONlFpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdXVUZEY0VJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4alFVRmpPMWxCUTNCQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeG5Ra0ZCWjBJN1dVRkRkRUlzVlVGQlZTeEZRVUZGTEVOQlFVTTdXVUZEWWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNZVUZCWVR0WlFVTnVRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeHBRa0ZCYVVJN1dVRkRka0lzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNaMEpCUVdkQ08xbEJRM1JDTEZWQlFWVXNSVUZCUlN4RFFVRkRPMWxCUTJJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFpRVUZaTzFsQlEyaENMRWxCUVVrc1JVRkJSU3hsUVVGbE8xbEJRM0pDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMWxCUTNSQ0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1UwRkRka0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR05CUVdNN1dVRkRjRUlzVlVGQlZTeEZRVUZGTEVOQlFVTTdXVUZEWWl4RFFVRkRMRVZCUVVVc1EwRkJReXhuUWtGQlowSTdXVUZEY0VJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNZMEZCWXp0WlFVTndRaXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEhGQ1FVRnhRanRaUVVNelFpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0VFFVTjJRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNaMEpCUVdkQ08xbEJRM1JDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR2xDUVVGcFFqdFpRVU4yUWl4VlFVRlZMRVZCUVVVc1IwRkJSenRaUVVObUxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRUUVVOMlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1pVRkJaVHRaUVVOeVFpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0WlFVTjBRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMU5CUTNaQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4blFrRkJaMEk3V1VGRGRFSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc2EwSkJRV3RDTzFsQlEzaENMRlZCUVZVc1JVRkJSU3hGUVVGRk8xbEJRMlFzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xbEJRM1JDTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUk3VTBGRGRrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHZERRVUZuUXp0WlFVTjBReXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEdGQlFXRTdXVUZEYmtJc1ZVRkJWU3hGUVVGRkxFTkJRVU03V1VGRFlpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFRRVU42UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzZFVKQlFYVkNPMWxCUXpkQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFpRVU53UWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeHhRa0ZCY1VJN1dVRkRNMElzVlVGQlZTeEZRVUZGTEVOQlFVTTdXVUZEWWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNZVUZCWVR0WlFVTnVRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFpRVU4wUWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeG5Ra0ZCWjBJN1dVRkRkRUlzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4aFFVRmhPMWxCUTI1Q0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdVMEZEZGtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEc5Q1FVRnZRanRaUVVNeFFpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNhMEpCUVd0Q08xbEJRM2hDTEZWQlFWVXNSVUZCUlN4SFFVRkhPMWxCUTJZc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1UwRkRka0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR1ZCUVdVN1dVRkRja0lzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEhsQ1FVRjVRanRaUVVNdlFpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0WlFVTjBRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzV1VGQldUdFpRVU5vUWl4SlFVRkpMRVZCUVVVc2EwSkJRV3RDTzFsQlEzaENMRlZCUVZVc1JVRkJSU3hEUVVGRE8xbEJRMklzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRaUVVOd1FpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3VTBGRGVrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHZENRVUZuUWp0WlFVTjBRaXhWUVVGVkxFVkJRVVVzUjBGQlJ6dFpRVU5tTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUk3V1VGRGNFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFOQlEzcENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeG5Ra0ZCWjBJN1dVRkRkRUlzVlVGQlZTeEZRVUZGTEVOQlFVTTdXVUZEWWl4RFFVRkRMRVZCUVVVc1owSkJRV2RDTzFsQlEyNUNMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNhVUpCUVdsQ08xbEJRM1pDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMWxCUTNSQ0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFpRVUZaTzFsQlEyaENMRWxCUVVrc1JVRkJSU3hyUWtGQmEwSTdXVUZEZUVJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR2RDUVVGblFqdFRRVU4wUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzTWtKQlFUSkNPMWxCUTJwRExGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNiVUpCUVcxQ08xbEJRM3BDTEZWQlFWVXNSVUZCUlN4SFFVRkhPMWxCUTJZc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4dFFrRkJiVUk3V1VGRGVrSXNWVUZCVlN4RlFVRkZMRU5CUVVNN1dVRkRZaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1lVRkJZVHRaUVVOdVFpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdXVUZEY0VJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMU5CUTNwQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4dlFrRkJiMEk3V1VGRE1VSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzYTBKQlFXdENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc2JVSkJRVzFDTzFsQlEzcENMRlZCUVZVc1JVRkJSU3hGUVVGRk8xbEJRMlFzUTBGQlF5eEZRVUZGTEVOQlFVTXNaMEpCUVdkQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWjBKQlFXZENPMWxCUTNSQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNhVUpCUVdsQ08xbEJRM1pDTEZWQlFWVXNSVUZCUlN4RFFVRkRPMWxCUTJJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR2RDUVVGblFqdFpRVU4wUWl4VlFVRlZMRVZCUVVVc1IwRkJSenRaUVVObUxFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3huUWtGQlowSTdXVUZEZEVJc1ZVRkJWU3hGUVVGRkxFTkJRVU03V1VGRFlpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzY1VKQlFYRkNPMWxCUXpOQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTd3dRa0ZCTUVJN1dVRkRhRU1zVlVGQlZTeEZRVUZGTEVsQlFVazdXVUZEYUVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMRzFDUVVGdFFqdFpRVU42UWl4VlFVRlZMRVZCUVVVc1IwRkJSenRaUVVObUxFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRaUVVOeVFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hwUWtGQmFVSTdXVUZEZGtJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWjBKQlFXZENPMWxCUTNSQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNiVUpCUVcxQ08xbEJRM3BDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR2xDUVVGcFFqdFpRVU4yUWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3VTBGRGVrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHbENRVUZwUWp0WlFVTjJRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzYTBKQlFXdENPMWxCUTNoQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNaMEpCUVdkQ08xbEJRM1JDTEZWQlFWVXNSVUZCUlN4RFFVRkRPMWxCUTJJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzWjBKQlFXZENPMU5CUTNSQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4alFVRmpPMWxCUTNCQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNjMEpCUVhOQ08xbEJRelZDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMRzlDUVVGdlFqdFpRVU14UWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNaMEpCUVdkQ08xTkJRM1JDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hqUVVGak8xbEJRM0JDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMRmxCUVZrN1dVRkRiRUlzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEdWQlFXVTdXVUZEY2tJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzYVVKQlFXbENPMWxCUTNaQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNaVUZCWlR0WlFVTnlRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4blFrRkJaMEk3V1VGRGJrSXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWjBKQlFXZENPMWxCUTNSQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNiVUpCUVcxQ08xbEJRM3BDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMWxCUTNSQ0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1lVRkJZVHRaUVVOdVFpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0WlFVTjBRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR05CUVdNN1dVRkRjRUlzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMU5CUTNwQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4elFrRkJjMEk3V1VGRE5VSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1lVRkJZVHRaUVVOdVFpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMSE5DUVVGelFqdFpRVU0xUWl4VlFVRlZMRVZCUVVVc1IwRkJSenRaUVVObUxFTkJRVU1zUlVGQlJTeERRVUZETEdkQ1FVRm5RanRaUVVOd1FpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3huUWtGQlowSTdXVUZEZEVJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR2RDUVVGblFqdFRRVU4wUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzVjBGQlZ6dFpRVU5xUWl4VlFVRlZMRVZCUVVVc1IwRkJSenRaUVVObUxFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3haUVVGWk8xbEJRMnhDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1kwRkJZenRaUVVOd1FpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0WlFVTjBRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4clFrRkJhMEk3V1VGRGVFSXNWVUZCVlN4RlFVRkZMRU5CUVVNN1dVRkRZaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc2EwSkJRV3RDTzFsQlEzaENMRlZCUVZVc1JVRkJSU3hGUVVGRk8xbEJRMlFzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xbEJRM1JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFRRVU42UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzYVVKQlFXbENPMWxCUTNaQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNiMEpCUVc5Q08xbEJRekZDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRUUVVONlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc2JVSkJRVzFDTzFsQlEzcENMRlZCUVZVc1JVRkJSU3hIUVVGSE8xbEJRMllzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRaUVVOd1FpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3VTBGRGVrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHMUNRVUZ0UWp0WlFVTjZRaXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzYVVKQlFXbENPMWxCUTNaQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTzFOQlEzWkNPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeGxRVUZsTzFsQlEzSkNMRlZCUVZVc1JVRkJSU3hGUVVGRk8xbEJRMlFzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRaUVVOeVFpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3VTBGRGVrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHZENRVUZuUWp0WlFVTjBRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEZkQlFWYzdXVUZEYWtJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzV1VGQldUdFpRVU5zUWl4VlFVRlZMRVZCUVVVc1JVRkJSVHRaUVVOa0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHOUNRVUZ2UWp0WlFVTXhRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFpRVU4wUWl4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTzFOQlEzWkNPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeHpRa0ZCYzBJN1dVRkROVUlzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0VFFVTjJRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNZMEZCWXp0WlFVTndRaXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFpRVU4wUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEcxQ1FVRnRRanRaUVVONlFpeFZRVUZWTEVWQlFVVXNSMEZCUnp0WlFVTm1MRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4blFrRkJaMEk3V1VGRGRFSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzUTBGQlF5eGxRVUZsTzFsQlEyNUNMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdVMEZEZGtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEcxQ1FVRnRRanRaUVVONlFpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1UwRkRla0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMSE5DUVVGelFqdFpRVU0xUWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xTkJRM3BDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hoUVVGaE8xbEJRMjVDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMRzlDUVVGdlFqdFpRVU14UWl4VlFVRlZMRVZCUVVVc1JVRkJSVHRaUVVOa0xFTkJRVU1zUlVGQlJTeG5Ra0ZCWjBJN1dVRkRia0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNaMEpCUVdkQ08xTkJRM1pDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hwUWtGQmFVSTdXVUZEZGtJc1ZVRkJWU3hGUVVGRkxFTkJRVU03V1VGRFlpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFOQlEzcENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeHRRa0ZCYlVJN1dVRkRla0lzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4clFrRkJhMEk3V1VGRGVFSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1dVRkRkRUlzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRUUVVOMlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1owSkJRV2RDTzFsQlEzUkNMRlZCUVZVc1JVRkJSU3hEUVVGRE8xbEJRMklzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUk3VTBGRGRrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHTkJRV003V1VGRGNFSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzYTBKQlFXdENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMRzFDUVVGdFFqdFpRVU42UWl4VlFVRlZMRVZCUVVVc1JVRkJSVHRaUVVOa0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRaUVVOeVFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3h0UWtGQmJVSTdXVUZEZWtJc1ZVRkJWU3hGUVVGRkxFZEJRVWM3V1VGRFppeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWjBKQlFXZENPMWxCUTNSQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEdWQlFXVTdXVUZEY2tJc1ZVRkJWU3hGUVVGRkxFZEJRVWM3V1VGRFppeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHTkJRV003V1VGRGNFSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1dVRkRkRUlzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRUUVVOMlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc2RVSkJRWFZDTzFsQlF6ZENMRlZCUVZVc1JVRkJSU3hIUVVGSE8xbEJRMllzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRaUVVOeVFpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xTkJRM1pDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hyUWtGQmEwSTdXVUZEZUVJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2RDUVVGblFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWjBKQlFXZENPMWxCUTNSQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNaVUZCWlR0WlFVTnlRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWTBGQll6dFpRVU53UWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3VTBGRGVrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHZENRVUZuUWp0WlFVTjBRaXhWUVVGVkxFVkJRVVVzUjBGQlJ6dFpRVU5tTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWTBGQll6dFpRVU53UWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xTkJRM3BDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hyUWtGQmEwSTdXVUZEZUVJc1ZVRkJWU3hGUVVGRkxFTkJRVU03V1VGRFlpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFRRVU42UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWVVGQllUdFpRVU51UWl4VlFVRlZMRVZCUVVVc1JVRkJSVHRaUVVOa0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEcxQ1FVRnRRanRUUVVONlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc2IwSkJRVzlDTzFsQlF6RkNMRlZCUVZVc1JVRkJSU3hEUVVGRE8xbEJRMklzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xbEJRM1JDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHdENRVUZyUWp0WlFVTjRRaXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFpRVU4wUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEdWQlFXVTdXVUZEY2tJc1ZVRkJWU3hGUVVGRkxFZEJRVWM3V1VGRFppeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR2RDUVVGblFqdFRRVU4wUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWjBKQlFXZENPMWxCUTNSQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdVMEZEZGtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEdkQ1FVRm5RanRaUVVOMFFpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0WlFVTjBRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4bFFVRmxPMWxCUTNKQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeHBRa0ZCYVVJN1dVRkRka0lzVlVGQlZTeEZRVUZGTEVOQlFVTTdXVUZEWWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNaMEpCUVdkQ08xbEJRM1JDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1UwRkRla0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR3RDUVVGclFqdFpRVU40UWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xTkJRM3BDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hwUWtGQmFVSTdXVUZEZGtJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFOQlEzcENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeHBRa0ZCYVVJN1dVRkRka0lzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTzFsQlEzQkNMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEd0Q1FVRnJRanRaUVVONFFpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHZENRVUZuUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMU5CUTNaQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4dFFrRkJiVUk3V1VGRGVrSXNWVUZCVlN4RlFVRkZMRU5CUVVNN1dVRkRZaXhEUVVGRExFVkJRVVVzWjBKQlFXZENPMWxCUTI1Q0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR2RDUVVGblFqdFpRVU4wUWl4VlFVRlZMRVZCUVVVc1JVRkJSVHRaUVVOa0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3huUWtGQlowSTdXVUZEZEVJc1ZVRkJWU3hGUVVGRkxFZEJRVWM3V1VGRFppeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWlVGQlpUdFpRVU55UWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeG5Ra0ZCWjBJN1dVRkRia0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hwUWtGQmFVSTdXVUZEZGtJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWjBKQlFXZENPMWxCUTNSQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdVMEZEZGtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEdWQlFXVTdXVUZEY2tJc1ZVRkJWU3hGUVVGRkxFTkJRVU03V1VGRFlpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeHJRa0ZCYTBJN1dVRkRlRUlzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEcxQ1FVRnRRanRaUVVONlFpeFZRVUZWTEVWQlFVVXNSMEZCUnp0WlFVTm1MRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0VFFVTjJRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNiVUpCUVcxQ08xbEJRM3BDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc2FVSkJRV2xDTzFsQlEzWkNMRlZCUVZVc1JVRkJSU3hEUVVGRE8xbEJRMklzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzYlVKQlFXMUNPMWxCUTNwQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFpRVU53UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEc5Q1FVRnZRanRaUVVNeFFpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0WlFVTjBRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4dlFrRkJiMEk3V1VGRE1VSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzYTBKQlFXdENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMRzlDUVVGdlFqdFpRVU14UWl4VlFVRlZMRVZCUVVVc1IwRkJSenRaUVVObUxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc2NVSkJRWEZDTzFsQlF6TkNMRlZCUVZVc1JVRkJSU3hEUVVGRE8xbEJRMklzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRaUVVOeVFpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3VTBGRGVrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxIZENRVUYzUWp0WlFVTTVRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzWlVGQlpUdFpRVU55UWl4VlFVRlZMRVZCUVVVc1IwRkJSenRaUVVObUxFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1YwRkJWenRaUVVOcVFpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4VFFVRlRPMWxCUTJZc1ZVRkJWU3hGUVVGRkxFZEJRVWM3V1VGRFppeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHZENRVUZuUWp0WlFVTjBRaXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEc5Q1FVRnZRanRaUVVNeFFpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4clFrRkJhMEk3V1VGRGVFSXNWVUZCVlN4RlFVRkZMRU5CUVVNN1dVRkRZaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1dVRkRkRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xTkJRM3BDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3huUWtGQlowSTdXVUZEZEVJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFOQlEzcENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeGpRVUZqTzFsQlEzQkNMRlZCUVZVc1JVRkJSU3hEUVVGRE8xbEJRMklzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRaUVVOeVFpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xTkJRM1pDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hsUVVGbE8xbEJRM0pDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4bFFVRmxPMWxCUTNKQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMR2RDUVVGblFqdFpRVU51UWl4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTzFOQlEzWkNPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeHBRa0ZCYVVJN1dVRkRka0lzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNaVUZCWlR0WlFVTnlRaXhWUVVGVkxFVkJRVVVzUjBGQlJ6dFpRVU5tTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFpRVU4wUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEhGQ1FVRnhRanRaUVVNelFpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMRmxCUVZrN1dVRkRiRUlzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0VFFVTjJRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNiVUpCUVcxQ08xbEJRM3BDTEZWQlFWVXNSVUZCUlN4SFFVRkhPMWxCUTJZc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMWxCUTNSQ0xFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1kwRkJZenRaUVVOd1FpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHZENRVUZuUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMSFZDUVVGMVFqdFpRVU0zUWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxIZENRVUYzUWp0WlFVTTVRaXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFpRVU4wUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEZsQlFWazdXVUZEYkVJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzY1VKQlFYRkNPMWxCUXpOQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEdGQlFXRTdXVUZEYmtJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFRRVU42UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzY1VKQlFYRkNPMWxCUXpOQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNhVUpCUVdsQ08xbEJRM1pDTEZWQlFWVXNSVUZCUlN4RFFVRkRPMWxCUTJJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR1ZCUVdVN1dVRkRja0lzVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNaVUZCWlR0WlFVTnlRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEhOQ1FVRnpRanRaUVVNMVFpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdXVUZEY0VJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0VFFVTjJRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNiVUpCUVcxQ08xbEJRM3BDTEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR2RDUVVGblFqdFpRVU4wUWl4VlFVRlZMRVZCUVVVc1JVRkJSVHRaUVVOa0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xTkJRM3BDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hyUWtGQmEwSTdXVUZEZUVJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFRRVU42UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzY1VKQlFYRkNPMWxCUXpOQ0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFsQlEzUkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNhMEpCUVd0Q08xbEJRM2hDTEZWQlFWVXNSVUZCUlN4RFFVRkRPMWxCUTJJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR0ZCUVdFN1dVRkRia0lzVlVGQlZTeEZRVUZGTEVOQlFVTTdXVUZEWWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxGZEJRVmM3V1VGRFppeEpRVUZKTEVWQlFVVXNWMEZCVnp0WlFVTnFRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFpRVU4wUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEdGQlFXRTdXVUZEYmtJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4blFrRkJaMEk3VTBGRGRFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHMUNRVUZ0UWp0WlFVTjZRaXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFqdFpRVU4wUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEc5Q1FVRnZRanRaUVVNeFFpeFZRVUZWTEVWQlFVVXNSMEZCUnp0WlFVTm1MRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdXVUZEY0VJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4dFFrRkJiVUk3V1VGRGVrSXNWVUZCVlN4RlFVRkZMRU5CUVVNN1dVRkRZaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMWxCUTNCQ0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRUUVVONlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1pVRkJaVHRaUVVOeVFpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdXVUZEY0VJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMU5CUTNwQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4cFFrRkJhVUk3V1VGRGRrSXNWVUZCVlN4RlFVRkZMRU5CUVVNN1dVRkRZaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1dVRkRkRUlzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRUUVVOMlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHZENRVUZuUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4bFFVRmxPMWxCUTNKQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFpRVU53UWl4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTzFOQlEzWkNPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeHhRa0ZCY1VJN1dVRkRNMElzVlVGQlZTeEZRVUZGTEVOQlFVTTdXVUZEWWl4RFFVRkRMRVZCUVVVc1owSkJRV2RDTzFsQlEyNUNMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEc5Q1FVRnZRanRaUVVNeFFpeFZRVUZWTEVWQlFVVXNSMEZCUnp0WlFVTm1MRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0WlFVTjBRaXhEUVVGRExFVkJRVVVzWjBKQlFXZENPMU5CUTNSQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4eFFrRkJjVUk3V1VGRE0wSXNWVUZCVlN4RlFVRkZMRWRCUVVjN1dVRkRaaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMWxCUTNKQ0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRUUVVONlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1owSkJRV2RDTzFsQlEzUkNMRlZCUVZVc1JVRkJSU3hGUVVGRk8xbEJRMlFzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHVkJRV1U3V1VGRGNrSXNWVUZCVlN4RlFVRkZMRWRCUVVjN1dVRkRaaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMWxCUTNCQ0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1UwRkRka0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR2xDUVVGcFFqdFpRVU4yUWl4VlFVRlZMRVZCUVVVc1IwRkJSenRaUVVObUxFTkJRVU1zUlVGQlJTeG5Ra0ZCWjBJN1dVRkRia0lzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTEZkQlFWYzdXVUZEWml4SlFVRkpMRVZCUVVVc1dVRkJXVHRaUVVOc1FpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMRzlDUVVGdlFqdFpRVU14UWl4VlFVRlZMRVZCUVVVc1JVRkJSVHRaUVVOa0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxIRkNRVUZ4UWp0WlFVTXpRaXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFOQlEzcENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc1YwRkJWenRaUVVObUxFbEJRVWtzUlVGQlJTeGhRVUZoTzFsQlEyNUNMRlZCUVZVc1JVRkJSU3hEUVVGRE8xbEJRMklzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRaUVVOeVFpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN4WFFVRlhPMWxCUTJZc1NVRkJTU3hGUVVGRkxHVkJRV1U3V1VGRGNrSXNWVUZCVlN4RlFVRkZMRVZCUVVVN1dVRkRaQ3hEUVVGRExFVkJRVVVzYVVKQlFXbENPMWxCUTNCQ0xFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1UwRkRlRUk3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTeFhRVUZYTzFsQlEyWXNTVUZCU1N4RlFVRkZMR2xDUVVGcFFqdFpRVU4yUWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hyUWtGQmEwSTdXVUZEZUVJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzTkVKQlFUUkNPMWxCUTJ4RExGVkJRVlVzUlVGQlJTeEhRVUZITzFsQlEyWXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEhkQ1FVRjNRanRaUVVNNVFpeFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hEUVVGRExHZENRVUZuUWp0WlFVTndRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4bFFVRmxPMWxCUTNKQ0xGVkJRVlVzUlVGQlJTeERRVUZETzFsQlEySXNRMEZCUXl4RlFVRkZMR2RDUVVGblFqdFpRVU51UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3hYUVVGWE8xbEJRMllzU1VGQlNTeEZRVUZGTEdGQlFXRTdXVUZEYmtJc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMRmRCUVZjN1dVRkRaaXhKUVVGSkxFVkJRVVVzVjBGQlZ6dFpRVU5xUWl4VlFVRlZMRVZCUVVVc1JVRkJSVHRaUVVOa0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNWMEZCVnp0WlFVTm1MRWxCUVVrc1JVRkJSU3hsUVVGbE8xbEJRM0pDTEZWQlFWVXNSVUZCUlN4SFFVRkhPMWxCUTJZc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMU5CUTNaQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzVjBGQlZ6dFpRVU5tTEVsQlFVa3NSVUZCUlN4WlFVRlpPMWxCUTJ4Q0xGVkJRVlVzUlVGQlJTeEZRVUZGTzFsQlEyUXNRMEZCUXl4RlFVRkZMR2xDUVVGcFFqdFpRVU53UWl4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTzFOQlEzWkNPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc01FSkJRVEJDTzFsQlF6bENMRWxCUVVrc1JVRkJSU3hwUWtGQmFVSTdXVUZEZGtJc1ZVRkJWU3hGUVVGRkxFTkJRVU03V1VGRFlpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTzFOQlEzcENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc01FSkJRVEJDTzFsQlF6bENMRWxCUVVrc1JVRkJSU3hsUVVGbE8xbEJRM0pDTEZWQlFWVXNSVUZCUlN4SFFVRkhPMWxCUTJZc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzTUVKQlFUQkNPMWxCUXpsQ0xFbEJRVWtzUlVGQlJTeHhRa0ZCY1VJN1dVRkRNMElzVlVGQlZTeEZRVUZGTEVkQlFVYzdXVUZEWml4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxHbENRVUZwUWp0VFFVTjJRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxEQkNRVUV3UWp0WlFVTTVRaXhKUVVGSkxFVkJRVVVzV1VGQldUdFpRVU5zUWl4VlFVRlZMRVZCUVVVc1MwRkJTenRaUVVOcVFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xbEJRM0pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMREJDUVVFd1FqdFpRVU01UWl4SlFVRkpMRVZCUVVVc2QwSkJRWGRDTzFsQlF6bENMRlZCUVZVc1JVRkJSU3hMUVVGTE8xbEJRMnBDTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUk3V1VGRGNFSXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMREJDUVVFd1FqdFpRVU01UWl4SlFVRkpMRVZCUVVVc01FSkJRVEJDTzFsQlEyaERMRlZCUVZVc1JVRkJSU3hKUVVGSk8xbEJRMmhDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdVMEZEZWtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3d3UWtGQk1FSTdXVUZET1VJc1NVRkJTU3hGUVVGRkxITkRRVUZ6UXp0WlFVTTFReXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4cFFrRkJhVUk3V1VGRGNFSXNRMEZCUXl4RlFVRkZMR3RDUVVGclFqdFRRVU40UWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMREJDUVVFd1FqdFpRVU01UWl4SlFVRkpMRVZCUVVVc1kwRkJZenRaUVVOd1FpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzTUVKQlFUQkNPMWxCUXpsQ0xFbEJRVWtzUlVGQlJTeDNRa0ZCZDBJN1dVRkRPVUlzVlVGQlZTeEZRVUZGTEVOQlFVTTdXVUZEWWl4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTzFsQlEzQkNMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdVMEZEZGtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3d3UWtGQk1FSTdXVUZET1VJc1NVRkJTU3hGUVVGRkxIVkNRVUYxUWp0WlFVTTNRaXhWUVVGVkxFVkJRVVVzUzBGQlN6dFpRVU5xUWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3d3UWtGQk1FSTdXVUZET1VJc1NVRkJTU3hGUVVGRkxHbENRVUZwUWp0WlFVTjJRaXhWUVVGVkxFVkJRVVVzU1VGQlNUdFpRVU5vUWl4RFFVRkRMRVZCUVVVc1EwRkJReXhyUWtGQmEwSTdXVUZEZEVJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMU5CUTNwQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzTUVKQlFUQkNPMWxCUXpsQ0xFbEJRVWtzUlVGQlJTeFhRVUZYTzFsQlEycENMRlZCUVZVc1JVRkJSU3hEUVVGRE8xbEJRMklzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRaUVVOd1FpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN3d1FrRkJNRUk3V1VGRE9VSXNTVUZCU1N4RlFVRkZMREpDUVVFeVFqdFpRVU5xUXl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeHJRa0ZCYTBJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRUUVVOMlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTERCQ1FVRXdRanRaUVVNNVFpeEpRVUZKTEVWQlFVVXNORUpCUVRSQ08xbEJRMnhETEZWQlFWVXNSVUZCUlN4SlFVRkpPMWxCUTJoQ0xFTkJRVU1zUlVGQlJTeHBRa0ZCYVVJN1dVRkRjRUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNhVUpCUVdsQ08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNNRUpCUVRCQ08xbEJRemxDTEVsQlFVa3NSVUZCUlN3eVEwRkJNa003V1VGRGFrUXNWVUZCVlN4RlFVRkZMRXRCUVVzN1dVRkRha0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNaMEpCUVdkQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2RDUVVGblFqdFRRVU4yUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMREJDUVVFd1FqdFpRVU01UWl4SlFVRkpMRVZCUVVVc1dVRkJXVHRaUVVOc1FpeFZRVUZWTEVWQlFVVXNRMEZCUXp0WlFVTmlMRU5CUVVNc1JVRkJSU3hEUVVGRExHbENRVUZwUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJN1UwRkRla0k3VVVGRFJEdFpRVU5KTEVsQlFVa3NSVUZCUlN4VlFVRlZPMWxCUTJoQ0xFVkJRVVVzUlVGQlJTd3dRa0ZCTUVJN1dVRkRPVUlzU1VGQlNTeEZRVUZGTEdsRFFVRnBRenRaUVVOMlF5eFZRVUZWTEVWQlFVVXNSVUZCUlR0WlFVTmtMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdXVUZEY0VJc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENPMU5CUTNwQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzTUVKQlFUQkNPMWxCUXpsQ0xFbEJRVWtzUlVGQlJTeHhRMEZCY1VNN1dVRkRNME1zVlVGQlZTeEZRVUZGTEVsQlFVazdXVUZEYUVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMU5CUTNaQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzTUVKQlFUQkNPMWxCUXpsQ0xFbEJRVWtzUlVGQlJTeHhRMEZCY1VNN1dVRkRNME1zVlVGQlZTeEZRVUZGTEVsQlFVazdXVUZEYUVJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMU5CUTNaQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzTUVKQlFUQkNPMWxCUXpsQ0xFbEJRVWtzUlVGQlJTd3dRMEZCTUVNN1dVRkRhRVFzVlVGQlZTeEZRVUZGTEVkQlFVYzdXVUZEWml4RFFVRkRMRVZCUVVVc1kwRkJZenRaUVVOcVFpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xTkJRM1pDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNNRUpCUVRCQ08xbEJRemxDTEVsQlFVa3NSVUZCUlN4elEwRkJjME03V1VGRE5VTXNWVUZCVlN4RlFVRkZMRXRCUVVzN1dVRkRha0lzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q08xbEJRM1JDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN3d1FrRkJNRUk3V1VGRE9VSXNTVUZCU1N4RlFVRkZMSEZDUVVGeFFqdFpRVU16UWl4VlFVRlZMRVZCUVVVc1MwRkJTenRaUVVOcVFpeERRVUZETEVWQlFVVXNRMEZCUXl4cFFrRkJhVUk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMR2RDUVVGblFqdFRRVU4wUWp0UlFVTkVPMWxCUTBrc1NVRkJTU3hGUVVGRkxGVkJRVlU3V1VGRGFFSXNSVUZCUlN4RlFVRkZMREJDUVVFd1FqdFpRVU01UWl4SlFVRkpMRVZCUVVVc2EwSkJRV3RDTzFsQlEzaENMRlZCUVZVc1JVRkJSU3hEUVVGRE8xbEJRMklzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRaUVVOeVFpeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3VTBGRGVrSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN3d1FrRkJNRUk3V1VGRE9VSXNTVUZCU1N4RlFVRkZMSGxDUVVGNVFqdFpRVU12UWl4VlFVRlZMRVZCUVVVc1IwRkJSenRaUVVObUxFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRaUVVOMFFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNNRUpCUVRCQ08xbEJRemxDTEVsQlFVa3NSVUZCUlN4NVFrRkJlVUk3V1VGREwwSXNWVUZCVlN4RlFVRkZMRWxCUVVrN1dVRkRhRUlzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRaUVVOeVFpeERRVUZETEVWQlFVVXNhMEpCUVd0Q08xTkJRM2hDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNNRUpCUVRCQ08xbEJRemxDTEVsQlFVa3NSVUZCUlN4blEwRkJaME03V1VGRGRFTXNWVUZCVlN4RlFVRkZMRWxCUVVrN1dVRkRhRUlzUTBGQlF5eEZRVUZGTEdsQ1FVRnBRanRaUVVOd1FpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xTkJRM1pDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNNRUpCUVRCQ08xbEJRemxDTEVsQlFVa3NSVUZCUlN4NVFrRkJlVUk3V1VGREwwSXNWVUZCVlN4RlFVRkZMRWRCUVVjN1dVRkRaaXhEUVVGRExFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJN1dVRkRja0lzUTBGQlF5eEZRVUZGTEd0Q1FVRnJRanRUUVVONFFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTERCQ1FVRXdRanRaUVVNNVFpeEpRVUZKTEVWQlFVVXNiVU5CUVcxRE8xbEJRM3BETEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYVVKQlFXbENPMU5CUTNaQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzTUVKQlFUQkNPMWxCUXpsQ0xFbEJRVWtzUlVGQlJTeG5RMEZCWjBNN1dVRkRkRU1zVlVGQlZTeEZRVUZGTEVOQlFVTTdXVUZEWWl4RFFVRkRMRVZCUVVVc2FVSkJRV2xDTzFsQlEzQkNMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdVMEZEZGtJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3d3UWtGQk1FSTdXVUZET1VJc1NVRkJTU3hGUVVGRkxEaENRVUU0UWp0WlFVTndReXhWUVVGVkxFVkJRVVVzUTBGQlF6dFpRVU5pTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3V1VGRGNrSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc01FSkJRVEJDTzFsQlF6bENMRWxCUVVrc1JVRkJSU3cyUWtGQk5rSTdXVUZEYmtNc1ZVRkJWU3hGUVVGRkxFVkJRVVU3V1VGRFpDeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMEk3V1VGRGRFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc01FSkJRVEJDTzFsQlF6bENMRWxCUVVrc1JVRkJSU3d3UWtGQk1FSTdXVUZEYUVNc1ZVRkJWU3hGUVVGRkxFbEJRVWs3V1VGRGFFSXNRMEZCUXl4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWp0VFFVTjZRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxEQkNRVUV3UWp0WlFVTTVRaXhKUVVGSkxFVkJRVVVzTWtOQlFUSkRPMWxCUTJwRUxGVkJRVlVzUlVGQlJTeExRVUZMTzFsQlEycENMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdXVUZEY0VJc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0VFFVTjRRanRSUVVORU8xbEJRMGtzU1VGQlNTeEZRVUZGTEZWQlFWVTdXVUZEYUVJc1JVRkJSU3hGUVVGRkxEQkNRVUV3UWp0WlFVTTVRaXhKUVVGSkxFVkJRVVVzZDBKQlFYZENPMWxCUXpsQ0xGVkJRVlVzUlVGQlJTeExRVUZMTzFsQlEycENMRU5CUVVNc1JVRkJSU3hwUWtGQmFVSTdXVUZEY0VJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzTUVKQlFUQkNPMWxCUXpsQ0xFbEJRVWtzUlVGQlJTeHpRa0ZCYzBJN1dVRkROVUlzVlVGQlZTeEZRVUZGTEVkQlFVYzdXVUZEWml4RFFVRkRMRVZCUVVVc1EwRkJReXhwUWtGQmFVSTdXVUZEY2tJc1EwRkJReXhGUVVGRkxFTkJRVU1zYVVKQlFXbENPMU5CUTNoQ08xRkJRMFE3V1VGRFNTeEpRVUZKTEVWQlFVVXNWVUZCVlR0WlFVTm9RaXhGUVVGRkxFVkJRVVVzTUVKQlFUQkNPMWxCUXpsQ0xFbEJRVWtzUlVGQlJTeHBRMEZCYVVNN1dVRkRka01zVlVGQlZTeEZRVUZGTEVWQlFVVTdXVUZEWkN4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFsQlEzSkNMRU5CUVVNc1JVRkJSU3hyUWtGQmEwSTdVMEZEZUVJN1VVRkRSRHRaUVVOSkxFbEJRVWtzUlVGQlJTeFZRVUZWTzFsQlEyaENMRVZCUVVVc1JVRkJSU3d3UWtGQk1FSTdXVUZET1VJc1NVRkJTU3hGUVVGRkxHdENRVUZyUWp0WlFVTjRRaXhWUVVGVkxFVkJRVVVzUlVGQlJUdFpRVU5rTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2xDUVVGcFFqdFpRVU55UWl4RFFVRkRMRVZCUVVVc2EwSkJRV3RDTzFOQlEzaENPMUZCUTBRN1dVRkRTU3hKUVVGSkxFVkJRVVVzVlVGQlZUdFpRVU5vUWl4RlFVRkZMRVZCUVVVc01FSkJRVEJDTzFsQlF6bENMRWxCUVVrc1JVRkJSU3dyUWtGQkswSTdXVUZEY2tNc1ZVRkJWU3hGUVVGRkxFZEJRVWM3V1VGRFppeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xbEJRM0JDTEVOQlFVTXNSVUZCUlN4clFrRkJhMEk3VTBGRGVFSTdVVUZEUkR0WlFVTkpMRWxCUVVrc1JVRkJSU3hWUVVGVk8xbEJRMmhDTEVWQlFVVXNSVUZCUlN3d1FrRkJNRUk3V1VGRE9VSXNTVUZCU1N4RlFVRkZMSGxDUVVGNVFqdFpRVU12UWl4VlFVRlZMRVZCUVVVc1EwRkJRenRaUVVOaUxFTkJRVU1zUlVGQlJTeERRVUZETEdsQ1FVRnBRanRaUVVOeVFpeERRVUZETEVWQlFVVXNhVUpCUVdsQ08xTkJRM1pDTzFGQlEwUTdXVUZEU1N4SlFVRkpMRVZCUVVVc1ZVRkJWVHRaUVVOb1FpeEZRVUZGTEVWQlFVVXNNRUpCUVRCQ08xbEJRemxDTEVsQlFVa3NSVUZCUlN4dlEwRkJiME03V1VGRE1VTXNWVUZCVlN4RlFVRkZMRU5CUVVNN1dVRkRZaXhEUVVGRExFVkJRVVVzWjBKQlFXZENPMWxCUTI1Q0xFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRanRUUVVONlFqdFJRVU5FTzFsQlEwa3NTVUZCU1N4RlFVRkZMRlZCUVZVN1dVRkRhRUlzUlVGQlJTeEZRVUZGTERCQ1FVRXdRanRaUVVNNVFpeEpRVUZKTEVWQlFVVXNORUpCUVRSQ08xbEJRMnhETEZWQlFWVXNSVUZCUlN4RlFVRkZPMWxCUTJRc1EwRkJReXhGUVVGRkxHdENRVUZyUWp0WlFVTnlRaXhEUVVGRExFVkJRVVVzYTBKQlFXdENPMU5CUTNoQ08wdEJRMG83U1VGRFJDeExRVUZMTEVWQlFVVTdVVUZEU0N4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3d3UWtGQk1FSXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3d3UWtGQk1FSXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTERCQ1FVRXdRaXhGUVVGRk8xRkJRM3BFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTERCQ1FVRXdRaXhGUVVGRk8xRkJRM3BFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN3d1FrRkJNRUlzUlVGQlJUdFJRVU42UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzTUVKQlFUQkNMRVZCUVVVN1VVRkRla1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzTUVKQlFUQkNMRVZCUVVVN1VVRkRla1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN3d1FrRkJNRUlzUlVGQlJUdFJRVU42UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3d3UWtGQk1FSXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTERCQ1FVRXdRaXhGUVVGRk8xRkJRM3BFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN3d1FrRkJNRUlzUlVGQlJUdFJRVU42UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzTUVKQlFUQkNMRVZCUVVVN1VVRkRla1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN3d1FrRkJNRUlzUlVGQlJUdFJRVU42UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3d3UWtGQk1FSXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3d3UWtGQk1FSXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzTUVKQlFUQkNMRVZCUVVVN1VVRkRla1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzV1VGQldTeEZRVUZGTzFGQlF6TkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN3d1FrRkJNRUlzUlVGQlJUdFJRVU42UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTERCQ1FVRXdRaXhGUVVGRk8xRkJRM3BFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3d3UWtGQk1FSXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTERCQ1FVRXdRaXhGUVVGRk8xRkJRM3BFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN3d1FrRkJNRUlzUlVGQlJUdFJRVU42UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3haUVVGWkxFVkJRVVU3VVVGRE0wTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFpRVUZaTEVWQlFVVTdVVUZETTBNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WlFVRlpMRVZCUVVVN1VVRkRNME1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMREJDUVVFd1FpeEZRVUZGTzFGQlEzcEVMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzTUVKQlFUQkNMRVZCUVVVN1VVRkRla1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTERCQ1FVRXdRaXhGUVVGRk8xRkJRM3BFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN3d1FrRkJNRUlzUlVGQlJUdFJRVU42UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzTUVKQlFUQkNMRVZCUVVVN1VVRkRla1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTd3dRa0ZCTUVJc1JVRkJSVHRSUVVONlJDeEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzTUVKQlFUQkNMRVZCUVVVN1VVRkRla1FzUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3d3UWtGQk1FSXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3d3UWtGQk1FSXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTERCQ1FVRXdRaXhGUVVGRk8xRkJRM3BFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3d3UWtGQk1FSXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTERCQ1FVRXdRaXhGUVVGRk8xRkJRM3BFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3VVVGRGVrUXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3d3UWtGQk1FSXNSVUZCUlR0UlFVTjZSQ3hGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxEQkNRVUV3UWl4RlFVRkZPMUZCUTNwRUxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc01FSkJRVEJDTEVWQlFVVTdVVUZEZWtRc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN4WFFVRlhMRVZCUVVVN1VVRkRNVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFVkJRVVU3VVVGRE1VTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVTdVVUZETVVNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlN3d1FrRkJNRUlzUlVGQlJUdFJRVU42UkN4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0UlFVTXhReXhGUVVGRkxFMUJRVTBzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4RlFVRkZMRmRCUVZjc1JVRkJSVHRSUVVNeFF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGZEJRVmNzUlVGQlJUdFJRVU14UXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTERCQ1FVRXdRaXhGUVVGRk8xRkJRM3BFTEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZPMUZCUXpGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1YwRkJWeXhGUVVGRk8xRkJRekZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hOUVVGTkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzFGQlF6RkRMRVZCUVVVc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNNRUpCUVRCQ0xFVkJRVVU3UzBGRE5VUTdRMEZEU2pzN096czdPenM3T3pzN096czdRVU16YzBkRU96czdPMGRCU1VjN096dEJRVWRJTERoRlFVRXJRanRCUVVNdlFpeHJSVUZCZVVJN1FVRkRla0lzYTBWQlFYbENPMEZCUTNwQ0xHZEdRVUV5UXp0QlFVTXpReXdyUlVGQmIwTTdRVUZEY0VNc2IwWkJRWEZETzBGQlEzSkRMQ3RIUVVFNFJEdEJRVU01UkN3clJVRkJjME03UVVGRGRFTXNhVVpCUVRSRE8wRkJSVFZETEUxQlFVMHNTVUZCU1R0SlFXOUNUanM3TzA5QlIwYzdTVUZEU0N4WlFVRnRRaXhQUVVGWk8xRkJka0o0UWl4VlFVRkxMRWRCUVVjc1MwRkJTenRSUVVsaUxHTkJRVk1zUjBGQlJ5eEpRVUZKTEVkQlFVY3NSVUZCUlR0UlFVTnlRaXhuUWtGQlZ5eEhRVUZITEVsQlFVa3NZMEZCU1N4RlFVRkZPMUZCUTNoQ0xIRkNRVUZuUWl4SFFVRXlRaXhKUVVGSkxFZEJRVWNzUlVGQlJUdFJRVU53UkN4eFFrRkJaMElzUjBGQk1rSXNTVUZCU1N4SFFVRkhMRVZCUVVVN1VVRkhjRVFzWTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eGpRVUZqTEVOQlFVTXNRMEZCUXl4RlFVRkRMREJDUVVFd1FqdFJRVWRxUml4eFFrRkJaMElzUjBGQlJ5eExRVUZMTEVWQlFVTXNNRU5CUVRCRE8xRkJSV3hGTEZkQlFVMHNSMEZCTkVJc1JVRkJSU3hMUVVGTExFVkJRVVVzUlVGQlJTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RlFVRkZMRVZCUVVVN1VVRkZNVVFzZDBKQlFXMUNMRWRCUVVjc1EwRkJReXhGUVVGRExHdEVRVUZyUkR0UlFVODVSU3hKUVVGSkxFTkJRVU1zUTBGQlF5eFhRVUZYTEVsQlFVa3NUMEZCVHl4RFFVRkRMRWxCUVVrc1QwRkJUeXhEUVVGRExGTkJRVk1zUTBGQlF5eFBRVUZQTEV0QlFVc3NTMEZCU3l4RlFVRkZPMWxCUTJ4RkxFMUJRVTBzUzBGQlN5eERRVUZETEdsRVFVRnBSQ3hEUVVGRE8xTkJRMnBGTzFGQlEwUXNTVUZCU1N4RFFVRkRMRmRCUVZjc1IwRkJSeXhQUVVGUExFTkJRVU1zVTBGQlV6dFJRVU53UXl4dFFrRkJiVUk3VVVGRGJrSXNTMEZCU3l4TlFVRk5MRWRCUVVjc1NVRkJTU3hQUVVGUExFVkJRVVU3V1VGRGRrSXNTVUZCU1N4SFFVRkhMRXRCUVVzc1YwRkJWenRuUWtGQlJTeFRRVUZSTEVOQlFVTXNjVU5CUVhGRE8xbEJRM1pGTEVsQlFVa3NUMEZCVHl4RFFVRkRMRWRCUVVjc1EwRkJReXhMUVVGTExFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1JVRkJSVHRuUWtGRGRrTXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhIUVVGSExFTkJRVU1zYlVOQlFWRXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlN5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVVN1lVRkRjRVU3YVVKQlFVMDdaMEpCUTBnc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4UFFVRlBMRU5CUVVNc1IwRkJSeXhEUVVGRE8yRkJRM0pETzFOQlEwbzdVVUZGUkN4TlFVRk5MRTFCUVUwc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEZGQlFWRXNRMEZCUXl4RlFVRkRMSFZFUVVGMVJEdFJRVU4yUnl4TlFVRk5MRlZCUVZVc1IwRkJSeXhOUVVGTkxFTkJRVU1zWjBKQlFXZENMRWxCUVVrc1EwRkJRenRSUVVNdlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEV0QlFVc3NSMEZCUnl4SlFVRkpPMUZCUTJoRUxFMUJRVTBzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4SFFVRkhMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zVFVGQlRTeEhRVUZITEVsQlFVazdVVUZEYkVRc1RVRkJUU3hEUVVGRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVWQlFVVXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zUzBGQlN5eEhRVUZITEZWQlFWVXNRMEZCUXl4RFFVRkRPMUZCUTNaRkxFMUJRVTBzUTBGQlF5eFpRVUZaTEVOQlFVTXNVVUZCVVN4RlFVRkZMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNSMEZCUnl4VlFVRlZMRU5CUVVNc1EwRkJRenRSUVVONlJTeEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRmRCUVZjc1EwRkJReXhOUVVGTkxFTkJRVU03VVVGRmNFTXNTVUZCU1N4RFFVRkRMRlZCUVZVc1IwRkJSeXhKUVVGSkxHMUNRVUZSTEVOQlFVTTdXVUZETTBJc1RVRkJUVHRaUVVOT0xFdEJRVXNzUlVGQlJTeEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRXRCUVVzN1dVRkRNMElzVFVGQlRTeEZRVUZGTEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1RVRkJUVHRaUVVNM1FpeGxRVUZsTEVWQlFVVXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhsUVVGbE8xbEJReTlETEZOQlFWTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExGTkJRVk03V1VGRGJrTXNVMEZCVXl4RlFVRkZMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zVTBGQlV6dFRRVU4wUXl4RFFVRkRPMUZCUlVZc1NVRkJTU3hEUVVGRExGbEJRVmtzUjBGQlJ5eEpRVUZKTEc5Q1FVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRE8xRkJSVEZETEVsQlFVa3NRMEZCUXl4aFFVRmhMRWRCUVVjc1NVRkJTU3huUTBGQmEwSXNRMEZCUXl4SlFVRkpMRU5CUVVNN1VVRkRha1FzU1VGQlNTeEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMR0ZCUVdFc1JVRkJSVHRaUVVNNVFpeEpRVUZKTEVOQlFVTXNZVUZCWVN4RFFVRkRMRkZCUVZFc1JVRkJSVHRUUVVOb1F6dFJRVVZFTEVsQlFVa3NRMEZCUXl4aFFVRmhMRU5CUVVNc1UwRkJVeXhGUVVGRk8wbEJRMnhETEVOQlFVTTdTVUZGVFN4elFrRkJjMElzUTBGQlF5eERRVUZUTzFGQlEyNURMRWxCUVVrc1EwRkJReXh0UWtGQmJVSXNTVUZCU1N4RFFVRkRPMUZCUXpkQ0xFbEJRVWtzU1VGQlNTeERRVUZETEcxQ1FVRnRRaXhIUVVGSExFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTXNkVUpCUVhWQ0xFVkJRVVU3V1VGRGJrVXNTVUZCU1N4RFFVRkRMR2RDUVVGblFpeEhRVUZITEVsQlFVazdVMEZETDBJN1NVRkRUQ3hEUVVGRE8wbEJSVVE3T3p0UFFVZEhPMGxCUTBrc1NVRkJTU3hEUVVGRExGbEJRWE5ETzFGQlF6bERMRWxCUVVrc1dVRkJXU3hMUVVGTExGTkJRVk1zUlVGQlJUdFpRVU0xUWl4UFFVRlBMRWxCUVVrc1EwRkJReXhOUVVGTk8xTkJRM0pDTzJGQlFVMDdXVUZEU0N4clFrRkJhMEk3V1VGRGJFSXNTVUZCU1N4RFFVRkRMRTFCUVUwc2JVTkJRVkVzU1VGQlNTeERRVUZETEUxQlFVMHNSMEZCU3l4WlFVRlpMRU5CUVVVN1dVRkRha1FzU1VGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4SlFVRkpMRWRCUVVjc1JVRkJSVHRaUVVNeFFpeEpRVUZKTEVOQlFVTXNWMEZCVnl4SFFVRkhMRWxCUVVrc1kwRkJTU3hGUVVGRk8xbEJRemRDTEVsQlFVa3NRMEZCUXl4blFrRkJaMElzUjBGQlJ5eEpRVUZKTEVkQlFVY3NSVUZCUlR0WlFVTnFReXhKUVVGSkxFTkJRVU1zWjBKQlFXZENMRWRCUVVjc1NVRkJTU3hIUVVGSExFVkJRVVU3V1VGRmFrTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXp0WlFVTm9ReXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGRE8xTkJRMjVETzBsQlEwd3NRMEZCUXp0SlFVVkVPenM3VDBGSFJ6dEpRVU5KTEU5QlFVOHNRMEZCUXl4UlFVRTJRanRSUVVONFF5eFBRVUZQTEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTjJReXhEUVVGRE8wbEJSVVE3T3p0UFFVZEhPMGxCUTBrc1QwRkJUeXhEUVVGRExGRkJRVFpDTzFGQlEzaERMRTlCUVU4c1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8wbEJRM1pETEVOQlFVTTdTVUZGUkRzN096dFBRVWxITzBsQlEwa3NVVUZCVVN4RFFVRkRMRk5CUVdkRE8xRkJRelZETEUxQlFVMHNVVUZCVVN4SFFVRkhMRk5CUVZNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eFJRVUZSTEVWQlFVVXNSVUZCUlR0WlFVTjRReXhSUVVGUkxFTkJRVU1zUlVGQlJTeEhRVUZITEZGQlFWRXNRMEZCUXl4RlFVRkZMRU5CUVVNc1VVRkJVU3hGUVVGRk8xbEJRM0JETEUxQlFVMHNTVUZCU1N4SFFVRkhMRWxCUVVrc1kwRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeFJRVUZSTEVOQlFVTTdXVUZGY2tNc1QwRkJUeXhKUVVGSk8xRkJRMllzUTBGQlF5eERRVUZETzFGQlEwWXNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETzFGQlEyeERMRTlCUVU4c1VVRkJVVHRKUVVOdVFpeERRVUZETzBsQlJVUTdPenM3VDBGSlJ6dEpRVU5KTEZGQlFWRXNRMEZCUXl4VFFVRm5RenRSUVVNMVF5eE5RVUZOTEZGQlFWRXNSMEZCUnl4VFFVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zVVVGQlVTeEZRVUZGTEVWQlFVVTdXVUZEZUVNc1VVRkJVU3hEUVVGRExFMUJRVTBzUjBGQlJ5eFJRVUZSTEVOQlFVTXNUVUZCVFN4RFFVRkRMRkZCUVZFc1JVRkJSVHRaUVVNMVF5eFJRVUZSTEVOQlFVTXNUVUZCVFN4SFFVRkhMRkZCUVZFc1EwRkJReXhOUVVGTkxFTkJRVU1zVVVGQlVTeEZRVUZGTzFsQlJUVkRMRTFCUVUwc1NVRkJTU3hIUVVGSExFbEJRVWtzWTBGQlNTeERRVUZETEVsQlFVa3NSVUZCUlN4UlFVRlJMRU5CUVVNN1dVRkRja01zVDBGQlR5eEpRVUZKTzFGQlEyWXNRMEZCUXl4RFFVRkRPMUZCUTBZc2NVTkJRWEZETzFGQlEzSkRMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETEVOQlFVTXNSVUZCUXl4NVEwRkJlVU03VVVGRGJFY3NUMEZCVHl4UlFVRlJPMGxCUTI1Q0xFTkJRVU03U1VGRlJEczdPMDlCUjBjN1NVRkRTU3hYUVVGWExFTkJRVU1zUlVGQlZUdFJRVU42UWl4UFFVRlBMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNRMEZCUXp0SlFVTnFReXhEUVVGRE8wbEJSVVE3T3pzN1QwRkpSenRKUVVOSkxHRkJRV0VzUTBGQlF5eE5RVUZqTEVWQlFVVXNUVUZCWXp0UlFVTXZReXhQUVVGUExFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1RVRkJUU3hGUVVGRkxFMUJRVTBzUTBGQlF5eERRVUZETzBsQlEycEVMRU5CUVVNN1NVRkZSRHM3VDBGRlJ6dEpRVU5KTEV0QlFVczdVVUZEVWl4UFFVRlBMRU5CUVVNc1IwRkJSeXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRPMGxCUTNaRExFTkJRVU03U1VGRlJEczdUMEZGUnp0SlFVTkpMRXRCUVVzN1VVRkRVaXhQUVVGUExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRE8wbEJRM3BETEVOQlFVTTdTVUZGUkRzN08wOUJSMGM3U1VGRFNTeEpRVUZKTzFGQlExQXNTVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhUUVVGVE8xRkJRM1pDTEVsQlFVa3NRMEZCUXl4VFFVRlRMRWRCUVVjc1NVRkJTU3hIUVVGSExFVkJRVVU3VVVGRE1VSXNTVUZCU1N4RFFVRkRMRmRCUVZjc1IwRkJSeXhKUVVGSkxHTkJRVWtzUlVGQlJUdFJRVU0zUWl4SlFVRkpMRU5CUVVNc1owSkJRV2RDTEVkQlFVY3NTVUZCU1N4SFFVRkhMRVZCUVVVN1VVRkRha01zU1VGQlNTeERRVUZETEdkQ1FVRm5RaXhIUVVGSExFbEJRVWtzUjBGQlJ5eEZRVUZGTzBsQlEzSkRMRU5CUVVNN1NVRkZSRHM3TzA5QlIwYzdTVUZEU1N4WFFVRlhMRU5CUVVNc1NVRkJXVHRSUVVNelFpeEpRVUZKTEVsQlFVa3NTVUZCU1N4UFFVRlBPMWxCUVVVc1QwRkJUeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETzFGQlJYcERMRTlCUVU4c1EwRkJReXhMUVVGTExFTkJRVU1zZDBOQlFYZERMRWxCUVVrc1JVRkJSU3hEUVVGRE8xRkJRemRFTEU5QlFVOHNSVUZCUlN4TFFVRkxMRVZCUVVVc1JVRkJSU3hGUVVGRkxFdEJRVXNzUlVGQlJTeEZRVUZGTEVWQlFVVTdTVUZEYmtNc1EwRkJRenRKUVVWRU96czdPMDlCU1VjN1NVRkRTU3h2UWtGQmIwSXNRMEZEZGtJc1VVRkJOa0k3VVVGRk4wSXNUVUZCVFN4RlFVRkZMRWRCUVVjc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eGxRVUZsTEVOQlFVTXNVVUZCVVN4RFFVRkRPMUZCUTNCRUxFbEJRVWtzUlVGQlJTeEZRVUZGTzFsQlEwb3NTVUZCU1N4UFFVRlBMRVZCUVVVc1MwRkJTeXhSUVVGUkxFVkJRVVU3WjBKQlEzaENMRTFCUVUwc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNSVUZCUlN4RFFVRkRPMmRDUVVOcVF5eFBRVUZQTzI5Q1FVTklMRWxCUVVrc1JVRkJSU3hOUVVGTk8yOUNRVU5hTEU5QlFVOHNSVUZCUlN4SlFVRkpPMmxDUVVOb1FqdGhRVU5LTzFsQlEwUXNTVUZCU1N4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTzJkQ1FVTnVRaXhOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTXNZVUZCWVN4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRemRETEU5QlFVODdiMEpCUTBnc1NVRkJTU3hGUVVGRkxFMUJRVTA3YjBKQlExb3NUMEZCVHl4RlFVRkZMRWxCUVVrN2FVSkJRMmhDTzJGQlEwbzdVMEZEU2p0SlFVTk1MRU5CUVVNN1NVRkZSRHM3VDBGRlJ6dEpRVU5KTEVsQlFVazdVVUZEVUN4SlFVRkpMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNSVUZCUlR0WlFVTjJRaXc0UlVGQk9FVTdXVUZET1VVc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eFhRVUZYTEVOQlFVTXNaVUZCWlN4RFFVRkRMRU5CUVVNc1IwRkJSeXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRMRU5CUVVNN1dVRkRNMFVzU1VGQlNTeERRVUZETEdkQ1FVRm5RaXhIUVVGSExFdEJRVXM3V1VGRE4wSXNTVUZCU1N4RFFVRkRMRzFDUVVGdFFpeEhRVUZITEVOQlFVTTdVMEZETDBJN1VVRkRSQ3hKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEVsQlFVa3NSVUZCUlR0SlFVTXhRaXhEUVVGRE8wTkJRMG83UVVGRlVTeHZRa0ZCU1RzN096czdPenM3T3pzN096czdRVU12VUdJN096dEhRVWRIT3pzN1FVRkpTQ3hOUVVGaExHdENRVUZyUWp0SlFXVXpRaXhaUVVGdFFpeEpRVUZWTzFGQlluSkNMR05CUVZNc1IwRkJSenRaUVVOb1FpeERRVUZETEVWQlFVVXNRMEZCUXp0WlFVTktMRU5CUVVNc1JVRkJSU3hEUVVGRE8xbEJRMG9zUTBGQlF5eEZRVUZGTEVOQlFVTTdVMEZEVUR0UlFVTlBMR2RDUVVGWExFZEJRVWNzUzBGQlN6dFJRVU51UWl4blFrRkJWeXhIUVVGSExFdEJRVXM3VVVGUmRrSXNTVUZCU1N4RFFVRkRMRWxCUVVrc1IwRkJSeXhKUVVGSk8wbEJRM0JDTEVOQlFVTTdTVUZGUkRzN08wOUJSMGM3U1VGRFNTeFJRVUZSTzFGQlExZ3NUVUZCVFN4TlFVRk5MRWRCUVVjc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNZVUZCWVN4RFFVRkRMRkZCUVZFc1EwRkJRenRSUVVNMVJDeE5RVUZOTEZsQlFWa3NSMEZCUnl4RFFVRkRMRWRCUVc5Q0xFVkJRVVVzUlVGQlJUdFpRVU14UXl4TlFVRk5MRU5CUVVNc1IwRkJSeXhIUVVGSExFTkJRVU1zVDBGQlR5eEpRVUZKTEVkQlFVY3NRMEZCUXl4TFFVRkxMRWRCUVVjc1RVRkJUU3hEUVVGRExGVkJRVlU3V1VGRGRFUXNUVUZCVFN4RFFVRkRMRWRCUVVjc1IwRkJSeXhEUVVGRExFOUJRVThzU1VGQlNTeEhRVUZITEVOQlFVTXNTMEZCU3l4SFFVRkhMRTFCUVUwc1EwRkJReXhUUVVGVE8xbEJRM0pFTEUxQlFVMHNTMEZCU3l4SFFVRkhMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4TlFVRk5MRWRCUVVjc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRla1VzU1VGQlNTeExRVUZMTEVWQlFVVTdaMEpCUTFBc1RVRkJUU3hEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4SFFVRkhMRVZCUVVVc1MwRkJTeXhEUVVGRE8yZENRVU01UWl4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJRenRuUWtGRGNrUXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1owSkJSWEpFTEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU03WjBKQlJYSkNMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEZsQlFWa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRE8yZENRVU5xUkN4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eFpRVUZaTEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJRenRuUWtGRGJrUXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFVkJRVVU3WVVGRGJrSTdXVUZGUkN4SFFVRkhMRU5CUVVNc1kwRkJZeXhGUVVGRk8xRkJRM2hDTEVOQlFVTTdVVUZGUkN4TlFVRk5MRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNaMEpCUVdkQ0xFVkJRVVVzV1VGQldTeEZRVUZGTEV0QlFVc3NRMEZCUXp0UlFVTTVSQ3hOUVVGTkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1dVRkJXU3hGUVVGRkxGbEJRVmtzUlVGQlJTeExRVUZMTEVOQlFVTTdTVUZET1VRc1EwRkJRenRKUVVWRU96dFBRVVZITzBsQlEwa3NVMEZCVXp0UlFVTmFMRTFCUVUwc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMR0ZCUVdFc1EwRkJReXhSUVVGUkxFTkJRVU03VVVGRE5VUXNUVUZCVFN4bFFVRmxMRWRCUVVjc1EwRkJReXhIUVVGbExFVkJRVVVzUlVGQlJUczdXVUZEZUVNc1RVRkJUU3hEUVVGRExFZEJRVWNzUjBGQlJ5eERRVUZETEU5QlFVOHNTVUZCU1N4SFFVRkhMRU5CUVVNc1MwRkJTeXhIUVVGSExFMUJRVTBzUTBGQlF5eFZRVUZWTzFsQlEzUkVMRTFCUVUwc1EwRkJReXhIUVVGSExFZEJRVWNzUTBGQlF5eFBRVUZQTEVsQlFVa3NSMEZCUnl4RFFVRkRMRXRCUVVzc1IwRkJSeXhOUVVGTkxFTkJRVU1zVTBGQlV6dFpRVU55UkN4TlFVRk5MRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4TlFVRk5MRWRCUVVjc1EwRkJRenRaUVVVelF5eEpRVUZKTEVOQlFVTXNWMEZCVnl4SFFVRkhMRWxCUVVrN1dVRkRka0lzU1VGQlNTeERRVUZETEZsQlFWa3NSMEZCUnl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVU3V1VGRE5VSXNTVUZCU1N4RFFVRkRMR3RDUVVGclFpeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1dVRkZjRVVzU1VGQlNTeERRVUZETEdkQ1FVRm5RaXhIUVVGSExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNiMEpCUVc5Q0xFTkJRVU03WjBKQlEyNUVMRU5CUVVNN1owSkJRMFFzUTBGQlF5eEZRVUZGTEVsQlFVazdZVUZEVml4RFFVRkRPMWxCUTBZc1ZVRkJTU3hKUVVGSkxFTkJRVU1zWjBKQlFXZENMREJEUVVGRkxFOUJRVThzUTBGQlF5eFJRVUZSTEVWQlFVVTdaMEpCUTNwRExHbERRVUZwUXp0blFrRkRha01zU1VGQlNTeERRVUZETEhsQ1FVRjVRaXh4UWtGQlVTeEpRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zVDBGQlR5eERRVUZETEZGQlFWRXNSVUZCUlN4RFFVRkZPMkZCUTI1R08xRkJRMHdzUTBGQlF6dFJRVVZFTEUxQlFVMHNaVUZCWlN4SFFVRkhMRU5CUVVNc1IwRkJaU3hGUVVGRkxFVkJRVVU3V1VGRGVFTXNUVUZCVFN4RFFVRkRMRWRCUVVjc1IwRkJSeXhEUVVGRExFOUJRVThzU1VGQlNTeEhRVUZITEVOQlFVTXNTMEZCU3l4SFFVRkhMRTFCUVUwc1EwRkJReXhWUVVGVk8xbEJRM1JFTEUxQlFVMHNRMEZCUXl4SFFVRkhMRWRCUVVjc1EwRkJReXhQUVVGUExFbEJRVWtzUjBGQlJ5eERRVUZETEV0QlFVc3NSMEZCUnl4TlFVRk5MRU5CUVVNc1UwRkJVenRaUVVWeVJDeEpRVUZKTEVsQlFVa3NRMEZCUXl4WFFVRlhMRVZCUVVVN1owSkJRMnhDTEVsQlFVa3NRMEZCUXl4WFFVRlhMRWRCUVVjc1NVRkJTVHRuUWtGRmRrSXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4UFFVRlBMRU5CUVVNc1VVRkJVU3hGUVVGRk8yOUNRVU51UlN3NFFrRkJPRUk3YjBKQlF6bENMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF5eEhRVUZITEVsQlFVa3NRMEZCUXl4clFrRkJhMElzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF6dHZRa0ZEZEVVc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMR3RDUVVGclFpeERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eERRVUZETzI5Q1FVVjBSU3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4WlFVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF6dHZRa0ZEYWtRc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFpRVUZaTEVOQlFVTXNXVUZCV1N4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU03YjBKQlEyNUVMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEZRVUZGTzJsQ1FVTnVRanR4UWtGQlRUdHZRa0ZEU0N4WlFVRlpPMjlDUVVOYUxFbEJRVWtzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhQUVVGUExFTkJRVU1zVVVGQlVTeERRVUZETzNkQ1FVTnVReXhEUVVGRExFVkJRMGNzU1VGQlNTeERRVUZETEhsQ1FVRjVRaXhEUVVGRExFTkJRVU03TkVKQlEyaERMRU5CUVVNc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXl4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETzNkQ1FVTm9SQ3hEUVVGRExFVkJRMGNzU1VGQlNTeERRVUZETEhsQ1FVRjVRaXhEUVVGRExFTkJRVU03TkVKQlEyaERMRU5CUVVNc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXl4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETzNGQ1FVTnVSQ3hEUVVGRE8yOUNRVU5HTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVGRk8ybENRVU51UWp0aFFVTktPMmxDUVVGTk8yZENRVU5JTEUxQlFVMHNTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRPMmRDUVVNelF5eE5RVUZOTEU5QlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExHOUNRVUZ2UWl4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeEpRVUZKTEVWQlFVVXNRMEZCUXp0blFrRkRPVVFzU1VGQlNTeFBRVUZQTEdGQlFWQXNUMEZCVHl4MVFrRkJVQ3hQUVVGUExFTkJRVVVzVDBGQlR5eERRVUZETEdWQlFXVXNSVUZCUlR0dlFrRkRiRU1zVDBGQlR5eERRVUZETEU5QlFVOHNRMEZCUXl4bFFVRmxMRU5CUVVNc1QwRkJUeXhEUVVGRExFOUJRV01zUTBGQlF6dHBRa0ZETVVRN1owSkJRMFFzVDBGQlRTeERRVUZETERoQ1FVRTRRanRoUVVONFF6dFJRVU5NTEVOQlFVTTdVVUZGUkN4TlFVRk5MR0ZCUVdFc1IwRkJSeXhEUVVGRExFZEJRV1VzUlVGQlJTeEZRVUZGT3p0WlFVTjBReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEZkQlFWY3NTVUZCU1N4SlFVRkpMRU5CUVVNc1owSkJRV2RDTEVWQlFVVTdaMEpCUXpWRExGRkJRVkU3WjBKQlExSXNWVUZCU1N4SlFVRkpMRU5CUVVNc1owSkJRV2RDTERCRFFVRkZMRTlCUVU4c1EwRkJReXhsUVVGbExFVkJRVVU3YjBKQlEyaEVMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4UFFVRlBMRU5CUVVNc1pVRkJaU3hEUVVONlF5eEpRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zVDBGQll5eERRVU4yUXl4RlFVRkRMRzlDUVVGdlFqdHBRa0ZEZWtJN1lVRkRTanRaUVVORUxFbEJRVWtzUTBGQlF5eFhRVUZYTEVkQlFVY3NTMEZCU3p0WlFVTjRRaXhKUVVGSkxFTkJRVU1zVjBGQlZ5eEhRVUZITEV0QlFVczdXVUZEZUVJc1NVRkJTU3hEUVVGRExHZENRVUZuUWl4SFFVRkhMRk5CUVZNN1VVRkRja01zUTBGQlF6dFJRVVZFTEUxQlFVMHNRMEZCUXl4blFrRkJaMElzUTBGQlF5eFhRVUZYTEVWQlFVVXNaVUZCWlN4RFFVRkRPMUZCUTNKRUxFMUJRVTBzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhYUVVGWExFVkJRVVVzWlVGQlpTeERRVUZETzFGQlEzSkVMRTFCUVUwc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4VFFVRlRMRVZCUVVVc1lVRkJZU3hEUVVGRE8wbEJRM0pFTEVOQlFVTTdRMEZEU2p0QlFTOUlSQ3huUkVFclNFTTdPenM3T3pzN096czdPenM3TzBGRGRFbEVPenM3UjBGSFJ6czdPMEZCVFVnc1RVRkJZU3haUVVGWk8wbEJUM0pDTEZsQlFXMUNMRWxCUVZVN1VVRkRla0lzU1VGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4SlFVRkpPMUZCUld4Q0xFbEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVY3NVVUZCVVN4RFFVRkRMR1ZCUVdVc1EwRkJReXcwUWtGQk5FSXNSVUZCUlN4TFFVRkxMRU5CUVdVN1VVRkRlRVlzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dFJRVU53UXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVWQlFVVXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhMUVVGTExFTkJRVU03VVVGRGRFUXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhaUVVGWkxFTkJRVU1zVVVGQlVTeEZRVUZGTEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1RVRkJUU3hEUVVGRE8xRkJRM2hFTEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzUjBGQlJ5eFZRVUZWTzFGQlF6VkRMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNSMEZCUnl4UlFVRlJPMUZCUXpGRExFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEV0QlFVczdVVUZEYmtRc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4SFFVRkhMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zVFVGQlRUdFJRVU55UkN4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eFJRVUZSTEVkQlFVY3NWVUZCVlR0UlFVTjBReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRWRCUVVjc1UwRkJVenRSUVVOeVF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVGaExFZEJRVWNzVFVGQlRUdFJRVVYyUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNVMEZCVXl4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTk8xRkJRMnhFTEVsQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFRRVUZUTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFN1VVRkRkRVFzU1VGQlNTeERRVUZETEdGQlFXRXNSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExGTkJRVk1zUTBGQlF5eExRVUZMTEVOQlFVTXNWMEZCVnp0UlFVTTFSQ3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWa3NRMEZCUXl4WFFVRlhMRVZCUVVVc1lVRkJZU3hKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTXNTVUZCU1N4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETzFGQlEzaEdMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeERRVUZETEZkQlFWY3NSVUZCUlN4SFFVRkhMRWxCUVVrc1EwRkJReXhWUVVGVkxFbEJRVWtzUTBGQlF6dFJRVU0xUkN4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVmtzUTBGQlF5eFJRVUZSTEVWQlFVVXNUMEZCVHl4RFFVRkRPMUZCUXpGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4RFFVRkRMR05CUVdNc1JVRkJSU3hIUVVGSExFbEJRVWtzUTBGQlF5eGhRVUZoTEVsQlFVa3NRMEZCUXp0SlFVTjBSU3hEUVVGRE8wbEJSVVE3T3p0UFFVZEhPMGxCUTBrc1UwRkJVeXhEUVVGRExFbEJRVlU3VVVGRGRrSXNUVUZCVFN4SFFVRkhMRWRCUVVjc1NVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJUdFJRVU16UWl4TlFVRk5MRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zU1VGQlNTeEZRVUZGTzFGQlJYaENMRWxCUVVrc1EwRkJReXhKUVVGSk8xbEJRVVVzVDBGQlRUdFJRVVZxUWl4TlFVRk5MRmRCUVZjc1IwRkJSeXhSUVVGUkxFTkJRVU1zWlVGQlpTeERRVUZETERSQ1FVRTBRaXhGUVVGRkxFMUJRVTBzUTBGQlF6dFJRVU5zUml4WFFVRlhMRU5CUVVNc1dVRkJXU3hEUVVGRExFbEJRVWtzUlVGQlJTeEpRVUZKTEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNN1VVRkRla01zVjBGQlZ5eERRVUZETEZsQlFWa3NRMEZCUXl4SFFVRkhMRVZCUVVVc1RVRkJUU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTTFReXhYUVVGWExFTkJRVU1zV1VGQldTeERRVUZETEVkQlFVY3NSVUZCUlN4TlFVRk5MRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzFGQlF6VkRMRmRCUVZjc1EwRkJReXhaUVVGWkxFTkJRVU1zWVVGQllTeEZRVUZGTEU5QlFVOHNRMEZCUXp0UlFVTm9SQ3hYUVVGWExFTkJRVU1zV1VGQldTeERRVUZETEc5Q1FVRnZRaXhGUVVGRkxGRkJRVkVzUTBGQlF6dFJRVU40UkN4WFFVRlhMRU5CUVVNc1UwRkJVeXhIUVVGSExFbEJRVWs3VVVGRk5VSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhYUVVGWExFTkJRVU1zVjBGQlZ5eERRVUZETzBsQlEzWkRMRU5CUVVNN1NVRkZSRHM3TzA5QlIwYzdTVUZEU1N4WFFVRlhMRU5CUVVNc1NVRkJWVHM3VVVGRGVrSXNZVUZCWVR0UlFVTmlMRlZCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWTBGQll5eERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRVZCUVVVc1EwRkJReXd3UTBGQlJTeE5RVUZOTEVkQlFVVTdTVUZEYkVRc1EwRkJRenRKUVVWRU96czdUMEZIUnp0SlFVTkpMRmxCUVZrc1EwRkJReXhUUVVGdlFqdFJRVU53UXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVmtzUTBGRGJrSXNWMEZCVnl4RlFVTllMR0ZCUVdFc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1UwRkJVeXhEUVVGRExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4SFFVRkhMRk5CUVZNc1EwRkJReXhEUVVGRE8yVkJRMnhGTEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eEhRVUZITEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUjBGQlJ5eFRRVUZUTEVOQlFVTXNRMEZCUXp0eFFrRkRiRVFzVTBGQlV5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVTXhRanRSUVVORUxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4RFFVRkRMRmRCUVZjc1JVRkJSU3hIUVVGSExFbEJRVWtzUTBGQlF5eFZRVUZWTEVkQlFVY3NVMEZCVXl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRE8xRkJRekZGTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1dVRkJXU3hEUVVGRExHTkJRV01zUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4aFFVRmhMRWRCUVVjc1UwRkJVeXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETzBsQlEzQkdMRU5CUVVNN1EwRkRTanRCUVRORlJDeHZRMEV5UlVNN096czdPenM3T3pzN096czdPMEZEY0VaRU96czdPMGRCU1VjN08wRkJUVWdzVFVGQlRTeEpRVUZKTzBsQlZVNHNXVUZCYlVJc1NVRkJTU3hGUVVGRkxGRkJRVFpDTzFGQlEyeEVMRWxCUVVrc1EwRkJReXhOUVVGTkxFZEJRVWNzU1VGQlNUdFJRVU5zUWl4TlFVRk5MR05CUVdNc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZOQlFWTTdVVUZETlVNc1RVRkJUU3hKUVVGSkxHbENRVU5JTzFsQlEwTXNWMEZCVnl4RlFVRkZMR05CUVdNc1EwRkJReXhKUVVGSkxFTkJRVU1zVjBGQlZ6dFpRVU0xUXl4WFFVRlhMRVZCUVVVc1kwRkJZeXhEUVVGRExFbEJRVWtzUTBGQlF5eFhRVUZYTzFsQlF6VkRMR0ZCUVdFc1JVRkJSU3hqUVVGakxFTkJRVU1zU1VGQlNTeERRVUZETEdGQlFXRTdXVUZEYUVRc1lVRkJZU3hGUVVGRkxHTkJRV01zUTBGQlF5eEpRVUZKTEVOQlFVTXNZVUZCWVR0VFFVTnVSQ3hGUVVORkxGRkJRVkVzUTBGRFpEdFJRVVZFTEUxQlFVMHNWVUZCVlN4SFFVRkhMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNN1VVRkRka1FzVFVGQlRTeFZRVUZWTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhYUVVGWExFTkJRVU1zU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXp0UlFVTjJSQ3hKUVVGSkxFTkJRVU1zV1VGQldTeERRVUZETzFsQlEyUXNUVUZCVFN4RlFVRkZMRlZCUVZVN1dVRkRiRUlzVFVGQlRTeEZRVUZGTEZWQlFWVTdVMEZEY2tJc1EwRkJRenRSUVVWR0xFbEJRVWtzUTBGQlF5eGhRVUZoTEVkQlFVY3NTVUZCU1N4RFFVRkRMRmRCUVZjN1VVRkRja01zU1VGQlNTeERRVUZETEdGQlFXRXNSMEZCUnl4SlFVRkpMRU5CUVVNc1YwRkJWenRSUVVWeVF5eEpRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zU1VGQlNTeERRVUZETEdGQlFXRXNRMEZCUXp0UlFVTjZReXhKUVVGSkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1NVRkJTU3hEUVVGRExHRkJRV0VzUTBGQlF6dEpRVU0zUXl4RFFVRkRPMGxCUlVRN096czdPMDlCUzBjN1NVRkRTU3hOUVVGTkxFTkJRVU1zU1VGQlZ6dFJRVU55UWl4SlFVRkpMRk5CUVZNc1EwRkJReXhOUVVGTkxFdEJRVXNzUTBGQlF5eEZRVUZGTzFsQlEzaENMRk5CUVZNN1dVRkRWQ3hKUVVGSkxFTkJRVU1zV1VGQldTeERRVUZETzJkQ1FVTmtMRTFCUVUwc1JVRkJSU3hKUVVGSk8yZENRVU5hTEUxQlFVMHNSVUZCUlN4SlFVRkpMRU5CUVVNc1VVRkJVVHRoUVVONFFpeERRVUZETzFOQlEwdzdVVUZEUkN4UFFVRlBMRWxCUVVrc1EwRkJReXhSUVVGUk8wbEJRM2hDTEVOQlFVTTdTVUZGUkRzN096czdUMEZMUnp0SlFVTkpMRTFCUVUwc1EwRkJReXhKUVVGWE8xRkJRM0pDTEVsQlFVa3NVMEZCVXl4RFFVRkRMRTFCUVUwc1MwRkJTeXhEUVVGRExFVkJRVVU3V1VGRGVFSXNVMEZCVXp0WlFVTlVMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU03WjBKQlEyUXNUVUZCVFN4RlFVRkZMRWxCUVVrc1EwRkJReXhSUVVGUk8yZENRVU55UWl4TlFVRk5MRVZCUVVVc1NVRkJTVHRoUVVObUxFTkJRVU03VTBGRFREdFJRVU5FTEU5QlFVOHNTVUZCU1N4RFFVRkRMRkZCUVZFN1NVRkRlRUlzUTBGQlF6dEpRVVZFT3pzN096czdUMEZOUnp0SlFVTkpMRmxCUVZrc1EwRkJReXhsUVVGblJEczdVVUZEYUVVc1NVRkJTU3hUUVVGVExFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNSVUZCUlR0WlFVTjBRaXhOUVVGTkxGTkJRVk1zUjBGQlV5eEpRVUZKTEVOQlFVTXNVVUZCVVR0WlFVTnlReXhOUVVGTkxGTkJRVk1zUjBGQlV5eEpRVUZKTEVOQlFVTXNVVUZCVVR0WlFVTnlReXhOUVVGTkxGTkJRVk1zUjBGQlJ5eGxRVUZsTEVOQlFVTXNUVUZCVFR0WlFVTjRReXhOUVVGTkxGTkJRVk1zUjBGQlJ5eGxRVUZsTEVOQlFVTXNUVUZCVFR0WlFVTjRReXhOUVVGTkxGZEJRVmNzUjBGQlJ5eFRRVUZUTEVOQlFVTXNSVUZCUlN4RlFVRkZPMWxCUTJ4RExFMUJRVTBzVjBGQlZ5eEhRVUZITEZOQlFWTXNRMEZCUXl4RlFVRkZMRVZCUVVVN1dVRkZiRU1zU1VGQlNTeFRRVUZUTEV0QlFVc3NVMEZCVXl4RlFVRkZPMmRDUVVONlFpeHRRa0ZCYlVJN1owSkJRMjVDTEUxQlFVMHNTVUZCU1N4TFFVRkxMRU5CUVVNc1kwRkJZeXhYUVVGWExGRkJRVkVzVjBGQlZ5eHRRa0ZCYlVJc1EwRkJRenRoUVVOdVJqdFpRVVZFTEVsQlFVa3NTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhYUVVGWExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNWMEZCVnl4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVGRExFVkJRVVU3WjBKQlEzcEVMSFZDUVVGMVFqdG5Ra0ZEZGtJc1RVRkJUU3hKUVVGSkxFdEJRVXNzUTBGQlF5eHJRa0ZCYTBJc1YwRkJWeXhSUVVGUkxGZEJRVmNzYTBKQlFXdENMRU5CUVVNN1lVRkRkRVk3V1VGRlJDeEpRVUZKTEZOQlFWTXNTVUZCU1N4VFFVRlRMRVZCUVVVN1owSkJRM2hDTEdsQ1FVRnBRanRuUWtGRGFrSXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhYUVVGWExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRMRVZCUVVVc1JVRkJSU3hGUVVGRkxGTkJRVk1zUTBGQlF5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RFFVRkRPMmRDUVVWb1JTeFZRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMR2RDUVVGblFpeERRVUZETEVkQlFVY3NRMEZCUXl4VFFVRlRMRU5CUVVNc1JVRkJSU3hGUVVGRkxFTkJRVU1zTUVOQlFVVXNUVUZCVFN4RFFVRkRMRWxCUVVrc1JVRkJRenRuUWtGRE9VUXNWVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4SFFVRkhMRU5CUVVNc1UwRkJVeXhEUVVGRExFVkJRVVVzUlVGQlJTeERRVUZETERCRFFVRkZMRTFCUVUwc1EwRkJReXhKUVVGSkxFVkJRVU03WVVGRGFrVTdXVUZGUkN4SlFVRkpMRU5CUVVNc1VVRkJVU3hIUVVGSExGTkJRVk03V1VGRGVrSXNTVUZCU1N4RFFVRkRMRkZCUVZFc1IwRkJSeXhUUVVGVE8xbEJRM3BDTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1YwRkJWeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEZkQlFWY3NSVUZCUlN4WFFVRlhMRU5CUVVNc1JVRkJSU3hKUVVGSkxFTkJRVU03V1VGRk4wUXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1IwRkJSeXhEUVVGRExGZEJRVmNzUTBGQlF5eEZRVUZGTzJkQ1FVTm9SQ3hKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFZEJRVWNzUTBGQlF5eFhRVUZYTEVWQlFVVXNTVUZCU1N4SFFVRkhMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETzJGQlEycEZPMmxDUVVGTk8yZENRVU5JTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNSMEZCUnl4RFFVRkRMRmRCUVZjc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTTdZVUZETVVRN1dVRkRSQ3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4blFrRkJaMElzUTBGQlF5eEhRVUZITEVOQlFVTXNWMEZCVnl4RFFVRkRMRVZCUVVVN1owSkJRMmhFTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNSMEZCUnl4RFFVRkRMRmRCUVZjc1JVRkJSU3hKUVVGSkxFZEJRVWNzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN1lVRkRha1U3YVVKQlFVMDdaMEpCUTBnc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhIUVVGSExFTkJRVU1zVjBGQlZ5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJRenRoUVVNeFJEdFRRVU5LTzFGQlEwUXNUMEZCVHp0WlFVTklMRTFCUVUwc1JVRkJSU3hKUVVGSkxFTkJRVU1zVVVGQlVUdFpRVU55UWl4TlFVRk5MRVZCUVVVc1NVRkJTU3hEUVVGRExGRkJRVkU3VTBGRGVFSTdTVUZEVEN4RFFVRkRPMGxCUlVRN096czdUMEZKUnp0SlFVTkpMRmRCUVZjc1EwRkJReXhMUVVGak8xRkJRemRDTEVsQlFVa3NVMEZCVXl4RFFVRkRMRTFCUVUwc1MwRkJTeXhEUVVGRExFVkJRVVU3V1VGRGVFSXNTVUZCU1N4RFFVRkRMR0ZCUVdFc1IwRkJSeXhMUVVGTE8xbEJRekZDTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1ZVRkJWU3hEUVVGRExGZEJRVmNzUTBGQlF5eGxRVUZsTEVOQlFVTXNTVUZCU1N4RlFVRkZMR0ZCUVdFc1EwRkJRenRUUVVNeFJUdFJRVU5FTEU5QlFVOHNTVUZCU1N4RFFVRkRMR0ZCUVdFN1NVRkROMElzUTBGQlF6dEpRVVZFT3pzN1QwRkhSenRKUVVOSkxGZEJRVmNzUTBGQlF5eExRVUYzUWp0UlFVTjJReXhKUVVGSkxGTkJRVk1zUTBGQlF5eE5RVUZOTEV0QlFVc3NRMEZCUXl4RlFVRkZPMWxCUTNoQ0xFbEJRVWtzUTBGQlF5eGhRVUZoTEVkQlFVY3NTMEZCU3p0WlFVTXhRaXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZWQlFWVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1pVRkJaU3hEUVVGRExFbEJRVWtzUlVGQlJTeGhRVUZoTEVOQlFVTTdVMEZETVVVN1VVRkRSQ3hQUVVGUExFbEJRVWtzUTBGQlF5eGhRVUZoTzBsQlF6ZENMRU5CUVVNN1NVRkZSRHM3TzA5QlIwYzdTVUZEU3l4blFrRkJaMElzUTBGQlF5eFJRVUU0UWp0UlFVTnVSQ3hKUVVGSkxFTkJRVU1zWlVGQlpTeEhRVUZITEZGQlFWRTdTVUZEYmtNc1EwRkJRenRKUVVWRU96czdUMEZIUnp0SlFVTkxMR2RDUVVGblFpeERRVUZETEZGQlFUaENPMUZCUTI1RUxFbEJRVWtzUTBGQlF5eGxRVUZsTEVkQlFVY3NVVUZCVVR0SlFVTnVReXhEUVVGRE8wTkJRMG83UVVGRlJDeHJRa0ZCWlN4SlFVRkpPenM3T3pzN096czdPenM3T3p0QlEyeE1ia0k3T3pzN1IwRkpSenM3UVVGSFNDeDNSVUZCYzBNN1FVRkxkRU1zVFVGQlRTeEpRVUZKTzBsQmEwSk9MRmxCUVcxQ0xFbEJRVWtzUlVGQlJTeFJRVUUyUWp0UlFWbzVReXhsUVVGVkxFZEJRVWM3V1VGRGFrSXNRMEZCUXl4RlFVRkZMRU5CUVVNN1dVRkRTaXhEUVVGRExFVkJRVVVzUTBGQlF6dFRRVU5RTzFGQlZVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhKUVVGSk8xRkJRMnhDTEUxQlFVMHNZMEZCWXl4SFFVRkhMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVTBGQlV6dFJRVU0xUXl4TlFVRk5MRWxCUVVrc2FVSkJRMGc3V1VGRFF5eERRVUZETEVWQlFVVXNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRE8xbEJRM0JDTEVOQlFVTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU03V1VGRGNFSXNWMEZCVnl4RlFVRkZMR05CUVdNc1EwRkJReXhKUVVGSkxFTkJRVU1zVjBGQlZ6dFpRVU0xUXl4WFFVRlhMRVZCUVVVc1kwRkJZeXhEUVVGRExFbEJRVWtzUTBGQlF5eFhRVUZYTzFsQlF6VkRMRU5CUVVNc1JVRkJSU3hqUVVGakxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdXVUZEZUVJc1NVRkJTU3hGUVVGRkxHTkJRV01zUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1R0WlFVTTVRaXhUUVVGVExFVkJRVVVzWTBGQll5eERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRPMWxCUTNoRExFbEJRVWtzUlVGQlJTeGpRVUZqTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrN1dVRkRPVUlzWVVGQllTeEZRVUZGTEdOQlFXTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1lVRkJZVHRaUVVOb1JDeGhRVUZoTEVWQlFVVXNZMEZCWXl4RFFVRkRMRWxCUVVrc1EwRkJReXhoUVVGaE8xTkJRMjVFTEVWQlEwVXNVVUZCVVN4RFFVTmtPMUZCUlVRc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRPMUZCUTNKQ0xFbEJRVWtzUTBGQlF5eFZRVUZWTEVkQlFVYzdXVUZEWkN4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU03V1VGRFZDeERRVUZETEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNN1UwRkRXanRSUVVORUxFbEJRVWtzUTBGQlF5eGhRVUZoTEVkQlFVY3NTVUZCU1N4RFFVRkRMRmRCUVZjN1VVRkRja01zU1VGQlNTeERRVUZETEdGQlFXRXNSMEZCUnl4SlFVRkpMRU5CUVVNc1YwRkJWenRSUVVOeVF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRWxCUVVrc1EwRkJReXhKUVVGSk8xRkJRM1pDTEVsQlFVa3NRMEZCUXl4SFFVRkhMRWRCUVVjc1NVRkJTU3hEUVVGRExFTkJRVU03VVVGRGFrSXNTVUZCU1N4RFFVRkRMRmRCUVZjc1IwRkJSeXhKUVVGSkxFTkJRVU1zVTBGQlV6dFJRVU5xUXl4SlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eEpRVUZKTzFGQlJYWkNMRWxCUVVrc1NVRkJTU3hEUVVGRExGZEJRVmNzUlVGQlJUdFpRVU5zUWl4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF6dFRRVU4yUWp0UlFVVkVMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4SlFVRkpMRU5CUVVNc1lVRkJZU3hEUVVGRE8xRkJRM3BETEVsQlFVa3NRMEZCUXl4blFrRkJaMElzUTBGQlF5eEpRVUZKTEVOQlFVTXNZVUZCWVN4RFFVRkRPMGxCUXpkRExFTkJRVU03U1VGRlJEczdPMDlCUjBjN1NVRkRTU3hGUVVGRk8xRkJRMHdzVDBGQlR5eEpRVUZKTEVOQlFVTXNTVUZCU1R0SlFVTndRaXhEUVVGRE8wbEJSVVE3T3pzN1QwRkpSenRKUVVOSkxFTkJRVU1zUTBGQlF5eExRVUZqTzFGQlEyNUNMRWxCUVVrc1UwRkJVeXhEUVVGRExFMUJRVTBzUjBGQlJ5eERRVUZETEVWQlFVVTdXVUZEZEVJc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF6dG5Ra0ZEVml4RFFVRkRMRVZCUVVVc1MwRkJTenRoUVVOWUxFTkJRVU03VTBGRFREdFJRVU5FTEU5QlFVOHNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRE8wbEJRelZDTEVOQlFVTTdTVUZGUkRzN096dFBRVWxITzBsQlEwa3NRMEZCUXl4RFFVRkRMRXRCUVdNN1VVRkRia0lzU1VGQlNTeFRRVUZUTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1JVRkJSVHRaUVVOMFFpeEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRPMmRDUVVOV0xFTkJRVU1zUlVGQlJTeExRVUZMTzJGQlExZ3NRMEZCUXp0VFFVTk1PMUZCUTBRc1QwRkJUeXhKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTTdTVUZETlVJc1EwRkJRenRKUVVWRU96czdUMEZIUnp0SlFVTkpMRkZCUVZFc1EwRkJReXhSUVVFNFFqdFJRVU14UXl4SlFVRkpMRkZCUVZFc1IwRkJSeXhGUVVGRk8xRkJSV3BDTEdkRlFVRm5SVHRSUVVOb1JTeE5RVUZOTEdOQlFXTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1JVRkJSU3hMUVVGTExFVkJRVVVzUlVGQlJUdFpRVU5zUXl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEV0QlFVc3NSVUZCUXl4clFrRkJhMEk3V1VGREwwTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zWjBKQlFXZENMRVZCUVVVN1owSkJReTlDTEd0RVFVRnJSRHRuUWtGRGJFUXNUVUZCVFN4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4TFFVRkxMRVZCUVVVc1JVRkJSVHR2UWtGRGRrTXNaME5CUVdkRE8yOUNRVU5vUXl4NVFrRkJlVUk3YjBKQlEzcENMRTFCUVUwc1IwRkJSeXhIUVVGSExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFXRTdiMEpCUTJoRExFMUJRVTBzUjBGQlJ5eEhRVUZITEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVdNN2IwSkJRMnBETEVsQlFVa3NSMEZCUnl4RlFVRkZPM2RDUVVOTUxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNjMEpCUVhOQ0xFTkJRVU1zUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXp0M1FrRkROVU1zUzBGQlN5eE5RVUZOTEVsQlFVa3NTVUZCU1N4SFFVRkhMRVZCUVVVN05FSkJRM0JDTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1ZVRkJWU3hEUVVGRExGZEJRVmNzUTBGQlF5eGxRVUZsTEVOQlFVTXNTVUZCU1N4RlFVRkZMRWRCUVVjc1EwRkJRenQ1UWtGRGFFVTdjVUpCUTBvN1owSkJRMHdzUTBGQlF5eERRVUZETzJGQlEwdzdVVUZEVEN4RFFVRkRPMUZCUlVRc1NVRkJTU3hUUVVGVExFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1NVRkJTU3hSUVVGUkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEZGQlFWRXNRMEZCUXl4RlFVRkZPMWxCUXpsRUxGRkJRVkVzUjBGQlJ6dG5Ra0ZEVUN3clFrRkJLMEk3WjBKQlF5OUNMRTFCUVUwc1JVRkJSU3hKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRPMmRDUVVOdVJDeE5RVUZOTEVWQlFVVXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF6dGhRVU4wUkR0WlFVTkVMRWxCUVVrc1IwRkJSeXhKUVVGSkxGRkJRVkVzUlVGQlJUdG5Ra0ZEYWtJc1kwRkJZeXhEUVVGRExFZEJRVWNzUlVGQlJTeFJRVUZSTEVOQlFVTXNRMEZCUXl4RFFVRkRPMkZCUTJ4RE8xbEJRMFFzU1VGQlNTeEhRVUZITEVsQlFVa3NVVUZCVVN4RlFVRkZPMmRDUVVOcVFpeGpRVUZqTEVOQlFVTXNSMEZCUnl4RlFVRkZMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU03WVVGRGJFTTdXVUZEUkN4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExGVkJRVlVzUTBGQlF5eFhRVUZYTEVOQlFVTXNaVUZCWlN4RFFVRkRMRWxCUVVrc1JVRkJSU3hWUVVGVkxFTkJRVU03VTBGRGRrVTdVVUZGUkN4UFFVRlBMRWxCUVVrc1EwRkJReXhWUVVGVk8wbEJRekZDTEVOQlFVTTdTVUZGUkRzN096dFBRVWxITzBsQlEwa3NWMEZCVnl4RFFVRkRMRXRCUVdNN1VVRkROMElzU1VGQlNTeFRRVUZUTEVOQlFVTXNUVUZCVFN4TFFVRkxMRU5CUVVNc1JVRkJSVHRaUVVONFFpeEpRVUZKTEVOQlFVTXNZVUZCWVN4SFFVRkhMRXRCUVVzN1dVRkRNVUlzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4VlFVRlZMRU5CUVVNc1YwRkJWeXhEUVVGRExHVkJRV1VzUTBGQlF5eEpRVUZKTEVWQlFVVXNZVUZCWVN4RFFVRkRPMU5CUXpGRk8xRkJRMFFzVDBGQlR5eEpRVUZKTEVOQlFVTXNZVUZCWVR0SlFVTTNRaXhEUVVGRE8wbEJSVVE3T3p0UFFVZEhPMGxCUTBrc1YwRkJWeXhEUVVGRExFdEJRWGRDTzFGQlEzWkRMRWxCUVVrc1UwRkJVeXhEUVVGRExFMUJRVTBzUzBGQlN5eERRVUZETEVWQlFVVTdXVUZEZUVJc1NVRkJTU3hEUVVGRExHRkJRV0VzUjBGQlJ5eExRVUZMTzFsQlF6RkNMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVlVGQlZTeERRVUZETEZkQlFWY3NRMEZCUXl4bFFVRmxMRU5CUVVNc1NVRkJTU3hGUVVGRkxHRkJRV0VzUTBGQlF6dFRRVU14UlR0UlFVTkVMRTlCUVU4c1NVRkJTU3hEUVVGRExHRkJRV0U3U1VGRE4wSXNRMEZCUXp0SlFVVkVPenM3VDBGSFJ6dEpRVU5KTEVsQlFVa3NRMEZCUXl4TFFVRjNRanRSUVVOb1F5eEpRVUZKTEZOQlFWTXNRMEZCUXl4TlFVRk5MRXRCUVVzc1EwRkJReXhGUVVGRk8xbEJRM2hDTEVsQlFVa3NRMEZCUXl4TlFVRk5MRWRCUVVjc1MwRkJTenRaUVVOdVFpeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRlZCUVZVc1EwRkJReXhYUVVGWExFTkJRVU1zWlVGQlpTeERRVUZETEVsQlFVa3NSVUZCUlN4TlFVRk5MRU5CUVVNN1UwRkRia1U3VVVGRFJDeFBRVUZQTEVsQlFVa3NRMEZCUXl4TlFVRk5PMGxCUTNSQ0xFTkJRVU03U1VGRlJEczdPMDlCUjBjN1NVRkRTU3hEUVVGRExFTkJRVU1zUzBGQll6dFJRVU51UWl4SlFVRkpMRk5CUVZNc1EwRkJReXhOUVVGTkxFdEJRVXNzUTBGQlF5eEZRVUZGTzFsQlEzaENMRWxCUVVrc1EwRkJReXhIUVVGSExFZEJRVWNzUzBGQlN6dFpRVU5vUWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExGVkJRVlVzUTBGQlF5eFhRVUZYTEVOQlFVTXNaVUZCWlN4RFFVRkRMRWxCUVVrc1JVRkJSU3hSUVVGUkxFTkJRVU03VTBGRGNrVTdVVUZEUkN4UFFVRlBMRWxCUVVrc1EwRkJReXhIUVVGSE8wbEJRMjVDTEVOQlFVTTdTVUZGUkRzN08wOUJSMGM3U1VGRFNTeFRRVUZUTEVOQlFVTXNTMEZCWXp0UlFVTXpRaXhKUVVGSkxFTkJRVU1zVjBGQlZ5eEhRVUZITEV0QlFVczdVVUZEZUVJc1NVRkJTU3hMUVVGTExFVkJRVVU3V1VGRFVDeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRmxCUVZrc1EwRkJReXhUUVVGVExFTkJRVU1zU1VGQlNTeERRVUZETzFOQlF6TkRPMkZCUVUwN1dVRkRTQ3hKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZsQlFWa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hEUVVGRE8xTkJRemRETzBsQlEwd3NRMEZCUXp0SlFVVkVPenM3VDBGSFJ6dEpRVU5KTEVsQlFVa3NRMEZCUXl4TFFVRmpPMUZCUTNSQ0xFbEJRVWtzUzBGQlN5eEZRVUZGTzFsQlExQXNTVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhMUVVGTE8xTkJRM1JDTzFGQlEwUXNUMEZCVHl4SlFVRkpMRU5CUVVNc1RVRkJUVHRKUVVOMFFpeERRVUZETzBsQlJVUTdPenM3VDBGSlJ6dEpRVU5KTEZWQlFWVXNRMEZCUXl4TFFVRm5RenRSUVVNNVF5eEpRVUZKTEV0QlFVc3NSVUZCUlR0WlFVTlFMRWxCUVVrc1EwRkJReXhaUVVGWkxFZEJRVWNzUzBGQlN6dFRRVU0xUWp0UlFVTkVMRTlCUVU4c1NVRkJTU3hEUVVGRExGbEJRVms3U1VGRE5VSXNRMEZCUXp0SlFVVkVPenM3T3pzN096dFBRVkZITzBsQlEwc3NUMEZCVHl4RFFVRkRMRXRCUVdFN1VVRkRla0lzU1VGQlNTeGpRVUZUTEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVN1dVRkRiRUlzU1VGQlNTeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRk5CUVZNc1EwRkJReXhIUVVGSExFTkJRVU1zUzBGQlN5eERRVUZETEVWQlFVVTdaMEpCUTJ4RExFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNiVUpCUVcxQ0xFdEJRVXNzYlVKQlFXMUNMRU5CUVVNN1lVRkRMMFE3V1VGRFJDeEpRVUZKTEdOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVU3WjBKQlEzUkNMRTFCUVUwc1NVRkJTU3hMUVVGTExFTkJRVU1zZVVOQlFYbERMRU5CUVVNN1lVRkROMFE3V1VGRFJDeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRk5CUVZNc1EwRkJReXhIUVVGSExFTkJRVU1zUzBGQlN5eEZRVUZGTEVsQlFVa3NRMEZCUXp0WlFVTjBReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEV0QlFVczdVMEZEY0VJN1lVRkJUVHRaUVVOSUxFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNZMEZCWXl4TFFVRkxMRVZCUVVVc1EwRkJRenRUUVVONlF6dEpRVU5NTEVOQlFVTTdTVUZGUkRzN08wOUJSMGM3U1VGRFN5eG5Ra0ZCWjBJc1EwRkJReXhSUVVFNFFqdFJRVU51UkN4SlFVRkpMRU5CUVVNc1pVRkJaU3hIUVVGSExGRkJRVkU3U1VGRGJrTXNRMEZCUXp0SlFVVkVPenM3VDBGSFJ6dEpRVU5MTEdkQ1FVRm5RaXhEUVVGRExGRkJRVGhDTzFGQlEyNUVMRWxCUVVrc1EwRkJReXhsUVVGbExFZEJRVWNzVVVGQlVUdEpRVU51UXl4RFFVRkRPME5CUTBvN1FVRkZSQ3hyUWtGQlpTeEpRVUZKT3pzN096czdPenM3T3pzN08wRkRjRkp1UWp0QlFVRmxMSFZIUVVGM1F5eG5Ra0ZCWjBJc01rSkJRVEpDTEhGQ1FVRnhRaXg1UkVGQmVVUXNSMEZCUnl4RFFVRkRMRVU3T3pzN096czdPenM3T3p0QlEwRndURHRCUVVGbExIVkhRVUYzUXl4blFrRkJaMElzWlVGQlpTeDVSVUZCZVVVc2NVSkJRWEZDTEhsQ1FVRjVRaXhIUVVGSExFTkJRVU1zUlRzN096czdPenM3T3pzN08wRkRRV3BPTzBGQlFXVXNkVWRCUVhkRExITkNRVUZ6UWl3eVFrRkJNa0lzTWtKQlFUSkNMSGxDUVVGNVFpeDNRa0ZCZDBJc2FVSkJRV2xDTEcxQ1FVRnRRaXhuUWtGQlowSXNORUpCUVRSQ0xIRkNRVUZ4UWl4NVFrRkJlVUlzY1VKQlFYRkNMR2RDUVVGblFpdzRRa0ZCT0VJc01rUkJRVEpFTEhsRVFVRjVSQ3h0UTBGQmJVTXNORU5CUVRSRExHZERRVUZuUXl3d1EwRkJNRU1zTUVkQlFUQkhMSGRJUVVGM1NDdzBSMEZCTkVjc2RVVkJRWFZGTEhGRlFVRnhSU3hIUVVGSExFTkJRVU1zUlRzN096czdPenM3T3pzN096dEJRMEZvYlVNN096dEhRVWRIT3pzN1FVRkZTQ3d5UjBGQmVVTTdRVUZEZWtNc2FVaEJRVEpETzBGQlF6TkRMRzlJUVVFNFF6dEJRVU01UXl3d1NFRkJaMFE3UVVGRGFFUXNhMFpCUzI5Q08wRkJTWEJDTEhGR1FVRnpRenRCUVVWMFF5eEpRVUZMTEZkQlRVbzdRVUZPUkN4WFFVRkxMRmRCUVZjN1NVRkRXaXh4UkVGQlVUdEpRVU5TTEdsRVFVRk5PMGxCUTA0c2FVUkJRVTA3U1VGRFRpd3JRMEZCU3p0SlFVTk1MQ3REUVVGTE8wRkJRMVFzUTBGQlF5eEZRVTVKTEZkQlFWY3NTMEZCV0N4WFFVRlhMRkZCVFdZN1FVRkZSQ3hKUVVGTExHRkJUMG83UVVGUVJDeFhRVUZMTEdGQlFXRTdTVUZEWkN4NVJFRkJVVHRKUVVOU0xIRkVRVUZOTzBsQlEwNHNjVVJCUVUwN1NVRkRUaXh0UkVGQlN6dEpRVU5NTEcxRVFVRkxPMGxCUTB3c05rTkJRVVU3UVVGRFRpeERRVUZETEVWQlVFa3NZVUZCWVN4TFFVRmlMR0ZCUVdFc1VVRlBha0k3UVVGRlJDeE5RVUZOTEZkQlFWY3NSMEZCUnp0SlFVTm9RaXhOUVVGTkxFVkJRVVVzVjBGQlZ5eERRVUZETEUxQlFVMDdTVUZETVVJc1RVRkJUU3hGUVVGRkxGZEJRVmNzUTBGQlF5eE5RVUZOTzBsQlF6RkNMRmRCUVZjc1JVRkJSU3hYUVVGWExFTkJRVU1zUzBGQlN6dEpRVU01UWl4WFFVRlhMRVZCUVVVc1YwRkJWeXhEUVVGRExFdEJRVXM3UTBGRGFrTTdRVUZGUkN4TlFVRmhMR2xDUVVGcFFqdEpRV2RDTVVJN096czdPMDlCUzBjN1NVRkRTQ3haUVVOSkxFVkJRVEJDTEVWQlF6RkNMRTFCUVRCQ0xFVkJRekZDTEZOQlFYVkNPMUZCZEVKdVFpeFZRVUZMTEVkQlFVY3NRMEZCUXp0UlFWZFVMR1ZCUVZVc1IwRkJSeXhKUVVGSkxHTkJRVWtzUlVGQlJUdFJRV0V6UWl4TlFVRk5MRVZCUVVVc1MwRkJTeXhGUVVGRkxFdEJRVXNzUlVGQlJTeE5RVUZOTEVWQlFVVXNSMEZCUnl4TlFVRk5PMUZCUTNaRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVkQlFVY3NSVUZCUlR0UlFVTmFMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzUzBGQlN6dFJRVU5zUWl4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFdEJRVXM3VVVGRGJFSXNTVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhOUVVGTk8xRkJRM0JDTEVsQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1RVRkJUU3hEUVVGRExHZENRVUZuUWl4SlFVRkpMRU5CUVVNN1VVRkZPVU1zU1VGQlNTeERRVUZETEZWQlFWVXNSMEZCUnl4dFEwRkJNa0lzUTBGQlF5eHhRa0ZCWVN4RFFVRkRPMUZCUXpWRUxFbEJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NjVUpCUVdFc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeEZRVUZGTEhGQ1FVRmhMRVZCUVVVc2RVSkJRV0VzUlVGQlJTeEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRPMUZCUlhCR0xFbEJRVWtzUTBGQlF5eFpRVUZaTEVkQlFVY3NiVU5CUVRKQ0xFTkJRVU1zZDBKQlFXVXNRMEZCUXp0UlFVTm9SU3hKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEhGQ1FVRmhMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUlVGQlJTeDNRa0ZCWlN4RlFVRkZMREJDUVVGbExFVkJRVVVzU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXp0UlFVTTFSaXhKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEZOQlFWTTdVVUZETVVJc1NVRkJTU3hEUVVGRExHRkJRV0VzUjBGQlJ5eEZRVUZGTzFGQlJYWkNMR05CUVdNN1VVRkRaQ3hyUWtGQmEwSTdVVUZEYkVJc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eFhRVUZYTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1MwRkJTeXhIUVVGSExFbEJRVWtzV1VGQldTeERRVUZETzFsQlF6TkVMRU5CUVVNc1IwRkJSeXhGUVVGRkxFZEJRVWNzUlVGQlJTeEhRVUZITzFsQlEyUXNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJReXhIUVVGSExFVkJRVVVzUjBGQlJ6dFpRVU5tTEVkQlFVY3NSVUZCUlN4SFFVRkhMRVZCUVVVc1IwRkJSenRaUVVOaUxFZEJRVWNzUlVGQlJTeERRVUZETEVkQlFVY3NSVUZCUlN4SFFVRkhPMU5CUTJwQ0xFTkJRVU03VVVGRFJpeEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFbEJRVWtzUlVGQlJTeEZRVUZGTzFsQlF6ZENMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV6dG5Ra0ZCUlN4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFbEJRVWtzV1VGQldTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dFJRVU01UlN4RFFVRkRMRU5CUVVNN1VVRkZSaXhsUVVGbE8xRkJRMllzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhKUVVGSkxFVkJRVVVzUlVGQlJUdFpRVU0zUWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExIbENRVUZwUWl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFVkJRVVVzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0UlFVTjRSQ3hEUVVGRExFTkJRVU03VVVGRlJpeHBRMEZCYVVNN1VVRkRha01zYzBOQlFYTkRPMUZCUTNSRExFbEJRVWtzUTBGQlF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1NVRkJTU3hGUVVGRkxFZEJRVWNzUlVGQlJTeEZRVUZGTzFsQlEzQkRMRWxCUVVrc1IwRkJSeXhIUVVGSExFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNUVUZCVFN4RlFVRkZPMmRDUVVNNVFpeEpRVUZKTEVOQlFVTXNXVUZCV1N4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNSMEZCUnl4RFFVRkRPMkZCUTJoRU8ybENRVUZOTzJkQ1FVTklMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV6dHZRa0ZCUlN4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFbEJRVWtzV1VGQldTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dG5Ra0ZETVVVc1NVRkJTU3hEUVVGRExFMUJRVTBzUjBGQlJ5eDVRa0ZCYVVJc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeEZRVUZGTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN1lVRkRka1E3VVVGRFRDeERRVUZETEVOQlFVTTdVVUZGUml4blFrRkJaMEk3VVVGRGFFSXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXp0UlFVTm9ReXhOUVVGTkxHRkJRV0VzUjBGQlJ5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFpeERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRVZCUVVVc1dVRkJXU3hEUVVGRE8xRkJRelZGTEUxQlFVMHNVVUZCVVN4SFFVRkhMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUlVGQlJTeFBRVUZQTEVOQlFVTTdVVUZEYkVVc1RVRkJUU3haUVVGWkxFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMElzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RlFVRkZMRmRCUVZjc1EwRkJRenRSUVVVeFJTeHBTRUZCYVVnN1VVRkZha2dzYTBKQlFXdENPMUZCUTJ4Q0xFMUJRVTBzVlVGQlZTeEhRVUZITEVsQlFVa3NXVUZCV1N4RFFVRkRPMWxCUTJoRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRE8xbEJRM0JDTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTTdXVUZEZEVJc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTTdVMEZEV0N4RFFVRkRPMUZCUTBZc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhoUVVGaExFVkJRVVVzUzBGQlN5eEZRVUZGTEZWQlFWVXNRMEZCUXp0UlFVVXhSQ3hOUVVGTkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEZsQlFWa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU4wUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExGVkJRVlVzUTBGQlF5eFJRVUZSTEVWQlFVVXNTMEZCU3l4RFFVRkRPMUZCUlc1RExFMUJRVTBzVTBGQlV5eEhRVUZITEVsQlFVa3NXVUZCV1N4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETzFGQlF6RkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zVlVGQlZTeERRVUZETEZsQlFWa3NSVUZCUlN4VFFVRlRMRU5CUVVNN1VVRkZNME1zYVVOQlFXbERPMUZCUTJwRExEQkNRVUV3UWp0UlFVTXhRaXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEZWQlFWVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRE8xRkJRMnhETEUxQlFVMHNaVUZCWlN4SFFVRkhMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUlVGQlJTeFpRVUZaTEVOQlFVTTdVVUZEYUVZc1RVRkJUU3hWUVVGVkxFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMElzUTBGQlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RlFVRkZMRTlCUVU4c1EwRkJRenRSUVVOMFJTeE5RVUZOTEdOQlFXTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWl4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFVkJRVVVzVjBGQlZ5eERRVUZETzFGQlJUbEZMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1pVRkJaU3hGUVVGRkxFdEJRVXNzUlVGQlJTeFZRVUZWTEVOQlFVTTdVVUZETlVRc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlFVTXNWVUZCVlN4RlFVRkZMRXRCUVVzc1EwRkJRenRSUVVOeVF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRlZCUVZVc1EwRkJReXhqUVVGakxFVkJRVVVzVTBGQlV5eERRVUZETzBsQlEycEVMRU5CUVVNN1NVRkZSRHM3T3p0UFFVbEhPMGxCUTBrc1pVRkJaU3hEUVVGRExFbEJRVlVzUlVGQlJTeFRRVUZ0UWp0UlFVTnNSQ3hOUVVGTkxFZEJRVWNzUjBGQlJ5eFhRVUZYTEVOQlFVTXNVMEZCVXl4RFFVRkRPMUZCUTJ4RExFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1IwRkJSeXhEUVVGRE8xRkJRMnBETEUxQlFVMHNTMEZCU3l4SFFVRkhMRWxCUVVrc1EwRkJReXhaUVVGWkxFVkJRVVU3VVVGRGFrTXNUVUZCVFN4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFVkJRVVVzUlVGQlJTeEZRVUZGTEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSU3hGUVVGRkxFTkJRVU1zUTBGQlF6dFJRVU42UlN4SlFVRkpMRWxCUVVrc1IwRkJSeXhKUVVGSk8xRkJRMllzU1VGQlNTeFRRVUZUTEV0QlFVc3NVVUZCVVN4RlFVRkZPMWxCUTNoQ0xFMUJRVTBzUjBGQlJ5eEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUVVNc1VVRkJVU3hGUVVGRk8xbEJRMjVETEVsQlFVa3NSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFVkJRVVVzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXp0VFFVTjRRanRoUVVGTkxFbEJRVWtzVTBGQlV5eExRVUZMTEZGQlFWRXNSVUZCUlR0WlFVTXZRaXhOUVVGTkxFZEJRVWNzUjBGQlJ5eExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRMRkZCUVZFc1JVRkJSVHRaUVVOdVF5eEpRVUZKTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhGUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTTdVMEZEZUVJN1lVRkJUU3hKUVVGSkxGTkJRVk1zUzBGQlN5eGhRVUZoTEVWQlFVVTdXVUZEY0VNc1NVRkJTU3hIUVVGSExFTkJRVU1zU1VGQlNTeERRVUZETEZkQlFWY3NSVUZCUlN4SFFVRkhMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU03VTBGRGFFUTdZVUZCVFN4SlFVRkpMRk5CUVZNc1MwRkJTeXhoUVVGaExFVkJRVVU3V1VGRGNFTXNUVUZCVFN4SFFVRkhMRWRCUVVjc1NVRkJTU3hEUVVGRExGZEJRVmNzUlVGQlJUdFpRVU01UWl4SlFVRkpMRWRCUVVjc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eEZRVUZGTEVkQlFVY3NRMEZCUXl4RFFVRkRMRVZCUVVVc1IwRkJSeXhEUVVGRExFTkJRVU1zUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUTNSRE8yRkJRVTA3V1VGRFNDeFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMQ3RDUVVFclFpeERRVUZETzFsQlF6bERMRTlCUVUwc1EwRkJReXcyUTBGQk5rTTdVMEZEZGtRN1VVRkRSQ3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRVZCUVVVc1NVRkJTU3hEUVVGRExFbEJRVWtzUjBGQlJ5eExRVUZMTEVOQlFVTTdVVUZEZGtNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhaUVVGWkxFVkJRVVVzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXp0UlFVTnlSQ3hKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEdGQlFXRXNRMEZEYWtJc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eFpRVUZaTEVWQlEzQkNMRWxCUVVrc1EwRkJReXhKUVVGSkxFZEJRVWNzUzBGQlN5eEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2FVSkJRV2xDTEVWQlEyaEVMRWxCUVVrc1EwRkJReXhMUVVGTExFVkJRMVlzU1VGQlNTeERRVUZETEVsQlFVa3NSMEZCUnl4TFFVRkxMRVZCUTJwQ0xFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlExbzdTVUZEVEN4RFFVRkRPMGxCUlVRN096dFBRVWRITzBsQlEwa3NaVUZCWlN4RFFVRkRMRXRCUVdFN1VVRkRhRU1zU1VGQlNTeExRVUZMTEVkQlFVY3NRMEZCUXp0UlFVTmlMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXl4RlFVRkZMRVZCUVVVN1dVRkRkRUlzZDBSQlFYZEVPMWxCUTNoRUxFMUJRVTBzVFVGQlRTeEhRVUZITEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVN1dVRkROVUlzVFVGQlRTeGpRVUZqTEVkQlFVY3NUVUZCVFN4RFFVRkRMRkZCUVZFc1JVRkJSVHRaUVVONFF5eEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRmRCUVZjc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1MwRkJTeXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVkQlFVY3NZMEZCWXl4RFFVRkRMRU5CUVVNN1dVRkROMFVzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4alFVRmpMRU5CUVVNc1EwRkJRenRaUVVWcVJpeE5RVUZOTEUxQlFVMHNSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hGUVVGRk8xbEJRelZDTEUxQlFVMHNZMEZCWXl4SFFVRkhMRTFCUVUwc1EwRkJReXhSUVVGUkxFVkJRVVU3V1VGRGVFTXNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhYUVVGWExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMR05CUVdNc1EwRkJReXhEUVVGRE8xbEJRemRGTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1YwRkJWeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1kwRkJZeXhEUVVGRExFTkJRVU03V1VGRmFrWXNPRU5CUVRoRE8xbEJRemxET3pzN096czdPenM3T3pzN096czdZMEZsUlR0UlFVTk9MRU5CUVVNc1EwRkJRenRSUVVWR0xFMUJRVTBzVlVGQlZTeEhRVUZITEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1YwRkJWeXhEUVVGRExFMUJRVTBzUTBGQlF6dFJRVU4wUkN4TlFVRk5MRlZCUVZVc1IwRkJSeXhKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEZkQlFWY3NRMEZCUXl4TlFVRk5MRU5CUVVNN1VVRkZkRVFzVFVGQlRTeEhRVUZITEVkQlFVY3NRMEZCUXl4VlFVRlZMRVZCUVVVc1ZVRkJWU3hEUVVGRE8xRkJSWEJETEVkQlFVY3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhKUVVGSkxFVkJRVVVzUlVGQlJUdFpRVU5xUWl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUlVGQlJUdG5Ra0ZEYWtJc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhaUVVGWkxFVkJRVVVzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXp0blFrRkRja1FzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4aFFVRmhMRU5CUTJwQ0xFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RlFVTndRaXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEV0QlFVc3NSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHbENRVUZwUWl4RlFVTm9SQ3hKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVU5XTEVsQlFVa3NRMEZCUXl4SlFVRkpMRWRCUVVjc1MwRkJTeXhGUVVOcVFpeEpRVUZKTEVOQlFVTXNTVUZCU1N4SFFVRkhMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRek5DTzJGQlEwbzdVVUZEVEN4RFFVRkRMRU5CUVVNN1NVRkRUaXhEUVVGRE8wbEJSVVE3T3p0UFFVZEhPMGxCUTBrc1QwRkJUeXhEUVVGRExFdEJRV0U3VVVGRGVFSXNXVUZCV1R0UlFVTmFMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXl4RlFVRkZMRVZCUVVVN1dVRkRkRUlzZDBSQlFYZEVPMWxCUTNoRUxFMUJRVTBzVFVGQlRTeEhRVUZITEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVN1dVRkROVUlzVFVGQlRTeGpRVUZqTEVkQlFVY3NUVUZCVFN4RFFVRkRMRkZCUVZFc1JVRkJSVHRaUVVONFF5eEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRmRCUVZjc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMR05CUVdNc1EwRkJReXhEUVVGRE8xbEJRMnhHTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1YwRkJWeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhIUVVGSExHTkJRV01zUTBGQlF5eERRVUZETzFsQlJYUkdMRTFCUVUwc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVTdXVUZETlVJc1RVRkJUU3hqUVVGakxFZEJRVWNzVFVGQlRTeERRVUZETEZGQlFWRXNSVUZCUlR0WlFVTjRReXhKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEZkQlFWY3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF5eEhRVUZITEdOQlFXTXNRMEZCUXl4RFFVRkRPMWxCUTJ4R0xFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNWMEZCVnl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4SFFVRkhMR05CUVdNc1EwRkJReXhEUVVGRE8xbEJSWFJHTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1YwRkJWeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFTkJRVU1zUTBGQlF6dG5Ra0ZEY0VRc1NVRkJTU3hEUVVGRExGZEJRVmNzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4VlFVRlZPMWxCUlhoRExFMUJRVTBzUzBGQlN5eEhRVUZITEVsQlFVa3NRMEZCUXl4WFFVRlhMRVZCUVVVN1dVRkRhRU1zU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJRenRaUVVONFJTeEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU1zUTBGQlF6dFpRVU0xUlN4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NSMEZCUnl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTXNRMEZCUXp0WlFVTTFSU3hKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEZkQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJRenRaUVVVMVJTeE5RVUZOTEdGQlFXRXNSMEZCUnl4elFrRkJZeXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVWQlFVTXNkME5CUVhkRE8xbEJRM1pITEVsQlFVa3NRMEZCUXl4WlFVRlpMRU5CUVVNc1lVRkJZU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRMRWRCUVVjc1lVRkJZU3hEUVVGRExFTkJRVU03V1VGRGFrWXNTVUZCU1N4RFFVRkRMRmxCUVZrc1EwRkJReXhoUVVGaExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzWVVGQllTeERRVUZETEVOQlFVTTdXVUZEY2tZc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eGhRVUZoTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NZVUZCWVN4RFFVRkRMRU5CUVVNN1dVRkRja1lzU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXl4aFFVRmhMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1lVRkJZU3hEUVVGRExFTkJRVU03V1VGRmNrWXNUVUZCVFN4WlFVRlpMRWRCUVVjc1NVRkJTU3hEUVVGRExGbEJRVmtzUlVGQlJUdFpRVU40UXl4SlFVRkpMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVYzdaMEpCUXpORExGbEJRVmtzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlN4RlFVRkZPMmRDUVVONFFpeFpRVUZaTEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUVVVc1JVRkJSVHRoUVVNelFqdFpRVU5FTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1IwRkJSeXhEUVVObUxFTkJRVU1zV1VGQldTeERRVUZETEUxQlFVMHNRMEZCUXl4RlFVRkZMRVZCUVVVc1JVRkJSU3haUVVGWkxFTkJRVU1zVFVGQlRTeERRVUZETEVWQlFVVXNSVUZCUlN4RFFVRkRMRVZCUTNCRUxFbEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVTnFRanRSUVVOTUxFTkJRVU1zUTBGQlF6dFJRVVZHTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zU1VGQlNTeEZRVUZGTEVWQlFVVTdXVUZETjBJc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFRRVUZUTEVWQlFVVTdaMEpCUTJwQ0xFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zV1VGQldTeEZRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNN1owSkJRM0pFTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1lVRkJZU3hEUVVOcVFpeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRmxCUVZrc1JVRkRjRUlzU1VGQlNTeERRVUZETEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNhVUpCUVdsQ0xFVkJRM0pFTEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUTFZc1NVRkJTU3hEUVVGRExFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVTjBRaXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUXpOQ08yRkJRMG83VVVGRFRDeERRVUZETEVOQlFVTTdVVUZGUml4cFFrRkJhVUk3VVVGRGFrSXNUVUZCVFN4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eGhRVUZoTEVOQlFVTXNSVUZCUlN4RFFVRkRPMUZCUTJoRUxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zV1VGQldTeEZRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNN1VVRkRja1FzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4aFFVRmhMRU5CUTJwQ0xFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RlFVTndRaXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHBRa0ZCYVVJc1JVRkRja1FzU1VGQlNTeERRVUZETEV0QlFVc3NSVUZEVml4SlFVRkpMRU5CUVVNc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlEzUkNMRWxCUVVrc1EwRkJReXhKUVVGSkxFZEJRVWNzUzBGQlN5eERRVUZETEUxQlFVMHNRMEZETTBJN1VVRkZSQ3hKUVVGSkxFTkJRVU1zUzBGQlN5eEpRVUZKTEV0QlFVc3NRMEZCUXl4TlFVRk5PMGxCUXpsQ0xFTkJRVU03U1VGRlJEczdPMDlCUjBjN1NVRkRTU3haUVVGWkxFTkJRVU1zVTBGQmIwSTdVVUZEY0VNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJRenRSUVVOb1F5eE5RVUZOTEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFVkJRVVVzVDBGQlR5eERRVUZETzFGQlEyeEZMRTFCUVUwc1dVRkJXU3hIUVVGSExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNhMEpCUVd0Q0xFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNSVUZCUlN4WFFVRlhMRU5CUVVNN1VVRkZNVVVzVFVGQlRTeExRVUZMTEVkQlFVY3NTVUZCU1N4WlFVRlpMRU5CUVVNc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF5eEZRVUZGTEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRSUVVNeFJDeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRlZCUVZVc1EwRkJReXhSUVVGUkxFVkJRVVVzUzBGQlN5eERRVUZETzFGQlJXNURMRTFCUVUwc1UwRkJVeXhIUVVGSExFbEJRVWtzV1VGQldTeERRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdVVUZET1VRc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlFVTXNXVUZCV1N4RlFVRkZMRk5CUVZNc1EwRkJRenRSUVVVelF5eHBRMEZCYVVNN1VVRkRha01zTUVKQlFUQkNPMUZCUXpGQ0xFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU03VVVGRGJFTXNUVUZCVFN4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eEZRVUZGTEU5QlFVOHNRMEZCUXp0UlFVTjBSU3hOUVVGTkxHTkJRV01zUjBGQlJ5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFpeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRVZCUVVVc1YwRkJWeXhEUVVGRE8xRkJSVGxGTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1ZVRkJWU3hEUVVGRExGVkJRVlVzUlVGQlJTeExRVUZMTEVOQlFVTTdVVUZEY2tNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlFVTXNZMEZCWXl4RlFVRkZMRk5CUVZNc1EwRkJRenRKUVVOcVJDeERRVUZETzBsQlJVUTdPenRQUVVkSE8wbEJRMGtzWjBKQlFXZENMRU5CUVVNc1VVRkJaMEk3VVVGRGNFTXNUMEZCVHl4SlFVRkpMRU5CUVVNc1lVRkJZU3hEUVVGRExGRkJRVkVzUTBGQlF6dEpRVU4yUXl4RFFVRkRPMGxCUlVRN08wOUJSVWM3U1VGRFNTeEpRVUZKTzFGQlExQXNTVUZCU1N4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFTkJRVU1zUlVGQlJUdFpRVU5vUWl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJRenRaUVVNM1FpeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRk5CUVZNc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NSVUZCUlN4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHMUNRVUZ0UWl4RFFVRkRPMWxCUlRORUxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU03V1VGRGFFTXNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eEpRVUZKTEVWQlFVVXNSVUZCUlR0blFrRkROMElzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4MVFrRkJkVUlzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRPMWxCUXk5RExFTkJRVU1zUTBGQlF6dFpRVVZHTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZPMmRDUVVOb1F5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEZsQlFWa3NSVUZCUlN4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRE8yZENRVU55UkN4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHMUNRVUZ0UWl4RFFVTjJRaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVU5XTEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUTFRc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eExRVUZMTEVWQlEySXNTMEZCU3l4RlFVTk1MRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR2xDUVVGcFFpeEZRVU0zUkN4RFFVRkRMRU5CUTBvN1owSkJRMFFzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRPMjlDUVVGRkxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNiVUpCUVcxQ0xFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NSVUZCUlN4RFFVRkRMRU5CUVVNN1dVRkRia1VzUTBGQlF5eERRVUZETzFOQlEwdzdVVUZGUkN4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHMUNRVUZ0UWl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zWTBGQll5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dFJRVVZ5UlN4VlFVRlZPMUZCUTFZc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eFRRVUZUTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhIUVVGSExFVkJRVVVzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4SlFVRkpMRU5CUVVNN1VVRkROVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF6dFJRVU5zUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHVkJRV1VzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRmRCUVZjc1JVRkJSU3hKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETzFGQlJUVkVMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTXNTVUZCU1N4RlFVRkZMRVZCUVVVN1dVRkRMMElzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4MVFrRkJkVUlzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRPMUZCUXk5RExFTkJRVU1zUTBGQlF6dFJRVVZHTEUxQlFVMHNTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zWVVGQllTeERRVUZETEVWQlFVVXNRMEZCUXp0UlFVTm9SQ3hKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEZWQlFWVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExGbEJRVmtzUlVGQlJTeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRPMUZCUTNKRUxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNiVUpCUVcxQ0xFTkJRM1pDTEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUTFZc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGRFZDeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1JVRkRZaXhMUVVGTExFVkJRMHdzU1VGQlNTeERRVUZETEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHbENRVUZwUWl4RlFVTjRReXhEUVVGRExFTkJRMG83VVVGRFJDeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRzFDUVVGdFFpeERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkJReXhEUVVGRE8xRkJSVEZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc2JVSkJRVzFDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhqUVVGakxFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRE8xRkJRM0pGTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1pVRkJaU3hEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNWMEZCVnl4RlFVRkZMRWxCUVVrc1EwRkJRenRSUVVWc1JDeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXp0UlFVTTNRaXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExFZEJRVWNzUlVGQlJTeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRzFDUVVGdFFpeERRVUZETzBsQlF5OUVMRU5CUVVNN1EwRkRTanRCUVhKWFJDdzRRMEZ4VjBNN096czdPenM3T3pzN096czdRVU5xV2tRN1FVRkJaU3gxUjBGQmQwTXNjMEpCUVhOQ0xESkNRVUV5UWl3eVFrRkJNa0lzZVVKQlFYbENMSGRDUVVGM1FpeHRRa0ZCYlVJc05FSkJRVFJDTEhGQ1FVRnhRaXg1UWtGQmVVSXNjVUpCUVhGQ0xEUkNRVUUwUWl3eVJFRkJNa1FzZVVSQlFYbEVMRzFEUVVGdFF5dzBRMEZCTkVNc1owTkJRV2RETERCRFFVRXdReXd3UjBGQk1FY3NkMGhCUVhkSUxEUkhRVUUwUnl4MVJVRkJkVVVzY1VWQlFYRkZMRWRCUVVjc1EwRkJReXhGT3pzN096czdPenM3T3pzN1FVTkJOMmxETzBGQlFXVXNkVWRCUVhkRExHTkJRV01zYTBKQlFXdENMR2RDUVVGblFpeDFRa0ZCZFVJc2MwSkJRWE5DTERKQ1FVRXlRaXd3UWtGQk1FSXNNa0pCUVRKQ0xITkNRVUZ6UWl4M1FrRkJkMElzYjBOQlFXOURMQ3RFUVVFclJDeDVSRUZCZVVRc1owSkJRV2RDTEVkQlFVY3NjMEpCUVhOQ0xEUkNRVUUwUWl4blFrRkJaMElzUzBGQlN5eDNRa0ZCZDBJc2IwTkJRVzlETEN0RVFVRXJSQ3hwU0VGQmFVZ3NPRVJCUVRoRUxIZERRVUYzUXl4M1FrRkJkMElzUjBGQlJ5eHhRa0ZCY1VJc05raEJRVFpJTEd0Q1FVRnJRaXhQUVVGUExEQkpRVUV3U1N4SFFVRkhMRU5CUVVNc1JUczdPenM3T3pzN096czdPMEZEUVRseFF6dEJRVUZsTEhWSFFVRjNReXhqUVVGakxHdENRVUZyUWl4blFrRkJaMElzZFVKQlFYVkNMSE5DUVVGelFpeGxRVUZsTERKQ1FVRXlRaXd3UWtGQk1FSXNNa0pCUVRKQ0xITkNRVUZ6UWl4M1FrRkJkMElzYjBOQlFXOURMQ3RFUVVFclJDeDVSRUZCZVVRc1owSkJRV2RDTEVkQlFVY3NjMEpCUVhOQ0xEUkNRVUUwUWl4blFrRkJaMElzUzBGQlN5eDNRa0ZCZDBJc2IwTkJRVzlETEN0RVFVRXJSQ3hwU0VGQmFVZ3NPRVJCUVRoRUxIZERRVUYzUXl4M1FrRkJkMElzUjBGQlJ5eHhRa0ZCY1VJc05raEJRVFpJTEd0Q1FVRnJRaXhQUVVGUExIbENRVUY1UWl4SFFVRkhMRU5CUVVNc1JUczdPenM3T3pzN096czdPMEZEUVRWclF6dEJRVUZsTEhWSFFVRjNReXh6UWtGQmMwSXNjVUpCUVhGQ0xHOUNRVUZ2UWl4cFFrRkJhVUlzZVVKQlFYbENMSGRDUVVGM1FpeHBRa0ZCYVVJc2FVSkJRV2xDTEcxQ1FVRnRRaXhwUWtGQmFVSXNkMEpCUVhkQ0xIVkNRVUYxUWl4blFrRkJaMElzTkVKQlFUUkNMSEZDUVVGeFFpeDVRa0ZCZVVJc2QwSkJRWGRDTEhGQ1FVRnhRaXhuUWtGQlowSXNiVVJCUVcxRUxIZENRVUYzUWl4eFFrRkJjVUlzYTBOQlFXdERMR3REUVVGclF5eHpSRUZCYzBRc2JVWkJRVzFHTEcxSVFVRnRTQ3h4UlVGQmNVVXNSMEZCUnl4RFFVRkRMRVU3T3pzN096czdPenM3T3pzN1FVTkJOelpDT3pzN1IwRkhSenM3TzBGQlJVZ3NNa2RCUVhsRE8wRkJRM3BETEdsSVFVRXlRenRCUVVNelF5eHZTRUZCT0VNN1FVRkRPVU1zTUVoQlFXZEVPMEZCUTJoRUxHdEdRVXR2UWp0QlFVdHdRaXhKUVVGTExGZEJUMG83UVVGUVJDeFhRVUZMTEZkQlFWYzdTVUZEV2l4eFJFRkJVVHRKUVVOU0xIRkVRVUZSTzBsQlExSXNhVVJCUVUwN1NVRkRUaXdyUTBGQlN6dEpRVU5NTERaRVFVRlpPMGxCUTFvc05rUkJRVms3UVVGRGFFSXNRMEZCUXl4RlFWQkpMRmRCUVZjc1MwRkJXQ3hYUVVGWExGRkJUMlk3UVVGRlJDeEpRVUZMTEdGQlVVbzdRVUZTUkN4WFFVRkxMR0ZCUVdFN1NVRkRaQ3g1UkVGQlVUdEpRVU5TTEhsRVFVRlJPMGxCUTFJc2NVUkJRVTA3U1VGRFRpeHRSRUZCU3p0SlFVTk1MR2xGUVVGWk8wbEJRMW9zYVVWQlFWazdTVUZEV2l3MlEwRkJSVHRCUVVOT0xFTkJRVU1zUlVGU1NTeGhRVUZoTEV0QlFXSXNZVUZCWVN4UlFWRnFRanRCUVVWRUxFMUJRVTBzVjBGQlZ5eEhRVUZITzBsQlEyaENMRkZCUVZFc1JVRkJSU3hYUVVGWExFTkJRVU1zVVVGQlVUdEpRVU01UWl4TlFVRk5MRVZCUVVVc1YwRkJWeXhEUVVGRExFMUJRVTA3U1VGRE1VSXNTVUZCU1N4RlFVRkZMRmRCUVZjc1EwRkJReXhMUVVGTE8wbEJRM1pDTEZkQlFWY3NSVUZCUlN4WFFVRlhMRU5CUVVNc1dVRkJXVHRKUVVOeVF5eFhRVUZYTEVWQlFVVXNWMEZCVnl4RFFVRkRMRmxCUVZrN1EwRkRlRU03UVVGRlJDeE5RVUZoTEdsQ1FVRnBRanRKUVdsQ01VSTdPenM3TzA5QlMwYzdTVUZEU0N4WlFVTkpMRVZCUVRCQ0xFVkJRekZDTEUxQlFUQkNMRVZCUXpGQ0xGTkJRWFZDTzFGQmRFSnVRaXhWUVVGTExFZEJRVWNzUTBGQlF6dFJRWGRDWWl4TlFVRk5MRVZCUVVVc1MwRkJTeXhGUVVGRkxFdEJRVXNzUlVGQlJTeE5RVUZOTEVWQlFVVXNSMEZCUnl4TlFVRk5PMUZCUTNaRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVkQlFVY3NSVUZCUlR0UlFVTmFMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzUzBGQlN6dFJRVU5zUWl4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFdEJRVXM3VVVGRGJFSXNTVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhOUVVGTk8xRkJRM0JDTEVsQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1RVRkJUU3hEUVVGRExHZENRVUZuUWl4SlFVRkpMRU5CUVVNN1VVRkZPVU1zU1VGQlNTeERRVUZETEZWQlFWVXNSMEZCUnl4dFEwRkJNa0lzUTBGQlF5eHhRa0ZCWVN4RFFVRkRPMUZCUXpWRUxFbEJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NjVUpCUVdFc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeEZRVUZGTEhGQ1FVRmhMRVZCUVVVc2RVSkJRV0VzUlVGQlJTeEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRPMUZCUlhCR0xFbEJRVWtzUTBGQlF5eFpRVUZaTEVkQlFVY3NiVU5CUVRKQ0xFTkJRVU1zZDBKQlFXVXNRMEZCUXp0UlFVTm9SU3hKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEhGQ1FVRmhMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUlVGQlJTeDNRa0ZCWlN4RlFVRkZMREJDUVVGbExFVkJRVVVzU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXp0UlFVTTFSaXhKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEZOQlFWTTdVVUZETVVJc1NVRkJTU3hEUVVGRExGbEJRVmtzUjBGQlJ5eEZRVUZGTzFGQlJYUkNMRWxCUVVrc1EwRkJReXhUUVVGVExFZEJRVWNzUlVGQlJUdFJRVVZ1UWl4alFVRmpPMUZCUTJRc2EwSkJRV3RDTzFGQlEyeENMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zVjBGQlZ5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRXRCUVVzc1IwRkJSeXhKUVVGSkxGbEJRVmtzUTBGQlF6dFpRVU16UkN4RFFVRkRMRWRCUVVjc1JVRkJSU3hIUVVGSExFVkJRVVVzUjBGQlJ6dFpRVU5rTEVkQlFVY3NSVUZCUlN4RFFVRkRMRWRCUVVjc1JVRkJSU3hIUVVGSE8xbEJRMlFzUjBGQlJ5eEZRVUZGTEVkQlFVY3NSVUZCUlN4SFFVRkhPMWxCUTJJc1IwRkJSeXhGUVVGRkxFZEJRVWNzUlVGQlJTeEhRVUZITzFOQlEyaENMRU5CUVVNN1VVRkRSaXgzUTBGQmQwTTdVVUZEZUVNc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4SlFVRkpMRVZCUVVVc1JVRkJSVHRaUVVNM1FpeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNN1owSkJRVVVzU1VGQlNTeERRVUZETEV0QlFVc3NSMEZCUnl4SlFVRkpMRmxCUVZrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN1VVRkRPVVVzUTBGQlF5eERRVUZETzFGQlJVWXNaVUZCWlR0UlFVTm1MRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTXNTVUZCU1N4RlFVRkZMRVZCUVVVN1dVRkROMElzU1VGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4NVFrRkJhVUlzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RlFVRkZMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03VVVGRGVFUXNRMEZCUXl4RFFVRkRPMUZCUlVZc2FVTkJRV2xETzFGQlEycERMSE5EUVVGelF6dFJRVU4wUXl4SlFVRkpMRU5CUVVNc1dVRkJXU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVsQlFVa3NSVUZCUlN4SFFVRkhMRVZCUVVVc1JVRkJSVHRaUVVOd1F5eEpRVUZKTEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFMUJRVTBzUlVGQlJUdG5Ra0ZET1VJc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFZEJRVWNzUTBGQlF6dGhRVU5vUkR0cFFrRkJUVHRuUWtGRFNDeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNN2IwSkJRVVVzU1VGQlNTeERRVUZETEV0QlFVc3NSMEZCUnl4SlFVRkpMRmxCUVZrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN1owSkJRekZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRWRCUVVjc2VVSkJRV2xDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1JVRkJSU3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzJGQlEzWkVPMUZCUTB3c1EwRkJReXhEUVVGRE8xRkJSVVlzWjBKQlFXZENPMUZCUTJoQ0xFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU03VVVGRGFFTXNUVUZCVFN4aFFVRmhMRWRCUVVjc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eEZRVUZGTEZsQlFWa3NRMEZCUXp0UlFVTTFSU3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFpeERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRE8xRkJRMnhGTEUxQlFVMHNXVUZCV1N4SFFVRkhMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUlVGQlJTeFhRVUZYTEVOQlFVTTdVVUZETVVVc1RVRkJUU3hYUVVGWExFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMElzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RlFVRkZMRlZCUVZVc1EwRkJRenRSUVVONFJTeE5RVUZOTEdGQlFXRXNSMEZCUnl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFVkJRVVVzV1VGQldTeERRVUZETzFGQlJUVkZMR2xJUVVGcFNEdFJRVVZxU0N4clFrRkJhMEk3VVVGRGJFSXNUVUZCVFN4VlFVRlZMRWRCUVVjc1NVRkJTU3haUVVGWkxFTkJRVU03V1VGRGFFTXNRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTTdXVUZEY0VJc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eEhRVUZITEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJRenRaUVVOMFFpeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJRenRUUVVOWUxFTkJRVU03VVVGRFJpeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2RDUVVGblFpeERRVUZETEdGQlFXRXNSVUZCUlN4TFFVRkxMRVZCUVVVc1ZVRkJWU3hEUVVGRE8xRkJSVEZFTEUxQlFVMHNTMEZCU3l4SFFVRkhMRWxCUVVrc1dVRkJXU3hEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRPMUZCUTNSRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRkZCUVZFc1JVRkJSU3hMUVVGTExFTkJRVU03VVVGRmJrTXNUVUZCVFN4VFFVRlRMRWRCUVVjc1NVRkJTU3haUVVGWkxFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkRNVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4VlFVRlZMRU5CUVVNc1dVRkJXU3hGUVVGRkxGTkJRVk1zUTBGQlF6dFJRVVV6UXl4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGbEJRVmtzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVVc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzFGQlF6VkVMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zVlVGQlZTeERRVUZETEZkQlFWY3NSVUZCUlN4UlFVRlJMRU5CUVVNN1VVRkZla01zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4VFFVRlRMRU5CUVVNc1lVRkJZU3hGUVVGRkxFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTTdVVUZGYWtRc2FVTkJRV2xETzFGQlEycERMREJDUVVFd1FqdFJRVU14UWl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExGVkJRVlVzUTBGQlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRPMUZCUTJ4RExFMUJRVTBzWlVGQlpTeEhRVUZITEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNc1JVRkJSU3haUVVGWkxFTkJRVU03VVVGRGFFWXNUVUZCVFN4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eEZRVUZGTEU5QlFVOHNRMEZCUXp0UlFVTjBSU3hOUVVGTkxHTkJRV01zUjBGQlJ5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMR3RDUVVGclFpeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRVZCUVVVc1YwRkJWeXhEUVVGRE8xRkJRemxGTEUxQlFVMHNZVUZCWVN4SFFVRkhMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUlVGQlJTeFZRVUZWTEVOQlFVTTdVVUZETlVVc1RVRkJUU3hsUVVGbExFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMElzUTBGQlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RlFVRkZMRmxCUVZrc1EwRkJRenRSUVVWb1JpeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2RDUVVGblFpeERRVUZETEdWQlFXVXNSVUZCUlN4TFFVRkxMRVZCUVVVc1ZVRkJWU3hEUVVGRE8xRkJRelZFTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1ZVRkJWU3hEUVVGRExGVkJRVlVzUlVGQlJTeExRVUZMTEVOQlFVTTdVVUZEY2tNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlFVTXNZMEZCWXl4RlFVRkZMRk5CUVZNc1EwRkJRenRSUVVNM1F5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRlZCUVZVc1EwRkJReXhoUVVGaExFVkJRVVVzVVVGQlVTeERRVUZETzFGQlF6TkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zVTBGQlV5eERRVUZETEdWQlFXVXNSVUZCUlN4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRE8wbEJRM1pFTEVOQlFVTTdTVUZGUkRzN08wOUJSMGM3U1VGRFNTeFpRVUZaTEVOQlFVTXNVMEZCYjBJN1VVRkRjRU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF6dFJRVU5vUXl4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEd0Q1FVRnJRaXhEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRPMUZCUTJ4RkxFMUJRVTBzV1VGQldTeEhRVUZITEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hYUVVGWExFTkJRVU03VVVGRk1VVXNUVUZCVFN4TFFVRkxMRWRCUVVjc1NVRkJTU3haUVVGWkxFTkJRVU1zUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXl4RlFVRkZMRk5CUVZNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU14UkN4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExGVkJRVlVzUTBGQlF5eFJRVUZSTEVWQlFVVXNTMEZCU3l4RFFVRkRPMUZCUlc1RExFMUJRVTBzVTBGQlV5eEhRVUZITEVsQlFVa3NXVUZCV1N4RFFVRkRMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU1zUlVGQlJTeFRRVUZUTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkRPVVFzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4VlFVRlZMRU5CUVVNc1dVRkJXU3hGUVVGRkxGTkJRVk1zUTBGQlF6dFJRVVV6UXl4cFEwRkJhVU03VVVGRGFrTXNNRUpCUVRCQ08xRkJRekZDTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1ZVRkJWU3hEUVVGRExFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTTdVVUZEYkVNc1RVRkJUU3hWUVVGVkxFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4clFrRkJhMElzUTBGQlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RlFVRkZMRTlCUVU4c1EwRkJRenRSUVVOMFJTeE5RVUZOTEdOQlFXTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHdENRVUZyUWl4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFVkJRVVVzVjBGQlZ5eERRVUZETzFGQlJUbEZMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zVlVGQlZTeERRVUZETEZWQlFWVXNSVUZCUlN4TFFVRkxMRU5CUVVNN1VVRkRja01zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4VlFVRlZMRU5CUVVNc1kwRkJZeXhGUVVGRkxGTkJRVk1zUTBGQlF6dEpRVU5xUkN4RFFVRkRPMGxCUlVRN096czdUMEZKUnp0SlFVTkpMR1ZCUVdVc1EwRkJReXhKUVVGVkxFVkJRVVVzVTBGQmJVSTdVVUZEYkVRc1RVRkJUU3hIUVVGSExFZEJRVWNzVjBGQlZ5eERRVUZETEZOQlFWTXNRMEZCUXp0UlFVTnNReXhOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWRCUVVjc1EwRkJRenRSUVVOcVF5eE5RVUZOTEV0QlFVc3NSMEZCUnl4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVWQlFVVXNRMEZCUXp0UlFVTjJReXhKUVVGSkxFbEJRVWtzUjBGQlJ5eEpRVUZKTzFGQlEyWXNTVUZCU1N4VFFVRlRMRXRCUVVzc1ZVRkJWU3hGUVVGRk8xbEJRekZDTEUxQlFVMHNSMEZCUnl4SFFVRkhMRWxCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVU3V1VGRE0wSXNTVUZCU1N4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUTNoQ08yRkJRVTBzU1VGQlNTeFRRVUZUTEV0QlFVc3NUVUZCVFN4RlFVRkZPMWxCUXpkQ0xFMUJRVTBzUjBGQlJ5eEhRVUZITEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVN1dVRkRka0lzU1VGQlNTeEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1JVRkJSU3hIUVVGSExFTkJRVU1zUTBGQlF5eEZRVUZGTEVkQlFVY3NRMEZCUXl4RFFVRkRMRVZCUVVVc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF6dFRRVU4wUXp0aFFVRk5MRWxCUVVrc1UwRkJVeXhMUVVGTExGRkJRVkVzUlVGQlJUdFpRVU12UWl4SlFVRkpMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eEZRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJRenRUUVVOMFF6dGhRVUZOTEVsQlFVa3NVMEZCVXl4TFFVRkxMR0ZCUVdFc1JVRkJSVHRaUVVOd1F5eEpRVUZKTEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1YwRkJWeXhGUVVGRkxFZEJRVWNzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXp0VFFVTm9SRHRoUVVGTkxFbEJRVWtzVTBGQlV5eExRVUZMTEdGQlFXRXNSVUZCUlR0WlFVTndReXhOUVVGTkxFZEJRVWNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RlFVRkZPMWxCUXpsQ0xFbEJRVWtzUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRVZCUVVVc1IwRkJSeXhEUVVGRExFTkJRVU1zUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUXl4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03VTBGRGRFTTdZVUZCVFR0WlFVTklMRTlCUVU4c1EwRkJReXhMUVVGTExFTkJRVU1zSzBKQlFTdENMRU5CUVVNN1dVRkRPVU1zVDBGQlRUdFRRVU5VTzFGQlEwUXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zU1VGQlNTeEZRVUZGTEVsQlFVa3NRMEZCUXl4SlFVRkpMRWRCUVVjc1MwRkJTeXhEUVVGRE8xRkJRM1pETEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1ZVRkJWU3hEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RlFVRkZMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU03VVVGRGNrUXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhoUVVGaExFTkJRMnBDTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1dVRkJXU3hGUVVOd1FpeEpRVUZKTEVOQlFVTXNTVUZCU1N4SFFVRkhMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdsQ1FVRnBRaXhGUVVOb1JDeEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVTldMRWxCUVVrc1EwRkJReXhKUVVGSkxFZEJRVWNzUzBGQlN5eEZRVU5xUWl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVOYU8wbEJRMHdzUTBGQlF6dEpRVVZFT3pzN1QwRkhSenRKUVVOSkxFOUJRVThzUTBGQlF5eExRVUZoTzFGQlEzaENMRmxCUVZrN1VVRkRXaXhMUVVGTExFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNc1JVRkJSU3hGUVVGRk8xbEJRM1JDTEhkRVFVRjNSRHRaUVVONFJDeE5RVUZOTEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRk8xbEJRMmhETEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1YwRkJWeXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRMRWRCUVVjc1VVRkJVU3hEUVVGRExFTkJRVU03V1VGRE9VVXNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhYUVVGWExFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzVVVGQlVTeERRVUZETEVOQlFVTTdXVUZGYkVZc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eFhRVUZYTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFTkJRVU1zUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4VlFVRlZPMWxCUlhSR0xFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVN1dVRkRlRUlzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJRenRaUVVOMlJTeEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1IwRkJSeXhKUVVGSkxFTkJRVU1zUTBGQlF6dFpRVU16UlN4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NSMEZCUnl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNRMEZCUXp0WlFVTXpSU3hKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEZkQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJRenRaUVVVelJTeEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRmRCUVZjc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhEUVVGRExFTkJRVU03WjBKQlF6TkVMRWxCUVVrc1EwRkJReXhYUVVGWExFVkJRVVVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWVUZCVlR0WlFVVjRReXhOUVVGTkxGZEJRVmNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RlFVRkZPMWxCUTNSRExFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNWMEZCVnl4RFFVRkRMRmxCUVZrc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVkQlFVY3NWMEZCVnl4RFFVRkRMRU5CUVVNN1dVRkRja1lzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1dVRkJXU3hEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPMmRDUVVOeVJTeFhRVUZYTEVOQlFVTXNRMEZCUXp0WlFVTnFRaXhKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEZkQlFWY3NRMEZCUXl4WlFVRlpMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdaMEpCUTNKRkxGZEJRVmNzUTBGQlF5eERRVUZETzFsQlEycENMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zVjBGQlZ5eERRVUZETEZsQlFWa3NRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF6dG5Ra0ZEY2tVc1YwRkJWeXhEUVVGRExFTkJRVU03V1VGRmFrSXNUVUZCVFN4aFFVRmhMRWRCUVVjc2MwSkJRV01zUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNlVU5CUVhsRE8xbEJRM0JITEVsQlFVa3NRMEZCUXl4WlFVRlpMRU5CUVVNc1lVRkJZU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRMRWRCUVVjc1lVRkJZU3hEUVVGRExFTkJRVU03V1VGRGFrWXNTVUZCU1N4RFFVRkRMRmxCUVZrc1EwRkJReXhoUVVGaExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzWVVGQllTeERRVUZETEVOQlFVTTdXVUZEY2tZc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eGhRVUZoTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NZVUZCWVN4RFFVRkRMRU5CUVVNN1dVRkRja1lzU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXl4aFFVRmhMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1lVRkJZU3hEUVVGRExFTkJRVU03V1VGRmNrWXNTVUZCU1N4RFFVRkRMRmxCUVZrc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVXNSVUZCUlR0WlFVTnVSQ3hKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRVZCUVVVc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVY3NRMEZCUXp0UlFVTTVReXhEUVVGRExFTkJRVU03VVVGRlJpeEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFbEJRVWtzUlVGQlJTeEZRVUZGTzFsQlF6ZENMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eEZRVUZGTzJkQ1FVTnFRaXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEZWQlFWVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExGbEJRVmtzUlVGQlJTeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRPMmRDUVVOeVJDeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMR0ZCUVdFc1EwRkRha0lzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4WlFVRlpMRVZCUTNCQ0xFbEJRVWtzUTBGQlF5eEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdsQ1FVRnBRaXhGUVVOeVJDeEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVTldMRWxCUVVrc1EwRkJReXhKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEV0QlFVc3NSVUZEZEVJc1NVRkJTU3hEUVVGRExFbEJRVWtzUjBGQlJ5eExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVTXpRanRoUVVOS08xRkJRMHdzUTBGQlF5eERRVUZETzFGQlJVWXNhVUpCUVdsQ08xRkJRMnBDTEUxQlFVMHNTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zWVVGQllTeERRVUZETEVWQlFVVXNRMEZCUXp0UlFVTm9SQ3hKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEZWQlFWVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExGbEJRVmtzUlVGQlJTeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRPMUZCUTNKRUxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNZVUZCWVN4RFFVTnFRaXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEZsQlFWa3NSVUZEY0VJc1NVRkJTU3hEUVVGRExFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zYVVKQlFXbENMRVZCUTNKRUxFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlExWXNTVUZCU1N4RFFVRkRMRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVU4wUWl4SlFVRkpMRU5CUVVNc1NVRkJTU3hIUVVGSExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlF6TkNPMUZCUlVRc1NVRkJTU3hEUVVGRExFdEJRVXNzU1VGQlNTeExRVUZMTEVOQlFVTXNUVUZCVFR0SlFVTTVRaXhEUVVGRE8wbEJSVVE3T3p0UFFVZEhPMGxCUTBrc1pVRkJaU3hEUVVGRExGRkJRV2RDTzFGQlEyNURMRTlCUVU4c1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eFJRVUZSTEVOQlFVTTdTVUZEZEVNc1EwRkJRenRKUVVWRU96dFBRVVZITzBsQlEwa3NTVUZCU1R0UlFVTlFMRWxCUVVrc1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eERRVUZETEVWQlFVVTdXVUZEYUVJc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhMUVVGTExFTkJRVU03V1VGRE4wSXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhUUVVGVExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4SFFVRkhMRVZCUVVVc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eHRRa0ZCYlVJc1EwRkJRenRaUVVVelJDeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETzFsQlEyaERMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTXNTVUZCU1N4RlFVRkZMRVZCUVVVN1owSkJRemRDTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc2RVSkJRWFZDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJRenRaUVVNdlF5eERRVUZETEVOQlFVTTdXVUZGUml4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRMRVZCUVVVc1JVRkJSVHRuUWtGRGFFTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4WlFVRlpMRVZCUVVVc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF6dG5Ra0ZEY2tRc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eHRRa0ZCYlVJc1EwRkRka0lzU1VGQlNTeERRVUZETEV0QlFVc3NSVUZEVml4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVOVUxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNTMEZCU3l4RlFVTmlMRXRCUVVzc1JVRkRUQ3hKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2FVSkJRV2xDTEVWQlEzaERMRU5CUVVNc1EwRkRTanRuUWtGRFJDeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNN2IwSkJRVVVzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4dFFrRkJiVUlzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkZMRU5CUVVNc1EwRkJRenRaUVVOdVJTeERRVUZETEVOQlFVTTdVMEZEVER0UlFVVkVMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zYlVKQlFXMUNMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eGpRVUZqTEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzFGQlJYSkZMRlZCUVZVN1VVRkRWaXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExFZEJRVWNzUlVGQlJTeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJRenRSUVVNMVF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETzFGQlEyeERMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zWlVGQlpTeERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1YwRkJWeXhGUVVGRkxFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTTdVVUZGTlVRc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4SlFVRkpMRVZCUVVVc1JVRkJSVHRaUVVNdlFpeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMSFZDUVVGMVFpeERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN1VVRkRMME1zUTBGQlF5eERRVUZETzFGQlJVWXNUVUZCVFN4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eGhRVUZoTEVOQlFVTXNSVUZCUlN4RFFVRkRPMUZCUTJoRUxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zV1VGQldTeEZRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNN1VVRkRja1FzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4dFFrRkJiVUlzUTBGRGRrSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1JVRkRWaXhKUVVGSkxFTkJRVU1zU1VGQlNTeEZRVU5VTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1MwRkJTeXhGUVVOaUxFdEJRVXNzUlVGRFRDeEpRVUZKTEVOQlFVTXNTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zYVVKQlFXbENMRVZCUTNoRExFTkJRVU1zUTBGRFNqdFJRVU5FTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc2JVSkJRVzFDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRExFTkJRVU03VVVGRk1VTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXh0UWtGQmJVSXNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHTkJRV01zUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03VVVGRGNrVXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhsUVVGbExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4WFFVRlhMRVZCUVVVc1NVRkJTU3hEUVVGRE8xRkJSV3hFTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNTMEZCU3l4RFFVRkRPMUZCUXpkQ0xFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc2JVSkJRVzFDTEVOQlFVTTdTVUZETDBRc1EwRkJRenREUVVOS08wRkJNMVJFTERoRFFUSlVRenM3T3pzN096czdPenM3T3p0QlEzcFhSRHRCUVVGbExIVkhRVUYzUXl4elFrRkJjMElzY1VKQlFYRkNMRzlDUVVGdlFpeHBRa0ZCYVVJc2VVSkJRWGxDTEhkQ1FVRjNRaXhwUWtGQmFVSXNiVUpCUVcxQ0xHbENRVUZwUWl4M1FrRkJkMElzZFVKQlFYVkNMRFJDUVVFMFFpeHhRa0ZCY1VJc2VVSkJRWGxDTEhkQ1FVRjNRaXh4UWtGQmNVSXNhVVJCUVdsRUxIZENRVUYzUWl4eFFrRkJjVUlzYTBOQlFXdERMR3REUVVGclF5eHpSRUZCYzBRc2JVWkJRVzFHTEcxSVFVRnRTQ3h4UlVGQmNVVXNSMEZCUnl4RFFVRkRMRVU3T3pzN096czdPenM3T3pzN1FVTkJNVE5DT3pzN1IwRkhSenM3TzBGQlJVZ3NORWhCUVN0RU8wRkJSeTlFTERSSVFVRXJSRHRCUVVrdlJDdzRSVUZCZDBNN1FVRkZlRU1zVFVGQllTeFJRVUZSTzBsQlZXcENPenM3VDBGSFJ6dEpRVU5JTEZsQlFXMUNMRTlCUVhkQ08xRkJRM1pETEUxQlFVMHNSVUZCUlN4TlFVRk5MRVZCUVVVc1MwRkJTeXhGUVVGRkxFMUJRVTBzUlVGQlJTeGxRVUZsTEVWQlFVVXNVMEZCVXl4RlFVRkZMRk5CUVZNc1JVRkJSU3hIUVVGSExFOUJRVTg3VVVGRGFFWXNTVUZCU1R0WlFVTkJMRWxCUVVrc1EwRkJReXhGUVVGRkxFZEJRVWNzVFVGQlRTeERRVUZETEZWQlFWVXNRMEZCUXl4UlFVRlJMRU5CUVVNN1UwRkRlRU03VVVGQlF5eFhRVUZOTzFsQlEwb3NUVUZCVFN4SlFVRkpMRXRCUVVzc1EwRkJReXhuUkVGQlowUXNRMEZCUXp0VFFVTndSVHRSUVVORUxFbEJRVWtzUTBGQlF5eGxRVUZsTEVkQlFVY3NaVUZCWlR0UlFVTjBReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEV0QlFVczdVVUZEYkVJc1NVRkJTU3hEUVVGRExFMUJRVTBzUjBGQlJ5eE5RVUZOTzFGQlJYQkNMRWxCUVVrc1EwRkJReXhoUVVGaExFVkJRVVU3VVVGRmNFSXNTVUZCU1N4RFFVRkRMRmRCUVZjc1IwRkJSeXhKUVVGSkxDdENRVUZwUWl4RFFVTndReXhKUVVGSkxFTkJRVU1zUlVGQlJTeEZRVU5RTEVWQlFVVXNTMEZCU3l4RlFVRkZMRTFCUVUwc1JVRkJSU3hMUVVGTExFVkJRVVVzVTBGQlV5eEZRVUZGTEVWQlEyNURMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRMnBDTzFGQlEwUXNTVUZCU1N4RFFVRkRMRmRCUVZjc1IwRkJSeXhKUVVGSkxDdENRVUZwUWl4RFFVTndReXhKUVVGSkxFTkJRVU1zUlVGQlJTeEZRVU5RTEVWQlFVVXNTMEZCU3l4RlFVRkZMRTFCUVUwc1JVRkJSU3hMUVVGTExFVkJRVVVzVTBGQlV5eEZRVUZGTEVWQlEyNURMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRMnBDTzBsQlEwd3NRMEZCUXp0SlFVVkVPenM3VDBGSFJ6dEpRVU5KTEZGQlFWRXNRMEZCUXl4TFFVRmhPMUZCUTNwQ0xFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJRenRKUVVOdVF5eERRVUZETzBsQlJVUTdPenRQUVVkSE8wbEJRMGtzVVVGQlVTeERRVUZETEV0QlFXRTdVVUZEZWtJc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRPMGxCUTI1RExFTkJRVU03U1VGRlRTeFpRVUZaTEVOQlFVTXNVMEZCYjBJN1VVRkRjRU1zU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4WlFVRlpMRU5CUVVNc1UwRkJVeXhEUVVGRE8xRkJRM2hETEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1dVRkJXU3hEUVVGRExGTkJRVk1zUTBGQlF6dFJRVU40UXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVGRk8wbEJRMllzUTBGQlF6dEpRVVZFT3p0UFFVVkhPMGxCUTBrc1NVRkJTVHRSUVVOUUxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNaVUZCWlN4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zVjBGQlZ5eEZRVUZGTEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNN1VVRkROVVFzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRPMUZCUXpsQ0xFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNN1VVRkRka01zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4bFFVRmxMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eFhRVUZYTEVWQlFVVXNTVUZCU1N4RFFVRkRPMUZCUld4RUxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVTmtMRWxCUVVrc1EwRkJReXhsUVVGbExFTkJRVU1zUTBGQlF5eEZRVU4wUWl4SlFVRkpMRU5CUVVNc1pVRkJaU3hEUVVGRExFTkJRVU1zUlVGRGRFSXNTVUZCU1N4RFFVRkRMR1ZCUVdVc1EwRkJReXhEUVVGRExFVkJRM1JDTEVsQlFVa3NRMEZCUXl4bFFVRmxMRU5CUVVNc1EwRkJReXhEUVVONlFqdFJRVU5FTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU03VVVGRGRrTXNTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhKUVVGSkxFVkJRVVU3VVVGRGRrSXNTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhKUVVGSkxFVkJRVVU3U1VGRE0wSXNRMEZCUXp0SlFVVkVPenM3TzA5QlNVYzdTVUZEU1N4bFFVRmxMRU5CUVVNc1VVRkJhMEk3VVVGRGNrTXNUVUZCVFN4UlFVRlJMRWRCUVVjc1NVRkJTU3hEUVVGRExHRkJRV0VzUTBGQlF5eFJRVUZSTEVOQlFVTTdVVUZETjBNc1NVRkJTU3hSUVVGUkxFbEJRVWtzUTBGQlF5eEZRVUZGTzFsQlEyWXNTVUZCU1N4UlFVRlJMRWRCUVVjc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJUdG5Ra0ZEY0VJc2QwUkJRWGRFTzJkQ1FVTjRSQ3hOUVVGTkxFMUJRVTBzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMR1ZCUVdVc1EwRkJReXhSUVVGUkxFTkJRVU03WjBKQlEzcEVMRTlCUVU4c1RVRkJUVHRoUVVOb1FqdHBRa0ZCVFR0blFrRkRTQ3hOUVVGTkxFOUJRVThzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMR2RDUVVGblFpeERRVUZETEZGQlFWRXNRMEZCUXp0blFrRkRNMFFzVDBGQlR5eFBRVUZQTzJGQlEycENPMU5CUTBvN1NVRkRUQ3hEUVVGRE8wbEJSVVE3T3pzN1QwRkpSenRKUVVOSkxHRkJRV0VzUTBGQlF5eFJRVUZyUWp0UlFVTnVReXhOUVVGTkxFdEJRVXNzUjBGQlJ5eE5RVUZOTEVOQlFVTXNaMEpCUVdkQ0xFbEJRVWtzUTBGQlF6dFJRVU14UXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExHVkJRV1VzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMR2RDUVVGblFpeEZRVUZGTEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNN1VVRkRha1VzVFVGQlRTeGxRVUZsTEVkQlFVY3NTVUZCU1N4VlFVRlZMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVkQlFVY3NSVUZCUlN4SFFVRkhMRU5CUVVNc1EwRkJReXhGUVVGRExFdEJRVXM3VVVGRGJFVXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhWUVVGVk8xRkJRMlFzYVVWQlFXbEZPMUZCUTJwRkxGRkJRVkVzUTBGQlF5eERRVUZETEVkQlFVY3NTMEZCU3l4RlFVTnNRaXhSUVVGUkxFTkJRVU1zUTBGQlF5eEhRVUZITEV0QlFVc3NSVUZEYkVJc1EwRkJReXhGUVVORUxFTkJRVU1zUlVGRFJDeEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRWxCUVVrc1JVRkRXaXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEdGQlFXRXNSVUZEY2tJc1pVRkJaU3hEUVVOc1FqdFJRVU5FTEUxQlFVMHNVVUZCVVN4SFFVRkhMSE5DUVVGakxFTkJRVU1zWlVGQlpTeERRVUZETzFGQlJXaEVMRTlCUVU4c1VVRkJVVHRKUVVOdVFpeERRVUZETzBsQlJVUTdPMDlCUlVjN1NVRkRTeXhoUVVGaE8xRkJRMnBDTEUxQlFVMHNSVUZCUlN4SFFVRkhMRWxCUVVrc1EwRkJReXhGUVVGRk8xRkJRMnhDTEUxQlFVMHNWVUZCVlN4SFFVRkhMRTFCUVUwc1EwRkJReXhuUWtGQlowSXNTVUZCU1N4RFFVRkRPMUZCUXk5RExFMUJRVTBzVjBGQlZ5eEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1ZVRkJWVHRSUVVNelF5eE5RVUZOTEZsQlFWa3NSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExGVkJRVlU3VVVGRk4wTXNUVUZCVFN4SFFVRkhMRWRCUVVjc1JVRkJSU3hEUVVGRExHbENRVUZwUWl4RlFVRkZPMUZCUTJ4RExFVkJRVVVzUTBGQlF5eGxRVUZsTEVOQlFVTXNSVUZCUlN4RFFVRkRMRmRCUVZjc1JVRkJSU3hIUVVGSExFTkJRVU03VVVGRmRrTXNUVUZCVFN4VFFVRlRMRWRCUVVjc1JVRkJSU3hEUVVGRExHRkJRV0VzUlVGQlJUdFJRVU53UXl4RlFVRkZMRU5CUVVNc1YwRkJWeXhEUVVGRExFVkJRVVVzUTBGQlF5eFZRVUZWTEVWQlFVVXNVMEZCVXl4RFFVRkRPMUZCUTNoRExFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlExUXNSVUZCUlN4RFFVRkRMRlZCUVZVc1JVRkRZaXhEUVVGRExFVkJRMFFzUlVGQlJTeERRVUZETEVsQlFVa3NSVUZEVUN4WFFVRlhMRVZCUTFnc1dVRkJXU3hGUVVOYUxFTkJRVU1zUlVGRFJDeEZRVUZGTEVOQlFVTXNTVUZCU1N4RlFVTlFMRVZCUVVVc1EwRkJReXhoUVVGaExFVkJRMmhDTEVsQlFVa3NRMEZEVUR0UlFVTkVMRVZCUVVVc1EwRkJReXhoUVVGaExFTkJRVU1zUlVGQlJTeERRVUZETEZWQlFWVXNSVUZCUlN4RlFVRkZMRU5CUVVNc2EwSkJRV3RDTEVWQlFVVXNSVUZCUlN4RFFVRkRMRTFCUVUwc1EwRkJRenRSUVVOcVJTeEZRVUZGTEVOQlFVTXNZVUZCWVN4RFFVRkRMRVZCUVVVc1EwRkJReXhWUVVGVkxFVkJRVVVzUlVGQlJTeERRVUZETEd0Q1FVRnJRaXhGUVVGRkxFVkJRVVVzUTBGQlF5eE5RVUZOTEVOQlFVTTdVVUZEYWtVc1JVRkJSU3hEUVVGRExGZEJRVmNzUTBGQlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RlFVRkZMRWxCUVVrc1EwRkJRenRSUVVOdVF5eEZRVUZGTEVOQlFVTXNiMEpCUVc5Q0xFTkJRVU1zUlVGQlJTeERRVUZETEZkQlFWY3NSVUZCUlN4RlFVRkZMRU5CUVVNc2FVSkJRV2xDTEVWQlFVVXNSVUZCUlN4RFFVRkRMRlZCUVZVc1JVRkJSU3hUUVVGVExFVkJRVVVzUTBGQlF5eERRVUZETzFGQlJURkdMSE5DUVVGelFqdFJRVU4wUWl4RlFVRkZMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMR2xDUVVGcFFpeERRVUZETEVOQlFVTTdVVUZGZUVRc1RVRkJUU3hIUVVGSExFZEJRVWNzUlVGQlJTeERRVUZETEd0Q1FVRnJRaXhGUVVGRk8xRkJRMjVETEVWQlFVVXNRMEZCUXl4blFrRkJaMElzUTBGQlF5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RlFVRkZMRWRCUVVjc1EwRkJRenRSUVVONlF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXp0UlFVTjZRaXhGUVVGRkxFTkJRVU1zYlVKQlFXMUNMRU5CUVVNc1JVRkJSU3hEUVVGRExGbEJRVmtzUlVGQlJTeEZRVUZGTEVOQlFVTXNaMEpCUVdkQ0xFVkJRVVVzVjBGQlZ5eEZRVUZGTEZsQlFWa3NRMEZCUXp0UlFVTjJSaXhGUVVGRkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1JVRkJSU3hEUVVGRExGbEJRVmtzUlVGQlJTeEpRVUZKTEVOQlFVTTdVVUZETVVNc1JVRkJSU3hEUVVGRExIVkNRVUYxUWl4RFFVTjBRaXhGUVVGRkxFTkJRVU1zVjBGQlZ5eEZRVU5rTEVWQlFVVXNRMEZCUXl4M1FrRkJkMElzUlVGRE0wSXNSVUZCUlN4RFFVRkRMRmxCUVZrc1JVRkRaaXhIUVVGSExFTkJRMDQ3VVVGRlJDeEpRVUZKTEVWQlFVVXNRMEZCUXl4elFrRkJjMElzUTBGQlF5eEZRVUZGTEVOQlFVTXNWMEZCVnl4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRExHOUNRVUZ2UWl4RlFVRkZPMWxCUTNaRkxFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNOa0pCUVRaQ0xFTkJRVU03VTBGRGFrUTdVVUZGUkN4RlFVRkZMRU5CUVVNc1pVRkJaU3hEUVVGRExFVkJRVVVzUTBGQlF5eFhRVUZYTEVWQlFVVXNTVUZCU1N4RFFVRkRPMUZCUlhoRExFbEJRVWtzUTBGQlF5eFRRVUZUTEVkQlFVY3NSMEZCUnp0SlFVTjRRaXhEUVVGRE8wTkJRMG83UVVGcVRFUXNORUpCYVV4RE96czdPenM3T3pzN096czdPenRCUXk5TVJEczdPMGRCUjBjN096dEJRVWxJT3pzN096dEhRVXRITzBGQlEwZ3NVMEZCWjBJc1lVRkJZU3hEUVVONlFpeEZRVUV3UWl4RlFVTXhRaXhUUVVGcFFpeEZRVU5xUWl4VlFVRnJRanRKUVVWc1FpeE5RVUZOTEUxQlFVMHNSMEZCUnl4RlFVRkZMRU5CUVVNc1dVRkJXU3hEUVVGRExGVkJRVlVzUTBGQlF6dEpRVU14UXl4RlFVRkZMRU5CUVVNc1dVRkJXU3hEUVVGRExFMUJRVTBzUlVGQlJTeFRRVUZUTEVOQlFVTTdTVUZEYkVNc1JVRkJSU3hEUVVGRExHRkJRV0VzUTBGQlF5eE5RVUZOTEVOQlFVTTdTVUZEZUVJc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eHJRa0ZCYTBJc1EwRkJReXhOUVVGTkxFVkJRVVVzUlVGQlJTeERRVUZETEdOQlFXTXNRMEZCUXl4RlFVRkZPMUZCUTI1RUxFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNlVUpCUVhsQ0xFZEJRVWNzUlVGQlJTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzB0QlF6TkZPMGxCUlVRc1QwRkJUeXhOUVVGTk8wRkJRMnBDTEVOQlFVTTdRVUZpUkN4elEwRmhRenRCUVVWRU96czdPenM3UjBGTlJ6dEJRVU5JTEZOQlFXZENMR0ZCUVdFc1EwRkRla0lzUlVGQk1FSXNSVUZETVVJc1lVRkJjVUlzUlVGRGNrSXNZVUZCY1VJc1JVRkRja0lzVlVGQk5rTTdTVUZGTjBNc1RVRkJUU3hWUVVGVkxFZEJRVWNzWVVGQllTeERRVUZETEVWQlFVVXNSVUZCUlN4aFFVRmhMRVZCUVVVc1JVRkJSU3hEUVVGRExHRkJRV0VzUTBGQlF6dEpRVU55UlN4TlFVRk5MRlZCUVZVc1IwRkJSeXhoUVVGaExFTkJRVU1zUlVGQlJTeEZRVUZGTEdGQlFXRXNSVUZCUlN4RlFVRkZMRU5CUVVNc1pVRkJaU3hEUVVGRE8wbEJSWFpGTEUxQlFVMHNUMEZCVHl4SFFVRkhMRVZCUVVVc1EwRkJReXhoUVVGaExFVkJRVVU3U1VGRmJFTXNWVUZCVlN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFbEJRVWtzUlVGQlJTeEZRVUZGTzFGQlEzaENMRVZCUVVVc1EwRkJReXhyUWtGQmEwSXNRMEZCUXl4UFFVRlBMRVZCUVVVc1NVRkJTU3hEUVVGRExFdEJRVXNzUlVGQlJTeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRPMGxCUTNwRUxFTkJRVU1zUTBGQlF6dEpRVVZHTEVWQlFVVXNRMEZCUXl4WlFVRlpMRU5CUVVNc1QwRkJUeXhGUVVGRkxGVkJRVlVzUTBGQlF6dEpRVU53UXl4RlFVRkZMRU5CUVVNc1dVRkJXU3hEUVVGRExFOUJRVThzUlVGQlJTeFZRVUZWTEVOQlFVTTdTVUZGY0VNc1JVRkJSU3hEUVVGRExGZEJRVmNzUTBGQlF5eFBRVUZQTEVOQlFVTTdTVUZEZGtJc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eHRRa0ZCYlVJc1EwRkJReXhQUVVGUExFVkJRVVVzUlVGQlJTeERRVUZETEZkQlFWY3NRMEZCUXl4RlFVRkZPMUZCUTJ4RUxFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNNa0pCUVRKQ0xFVkJRVVVzUTBGQlF5eHBRa0ZCYVVJc1EwRkJReXhQUVVGUExFTkJRVU1zUlVGQlJTeERRVUZETzB0QlF6bEZPMGxCUlVRc1QwRkJUeXhQUVVGUE8wRkJRMnhDTEVOQlFVTTdRVUY0UWtRc2MwTkJkMEpETzBGQlJVUTdPenM3TzBkQlMwYzdRVUZEU0N4VFFVRm5RaXhwUWtGQmFVSXNRMEZCUXl4RlFVRXdRaXhGUVVGRkxFbEJRV3RDTzBsQlF6VkZMRTFCUVUwc1RVRkJUU3hIUVVGSExFVkJRVVVzUTBGQlF5eFpRVUZaTEVWQlFVVTdTVUZEYUVNc1JVRkJSU3hEUVVGRExGVkJRVlVzUTBGQlF5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RlFVRkZMRTFCUVUwc1EwRkJRenRKUVVOMFF5eEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRVZCUVVVc1EwRkJReXhaUVVGWkxFVkJRVVVzU1VGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUXl4WlFVRlpMRU5CUVVNN1NVRkRja1FzVDBGQlR5eE5RVUZOTzBGQlEycENMRU5CUVVNN1FVRk1SQ3c0UTBGTFF6dEJRVVZFT3pzN08wZEJTVWM3UVVGRFNDeFRRVUZuUWl3eVFrRkJNa0lzUTBGQlF5eFRRVUZwUWp0SlFVTjZSQ3hOUVVGTkxGTkJRVk1zUjBGQlJ5eFRRVUZUTEVOQlFVTXNTMEZCU3l4RFFVRkRMRlZCUVZVc1EwRkJRenRKUVVNM1F5eFBRVUZQTEZOQlFWTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhMUVVGTExFVkJRVVVzUzBGQlN5eEZRVUZGTEVWQlFVVTdVVUZEYkVNc1RVRkJUU3hKUVVGSkxFZEJRVWNzUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRE8xRkJRemRETEUxQlFVMHNTVUZCU1N4SFFVRkhMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMUZCUTJoRExFbEJRVWtzU1VGQlNTeEhRVUZITEVOQlFVTTdVVUZEV2l4SlFVRkpMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4TFFVRkxMRXRCUVVzc1JVRkJSVHRaUVVNMVFpeEpRVUZKTEVkQlFVY3NUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0VFFVTm9RenRSUVVORUxFbEJRVWtzVTBGQlV5eEhRVUZITEV0QlFVczdVVUZEY2tJc1NVRkJTU3hKUVVGSkxFdEJRVXNzWVVGQllTeEZRVUZGTzFsQlEzaENMRk5CUVZNc1IwRkJSeXhKUVVGSk8xTkJRMjVDTzFGQlEwUXNUMEZCVHp0WlFVTklMRWxCUVVrN1dVRkRTaXhKUVVGSk8xbEJRMG9zUzBGQlN6dFpRVU5NTEZOQlFWTTdVMEZEV2p0SlFVTk1MRU5CUVVNc1EwRkJRenRCUVVOT0xFTkJRVU03UVVGd1FrUXNhMFZCYjBKRE8wRkJSVVE3T3p0SFFVZEhPMEZCUTBnc1UwRkJaMElzWTBGQll5eERRVUZETEVWQlFWVTdTVUZEY2tNc2VVWkJRWGxHTzBsQlEzcEdMRTFCUVUwc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeEhRVUZITEVkQlFVY3NRMEZCUXl4SFFVRkhMRXRCUVVzN1NVRkROVUlzVFVGQlRTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEhRVUZITEVOQlFVTXNSMEZCUnl4TFFVRkxPMGxCUTI1RExFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4RlFVRkZMRWxCUVVrc1JVRkJSU3hEUVVGRExFZEJRVWNzUjBGQlJ5eERRVUZETEVkQlFVY3NTMEZCU3p0SlFVTndReXhOUVVGTkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNSVUZCUlN4SlFVRkpMRVZCUVVVc1EwRkJReXhIUVVGSExFZEJRVWNzUTBGQlF5eEhRVUZITEV0QlFVczdTVUZEY0VNc1QwRkJUeXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSVHRCUVVONlFpeERRVUZETzBGQlVFUXNkME5CVDBNN1FVRkZSRHM3TzBkQlIwYzdRVUZEU0N4VFFVRm5RaXhqUVVGakxFTkJRVU1zVVVGQmIwSTdTVUZETDBNc0swVkJRU3RGTzBsQlF5OUZMRTFCUVUwc1VVRkJVU3hIUVVGSExGRkJRVkVzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTXNSMEZCUnl4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTTdTVUZETjBZc1QwRkJUeXhSUVVGUk8wRkJRMjVDTEVOQlFVTTdRVUZLUkN4M1EwRkpRenM3T3pzN096czdPenM3T3pzN096dEJRekZJUkRzN096dEhRVWxITzBGQlEwZ3NVMEZCWjBJc1UwRkJVeXhEUVVGRExFdEJRV0U3U1VGRGJrTXNUMEZCVHl4TFFVRkxMRXRCUVVzc1UwRkJVeXhKUVVGSkxFOUJRVThzUzBGQlN5eExRVUZMTEZGQlFWRXNTVUZCU1N4TFFVRkxMRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU03UVVGREwwVXNRMEZCUXp0QlFVWkVMRGhDUVVWRE96czdPenM3T3pzN096czdPenRCUTFCRU96czdPenRIUVV0SE96dEJRVVZJTEUxQlFVMHNTVUZCU1N4SFFVRkhMRTFCUVUwc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF5eERRVUZETzBGQlEyNURMRTFCUVUwc1RVRkJUU3hIUVVGSExFTkJRVU1zU1VGQmJVSXNSVUZCUlN4RlFVRkZPMGxCUTI1RExFOUJRVThzUTBGRFNDeEpRVUZKTEZsQlFWa3NTMEZCU3p0UlFVTnlRaXhKUVVGSkxFTkJRVU1zVFVGQlRTeExRVUZMTEVOQlFVTTdVVUZEYWtJc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVkQlFVY3NSVUZCUlN4RlFVRkZMRU5CUVVNc1IwRkJSeXhMUVVGTExGTkJRVk1zU1VGQlNTeEhRVUZITEV0QlFVc3NTVUZCU1N4RFFVRkRMRU5CUTNwRU8wRkJRMHdzUTBGQlF6dEJRVU5FTEUxQlFVMHNTVUZCU1R0SlFVVk9MRmxCUVcxQ0xFOUJRVEpDTzFGQlJIUkRMRkZCUVVjc1IwRkJSeXhKUVVGSkxFZEJRVWNzUlVGQlJUdFJRVVZ1UWl4SlFVRkpMRTlCUVU4c1dVRkJXU3hMUVVGTExFVkJRVVU3V1VGRE1VSXNUMEZCVHl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFdEJRVXNzUlVGQlJTeEZRVUZGTzJkQ1FVTjBRaXhKUVVGSkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEV0QlFVc3NRMEZCUXl4SFFVRkhMRXRCUVVzN1owSkJRM2hDTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhGUVVGRkxFdEJRVXNzUTBGQlF6dFpRVU40UWl4RFFVRkRMRU5CUVVNN1UwRkRURHRKUVVOTUxFTkJRVU03U1VGRFJDeEpRVUZYTEVsQlFVazdVVUZEV0N4UFFVRlBMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zU1VGQlNUdEpRVU40UWl4RFFVRkRPMGxCUlUwc1RVRkJUU3hEUVVGRExFbEJRVzFDTzFGQlF6ZENMRWxCUVVrc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTzFsQlEyUXNUVUZCVFN4SFFVRkhMRWRCUVVjc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTTdXVUZETTBJc1RVRkJUU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEzSkRMRWxCUVVrc1IwRkJSeXhIUVVGSExFbEJRVWtzUTBGQlF5eEhRVUZITzFsQlEyeENMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zUjBGQlJ5eERRVUZETzFsQlEyWXNSMEZCUnl4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU03VTBGRGJrSTdTVUZEVEN4RFFVRkRPMGxCUlUwc1IwRkJSeXhEUVVGRExFbEJRVzFDTEVWQlFVVXNTMEZCVlR0UlFVTjBReXhKUVVGSkxFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlR0WlFVTmtMRTFCUVUwc1IwRkJSeXhIUVVGSExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRPMWxCUXpOQ0xFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTnlReXhKUVVGSkxFZEJRVWNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNSMEZCUnp0WlFVTnNRaXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSVHRuUWtGRGFFSXNSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFVkJRVVVzUzBGQlN5eERRVUZETzJGQlEzUkNPMmxDUVVGTk8yZENRVU5JTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVXNzUTBGQlF6dGhRVU4yUWp0VFFVTktPMUZCUTBRc1QwRkJUeXhKUVVGSk8wbEJRMllzUTBGQlF6dEpRVVZOTEVkQlFVY3NRMEZCUXl4SlFVRnRRanRSUVVNeFFpeEpRVUZKTEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSVHRaUVVOa0xFMUJRVTBzUjBGQlJ5eEhRVUZITEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRE8xbEJRek5DTEUxQlFVMHNTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVOeVF5eFBRVUZQTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eEpRVUZKTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF6dFRRVU5xUkR0aFFVRk5PMWxCUTBnc1QwRkJUeXhUUVVGVE8xTkJRMjVDTzBsQlEwd3NRMEZCUXp0SlFVVk5MRWRCUVVjc1EwRkJReXhKUVVGdFFqdFJRVU14UWl4SlFVRkpMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJUdFpRVU5rTEUxQlFVMHNSMEZCUnl4SFFVRkhMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETzFsQlF6TkNMRTFCUVUwc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU55UXl4UFFVRlBMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXp0VFFVTnFSRHRoUVVGTk8xbEJRMGdzVDBGQlR5eExRVUZMTzFOQlEyWTdTVUZEVEN4RFFVRkRPMGxCUlUwc1QwRkJUeXhEUVVGRExFbEJRV003VVVGRGVrSXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eExRVUZMTEVWQlFVVXNSMEZCUnl4RlFVRkZMRVZCUVVVN1dVRkROVUlzU1VGQlNTeEpRVUZKTEVkQlFVY3NSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU03V1VGRE1VSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1JVRkJSU3hKUVVGSkxFVkJRVVVzU1VGQlNTeERRVUZETzFGQlF6TkNMRU5CUVVNc1EwRkJRenRKUVVOT0xFTkJRVU03U1VGRlRTeFBRVUZQTzFGQlExWXNUMEZCVHl4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eFBRVUZQTEVWQlFVVXNRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFdEJRVXNzUlVGQlJTeEZRVUZGTzFsQlEzcERMRTFCUVUwc1IwRkJSeXhIUVVGSExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRE8xbEJRMmhETEUxQlFVMHNTMEZCU3l4SFFVRkhMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGRFSXNUMEZCVHl4RFFVRkRMRWRCUVVjc1JVRkJSU3hMUVVGTExFTkJRVU03VVVGRGRrSXNRMEZCUXl4RFFVRkRPMGxCUTA0c1EwRkJRenRKUVVWTkxFbEJRVWs3VVVGRFVDeEpRVUZKTEVsQlFVa3NSMEZCUnl4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0UlFVTXZRaXhQUVVGUExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1JVRkJSU3hEUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1NVRkROME1zUTBGQlF6dEpRVVZOTEUxQlFVMDdVVUZEVkN4UFFVRlBMRU5CUVVNc1IwRkJSeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRPMGxCUTJwRExFTkJRVU03UTBGRFNqdEJRVVZFTEd0Q1FVRmxMRWxCUVVrN096czdPenM3T3pzN096czdPMEZEYkVkdVFqczdPMGRCUjBjN096dEJRVWxJT3pzN096czdSMEZOUnp0QlFVTklMRk5CUVdkQ0xITkNRVUZ6UWl4RFFVTnNReXhMUVVGdFFpeEZRVU51UWl4SlFVRlpMRVZCUTFvc1QwRkJaU3hGUVVObUxFOUJRV1U3U1VGRlppeE5RVUZOTEZkQlFWY3NSMEZCYVVJc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8wbEJRMjVGTEUxQlFVMHNSVUZCUlN4SFFVRkhMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNTVUZCU1N4RlFVRkZMRVZCUVVVc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETzBsQlEyeEVMRTFCUVUwc1JVRkJSU3hIUVVGSExGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1NVRkJTU3hGUVVGRkxFVkJRVVVzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTJ4RUxFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU03U1VGRE5VSXNUVUZCVFN4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXp0SlFVTTFRaXhOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1JVRkJSU3hEUVVGRE8wbEJRelZDTEUxQlFVMHNTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTTdTVUZGTlVJc1RVRkJUU3hKUVVGSkxFZEJRVWNzUTBGQlF5eEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJRenRKUVVNNVFpeE5RVUZOTEVsQlFVa3NSMEZCUnl4RFFVRkRMRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETzBsQlJUbENMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTXNTVUZCU1N4RlFVRkZMRVZCUVVVN1VVRkRMMElzU1VGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVsQlFVa3NSMEZCUnl4UFFVRlBPMUZCUXpORUxFbEJRVWtzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVkQlFVY3NUMEZCVHp0SlFVTXZSQ3hEUVVGRExFTkJRVU03U1VGRlJpeFBRVUZQTEZkQlFWYzdRVUZEZEVJc1EwRkJRenRCUVhaQ1JDeDNSRUYxUWtNaUxDSm1hV3hsSWpvaVRtVjBWaTVxY3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpaG1kVzVqZEdsdmJpQjNaV0p3WVdOclZXNXBkbVZ5YzJGc1RXOWtkV3hsUkdWbWFXNXBkR2x2YmloeWIyOTBMQ0JtWVdOMGIzSjVLU0I3WEc1Y2RHbG1LSFI1Y0dWdlppQmxlSEJ2Y25SeklEMDlQU0FuYjJKcVpXTjBKeUFtSmlCMGVYQmxiMllnYlc5a2RXeGxJRDA5UFNBbmIySnFaV04wSnlsY2JseDBYSFJ0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1poWTNSdmNua29LVHRjYmx4MFpXeHpaU0JwWmloMGVYQmxiMllnWkdWbWFXNWxJRDA5UFNBblpuVnVZM1JwYjI0bklDWW1JR1JsWm1sdVpTNWhiV1FwWEc1Y2RGeDBaR1ZtYVc1bEtGdGRMQ0JtWVdOMGIzSjVLVHRjYmx4MFpXeHpaU0I3WEc1Y2RGeDBkbUZ5SUdFZ1BTQm1ZV04wYjNKNUtDazdYRzVjZEZ4MFptOXlLSFpoY2lCcElHbHVJR0VwSUNoMGVYQmxiMllnWlhod2IzSjBjeUE5UFQwZ0oyOWlhbVZqZENjZ1B5QmxlSEJ2Y25SeklEb2djbTl2ZENsYmFWMGdQU0JoVzJsZE8xeHVYSFI5WEc1OUtTaDNhVzVrYjNjc0lHWjFibU4wYVc5dUtDa2dlMXh1Y21WMGRYSnVJQ0lzSWlCY2RDOHZJRlJvWlNCdGIyUjFiR1VnWTJGamFHVmNiaUJjZEhaaGNpQnBibk4wWVd4c1pXUk5iMlIxYkdWeklEMGdlMzA3WEc1Y2JpQmNkQzh2SUZSb1pTQnlaWEYxYVhKbElHWjFibU4wYVc5dVhHNGdYSFJtZFc1amRHbHZiaUJmWDNkbFluQmhZMnRmY21WeGRXbHlaVjlmS0cxdlpIVnNaVWxrS1NCN1hHNWNiaUJjZEZ4MEx5OGdRMmhsWTJzZ2FXWWdiVzlrZFd4bElHbHpJR2x1SUdOaFkyaGxYRzRnWEhSY2RHbG1LR2x1YzNSaGJHeGxaRTF2WkhWc1pYTmJiVzlrZFd4bFNXUmRLU0I3WEc0Z1hIUmNkRngwY21WMGRYSnVJR2x1YzNSaGJHeGxaRTF2WkhWc1pYTmJiVzlrZFd4bFNXUmRMbVY0Y0c5eWRITTdYRzRnWEhSY2RIMWNiaUJjZEZ4MEx5OGdRM0psWVhSbElHRWdibVYzSUcxdlpIVnNaU0FvWVc1a0lIQjFkQ0JwZENCcGJuUnZJSFJvWlNCallXTm9aU2xjYmlCY2RGeDBkbUZ5SUcxdlpIVnNaU0E5SUdsdWMzUmhiR3hsWkUxdlpIVnNaWE5iYlc5a2RXeGxTV1JkSUQwZ2UxeHVJRngwWEhSY2RHazZJRzF2WkhWc1pVbGtMRnh1SUZ4MFhIUmNkR3c2SUdaaGJITmxMRnh1SUZ4MFhIUmNkR1Y0Y0c5eWRITTZJSHQ5WEc0Z1hIUmNkSDA3WEc1Y2JpQmNkRngwTHk4Z1JYaGxZM1YwWlNCMGFHVWdiVzlrZFd4bElHWjFibU4wYVc5dVhHNGdYSFJjZEcxdlpIVnNaWE5iYlc5a2RXeGxTV1JkTG1OaGJHd29iVzlrZFd4bExtVjRjRzl5ZEhNc0lHMXZaSFZzWlN3Z2JXOWtkV3hsTG1WNGNHOXlkSE1zSUY5ZmQyVmljR0ZqYTE5eVpYRjFhWEpsWDE4cE8xeHVYRzRnWEhSY2RDOHZJRVpzWVdjZ2RHaGxJRzF2WkhWc1pTQmhjeUJzYjJGa1pXUmNiaUJjZEZ4MGJXOWtkV3hsTG13Z1BTQjBjblZsTzF4dVhHNGdYSFJjZEM4dklGSmxkSFZ5YmlCMGFHVWdaWGh3YjNKMGN5QnZaaUIwYUdVZ2JXOWtkV3hsWEc0Z1hIUmNkSEpsZEhWeWJpQnRiMlIxYkdVdVpYaHdiM0owY3p0Y2JpQmNkSDFjYmx4dVhHNGdYSFF2THlCbGVIQnZjMlVnZEdobElHMXZaSFZzWlhNZ2IySnFaV04wSUNoZlgzZGxZbkJoWTJ0ZmJXOWtkV3hsYzE5ZktWeHVJRngwWDE5M1pXSndZV05yWDNKbGNYVnBjbVZmWHk1dElEMGdiVzlrZFd4bGN6dGNibHh1SUZ4MEx5OGdaWGh3YjNObElIUm9aU0J0YjJSMWJHVWdZMkZqYUdWY2JpQmNkRjlmZDJWaWNHRmphMTl5WlhGMWFYSmxYMTh1WXlBOUlHbHVjM1JoYkd4bFpFMXZaSFZzWlhNN1hHNWNiaUJjZEM4dklHUmxabWx1WlNCblpYUjBaWElnWm5WdVkzUnBiMjRnWm05eUlHaGhjbTF2Ym5rZ1pYaHdiM0owYzF4dUlGeDBYMTkzWldKd1lXTnJYM0psY1hWcGNtVmZYeTVrSUQwZ1puVnVZM1JwYjI0b1pYaHdiM0owY3l3Z2JtRnRaU3dnWjJWMGRHVnlLU0I3WEc0Z1hIUmNkR2xtS0NGZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5ZkxtOG9aWGh3YjNKMGN5d2dibUZ0WlNrcElIdGNiaUJjZEZ4MFhIUlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvWlhod2IzSjBjeXdnYm1GdFpTd2dleUJsYm5WdFpYSmhZbXhsT2lCMGNuVmxMQ0JuWlhRNklHZGxkSFJsY2lCOUtUdGNiaUJjZEZ4MGZWeHVJRngwZlR0Y2JseHVJRngwTHk4Z1pHVm1hVzVsSUY5ZlpYTk5iMlIxYkdVZ2IyNGdaWGh3YjNKMGMxeHVJRngwWDE5M1pXSndZV05yWDNKbGNYVnBjbVZmWHk1eUlEMGdablZ1WTNScGIyNG9aWGh3YjNKMGN5a2dlMXh1SUZ4MFhIUnBaaWgwZVhCbGIyWWdVM2x0WW05c0lDRTlQU0FuZFc1a1pXWnBibVZrSnlBbUppQlRlVzFpYjJ3dWRHOVRkSEpwYm1kVVlXY3BJSHRjYmlCY2RGeDBYSFJQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb1pYaHdiM0owY3l3Z1UzbHRZbTlzTG5SdlUzUnlhVzVuVkdGbkxDQjdJSFpoYkhWbE9pQW5UVzlrZFd4bEp5QjlLVHRjYmlCY2RGeDBmVnh1SUZ4MFhIUlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvWlhod2IzSjBjeXdnSjE5ZlpYTk5iMlIxYkdVbkxDQjdJSFpoYkhWbE9pQjBjblZsSUgwcE8xeHVJRngwZlR0Y2JseHVJRngwTHk4Z1kzSmxZWFJsSUdFZ1ptRnJaU0J1WVcxbGMzQmhZMlVnYjJKcVpXTjBYRzRnWEhRdkx5QnRiMlJsSUNZZ01Ub2dkbUZzZFdVZ2FYTWdZU0J0YjJSMWJHVWdhV1FzSUhKbGNYVnBjbVVnYVhSY2JpQmNkQzh2SUcxdlpHVWdKaUF5T2lCdFpYSm5aU0JoYkd3Z2NISnZjR1Z5ZEdsbGN5QnZaaUIyWVd4MVpTQnBiblJ2SUhSb1pTQnVjMXh1SUZ4MEx5OGdiVzlrWlNBbUlEUTZJSEpsZEhWeWJpQjJZV3gxWlNCM2FHVnVJR0ZzY21WaFpIa2dibk1nYjJKcVpXTjBYRzRnWEhRdkx5QnRiMlJsSUNZZ09Id3hPaUJpWldoaGRtVWdiR2xyWlNCeVpYRjFhWEpsWEc0Z1hIUmZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZMblFnUFNCbWRXNWpkR2x2YmloMllXeDFaU3dnYlc5a1pTa2dlMXh1SUZ4MFhIUnBaaWh0YjJSbElDWWdNU2tnZG1Gc2RXVWdQU0JmWDNkbFluQmhZMnRmY21WeGRXbHlaVjlmS0haaGJIVmxLVHRjYmlCY2RGeDBhV1lvYlc5a1pTQW1JRGdwSUhKbGRIVnliaUIyWVd4MVpUdGNiaUJjZEZ4MGFXWW9LRzF2WkdVZ0ppQTBLU0FtSmlCMGVYQmxiMllnZG1Gc2RXVWdQVDA5SUNkdlltcGxZM1FuSUNZbUlIWmhiSFZsSUNZbUlIWmhiSFZsTGw5ZlpYTk5iMlIxYkdVcElISmxkSFZ5YmlCMllXeDFaVHRjYmlCY2RGeDBkbUZ5SUc1eklEMGdUMkpxWldOMExtTnlaV0YwWlNodWRXeHNLVHRjYmlCY2RGeDBYMTkzWldKd1lXTnJYM0psY1hWcGNtVmZYeTV5S0c1ektUdGNiaUJjZEZ4MFQySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLRzV6TENBblpHVm1ZWFZzZENjc0lIc2daVzUxYldWeVlXSnNaVG9nZEhKMVpTd2dkbUZzZFdVNklIWmhiSFZsSUgwcE8xeHVJRngwWEhScFppaHRiMlJsSUNZZ01pQW1KaUIwZVhCbGIyWWdkbUZzZFdVZ0lUMGdKM04wY21sdVp5Y3BJR1p2Y2loMllYSWdhMlY1SUdsdUlIWmhiSFZsS1NCZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5ZkxtUW9ibk1zSUd0bGVTd2dablZ1WTNScGIyNG9hMlY1S1NCN0lISmxkSFZ5YmlCMllXeDFaVnRyWlhsZE95QjlMbUpwYm1Rb2JuVnNiQ3dnYTJWNUtTazdYRzRnWEhSY2RISmxkSFZ5YmlCdWN6dGNiaUJjZEgwN1hHNWNiaUJjZEM4dklHZGxkRVJsWm1GMWJIUkZlSEJ2Y25RZ1puVnVZM1JwYjI0Z1ptOXlJR052YlhCaGRHbGlhV3hwZEhrZ2QybDBhQ0J1YjI0dGFHRnliVzl1ZVNCdGIyUjFiR1Z6WEc0Z1hIUmZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZMbTRnUFNCbWRXNWpkR2x2YmlodGIyUjFiR1VwSUh0Y2JpQmNkRngwZG1GeUlHZGxkSFJsY2lBOUlHMXZaSFZzWlNBbUppQnRiMlIxYkdVdVgxOWxjMDF2WkhWc1pTQS9YRzRnWEhSY2RGeDBablZ1WTNScGIyNGdaMlYwUkdWbVlYVnNkQ2dwSUhzZ2NtVjBkWEp1SUcxdlpIVnNaVnNuWkdWbVlYVnNkQ2RkT3lCOUlEcGNiaUJjZEZ4MFhIUm1kVzVqZEdsdmJpQm5aWFJOYjJSMWJHVkZlSEJ2Y25SektDa2dleUJ5WlhSMWNtNGdiVzlrZFd4bE95QjlPMXh1SUZ4MFhIUmZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZMbVFvWjJWMGRHVnlMQ0FuWVNjc0lHZGxkSFJsY2lrN1hHNGdYSFJjZEhKbGRIVnliaUJuWlhSMFpYSTdYRzRnWEhSOU8xeHVYRzRnWEhRdkx5QlBZbXBsWTNRdWNISnZkRzkwZVhCbExtaGhjMDkzYmxCeWIzQmxjblI1TG1OaGJHeGNiaUJjZEY5ZmQyVmljR0ZqYTE5eVpYRjFhWEpsWDE4dWJ5QTlJR1oxYm1OMGFXOXVLRzlpYW1WamRDd2djSEp2Y0dWeWRIa3BJSHNnY21WMGRYSnVJRTlpYW1WamRDNXdjbTkwYjNSNWNHVXVhR0Z6VDNkdVVISnZjR1Z5ZEhrdVkyRnNiQ2h2WW1wbFkzUXNJSEJ5YjNCbGNuUjVLVHNnZlR0Y2JseHVJRngwTHk4Z1gxOTNaV0p3WVdOclgzQjFZbXhwWTE5d1lYUm9YMTljYmlCY2RGOWZkMlZpY0dGamExOXlaWEYxYVhKbFgxOHVjQ0E5SUZ3aVhDSTdYRzVjYmx4dUlGeDBMeThnVEc5aFpDQmxiblJ5ZVNCdGIyUjFiR1VnWVc1a0lISmxkSFZ5YmlCbGVIQnZjblJ6WEc0Z1hIUnlaWFIxY200Z1gxOTNaV0p3WVdOclgzSmxjWFZwY21WZlh5aGZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZMbk1nUFNCY0lpNHZjM0pqTDJsdVpHVjRMblJ6WENJcE8xeHVJaXdpTHlvcVhHNGdLaUJBWkdWelkzSnBjSFJwYjI0Z1pHVm1ZWFZzZENCamIyNW1hV2QxY21GMGFXOXVjeUJwYmlCT1pYUldYRzRnS2lCQVlYVjBhRzl5SUZocFlXOWtiMjVuSUZwb1lXOGdQSHBvWVc5NGFXRnZaRzl1WjBCNmFuVXVaV1IxTG1OdVBseHVJQ292WEc1Y2JtbHRjRzl5ZENCT2IyUmxJR1p5YjIwZ0p5NHZibTlrWlNkY2JtbHRjRzl5ZENCTWFXNXJJR1p5YjIwZ0p5NHZiR2x1YXlkY2JseHVaWGh3YjNKMElHTnZibk4wSUhkcFpIUm9JRDBnT0RBd1hHNWxlSEJ2Y25RZ1kyOXVjM1FnYUdWcFoyaDBJRDBnTmpBd1hHNWxlSEJ2Y25RZ1kyOXVjM1FnWW1GamEyZHliM1Z1WkVOdmJHOXlJRDBnZXlCeU9pQXhMQ0JuT2lBeExDQmlPaUF4TENCaE9pQXhJSDFjYm1WNGNHOXlkQ0JqYjI1emRDQmxibUZpYkdWUVlXNWFiMjl0SUQwZ2RISjFaVnh1Wlhod2IzSjBJR052Ym5OMElHNXZaR1ZNYVcxcGRDQTlJREV3TUZ4dVpYaHdiM0owSUdOdmJuTjBJR3hwYm10TWFXMXBkQ0E5SURFd01EQmNibVY0Y0c5eWRDQmpiMjV6ZENCc1lYcDVUR2x1YTFWd1pHRjBaVlJvY21WemFHOXNaQ0E5SURFd01GeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ2JtOWtaU0E5SUh0Y2JpQWdJQ0J5T2lBMUxGeHVJQ0FnSUdacGJHdzZJSHNnY2pvZ01DNHlMQ0JuT2lBd0xqWXNJR0k2SURBdU1pd2dZVG9nTUM0NElIMHNYRzRnSUNBZ0x5OGdjM1J5YjJ0bFEyOXNiM0k2SUhzZ2Nqb2dNQzQyTENCbk9pQXdMallzSUdJNklEQXVOaXdnWVRvZ01DNDFJSDBzWEc0Z0lDQWdjM1J5YjJ0bFEyOXNiM0k2SUhzZ2Nqb2dNQzQ1TENCbk9pQXdMamtzSUdJNklEQXVPU3dnWVRvZ01DNDJJSDBzWEc0Z0lDQWdjM1J5YjJ0bFYybGtkR2c2SURJc1hHNGdJQ0FnYzJodmQweGhZbVZzT2lCbVlXeHpaU3hjYmlBZ0lDQXZMeUIwWlhoMFQyWm1jMlYwT2lCN0lIZzZJRGdzSUhrNklEQWdmU3dnY0hWMElHbHVJR3hoWW1Wc0lHTnZibVpwWnlCcGJuTjBaV0ZrSUc5bUlHVmhZMmdnYm05a1pWeHVJQ0FnSUdOc2FXTnJRMkZzYkdKaFkyczZJQ2h1YjJSbE9pQk9iMlJsS1NBOVBpQjdmU3hjYmlBZ0lDQm9iM1psY2tOaGJHeGlZV05yT2lBb2JtOWtaVG9nVG05a1pTa2dQVDRnZTMxY2JuMWNibHh1Wlhod2IzSjBJR052Ym5OMElHeHBibXNnUFNCN1hHNGdJQ0FnTHk4Z2MzUnliMnRsUTI5c2IzSTZJSHNnY2pvZ01DNDFMQ0JuT2lBd0xqVXNJR0k2SURBdU5Td2dZVG9nTUM0eUlIMHNYRzRnSUNBZ2MzUnliMnRsUTI5c2IzSTZJSHNnY2pvZ01DNDBMQ0JuT2lBd0xqWXNJR0k2SURBdU9Dd2dZVG9nTUM0MUlIMHNYRzRnSUNBZ2MzUnliMnRsVjJsa2RHZzZJRElzWEc0Z0lDQWdZMnhwWTJ0RFlXeHNZbUZqYXpvZ0tHeHBibXM2SUV4cGJtc3BJRDArSUh0OUxGeHVJQ0FnSUdodmRtVnlRMkZzYkdKaFkyczZJQ2h1YjJSbE9pQk9iMlJsS1NBOVBpQjdmVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnYkdGaVpXd2dQU0I3WEc0Z0lDQWdiMlptYzJWME9pQjdJSGc2SURnc0lIazZJREFnZlN4Y2JpQWdJQ0JtYjI1MFUybDZaVG9nTVRnc1hHNGdJQ0FnYzNSeWIydGxWMmxrZEdnNklEQXVOVnh1ZlZ4dUlpd2lMeW9xWEc0Z0tpQkFZWFYwYUc5eUlGaHBZVzlrYjI1bklGcG9ZVzhnUEhwb1lXOTRhV0Z2Wkc5dVowQjZhblV1WldSMUxtTnVQbHh1SUNvZ1FHUmxjMk55YVhCMGFXOXVJR0oxYVd4a0xXbHVJR1JoZEdGelpYUWdhVzRnVG1WMFZseHVJQ292WEc1Y2JtbHRjRzl5ZENCN0lHMXBjMlZ5WVdKc1pYTWdmU0JtY205dElDY3VMMjFwYzJWeVlXSnNaWE1uWEc1cGJYQnZjblFnZXlCd1lYUmxiblJ6SUgwZ1puSnZiU0FuTGk5d1lYUmxiblJ6SjF4dVhHNWxlSEJ2Y25RZ2V5QnRhWE5sY21GaWJHVnpMQ0J3WVhSbGJuUnpJSDFjYmlJc0lpOHFLbHh1SUNvZ1FHRjFkR2h2Y2lCWWFXRnZaRzl1WnlCYWFHRnZJRHg2YUdGdmVHbGhiMlJ2Ym1kQWVtcDFMbVZrZFM1amJqNWNiaUFxSUVCa1pYTmpjbWx3ZEdsdmJpQk1aWE1nVFdselpYSmhZbXhsY3lCeVpXeGhkR2x2YmlCa1lYUmhjMlYwTGx4dUlDb3ZYRzVjYmk4cUtseHVJQ29nUUdSbGMyTnlhWEIwYVc5dUlHZGxibVZ5WVhSbFpDQmllU0JrTXkxbWIzSmpaVG9nYUhSMGNITTZMeTl2WW5ObGNuWmhZbXhsYUhFdVkyOXRMMEJrTXk5bWIzSmpaUzFrYVhKbFkzUmxaQzFuY21Gd2FGeHVJQ292WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0J0YVhObGNtRmliR1Z6SUQwZ2UxeHVJQ0FnSUc1dlpHVnpPaUJiWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2ROZVhKcFpXd25MQ0I0T2lBeU9UTXVORGN4TkRVeE1UYzFOVE0yTWpNc0lIazZJRE0xTmk0ME16TTFOekU0TVRBME1UTTRMQ0JuY205MWNEb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuVG1Gd2IyeGxiMjRuTENCNE9pQXlOVE11T1RBeU5UQTRPRFl4T0RZMU5pd2dlVG9nTXpjMExqTXdOVGd4TVRZMU16WTBORFVzSUdkeWIzVndPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2dhV1E2SUNkTmJHeGxMa0poY0hScGMzUnBibVVuTENCNE9pQXpOVEF1T1RJM01qUTVPRGs1TVRnd056Y3NJSGs2SURNek1pNHpNekkxTlRNNU9UazVPVFF6TENCbmNtOTFjRG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblRXMWxMazFoWjJ4dmFYSmxKeXdnZURvZ016VTJMakE1TVRZeE5UWTFNems1T1Rjc0lIazZJRE0xTWk0M09EZzFOems1TVRFMk1ERTFMQ0JuY205MWNEb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuUTI5MWJuUmxjM05rWlV4dkp5d2dlRG9nTWpVMExqSTVNamt4TlRJd09UZzVNek0xTENCNU9pQXpOVGN1TXpFM05UY3pOREEzTmpReE55d2daM0p2ZFhBNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCcFpEb2dKMGRsWW05eVlXNWtKeXdnZURvZ01qVTNMamcxTnpJNU16WXlOakl3TVN3Z2VUb2dNek0xTGpnMU5ESTNOakk0TXpVNE9UVTNMQ0JuY205MWNEb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuUTJoaGJYQjBaWEpqYVdWeUp5d2dlRG9nTWpVNUxqWXlOVFUxTmpNNE1qVXdNamdzSUhrNklETTRNeTQ0TXpBeU56UTJPVGd6TWpneE5Dd2daM0p2ZFhBNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCcFpEb2dKME55WVhaaGRIUmxKeXdnZURvZ01qUTVMamcxT1RZME5UazRNamt4TXprc0lIazZJRE0wTmk0eE9ESXlOVFV4Tmpnek1qUTVOaXdnWjNKdmRYQTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnBaRG9nSjBOdmRXNTBKeXdnZURvZ01qWTVMamsyTnprek9UVXhNelV3T1RJMExDQjVPaUF6T1RBdU5qZ3dNRGcwTWpNeU1UVTNNU3dnWjNKdmRYQTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnBaRG9nSjA5c1pFMWhiaWNzSUhnNklESTBOaTQzTXprMU1qTXhNVEkzTnpZMk5Td2dlVG9nTXpZMExqVTVNelUzTkRrME5ETXlNRFkyTENCbmNtOTFjRG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblRHRmlZWEp5WlNjc0lIZzZJRFEwTXk0MU1UWTFPRE16TVRVd01qWXNJSGs2SURNMU9DNHlPVEl3TkRjNE9UUTNOelk0TXl3Z1ozSnZkWEE2SURJZ2ZTeGNiaUFnSUNBZ0lDQWdleUJwWkRvZ0oxWmhiR3BsWVc0bkxDQjRPaUEwTkRJdU1UWTRPVFEzTlRjMk5ERTFNRFlzSUhrNklETXlNQzQ0TXpFMU5UTXlNVFl3T0RZeExDQm5jbTkxY0RvZ01pQjlMRnh1SUNBZ0lDQWdJQ0I3SUdsa09pQW5UV0Z5WjNWbGNtbDBaU2NzSUhnNklEUXhNeTR6T0RFMk9EVXhNREEzT1RNeExDQjVPaUF5TkRBdU1EUXdPVEUxTlRreU9UWTFNRFFzSUdkeWIzVndPaUF6SUgwc1hHNGdJQ0FnSUNBZ0lIc2dhV1E2SUNkTmJXVXVaR1ZTSnl3Z2VEb2dOREkzTGpJek5qRTNNVFU1TlRBeU5UUXNJSGs2SURNMU5TNHhNREl4TVRVNE9UazNPVFV4TkN3Z1ozSnZkWEE2SURJZ2ZTeGNiaUFnSUNBZ0lDQWdleUJwWkRvZ0owbHpZV0psWVhVbkxDQjRPaUEwTURVdU9EVXdPREk0TlRneE9URTRNelFzSUhrNklETXpNQzQxTWpBeE5URXlNakExTURnMUxDQm5jbTkxY0RvZ01pQjlMRnh1SUNBZ0lDQWdJQ0I3SUdsa09pQW5SMlZ5ZG1GcGN5Y3NJSGc2SURRd05TNHlNVEV6TVRJeE9UQTJPRGd4TENCNU9pQXpNVFl1TWpreE1qVXpOVGt6T1RZeE16WXNJR2R5YjNWd09pQXlJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2RVYUc5c2IyMTVaWE1uTENCNE9pQTBNakl1TkRFeU5UTXdOemM0TVRZME5pd2dlVG9nTVRJMkxqQTNOalE1TkRRNU56YzFPREEyTENCbmNtOTFjRG9nTXlCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblRHbHpkRzlzYVdWeUp5d2dlRG9nTXpZekxqRTNNamswTWpJMk56YzVOemtzSUhrNklERXdNaTQzTnpnNU1ETTJPREk0T1RjNE5Td2daM0p2ZFhBNklETWdmU3hjYmlBZ0lDQWdJQ0FnZXlCcFpEb2dKMFpoYldWMWFXd25MQ0I0T2lBek9ERXVOemswTnpFd016QTVOREF5T0N3Z2VUb2dOall1TlRneE16TTNNalF3TkRNNU5EZ3NJR2R5YjNWd09pQXpJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2RDYkdGamFHVjJhV3hzWlNjc0lIZzZJRE00TXk0eE56a3lOamMyTnpRd01qWXhMQ0I1T2lBNU5DNDRNRE15TURNeE5UVXdNREUxTkN3Z1ozSnZkWEE2SURNZ2ZTeGNiaUFnSUNBZ0lDQWdleUJwWkRvZ0owWmhkbTkxY21sMFpTY3NJSGc2SURNMk1TNDRPVE0zTXpFMk5EUXlPRFVzSUhrNklEY3dMak00TmprMk16Z3hNemcwTURjMExDQm5jbTkxY0RvZ015QjlMRnh1SUNBZ0lDQWdJQ0I3SUdsa09pQW5SR0ZvYkdsaEp5d2dlRG9nTXprNExqYzFNelV3T1RnNE16VXhOalV6TENCNU9pQTNOeTR3T1Rjd01EYzFNVFV5TnpFeE9Td2daM0p2ZFhBNklETWdmU3hjYmlBZ0lDQWdJQ0FnZXlCcFpEb2dKMXBsY0docGJtVW5MQ0I0T2lBek5Ea3VNRFE1TlRreE5EWXdNVE0zTml3Z2VUb2dPRGd1T0RBNE9EZzJNVE16TnpJM01UTXNJR2R5YjNWd09pQXpJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2RHWVc1MGFXNWxKeXdnZURvZ016azRMakF4TkRFeE5ETTROekF5TkRjekxDQjVPaUF4TnpNdU56WTBORFF4T1RZNU5EVTVOemNzSUdkeWIzVndPaUF6SUgwc1hHNGdJQ0FnSUNBZ0lIc2dhV1E2SUNkTmJXVXVWR2hsYm1GeVpHbGxjaWNzSUhnNklEUTNNUzR5TlRFMk5UTXpNemcyTnpJMUxDQjVPaUF5TmpJdU1qRTROekF4TmpZMk5qUTFMQ0JuY205MWNEb2dOQ0I5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuVkdobGJtRnlaR2xsY2ljc0lIZzZJRFV3TkM0NE1UWTNNakE0TlRZd016QTJOaXdnZVRvZ01qZ3pMakEwTmpNNE9UQXdORGd4TnpJekxDQm5jbTkxY0RvZ05DQjlMRnh1SUNBZ0lDQWdJQ0I3SUdsa09pQW5RMjl6WlhSMFpTY3NJSGc2SURRM01pNHpNelEyT1RReE5EZzNNVGt5TENCNU9pQXlNamd1TmpnM056azBORE16TURNME56Z3NJR2R5YjNWd09pQTFJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2RLWVhabGNuUW5MQ0I0T2lBME5qQXVNRFV5TlRjMk9Ea3pNekk0TXpZc0lIazZJREk1TlM0MU5UYzRNVFUwTWpZNE9UQTBMQ0JuY205MWNEb2dOQ0I5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuUm1GMVkyaGxiR1YyWlc1MEp5d2dlRG9nTXpnMUxqUXpPVE0xTnpZME5UZzVPVGcyTENCNU9pQXpNREl1TVRJNE1qUTFPRGcyTWpJNE5UY3NJR2R5YjNWd09pQXdJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2RDWVcxaGRHRmliMmx6Snl3Z2VEb2dNemt6TGpFNU1EUXhOVGt3TXpnek5UazNMQ0I1T2lBek5EVXVORGszTVRZMk56WTVNRGd4Tnl3Z1ozSnZkWEE2SURJZ2ZTeGNiaUFnSUNBZ0lDQWdleUJwWkRvZ0oxQmxjbkJsZEhWbEp5d2dlRG9nTXpZM0xqVXpPRE16TVRNeU9Ea3pPVGMyTENCNU9pQXhPVFF1TlRVMU5qUTRNak13TmpJM01Td2daM0p2ZFhBNklETWdmU3hjYmlBZ0lDQWdJQ0FnZXlCcFpEb2dKMU5wYlhCc2FXTmxKeXdnZURvZ05EQXhMak0yTWpJeU5USXpOVFEyTlRVc0lIazZJREkwTWk0NU9UZ3lPRFEzT1RrME5UYzJMQ0JuY205MWNEb2dNaUI5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuVTJOaGRXWm1iR0ZwY21VbkxDQjRPaUEwTVRRdU5qY3dOekkzT1RrMk1qYzFOek1zSUhrNklETTBOQzR3TlRRM056SXdPVFExTnpNMkxDQm5jbTkxY0RvZ01pQjlMRnh1SUNBZ0lDQWdJQ0I3SUdsa09pQW5WMjl0WVc0eEp5d2dlRG9nTkRJeExqUXhOamMwTVRRek9USTBNallzSUhrNklESTVNeTR6TVRFeU1ESXhPVEV5T1RNNU5Dd2daM0p2ZFhBNklESWdmU3hjYmlBZ0lDQWdJQ0FnZXlCcFpEb2dKMHAxWkdkbEp5d2dlRG9nTkRJd0xqQTBNemt5TURBM09EUXhNek0xTENCNU9pQTBNREV1TURNeU16TTJNRGt4TlRJM05EUXNJR2R5YjNWd09pQXlJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2REYUdGdGNHMWhkR2hwWlhVbkxDQjRPaUF6TnpjdU56azFNalF5TlRRMk1qRTRNek1zSUhrNklETTRNeTQ0TVRBMU56ZzNNVEUxTVRBeUxDQm5jbTkxY0RvZ01pQjlMRnh1SUNBZ0lDQWdJQ0I3SUdsa09pQW5RbkpsZG1WMEp5d2dlRG9nTkRBeExqazFNams0TkRRME5qazVPVElzSUhrNklETTRPQzQ0TmpnME56Z3lPVGczTkRFeExDQm5jbTkxY0RvZ01pQjlMRnh1SUNBZ0lDQWdJQ0I3SUdsa09pQW5RMmhsYm1sc1pHbGxkU2NzSUhnNklEUXdNQzQyTmpnMU56QTNNVE16TlRNNExDQjVPaUEwTVRNdU5EazBNVGMzT1RBMU1qTTBOallzSUdkeWIzVndPaUF5SUgwc1hHNGdJQ0FnSUNBZ0lIc2dhV1E2SUNkRGIyTm9aWEJoYVd4c1pTY3NJSGc2SURNM09TNHdORGsyT1Rjd05EUTJNak0xTkN3Z2VUb2dOREEwTGpJMk9UYzBNRFU1TWpNek1UWXpMQ0JuY205MWNEb2dNaUI5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuVUc5dWRHMWxjbU41Snl3Z2VEb2dOVFV6TGpFeE16YzBNREUzTlRBeE9UZ3NJSGs2SURJME5DNDVNamd6TURBeU56TTJNRGMyTlN3Z1ozSnZkWEE2SURRZ2ZTeGNiaUFnSUNBZ0lDQWdleUJwWkRvZ0owSnZkV3hoZEhKMVpXeHNaU2NzSUhnNklEUTVNQzR4TlRjeE1EZzJNRGcyT1RNeUxDQjVPaUF5TkRrdU1qRXdNVGt5TXpnek5UZ3dNeXdnWjNKdmRYQTZJRFlnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnBaRG9nSjBWd2IyNXBibVVuTENCNE9pQTFORGt1TnpVNE5ESTJOelUzTVRnNU1pd2dlVG9nTXpBeUxqa3dNekV3TmpVeU1qZzBNekVzSUdkeWIzVndPaUEwSUgwc1hHNGdJQ0FnSUNBZ0lIc2dhV1E2SUNkQmJucGxiRzFoSnl3Z2VEb2dOVEUxTGpNNE1EY3pPVGt6T1RVeE16UXNJSGs2SURJMU55NHdNVGM1TmpnNE9UZ3pPVEV4TENCbmNtOTFjRG9nTkNCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblYyOXRZVzR5Snl3Z2VEb2dORE16TGpZMk1EZzJOalV6TkRBMU1UUXNJSGs2SURJMk5TNDRNVGMwTmpjek9EZzJOak0wTENCbmNtOTFjRG9nTlNCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblRXOTBhR1Z5U1c1dWIyTmxiblFuTENCNE9pQTBNRE11TURJMU16WXlOVGMwTVRZMU1qTXNJSGs2SURJNE9TNHdNek14TWpJd01ERXlNVE15Tml3Z1ozSnZkWEE2SURBZ2ZTeGNiaUFnSUNBZ0lDQWdleUJwWkRvZ0owZHlhV0pwWlhJbkxDQjRPaUF6TkRFdU9EQTVOek15TWpjME5UWTNOelVzSUhrNklESTVOQzR5TVRJek9UWXhORGd3TWpNc0lHZHliM1Z3T2lBd0lIMHNYRzRnSUNBZ0lDQWdJSHNnYVdRNklDZEtiMjVrY21WMGRHVW5MQ0I0T2lBMU5qVXVNVGsyTlRNd016UXlNakU0Tml3Z2VUb2dORGN3TGpZMU9UVXdNelE1TXpjMU9EVTJMQ0JuY205MWNEb2dOeUI5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuVFcxbExrSjFjbWR2Ymljc0lIZzZJRFUyT1M0eE9EazJNalk1TWpReU1UQXhMQ0I1T2lBME1qWXVOall4T0RVd05UTTRNalExTmpNc0lHZHliM1Z3T2lBM0lIMHNYRzRnSUNBZ0lDQWdJSHNnYVdRNklDZEhZWFp5YjJOb1pTY3NJSGc2SURVM01pNHhOakU1TXprek9UTTJPREkyTENCNU9pQXpOalF1TWpJMk1EWTNOalkwT1RjMU5qTXNJR2R5YjNWd09pQTRJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2RIYVd4c1pXNXZjbTFoYm1RbkxDQjRPaUExTWpRdU5Ua3hORFV3TlRJd09EQXdOU3dnZVRvZ01qVTNMalF3TVRJeU1UUTRNamd6TXpZc0lHZHliM1Z3T2lBMUlIMHNYRzRnSUNBZ0lDQWdJSHNnYVdRNklDZE5ZV2R1YjI0bkxDQjRPaUEwT1RJdU5UUTRNemt6TWpBeU16UXhMQ0I1T2lBeU1qSXVOVGsyTmpNMU1UTXlPRGc0TlN3Z1ozSnZkWEE2SURVZ2ZTeGNiaUFnSUNBZ0lDQWdleUJwWkRvZ0owMXNiR1V1UjJsc2JHVnViM0p0WVc1a0p5d2dlRG9nTlRFMExqTTJPVEkyTlRVd01qTTJORFFzSUhrNklESXlPUzR3T1RZM01EQTJNak00T1RJNE1Td2daM0p2ZFhBNklEVWdmU3hjYmlBZ0lDQWdJQ0FnZXlCcFpEb2dKMDF0WlM1UWIyNTBiV1Z5WTNrbkxDQjRPaUExTkRrdU16STFNRFV3T0RFM01UUTNOQ3dnZVRvZ01UazJMakUwTURVMk9ETXpNRGcwT1RNMkxDQm5jbTkxY0RvZ05TQjlMRnh1SUNBZ0lDQWdJQ0I3SUdsa09pQW5UV3hzWlM1V1lYVmliMmx6Snl3Z2VEb2dOVEUzTGpnMU9UTTFOekl6T1RRd056RXNJSGs2SURFNE5pNHlORGc0TXpBNU1URXhOVFkxTENCbmNtOTFjRG9nTlNCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblRIUXVSMmxzYkdWdWIzSnRZVzVrSnl3Z2VEb2dOVFF6TGpJM05EazJNVEV6T1RRMU5Td2dlVG9nTWpJekxqWTRNVGcwTWpnMU1UZ3dPVGMyTENCbmNtOTFjRG9nTlNCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblRXRnlhWFZ6Snl3Z2VEb2dOVGMwTGpJMU56WTJPVGt3TlRZeE16a3NJSGs2SURJNE15NDROVEl4TVRjd09ETXhNRE16TkN3Z1ozSnZkWEE2SURnZ2ZTeGNiaUFnSUNBZ0lDQWdleUJwWkRvZ0owSmhjbTl1WlhOelZDY3NJSGc2SURVM015NDNNVFF3T1RBNU5qVXdOakkxTENCNU9pQXlORFV1TlRrek1URTVNRGt5TkRVNE1UZ3NJR2R5YjNWd09pQTFJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2ROWVdKbGRXWW5MQ0I0T2lBMk1qZ3VOVFF6TWpVek1qUTROakU1TVN3Z2VUb2dNekUwTGpJeU1EYzROREE0TmpJM01UWTBMQ0JuY205MWNEb2dPQ0I5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuUlc1cWIyeHlZWE1uTENCNE9pQTFPRGd1TWpNNU5UUTVPREE1TXpZeU5pd2dlVG9nTXpReUxqQTFPVFEwTmprNU1qTXlOemtzSUdkeWIzVndPaUE0SUgwc1hHNGdJQ0FnSUNBZ0lIc2dhV1E2SUNkRGIyMWlaV1psY25KbEp5d2dlRG9nTmpNM0xqY3pOekEyTmpRMk1UUTJNemNzSUhrNklETTFNUzQyT1RJek5UYzJNamM0T0RNNU5Td2daM0p2ZFhBNklEZ2dmU3hjYmlBZ0lDQWdJQ0FnZXlCcFpEb2dKMUJ5YjNWMllXbHlaU2NzSUhnNklEWTFNQzQ0T0RNek5USXlPRFk1T1RBekxDQjVPaUF6T0RZdU9ETTVNVGd4TURNMU1EazVNVFlzSUdkeWIzVndPaUE0SUgwc1hHNGdJQ0FnSUNBZ0lIc2dhV1E2SUNkR1pYVnBiR3g1Snl3Z2VEb2dOakkyTGpnMU5UWTJNRFkwTXpneE1Ea3NJSGs2SURNMk5TNDVNRGcwTVRZME5Ua3pNVFF4TENCbmNtOTFjRG9nT0NCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblEyOTFjbVpsZVhKaFl5Y3NJSGc2SURZeU9DNHpORFE0T1RnNU9UYzFNREV6TENCNU9pQXpNell1TnpZMk5qUTFOREV4T1RBeU1pd2daM0p2ZFhBNklEZ2dmU3hjYmlBZ0lDQWdJQ0FnZXlCcFpEb2dKMEpoYUc5eVpXd25MQ0I0T2lBMk5UWXVOemN4TnpjM01qYzJORGs0TlN3Z2VUb2dNell5TGpVNE9EVTRPREkxTURreE9Ea3NJR2R5YjNWd09pQTRJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2RDYjNOemRXVjBKeXdnZURvZ05UazVMakF4T0RVM05qVTNORE14TURjc0lIazZJRE0yTXk0NE1qZzJOekl6TkRBM01EVXpMQ0JuY205MWNEb2dPQ0I5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuU205c2VTY3NJSGc2SURZMU5pNDJNVGd5T1RJek56TTFOREE0TENCNU9pQXpORE11TWpNM05UY3pNelUxT1RFMk5Td2daM0p2ZFhBNklEZ2dmU3hjYmlBZ0lDQWdJQ0FnZXlCcFpEb2dKMGR5WVc1MFlXbHlaU2NzSUhnNklEWXpPQzQwTXpjMU9EVTFNekUwT1RnNExDQjVPaUEwTURJdU5ETTROekkxTURNM09EazVOU3dnWjNKdmRYQTZJRGdnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnBaRG9nSjAxdmRHaGxjbEJzZFhSaGNtTm9KeXdnZURvZ05qWTBMalUxTmpjeU16ZzJNVGc0TXl3Z2VUb2dNams0TGpBek16WTVOalExTWpZM09EWXNJR2R5YjNWd09pQTVJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2RIZFdWMWJHVnRaWEluTENCNE9pQTFNRGd1TVRZME5UQTFNalU0TVRjNE1EVXNJSGs2SURNek1DNDBOVEF5T1RBM05EUTBNelkzTENCbmNtOTFjRG9nTkNCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblFtRmlaWFFuTENCNE9pQTBPVEl1TlRZd01EVXlOems0T0RJd09UVXNJSGs2SURNeU5TNDVPRE0wTURreU9EUTROREkzTENCbmNtOTFjRG9nTkNCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblEyeGhjWFZsYzI5MWN5Y3NJSGc2SURVeE1DNDVNemcxTlRVd05qSTFNREEzTnl3Z2VUb2dNekE1TGpJNE5qa3pPREEyT1Rjek1qZ3NJR2R5YjNWd09pQTBJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2FXUTZJQ2ROYjI1MGNHRnlibUZ6YzJVbkxDQjRPaUExTURJdU56RTVNRGc1TkRFM016VTFOeXdnZVRvZ016VXdMamt5TnpVeE9ETXhNek0wTXpnc0lHZHliM1Z3T2lBMElIMHNYRzRnSUNBZ0lDQWdJSHNnYVdRNklDZFViM1Z6YzJGcGJuUW5MQ0I0T2lBME5EVXVNVEkxTkRnd01qQTFOamd3Tnl3Z2VUb2dNalkyTGpRMk1qUXlOalkxTURJeU1EQTBMQ0JuY205MWNEb2dOU0I5TEZ4dUlDQWdJQ0FnSUNCN0lHbGtPaUFuUTJocGJHUXhKeXdnZURvZ05UZzRMakF6TlRFMU5USXpPRFk1TmpFc0lIazZJRFF4TUM0eU1UazFOVFUxT1RZeE9UazJMQ0JuY205MWNEb2dNVEFnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnBaRG9nSjBOb2FXeGtNaWNzSUhnNklEVTFPUzR5TnpjM09ERTBOemd5TnpBMUxDQjVPaUEwTURndU16VXpNekU0TkRnNU16VTJPU3dnWjNKdmRYQTZJREV3SUgwc1hHNGdJQ0FnSUNBZ0lIc2dhV1E2SUNkQ2NuVnFiMjRuTENCNE9pQTFNemN1TVRjNE56TTRNemt3TkRZMU5pd2dlVG9nTXpNM0xqZzJPVEl5TnpjMU9URTNPVFEzTENCbmNtOTFjRG9nTkNCOUxGeHVJQ0FnSUNBZ0lDQjdJR2xrT2lBblRXMWxMa2gxWTJobGJHOTFjQ2NzSUhnNklEWXlOaTR6TnpjMU9EVXdORFkyTVRZMExDQjVPaUF6T0RRdU16VXlNREl3TmpZNE9UUTFNVFlzSUdkeWIzVndPaUE0SUgxY2JpQWdJQ0JkTEZ4dVhHNGdJQ0FnYkdsdWEzTTZJRnRjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkT1lYQnZiR1Z2Ymljc0lIUmhjbWRsZERvZ0owMTVjbWxsYkNjc0lIWmhiSFZsT2lBeElIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuVFd4c1pTNUNZWEIwYVhOMGFXNWxKeXdnZEdGeVoyVjBPaUFuVFhseWFXVnNKeXdnZG1Gc2RXVTZJRGdnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZE5iV1V1VFdGbmJHOXBjbVVuTENCMFlYSm5aWFE2SUNkTmVYSnBaV3duTENCMllXeDFaVG9nTVRBZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2ROYldVdVRXRm5iRzlwY21VbkxDQjBZWEpuWlhRNklDZE5iR3hsTGtKaGNIUnBjM1JwYm1VbkxDQjJZV3gxWlRvZ05pQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBOdmRXNTBaWE56WkdWTWJ5Y3NJSFJoY21kbGREb2dKMDE1Y21sbGJDY3NJSFpoYkhWbE9pQXhJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblIyVmliM0poYm1RbkxDQjBZWEpuWlhRNklDZE5lWEpwWld3bkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBOb1lXMXdkR1Z5WTJsbGNpY3NJSFJoY21kbGREb2dKMDE1Y21sbGJDY3NJSFpoYkhWbE9pQXhJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblEzSmhkbUYwZEdVbkxDQjBZWEpuWlhRNklDZE5lWEpwWld3bkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBOdmRXNTBKeXdnZEdGeVoyVjBPaUFuVFhseWFXVnNKeXdnZG1Gc2RXVTZJRElnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZFBiR1JOWVc0bkxDQjBZWEpuWlhRNklDZE5lWEpwWld3bkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjFaaGJHcGxZVzRuTENCMFlYSm5aWFE2SUNkTVlXSmhjbkpsSnl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RXWVd4cVpXRnVKeXdnZEdGeVoyVjBPaUFuVFcxbExrMWhaMnh2YVhKbEp5d2dkbUZzZFdVNklETWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkV1lXeHFaV0Z1Snl3Z2RHRnlaMlYwT2lBblRXeHNaUzVDWVhCMGFYTjBhVzVsSnl3Z2RtRnNkV1U2SURNZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RXWVd4cVpXRnVKeXdnZEdGeVoyVjBPaUFuVFhseWFXVnNKeXdnZG1Gc2RXVTZJRFVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZE5ZWEpuZFdWeWFYUmxKeXdnZEdGeVoyVjBPaUFuVm1Gc2FtVmhiaWNzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5UVzFsTG1SbFVpY3NJSFJoY21kbGREb2dKMVpoYkdwbFlXNG5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owbHpZV0psWVhVbkxDQjBZWEpuWlhRNklDZFdZV3hxWldGdUp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkSFpYSjJZV2x6Snl3Z2RHRnlaMlYwT2lBblZtRnNhbVZoYmljc0lIWmhiSFZsT2lBeElIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuVEdsemRHOXNhV1Z5Snl3Z2RHRnlaMlYwT2lBblZHaHZiRzl0ZVdWekp5d2dkbUZzZFdVNklEUWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkR1lXMWxkV2xzSnl3Z2RHRnlaMlYwT2lBblZHaHZiRzl0ZVdWekp5d2dkbUZzZFdVNklEUWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkR1lXMWxkV2xzSnl3Z2RHRnlaMlYwT2lBblRHbHpkRzlzYVdWeUp5d2dkbUZzZFdVNklEUWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkQ2JHRmphR1YyYVd4c1pTY3NJSFJoY21kbGREb2dKMVJvYjJ4dmJYbGxjeWNzSUhaaGJIVmxPaUEwSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5RbXhoWTJobGRtbHNiR1VuTENCMFlYSm5aWFE2SUNkTWFYTjBiMnhwWlhJbkxDQjJZV3gxWlRvZ05DQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBKc1lXTm9aWFpwYkd4bEp5d2dkR0Z5WjJWME9pQW5SbUZ0WlhWcGJDY3NJSFpoYkhWbE9pQTBJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblJtRjJiM1Z5YVhSbEp5d2dkR0Z5WjJWME9pQW5WR2h2Ykc5dGVXVnpKeXdnZG1Gc2RXVTZJRE1nZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZEdZWFp2ZFhKcGRHVW5MQ0IwWVhKblpYUTZJQ2RNYVhOMGIyeHBaWEluTENCMllXeDFaVG9nTXlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMFpoZG05MWNtbDBaU2NzSUhSaGNtZGxkRG9nSjBaaGJXVjFhV3duTENCMllXeDFaVG9nTXlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMFpoZG05MWNtbDBaU2NzSUhSaGNtZGxkRG9nSjBKc1lXTm9aWFpwYkd4bEp5d2dkbUZzZFdVNklEUWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkRVlXaHNhV0VuTENCMFlYSm5aWFE2SUNkVWFHOXNiMjE1WlhNbkxDQjJZV3gxWlRvZ015QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBSaGFHeHBZU2NzSUhSaGNtZGxkRG9nSjB4cGMzUnZiR2xsY2ljc0lIWmhiSFZsT2lBeklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuUkdGb2JHbGhKeXdnZEdGeVoyVjBPaUFuUm1GdFpYVnBiQ2NzSUhaaGJIVmxPaUF6SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5SR0ZvYkdsaEp5d2dkR0Z5WjJWME9pQW5RbXhoWTJobGRtbHNiR1VuTENCMllXeDFaVG9nTXlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMFJoYUd4cFlTY3NJSFJoY21kbGREb2dKMFpoZG05MWNtbDBaU2NzSUhaaGJIVmxPaUExSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5XbVZ3YUdsdVpTY3NJSFJoY21kbGREb2dKMVJvYjJ4dmJYbGxjeWNzSUhaaGJIVmxPaUF6SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5XbVZ3YUdsdVpTY3NJSFJoY21kbGREb2dKMHhwYzNSdmJHbGxjaWNzSUhaaGJIVmxPaUF6SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5XbVZ3YUdsdVpTY3NJSFJoY21kbGREb2dKMFpoYldWMWFXd25MQ0IyWVd4MVpUb2dNeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0oxcGxjR2hwYm1VbkxDQjBZWEpuWlhRNklDZENiR0ZqYUdWMmFXeHNaU2NzSUhaaGJIVmxPaUF6SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5XbVZ3YUdsdVpTY3NJSFJoY21kbGREb2dKMFpoZG05MWNtbDBaU2NzSUhaaGJIVmxPaUEwSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5XbVZ3YUdsdVpTY3NJSFJoY21kbGREb2dKMFJoYUd4cFlTY3NJSFpoYkhWbE9pQTBJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblJtRnVkR2x1WlNjc0lIUmhjbWRsZERvZ0oxUm9iMnh2YlhsbGN5Y3NJSFpoYkhWbE9pQXpJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblJtRnVkR2x1WlNjc0lIUmhjbWRsZERvZ0oweHBjM1J2YkdsbGNpY3NJSFpoYkhWbE9pQXpJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblJtRnVkR2x1WlNjc0lIUmhjbWRsZERvZ0owWmhiV1YxYVd3bkxDQjJZV3gxWlRvZ015QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBaaGJuUnBibVVuTENCMFlYSm5aWFE2SUNkQ2JHRmphR1YyYVd4c1pTY3NJSFpoYkhWbE9pQXpJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblJtRnVkR2x1WlNjc0lIUmhjbWRsZERvZ0owWmhkbTkxY21sMFpTY3NJSFpoYkhWbE9pQTBJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblJtRnVkR2x1WlNjc0lIUmhjbWRsZERvZ0owUmhhR3hwWVNjc0lIWmhiSFZsT2lBMElIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuUm1GdWRHbHVaU2NzSUhSaGNtZGxkRG9nSjFwbGNHaHBibVVuTENCMllXeDFaVG9nTkNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMFpoYm5ScGJtVW5MQ0IwWVhKblpYUTZJQ2ROWVhKbmRXVnlhWFJsSnl3Z2RtRnNkV1U2SURJZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RHWVc1MGFXNWxKeXdnZEdGeVoyVjBPaUFuVm1Gc2FtVmhiaWNzSUhaaGJIVmxPaUE1SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5UVzFsTGxSb1pXNWhjbVJwWlhJbkxDQjBZWEpuWlhRNklDZEdZVzUwYVc1bEp5d2dkbUZzZFdVNklESWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkTmJXVXVWR2hsYm1GeVpHbGxjaWNzSUhSaGNtZGxkRG9nSjFaaGJHcGxZVzRuTENCMllXeDFaVG9nTnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMVJvWlc1aGNtUnBaWEluTENCMFlYSm5aWFE2SUNkTmJXVXVWR2hsYm1GeVpHbGxjaWNzSUhaaGJIVmxPaUF4TXlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMVJvWlc1aGNtUnBaWEluTENCMFlYSm5aWFE2SUNkR1lXNTBhVzVsSnl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RVYUdWdVlYSmthV1Z5Snl3Z2RHRnlaMlYwT2lBblZtRnNhbVZoYmljc0lIWmhiSFZsT2lBeE1pQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBOdmMyVjBkR1VuTENCMFlYSm5aWFE2SUNkTmJXVXVWR2hsYm1GeVpHbGxjaWNzSUhaaGJIVmxPaUEwSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5RMjl6WlhSMFpTY3NJSFJoY21kbGREb2dKMVpoYkdwbFlXNG5MQ0IyWVd4MVpUb2dNekVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZERiM05sZEhSbEp5d2dkR0Z5WjJWME9pQW5WR2h2Ykc5dGVXVnpKeXdnZG1Gc2RXVTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZERiM05sZEhSbEp5d2dkR0Z5WjJWME9pQW5WR2hsYm1GeVpHbGxjaWNzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5TbUYyWlhKMEp5d2dkR0Z5WjJWME9pQW5WbUZzYW1WaGJpY3NJSFpoYkhWbE9pQXhOeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owcGhkbVZ5ZENjc0lIUmhjbWRsZERvZ0owWmhiblJwYm1VbkxDQjJZV3gxWlRvZ05TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBwaGRtVnlkQ2NzSUhSaGNtZGxkRG9nSjFSb1pXNWhjbVJwWlhJbkxDQjJZV3gxWlRvZ05TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBwaGRtVnlkQ2NzSUhSaGNtZGxkRG9nSjAxdFpTNVVhR1Z1WVhKa2FXVnlKeXdnZG1Gc2RXVTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZEtZWFpsY25RbkxDQjBZWEpuWlhRNklDZERiM05sZEhSbEp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkR1lYVmphR1ZzWlhabGJuUW5MQ0IwWVhKblpYUTZJQ2RXWVd4cVpXRnVKeXdnZG1Gc2RXVTZJRGdnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZEdZWFZqYUdWc1pYWmxiblFuTENCMFlYSm5aWFE2SUNkS1lYWmxjblFuTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMEpoYldGMFlXSnZhWE1uTENCMFlYSm5aWFE2SUNkR1lXNTBhVzVsSnl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RDWVcxaGRHRmliMmx6Snl3Z2RHRnlaMlYwT2lBblNtRjJaWEowSnl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RDWVcxaGRHRmliMmx6Snl3Z2RHRnlaMlYwT2lBblZtRnNhbVZoYmljc0lIWmhiSFZsT2lBeUlIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuVUdWeWNHVjBkV1VuTENCMFlYSm5aWFE2SUNkR1lXNTBhVzVsSnl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RUYVcxd2JHbGpaU2NzSUhSaGNtZGxkRG9nSjFCbGNuQmxkSFZsSnl3Z2RtRnNkV1U2SURJZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RUYVcxd2JHbGpaU2NzSUhSaGNtZGxkRG9nSjFaaGJHcGxZVzRuTENCMllXeDFaVG9nTXlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMU5wYlhCc2FXTmxKeXdnZEdGeVoyVjBPaUFuUm1GdWRHbHVaU2NzSUhaaGJIVmxPaUF5SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5VMmx0Y0d4cFkyVW5MQ0IwWVhKblpYUTZJQ2RLWVhabGNuUW5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0oxTmpZWFZtWm14aGFYSmxKeXdnZEdGeVoyVjBPaUFuVm1Gc2FtVmhiaWNzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5WMjl0WVc0eEp5d2dkR0Z5WjJWME9pQW5WbUZzYW1WaGJpY3NJSFpoYkhWbE9pQXlJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblYyOXRZVzR4Snl3Z2RHRnlaMlYwT2lBblNtRjJaWEowSnl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RLZFdSblpTY3NJSFJoY21kbGREb2dKMVpoYkdwbFlXNG5MQ0IyWVd4MVpUb2dNeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owcDFaR2RsSnl3Z2RHRnlaMlYwT2lBblFtRnRZWFJoWW05cGN5Y3NJSFpoYkhWbE9pQXlJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblEyaGhiWEJ0WVhSb2FXVjFKeXdnZEdGeVoyVjBPaUFuVm1Gc2FtVmhiaWNzSUhaaGJIVmxPaUF6SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5RMmhoYlhCdFlYUm9hV1YxSnl3Z2RHRnlaMlYwT2lBblNuVmtaMlVuTENCMllXeDFaVG9nTXlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKME5vWVcxd2JXRjBhR2xsZFNjc0lIUmhjbWRsZERvZ0owSmhiV0YwWVdKdmFYTW5MQ0IyWVd4MVpUb2dNaUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owSnlaWFpsZENjc0lIUmhjbWRsZERvZ0owcDFaR2RsSnl3Z2RtRnNkV1U2SURJZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RDY21WMlpYUW5MQ0IwWVhKblpYUTZJQ2REYUdGdGNHMWhkR2hwWlhVbkxDQjJZV3gxWlRvZ01pQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBKeVpYWmxkQ2NzSUhSaGNtZGxkRG9nSjFaaGJHcGxZVzRuTENCMllXeDFaVG9nTWlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMEp5WlhabGRDY3NJSFJoY21kbGREb2dKMEpoYldGMFlXSnZhWE1uTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKME5vWlc1cGJHUnBaWFVuTENCMFlYSm5aWFE2SUNkS2RXUm5aU2NzSUhaaGJIVmxPaUF5SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5RMmhsYm1sc1pHbGxkU2NzSUhSaGNtZGxkRG9nSjBOb1lXMXdiV0YwYUdsbGRTY3NJSFpoYkhWbE9pQXlJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblEyaGxibWxzWkdsbGRTY3NJSFJoY21kbGREb2dKMEp5WlhabGRDY3NJSFpoYkhWbE9pQXlJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblEyaGxibWxzWkdsbGRTY3NJSFJoY21kbGREb2dKMVpoYkdwbFlXNG5MQ0IyWVd4MVpUb2dNaUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owTm9aVzVwYkdScFpYVW5MQ0IwWVhKblpYUTZJQ2RDWVcxaGRHRmliMmx6Snl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2REYjJOb1pYQmhhV3hzWlNjc0lIUmhjbWRsZERvZ0owcDFaR2RsSnl3Z2RtRnNkV1U2SURJZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2REYjJOb1pYQmhhV3hzWlNjc0lIUmhjbWRsZERvZ0owTm9ZVzF3YldGMGFHbGxkU2NzSUhaaGJIVmxPaUF5SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5RMjlqYUdWd1lXbHNiR1VuTENCMFlYSm5aWFE2SUNkQ2NtVjJaWFFuTENCMllXeDFaVG9nTWlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKME52WTJobGNHRnBiR3hsSnl3Z2RHRnlaMlYwT2lBblEyaGxibWxzWkdsbGRTY3NJSFpoYkhWbE9pQXlJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblEyOWphR1Z3WVdsc2JHVW5MQ0IwWVhKblpYUTZJQ2RXWVd4cVpXRnVKeXdnZG1Gc2RXVTZJRElnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZERiMk5vWlhCaGFXeHNaU2NzSUhSaGNtZGxkRG9nSjBKaGJXRjBZV0p2YVhNbkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjFCdmJuUnRaWEpqZVNjc0lIUmhjbWRsZERvZ0oxUm9aVzVoY21ScFpYSW5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owSnZkV3hoZEhKMVpXeHNaU2NzSUhSaGNtZGxkRG9nSjFSb1pXNWhjbVJwWlhJbkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBWd2IyNXBibVVuTENCMFlYSm5aWFE2SUNkTmJXVXVWR2hsYm1GeVpHbGxjaWNzSUhaaGJIVmxPaUF5SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5SWEJ2Ym1sdVpTY3NJSFJoY21kbGREb2dKMVJvWlc1aGNtUnBaWEluTENCMllXeDFaVG9nTXlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMEZ1ZW1Wc2JXRW5MQ0IwWVhKblpYUTZJQ2RGY0c5dWFXNWxKeXdnZG1Gc2RXVTZJRElnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZEJibnBsYkcxaEp5d2dkR0Z5WjJWME9pQW5WR2hsYm1GeVpHbGxjaWNzSUhaaGJIVmxPaUF5SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5RVzU2Wld4dFlTY3NJSFJoY21kbGREb2dKMDF0WlM1VWFHVnVZWEprYVdWeUp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkWGIyMWhiakluTENCMFlYSm5aWFE2SUNkV1lXeHFaV0Z1Snl3Z2RtRnNkV1U2SURNZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RYYjIxaGJqSW5MQ0IwWVhKblpYUTZJQ2REYjNObGRIUmxKeXdnZG1Gc2RXVTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZFhiMjFoYmpJbkxDQjBZWEpuWlhRNklDZEtZWFpsY25RbkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjAxdmRHaGxja2x1Ym05alpXNTBKeXdnZEdGeVoyVjBPaUFuUm1GMVkyaGxiR1YyWlc1MEp5d2dkbUZzZFdVNklETWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkTmIzUm9aWEpKYm01dlkyVnVkQ2NzSUhSaGNtZGxkRG9nSjFaaGJHcGxZVzRuTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMGR5YVdKcFpYSW5MQ0IwWVhKblpYUTZJQ2RHWVhWamFHVnNaWFpsYm5RbkxDQjJZV3gxWlRvZ01pQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjAxdFpTNUNkWEpuYjI0bkxDQjBZWEpuWlhRNklDZEtiMjVrY21WMGRHVW5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owZGhkbkp2WTJobEp5d2dkR0Z5WjJWME9pQW5UVzFsTGtKMWNtZHZiaWNzSUhaaGJIVmxPaUF5SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5SMkYyY205amFHVW5MQ0IwWVhKblpYUTZJQ2RVYUdWdVlYSmthV1Z5Snl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RIWVhaeWIyTm9aU2NzSUhSaGNtZGxkRG9nSjBwaGRtVnlkQ2NzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5SMkYyY205amFHVW5MQ0IwWVhKblpYUTZJQ2RXWVd4cVpXRnVKeXdnZG1Gc2RXVTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZEhhV3hzWlc1dmNtMWhibVFuTENCMFlYSm5aWFE2SUNkRGIzTmxkSFJsSnl3Z2RtRnNkV1U2SURNZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RIYVd4c1pXNXZjbTFoYm1RbkxDQjBZWEpuWlhRNklDZFdZV3hxWldGdUp5d2dkbUZzZFdVNklESWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkTllXZHViMjRuTENCMFlYSm5aWFE2SUNkSGFXeHNaVzV2Y20xaGJtUW5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owMWhaMjV2Ymljc0lIUmhjbWRsZERvZ0owMXRaUzVVYUdWdVlYSmthV1Z5Snl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2ROYkd4bExrZHBiR3hsYm05eWJXRnVaQ2NzSUhSaGNtZGxkRG9nSjBkcGJHeGxibTl5YldGdVpDY3NJSFpoYkhWbE9pQTVJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblRXeHNaUzVIYVd4c1pXNXZjbTFoYm1RbkxDQjBZWEpuWlhRNklDZERiM05sZEhSbEp5d2dkbUZzZFdVNklESWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkTmJHeGxMa2RwYkd4bGJtOXliV0Z1WkNjc0lIUmhjbWRsZERvZ0oxWmhiR3BsWVc0bkxDQjJZV3gxWlRvZ01pQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjAxdFpTNVFiMjUwYldWeVkza25MQ0IwWVhKblpYUTZJQ2ROYkd4bExrZHBiR3hsYm05eWJXRnVaQ2NzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5UVzFsTGxCdmJuUnRaWEpqZVNjc0lIUmhjbWRsZERvZ0oxQnZiblJ0WlhKamVTY3NJSFpoYkhWbE9pQXhJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblRXeHNaUzVXWVhWaWIybHpKeXdnZEdGeVoyVjBPaUFuVFd4c1pTNUhhV3hzWlc1dmNtMWhibVFuTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMHgwTGtkcGJHeGxibTl5YldGdVpDY3NJSFJoY21kbGREb2dKMDFzYkdVdVIybHNiR1Z1YjNKdFlXNWtKeXdnZG1Gc2RXVTZJRElnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZE1kQzVIYVd4c1pXNXZjbTFoYm1RbkxDQjBZWEpuWlhRNklDZEhhV3hzWlc1dmNtMWhibVFuTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMHgwTGtkcGJHeGxibTl5YldGdVpDY3NJSFJoY21kbGREb2dKME52YzJWMGRHVW5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owMWhjbWwxY3ljc0lIUmhjbWRsZERvZ0owMXNiR1V1UjJsc2JHVnViM0p0WVc1a0p5d2dkbUZzZFdVNklEWWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkTllYSnBkWE1uTENCMFlYSm5aWFE2SUNkSGFXeHNaVzV2Y20xaGJtUW5MQ0IyWVd4MVpUb2dNVElnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZE5ZWEpwZFhNbkxDQjBZWEpuWlhRNklDZFFiMjUwYldWeVkza25MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owMWhjbWwxY3ljc0lIUmhjbWRsZERvZ0oweDBMa2RwYkd4bGJtOXliV0Z1WkNjc0lIWmhiSFZsT2lBeElIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuVFdGeWFYVnpKeXdnZEdGeVoyVjBPaUFuUTI5elpYUjBaU2NzSUhaaGJIVmxPaUF5TVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMDFoY21sMWN5Y3NJSFJoY21kbGREb2dKMVpoYkdwbFlXNG5MQ0IyWVd4MVpUb2dNVGtnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZE5ZWEpwZFhNbkxDQjBZWEpuWlhRNklDZFVhRzlzYjIxNVpYTW5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owMWhjbWwxY3ljc0lIUmhjbWRsZERvZ0oxUm9aVzVoY21ScFpYSW5MQ0IyWVd4MVpUb2dNaUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owMWhjbWwxY3ljc0lIUmhjbWRsZERvZ0owVndiMjVwYm1VbkxDQjJZV3gxWlRvZ05TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjAxaGNtbDFjeWNzSUhSaGNtZGxkRG9nSjBkaGRuSnZZMmhsSnl3Z2RtRnNkV1U2SURRZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RDWVhKdmJtVnpjMVFuTENCMFlYSm5aWFE2SUNkSGFXeHNaVzV2Y20xaGJtUW5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owSmhjbTl1WlhOelZDY3NJSFJoY21kbGREb2dKMDFoY21sMWN5Y3NJSFpoYkhWbE9pQXhJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblRXRmlaWFZtSnl3Z2RHRnlaMlYwT2lBblRXRnlhWFZ6Snl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2ROWVdKbGRXWW5MQ0IwWVhKblpYUTZJQ2RGY0c5dWFXNWxKeXdnZG1Gc2RXVTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZE5ZV0psZFdZbkxDQjBZWEpuWlhRNklDZEhZWFp5YjJOb1pTY3NJSFpoYkhWbE9pQXhJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblJXNXFiMnh5WVhNbkxDQjBZWEpuWlhRNklDZE5ZWEpwZFhNbkxDQjJZV3gxWlRvZ055QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBWdWFtOXNjbUZ6Snl3Z2RHRnlaMlYwT2lBblIyRjJjbTlqYUdVbkxDQjJZV3gxWlRvZ055QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBWdWFtOXNjbUZ6Snl3Z2RHRnlaMlYwT2lBblNtRjJaWEowSnl3Z2RtRnNkV1U2SURZZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RGYm1wdmJISmhjeWNzSUhSaGNtZGxkRG9nSjAxaFltVjFaaWNzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5SVzVxYjJ4eVlYTW5MQ0IwWVhKblpYUTZJQ2RXWVd4cVpXRnVKeXdnZG1Gc2RXVTZJRFFnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZERiMjFpWldabGNuSmxKeXdnZEdGeVoyVjBPaUFuUlc1cWIyeHlZWE1uTENCMllXeDFaVG9nTVRVZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2REYjIxaVpXWmxjbkpsSnl3Z2RHRnlaMlYwT2lBblRXRnlhWFZ6Snl3Z2RtRnNkV1U2SURVZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2REYjIxaVpXWmxjbkpsSnl3Z2RHRnlaMlYwT2lBblIyRjJjbTlqYUdVbkxDQjJZV3gxWlRvZ05pQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBOdmJXSmxabVZ5Y21VbkxDQjBZWEpuWlhRNklDZE5ZV0psZFdZbkxDQjJZV3gxWlRvZ01pQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjFCeWIzVjJZV2x5WlNjc0lIUmhjbWRsZERvZ0owZGhkbkp2WTJobEp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkUWNtOTFkbUZwY21VbkxDQjBZWEpuWlhRNklDZEZibXB2YkhKaGN5Y3NJSFpoYkhWbE9pQTBJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblVISnZkWFpoYVhKbEp5d2dkR0Z5WjJWME9pQW5RMjl0WW1WbVpYSnlaU2NzSUhaaGJIVmxPaUF5SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5SbVYxYVd4c2VTY3NJSFJoY21kbGREb2dKMGRoZG5KdlkyaGxKeXdnZG1Gc2RXVTZJRElnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZEdaWFZwYkd4NUp5d2dkR0Z5WjJWME9pQW5SVzVxYjJ4eVlYTW5MQ0IyWVd4MVpUb2dOaUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owWmxkV2xzYkhrbkxDQjBZWEpuWlhRNklDZFFjbTkxZG1GcGNtVW5MQ0IyWVd4MVpUb2dNaUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owWmxkV2xzYkhrbkxDQjBZWEpuWlhRNklDZERiMjFpWldabGNuSmxKeXdnZG1Gc2RXVTZJRFVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZEdaWFZwYkd4NUp5d2dkR0Z5WjJWME9pQW5UV0ZpWlhWbUp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkR1pYVnBiR3g1Snl3Z2RHRnlaMlYwT2lBblRXRnlhWFZ6Snl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2REYjNWeVptVjVjbUZqSnl3Z2RHRnlaMlYwT2lBblRXRnlhWFZ6Snl3Z2RtRnNkV1U2SURrZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2REYjNWeVptVjVjbUZqSnl3Z2RHRnlaMlYwT2lBblJXNXFiMnh5WVhNbkxDQjJZV3gxWlRvZ01UY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkRGIzVnlabVY1Y21Gakp5d2dkR0Z5WjJWME9pQW5RMjl0WW1WbVpYSnlaU2NzSUhaaGJIVmxPaUF4TXlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKME52ZFhKbVpYbHlZV01uTENCMFlYSm5aWFE2SUNkSFlYWnliMk5vWlNjc0lIWmhiSFZsT2lBM0lIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuUTI5MWNtWmxlWEpoWXljc0lIUmhjbWRsZERvZ0owMWhZbVYxWmljc0lIWmhiSFZsT2lBeUlIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuUTI5MWNtWmxlWEpoWXljc0lIUmhjbWRsZERvZ0owVndiMjVwYm1VbkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBOdmRYSm1aWGx5WVdNbkxDQjBZWEpuWlhRNklDZEdaWFZwYkd4NUp5d2dkbUZzZFdVNklEWWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkRGIzVnlabVY1Y21Gakp5d2dkR0Z5WjJWME9pQW5VSEp2ZFhaaGFYSmxKeXdnZG1Gc2RXVTZJRE1nZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZENZV2h2Y21Wc0p5d2dkR0Z5WjJWME9pQW5RMjl0WW1WbVpYSnlaU2NzSUhaaGJIVmxPaUExSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5RbUZvYjNKbGJDY3NJSFJoY21kbGREb2dKMGRoZG5KdlkyaGxKeXdnZG1Gc2RXVTZJRFVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZENZV2h2Y21Wc0p5d2dkR0Z5WjJWME9pQW5RMjkxY21abGVYSmhZeWNzSUhaaGJIVmxPaUEySUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5RbUZvYjNKbGJDY3NJSFJoY21kbGREb2dKMDFoWW1WMVppY3NJSFpoYkhWbE9pQXlJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblFtRm9iM0psYkNjc0lIUmhjbWRsZERvZ0owVnVhbTlzY21Gekp5d2dkbUZzZFdVNklEUWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkQ1lXaHZjbVZzSnl3Z2RHRnlaMlYwT2lBblJtVjFhV3hzZVNjc0lIWmhiSFZsT2lBeklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuUW1Gb2IzSmxiQ2NzSUhSaGNtZGxkRG9nSjFCeWIzVjJZV2x5WlNjc0lIWmhiSFZsT2lBeUlIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuUW1Gb2IzSmxiQ2NzSUhSaGNtZGxkRG9nSjAxaGNtbDFjeWNzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5RbTl6YzNWbGRDY3NJSFJoY21kbGREb2dKMDFoY21sMWN5Y3NJSFpoYkhWbE9pQTFJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblFtOXpjM1ZsZENjc0lIUmhjbWRsZERvZ0owTnZkWEptWlhseVlXTW5MQ0IyWVd4MVpUb2dNVElnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZENiM056ZFdWMEp5d2dkR0Z5WjJWME9pQW5SMkYyY205amFHVW5MQ0IyWVd4MVpUb2dOU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owSnZjM04xWlhRbkxDQjBZWEpuWlhRNklDZENZV2h2Y21Wc0p5d2dkbUZzZFdVNklEUWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkQ2IzTnpkV1YwSnl3Z2RHRnlaMlYwT2lBblJXNXFiMnh5WVhNbkxDQjJZV3gxWlRvZ01UQWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkQ2IzTnpkV1YwSnl3Z2RHRnlaMlYwT2lBblJtVjFhV3hzZVNjc0lIWmhiSFZsT2lBMklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuUW05emMzVmxkQ2NzSUhSaGNtZGxkRG9nSjFCeWIzVjJZV2x5WlNjc0lIWmhiSFZsT2lBeUlIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuUW05emMzVmxkQ2NzSUhSaGNtZGxkRG9nSjBOdmJXSmxabVZ5Y21VbkxDQjJZV3gxWlRvZ09TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBKdmMzTjFaWFFuTENCMFlYSm5aWFE2SUNkTllXSmxkV1luTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMEp2YzNOMVpYUW5MQ0IwWVhKblpYUTZJQ2RXWVd4cVpXRnVKeXdnZG1Gc2RXVTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZEtiMng1Snl3Z2RHRnlaMlYwT2lBblFtRm9iM0psYkNjc0lIWmhiSFZsT2lBMUlIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuU205c2VTY3NJSFJoY21kbGREb2dKMEp2YzNOMVpYUW5MQ0IyWVd4MVpUb2dOeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owcHZiSGtuTENCMFlYSm5aWFE2SUNkSFlYWnliMk5vWlNjc0lIWmhiSFZsT2lBeklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuU205c2VTY3NJSFJoY21kbGREb2dKME52ZFhKbVpYbHlZV01uTENCMllXeDFaVG9nTlNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMHB2YkhrbkxDQjBZWEpuWlhRNklDZEZibXB2YkhKaGN5Y3NJSFpoYkhWbE9pQTFJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblNtOXNlU2NzSUhSaGNtZGxkRG9nSjBabGRXbHNiSGtuTENCMllXeDFaVG9nTlNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMHB2YkhrbkxDQjBZWEpuWlhRNklDZFFjbTkxZG1GcGNtVW5MQ0IyWVd4MVpUb2dNaUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owcHZiSGtuTENCMFlYSm5aWFE2SUNkRGIyMWlaV1psY25KbEp5d2dkbUZzZFdVNklEVWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkS2IyeDVKeXdnZEdGeVoyVjBPaUFuVFdGaVpYVm1KeXdnZG1Gc2RXVTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZEtiMng1Snl3Z2RHRnlaMlYwT2lBblRXRnlhWFZ6Snl3Z2RtRnNkV1U2SURJZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RIY21GdWRHRnBjbVVuTENCMFlYSm5aWFE2SUNkQ2IzTnpkV1YwSnl3Z2RtRnNkV1U2SURNZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RIY21GdWRHRnBjbVVuTENCMFlYSm5aWFE2SUNkRmJtcHZiSEpoY3ljc0lIWmhiSFZsT2lBeklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuUjNKaGJuUmhhWEpsSnl3Z2RHRnlaMlYwT2lBblEyOXRZbVZtWlhKeVpTY3NJSFpoYkhWbE9pQXhJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblIzSmhiblJoYVhKbEp5d2dkR0Z5WjJWME9pQW5RMjkxY21abGVYSmhZeWNzSUhaaGJIVmxPaUF5SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5SM0poYm5SaGFYSmxKeXdnZEdGeVoyVjBPaUFuU205c2VTY3NJSFpoYkhWbE9pQXlJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblIzSmhiblJoYVhKbEp5d2dkR0Z5WjJWME9pQW5SMkYyY205amFHVW5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owZHlZVzUwWVdseVpTY3NJSFJoY21kbGREb2dKMEpoYUc5eVpXd25MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owZHlZVzUwWVdseVpTY3NJSFJoY21kbGREb2dKMFpsZFdsc2JIa25MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owZHlZVzUwWVdseVpTY3NJSFJoY21kbGREb2dKMUJ5YjNWMllXbHlaU2NzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5UVzkwYUdWeVVHeDFkR0Z5WTJnbkxDQjBZWEpuWlhRNklDZE5ZV0psZFdZbkxDQjJZV3gxWlRvZ015QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBkMVpYVnNaVzFsY2ljc0lIUmhjbWRsZERvZ0oxUm9aVzVoY21ScFpYSW5MQ0IyWVd4MVpUb2dOU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owZDFaWFZzWlcxbGNpY3NJSFJoY21kbGREb2dKMVpoYkdwbFlXNG5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owZDFaWFZzWlcxbGNpY3NJSFJoY21kbGREb2dKMDF0WlM1VWFHVnVZWEprYVdWeUp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkSGRXVjFiR1Z0WlhJbkxDQjBZWEpuWlhRNklDZEtZWFpsY25RbkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBkMVpYVnNaVzFsY2ljc0lIUmhjbWRsZERvZ0owZGhkbkp2WTJobEp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkSGRXVjFiR1Z0WlhJbkxDQjBZWEpuWlhRNklDZEZjRzl1YVc1bEp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkQ1lXSmxkQ2NzSUhSaGNtZGxkRG9nSjFSb1pXNWhjbVJwWlhJbkxDQjJZV3gxWlRvZ05pQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBKaFltVjBKeXdnZEdGeVoyVjBPaUFuUjNWbGRXeGxiV1Z5Snl3Z2RtRnNkV1U2SURZZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RDWVdKbGRDY3NJSFJoY21kbGREb2dKMVpoYkdwbFlXNG5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owSmhZbVYwSnl3Z2RHRnlaMlYwT2lBblRXMWxMbFJvWlc1aGNtUnBaWEluTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMEpoWW1WMEp5d2dkR0Z5WjJWME9pQW5TbUYyWlhKMEp5d2dkbUZzZFdVNklESWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkQ1lXSmxkQ2NzSUhSaGNtZGxkRG9nSjBkaGRuSnZZMmhsSnl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RDWVdKbGRDY3NJSFJoY21kbGREb2dKMFZ3YjI1cGJtVW5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owTnNZWEYxWlhOdmRYTW5MQ0IwWVhKblpYUTZJQ2RVYUdWdVlYSmthV1Z5Snl3Z2RtRnNkV1U2SURRZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2REYkdGeGRXVnpiM1Z6Snl3Z2RHRnlaMlYwT2lBblFtRmlaWFFuTENCMllXeDFaVG9nTkNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKME5zWVhGMVpYTnZkWE1uTENCMFlYSm5aWFE2SUNkSGRXVjFiR1Z0WlhJbkxDQjJZV3gxWlRvZ05DQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBOc1lYRjFaWE52ZFhNbkxDQjBZWEpuWlhRNklDZFdZV3hxWldGdUp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkRGJHRnhkV1Z6YjNWekp5d2dkR0Z5WjJWME9pQW5UVzFsTGxSb1pXNWhjbVJwWlhJbkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBOc1lYRjFaWE52ZFhNbkxDQjBZWEpuWlhRNklDZEtZWFpsY25RbkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBOc1lYRjFaWE52ZFhNbkxDQjBZWEpuWlhRNklDZEZjRzl1YVc1bEp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkRGJHRnhkV1Z6YjNWekp5d2dkR0Z5WjJWME9pQW5SVzVxYjJ4eVlYTW5MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owMXZiblJ3WVhKdVlYTnpaU2NzSUhSaGNtZGxkRG9nSjBwaGRtVnlkQ2NzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5UVzl1ZEhCaGNtNWhjM05sSnl3Z2RHRnlaMlYwT2lBblFtRmlaWFFuTENCMllXeDFaVG9nTWlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMDF2Ym5Sd1lYSnVZWE56WlNjc0lIUmhjbWRsZERvZ0owZDFaWFZzWlcxbGNpY3NJSFpoYkhWbE9pQXlJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblRXOXVkSEJoY201aGMzTmxKeXdnZEdGeVoyVjBPaUFuUTJ4aGNYVmxjMjkxY3ljc0lIWmhiSFZsT2lBeUlIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuVFc5dWRIQmhjbTVoYzNObEp5d2dkR0Z5WjJWME9pQW5WbUZzYW1WaGJpY3NJSFpoYkhWbE9pQXhJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblRXOXVkSEJoY201aGMzTmxKeXdnZEdGeVoyVjBPaUFuUjJGMmNtOWphR1VuTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMDF2Ym5Sd1lYSnVZWE56WlNjc0lIUmhjbWRsZERvZ0owVndiMjVwYm1VbkxDQjJZV3gxWlRvZ01TQjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjAxdmJuUndZWEp1WVhOelpTY3NJSFJoY21kbGREb2dKMVJvWlc1aGNtUnBaWEluTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMVJ2ZFhOellXbHVkQ2NzSUhSaGNtZGxkRG9nSjBOdmMyVjBkR1VuTENCMllXeDFaVG9nTWlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMVJ2ZFhOellXbHVkQ2NzSUhSaGNtZGxkRG9nSjBwaGRtVnlkQ2NzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5WRzkxYzNOaGFXNTBKeXdnZEdGeVoyVjBPaUFuVm1Gc2FtVmhiaWNzSUhaaGJIVmxPaUF4SUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5RMmhwYkdReEp5d2dkR0Z5WjJWME9pQW5SMkYyY205amFHVW5MQ0IyWVd4MVpUb2dNaUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owTm9hV3hrTWljc0lIUmhjbWRsZERvZ0owZGhkbkp2WTJobEp5d2dkbUZzZFdVNklESWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkRGFHbHNaREluTENCMFlYSm5aWFE2SUNkRGFHbHNaREVuTENCMllXeDFaVG9nTXlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMEp5ZFdwdmJpY3NJSFJoY21kbGREb2dKMEpoWW1WMEp5d2dkbUZzZFdVNklETWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkQ2NuVnFiMjRuTENCMFlYSm5aWFE2SUNkSGRXVjFiR1Z0WlhJbkxDQjJZV3gxWlRvZ015QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBKeWRXcHZiaWNzSUhSaGNtZGxkRG9nSjFSb1pXNWhjbVJwWlhJbkxDQjJZV3gxWlRvZ015QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSjBKeWRXcHZiaWNzSUhSaGNtZGxkRG9nSjBkaGRuSnZZMmhsSnl3Z2RtRnNkV1U2SURFZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2RDY25WcWIyNG5MQ0IwWVhKblpYUTZJQ2RGY0c5dWFXNWxKeXdnZG1Gc2RXVTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZENjblZxYjI0bkxDQjBZWEpuWlhRNklDZERiR0Z4ZFdWemIzVnpKeXdnZG1Gc2RXVTZJREVnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDZENjblZxYjI0bkxDQjBZWEpuWlhRNklDZE5iMjUwY0dGeWJtRnpjMlVuTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMDF0WlM1SWRXTm9aV3h2ZFhBbkxDQjBZWEpuWlhRNklDZENiM056ZFdWMEp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkTmJXVXVTSFZqYUdWc2IzVndKeXdnZEdGeVoyVjBPaUFuU205c2VTY3NJSFpoYkhWbE9pQXhJSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBblRXMWxMa2gxWTJobGJHOTFjQ2NzSUhSaGNtZGxkRG9nSjBkeVlXNTBZV2x5WlNjc0lIWmhiSFZsT2lBeElIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuVFcxbExraDFZMmhsYkc5MWNDY3NJSFJoY21kbGREb2dKMEpoYUc5eVpXd25MQ0IyWVd4MVpUb2dNU0I5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0owMXRaUzVJZFdOb1pXeHZkWEFuTENCMFlYSm5aWFE2SUNkRGIzVnlabVY1Y21Gakp5d2dkbUZzZFdVNklERWdmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNkTmJXVXVTSFZqYUdWc2IzVndKeXdnZEdGeVoyVjBPaUFuUjJGMmNtOWphR1VuTENCMllXeDFaVG9nTVNCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKMDF0WlM1SWRXTm9aV3h2ZFhBbkxDQjBZWEpuWlhRNklDZEZibXB2YkhKaGN5Y3NJSFpoYkhWbE9pQXhJSDFjYmlBZ0lDQmRYRzU5WEc0aUxDSXZLaXBjYmlBcUlFQmhkWFJvYjNJZ1dHbGhiMlJ2Ym1jZ1dtaGhieUE4ZW1oaGIzaHBZVzlrYjI1blFIcHFkUzVsWkhVdVkyNCtYRzRnS2lCQVpHVnpZM0pwY0hScGIyNGdVR0YwWlc1MGN5QmtZWFJoYzJWMExDQm1jbTl0SUdoMGRIQnpPaTh2ZDNkM0xuQmhkR1Z1ZEhOMmFXVjNMbTl5Wnk5M1pXSXZJM1pwZWk5eVpXeGhkR2x2Ym5Ob2FYQnpYRzRnS2k5Y2JseHVaWGh3YjNKMElHTnZibk4wSUhCaGRHVnVkSE1nUFNCN1hHNGdJQ0FnYm05a1pYTTZJRnRjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTFNVFl5TWpjbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMUpsWTJoaGNtZGxZV0pzWlNCemNHbHVZV3dnWTI5eVpDQnpkR2x0ZFd4aGRHOXlJSE41YzNSbGJTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREV6TmpNc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1UUTJMalV3TnpJeU56Y3lNakEyTkRFMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01qTTNMamM0T1RnNE5EZzROalF4T0RKY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjNCaGRHVnVkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZMU16VTVNRGtuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxTjVjM1JsYlNCaGJtUWdiV1YwYUc5a0lHWnZjaUJ5WldOdmNtUWdZVzVrSUhCc1lYbGlZV05ySUc5bUlHTnZiR3hoWW05eVlYUnBkbVVnVjJWaUlHSnliM2R6YVc1bklITmxjM05wYjI0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEybDBZWFJwYjI1ek9pQXhORE00TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTXpBeExqQTRPREE0TkRBM05EQXhOemdzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUEzT0M0ek5UUTBPVEU1TVRVNE56VTBYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHdZWFJsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJOVFE1T1RBNEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKMDFsZEdodlpITWdZVzVrSUdGd2NHRnlZWFIxY3lCbWIzSWdhVzUwWlhKd2NtVjBhVzVuSUhWelpYSWdjMlZzWldOMGFXOXVjeUJwYmlCMGFHVWdZMjl1ZEdWNGRDQnZaaUJoSUhKbGJHRjBhVzl1SUdScGMzUnlhV0oxZEdWa0lHRnpJR0VnYzJWMElHOW1JRzl5ZEdodloyOXVZV3hwZW1Wa0lITjFZaTF5Wld4aGRHbHZibk1uTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJsMFlYUnBiMjV6T2lBeE1qWTRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEV6TGpneE5EZzFOalU1TURjME1USXdNaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB4T0RNdU5UVXdNVFkzT1RNMU1ESTNORnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OalUxTXpVMk15Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUkdWMlpXeHZjRzFsYm5RZ2RHOXZiQ3dnYldWMGFHOWtMQ0JoYm1RZ2MzbHpkR1Z0SUdadmNpQmpiR2xsYm5RZ2MyVnlkbVZ5SUdGd2NHeHBZMkYwYVc5dWN5Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREV6TlRFc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1DNDFNakkwTXpFeU56a3dNVFF5TnpjM0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUSTBOeTR4TkRrMU56YzVOakkzTWpjNVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkd1lYUmxiblFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk5UVTRNekl3Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0owaGhibVJvWld4a0lIQmxjbk52Ym1Gc0lHUmhkR0VnWVhOemFYTjBZVzUwSUNoUVJFRXBJSGRwZEdnZ1lTQnRaV1JwWTJGc0lHUmxkbWxqWlNCaGJtUWdiV1YwYUc5a0lHOW1JSFZ6YVc1bklIUm9aU0J6WVcxbEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNVFV4TkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMweU1EUXVOalF3TnpFNE9UUTJOVFEzT0Rnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBM01TNDFOekExTlRJNE5EVXhNak14TWx4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpVMU9ETTFNU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblEyeHZjMlZrSUd4dmIzQWdjM2x6ZEdWdElHWnZjaUJqYjI1MGNtOXNiR2x1WnlCcGJuTjFiR2x1SUdsdVpuVnphVzl1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ01UTTJPU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB5TVRJdU9UYzRNVFl3TURBeU1Ua3pPRGNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF4TkM0M01UVTJOREExTXpReE56QXdPVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OalUyTURRMk1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUVhWMGFHOXlhWHBsWkNCc2IyTmhkR2x2YmlCeVpYQnZjblJwYm1jZ2NHRm5hVzVuSUhONWMzUmxiU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYVhSaGRHbHZibk02SURFME56a3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNalV3TGpRek5UUXpNRFl5T1RBMU1Ea3pMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEU1TVM0ME16Y3lNREEyTWpRd05qQXpPRnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OalUyTXpFM05DY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVkdocGJpQm1hV3h0SUhSeVlXNXphWE4wYjNJZ1lXNWtJRzFoZEhKcGVDQmthWE53YkdGNUlHUmxkbWxqWlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklETXlPRFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TVRJdU5UZzRNalE1TlRBek5qVXlOREF4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRNdU5qQTJOak00T1RJMU1EYzBPVFV5WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTlRZMU5UQTVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkQmJtRnNlWFJsSUcxdmJtbDBiM0pwYm1jZ1pHVjJhV05sSUdGdVpDQnRaWFJvYjJSeklHOW1JSFZ6WlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklERXpNek1zWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TVRBMUxqSTFOVEV4TmpFeU16WXlNRFExTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTVRVM0xqRXhOekV6TXpZd05qQXlOakl4WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTlRjeE1qZ3lKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkQ2JHOWpheTFpWVhObFpDQmpiMjF0ZFc1cFkyRjBhVzl1SUdsdUlHRWdZMjl0YlhWdWFXTmhkR2x2YmlCelpYSjJhV05sY3lCd1lYUjBaWEp1Y3lCbGJuWnBjbTl1YldWdWRDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREUwTmpjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeE16a3VOalk1TnpRMk56UTRNamd4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTWpVekxqQXhOREEyTlRBeE5EY3hPVFF5WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTlRjME5qTTFKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSjBGd2NHeHBZMkYwYVc5dUlHbHVjM1JoYm5ScFlYUnBiMjRnWW1GelpXUWdkWEJ2YmlCaGRIUnlhV0oxZEdWeklHRnVaQ0IyWVd4MVpYTWdjM1J2Y21Wa0lHbHVJR0VnYldWMFlTQmtZWFJoSUhKbGNHOXphWFJ2Y25rc0lHbHVZMngxWkdsdVp5QjBhV1Z5YVc1bklHOW1JR0Z3Y0d4cFkyRjBhVzl1SUd4aGVXVnljeUJ2WW1wbFkzUnpJR0Z1WkNCamIyMXdiMjVsYm5Sekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNVE0yT0N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURFeExqQXdNakF5TnpZeU56YzRNakV4Tml4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweU16UXVPVEU0TURVeU9UZ3pNak0xT0Z4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpVM056Y3lOaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblEyOXRjSFYwWlhJZ2RHVnNaWEJvYjI1NUlHbHVkR1ZuY21GMGFXOXVJR2h2ZEdWc2JHbHVaeUJ0WlhSb2IyUWdZVzVrSUhONWMzUmxiU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYVhSaGRHbHZibk02SURFeU56QXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRPRGN1TVRreE5UTXlORFU0TkRFeU5qSXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNVGN6TGprM05qUTBOelUxT1RJNU1qZzBYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHdZWFJsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJOVGczT0RNMUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RUYUc5d2NHbHVaeUJoYzNOcGMzUmhibU5sSUhkcGRHZ2dhR0Z1WkdobGJHUWdZMjl0Y0hWMGFXNW5JR1JsZG1salpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREUwTnpFc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1qYzVMakk0TmpVNE1UTXpOemcwTmpVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE1UQXVNVFU0TnpreE1qVXdNVFV3TjF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpZd01UQTROeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblNXNXpkR0Z1ZENCa2IyTjFiV1Z1ZENCemFHRnlhVzVuSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ01UTTVOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREl4TUM0NU5EZ3lNVE0xTURFek56RTROQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJRGt5TGpVek1UZzROemcyT1RFeE5EQTBYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHdZWFJsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJOakF5TWpVeUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2REYjIxaWFXNWxaQ0JrYVhOelpXTjBhVzVuTENCallYVjBaWEpwZW1sdVp5d2dZVzVrSUhOMFlYQnNhVzVuSUdSbGRtbGpaU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYVhSaGRHbHZibk02SURFMU1ETXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXhORGN1T1RRNU56Y3hOalV3TkRNeU5UZ3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXhOekF1TURnNE9EZzROVFUyTXpFek1EZGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTJNRFF4TVRjbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMDFsZEdodlpDQnZaaUJ0WVdsdWRHRnBibWx1WnlCaElHNWxkSGR2Y21zZ2IyWWdjR0Z5ZEdsaGJHeDVJSEpsY0d4cFkyRjBaV1FnWkdGMFlXSmhjMlVnYzNsemRHVnRKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRJMk1TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHdMamc0T0RVMU5UZ3dNamMwTWpBek5TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlNVGd1TWpNd05EZzRNakF6TURjeU1qZGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTJNRFF4TWpnbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMDFsZEdodlpDQmhibVFnYzNsemRHVnRJR1p2Y2lCa2FYTjBjbWxpZFhScGJtY2diMkpxWldOMGN5QnZkbVZ5SUdFZ2JtVjBkMjl5YXljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklERXlOakVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TlRZdU56TTROekkzTkRJeE1qQTROREVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TWpRekxqTTBPRE00TkRFd05qWTBORE5jYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKM0JoZEdWdWRDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelkyTURZM05EUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVHBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FuVUhKdmRtbGthVzVuSUdOdmJHeGhZbTl5WVhScGRtVWdhVzV6ZEdGc2JHRjBhVzl1SUcxaGJtRm5aVzFsYm5RZ2FXNGdZU0J1WlhSM2IzSnJMV0poYzJWa0lITjFjSEJzZVNCamFHRnBiaUJsYm5acGNtOXViV1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklERXlOekVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF4TlRNdU9UazBPREkxTVRnMU1ETTVOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREl6TVM0ME5qVTNPVGc0T0RFeU1ESTNNbHh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5Oall3T1RFMU1DY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2RYWldJZ1kyeHBaVzUwTFhObGNuWmxjaUJ6ZVhOMFpXMGdZVzVrSUcxbGRHaHZaQ0JtYjNJZ2FXNWpiMjF3WVhScFlteGxJSEJoWjJVZ2JXRnlhM1Z3SUdGdVpDQndjbVZ6Wlc1MFlYUnBiMjRnYkdGdVozVmhaMlZ6Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ01UTXpOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREV6TGpFNE1qZzJOell3TnpNeU1USTFOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB4T0RRdU9ETTBNalkwTXpFNE9ERTFOMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5Oall5TVRnek5DY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVTNsemRHVnRJR0Z1WkNCdFpYUm9iMlFnWm05eUlIWnZhV05sSUhSeVlXNXpiV2x6YzJsdmJpQnZkbVZ5SUc1bGRIZHZjbXNnY0hKdmRHOWpiMnh6Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ01USTJOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJRGcxTGpBNE1qSTRNVFE1TXpRME16WTVMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dNVEExTGpRek5EWTBOVGN4TWpNeU9EazJYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHdZWFJsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJOalF4TlRNekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKMGhoYm1Sb1pXeGtJSEJsY25OdmJtRnNJR1JoZEdFZ1lYTnphWE4wWVc1MElDaFFSRUVwSUhkcGRHZ2dZU0J0WldScFkyRnNJR1JsZG1salpTQmhibVFnYldWMGFHOWtJRzltSUhWemFXNW5JSFJvWlNCellXMWxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRRek1TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHlNVGd1TURrM05qWXhNVGd3TURFeU1qUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXpPUzQ0TlRjMk1EQXpOVGM1TnprNE9WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qWTBORFV6TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5VM1Z5WjJsallXd2djM1JoY0d4cGJtY2dZWEJ3WVhKaGRIVnpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRJMk55eGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklETXdOQzQyTmpNd09USTFNekUyTWprMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUSTVMamN3T1RZeE1UVTNNelE1TVRNNU4xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qWTFOREF6TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TVzV6ZEdGdWRDQnphR0Z5YVc1bklHOW1JR1J2WTNWdFpXNTBjeUJ2YmlCaElISmxiVzkwWlNCelpYSjJaWEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJsMFlYUnBiMjV6T2lBeE5ERXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dNVFU1TGpNd01EVXdNelUxTWprMk1ERTFMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dNVEE0TGprNE16ZzVOVGcxTmpJM01EQTFYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHdZWFJsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJOalUyTVRrekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RFWlhacFkyVWdabTl5SUdGMGRHRmphRzFsYm5RZ2IyWWdZblYwZEhKbGMzTWdiV0YwWlhKcFlXd2dkRzhnWVNCemRYSm5hV05oYkNCbVlYTjBaVzVwYm1jZ1pHVjJhV05sSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ01USTNPU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREV4Tmk0NU1Ea3hOREUxTXpFMU9EVTVOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzAzT0M0M05qWXlOamt6TmpnMU9EVTFOMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OalkyTlRZME9DY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVTNSaGRHVWdiVzlrWld4eklHWnZjaUJ0YjI1cGRHOXlhVzVuSUhCeWIyTmxjM01uTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJsMFlYUnBiMjV6T2lBeE1qZzRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEU1TGpjMU1UZzFNamN6T1RNMU16YzBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEV5Tmk0Mk5UTXpPRGt4TWpJMk9Ua3lPRnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OalkyTlRZMU5TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuU1cxd2JHbGphWFFnY21GMGFXNW5JRzltSUhKbGRISnBaWFpsWkNCcGJtWnZjbTFoZEdsdmJpQnBiaUJoYmlCcGJtWnZjbTFoZEdsdmJpQnpaV0Z5WTJnZ2MzbHpkR1Z0Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ01USTVOQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB5TURVdU5URXdNell4TWpFNU9UUTJOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzAyTWk0Mk1UVXhOelUzTnpJNU1qTTVOelpjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKM0JoZEdWdWRDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelkyT0RRME16Z25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVHBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FuVFdWMGFHOWtJRzltSUhWemFXNW5JR05oWTJobElIUnZJR1JsZEdWeWJXbHVaU0IwYUdVZ2RtbHphV0pwYkdsMGVTQjBieUJoSUhKbGJXOTBaU0JrWVhSaFltRnpaU0JqYkdsbGJuUWdiMllnWVNCd2JIVnlZV3hwZEhrZ2IyWWdaR0YwWVdKaGMyVWdkSEpoYm5OaFkzUnBiMjV6Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ01USTJOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzAzTUM0NE9UWXlNVEU1TURnd05UTXlPU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB5TVRFdU5qVTRPVGd4TWpZME5qazBOelZjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKM0JoZEdWdWRDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelkyT1RBek9EY25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFSdmRXTm9MWE5qY21WbGJpQnBiV0ZuWlNCelkzSnZiR3hwYm1jZ2MzbHpkR1Z0SUdGdVpDQnRaWFJvYjJRbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEybDBZWFJwYjI1ek9pQXhNell4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRrMkxqQTRNek16TXpVNE5qRXdNVFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF5TlRjdU1UZzROalkyTURRME1qQTVYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHdZWFJsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJOamt6TWpNeUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RKYm1KeVpXUWdZMjl5YmlCc2FXNWxJRXhJTWprMUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNVFU0TlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURJeU5TNHlNVE0yTWpNNU5qWXpORE16TXl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweE9ERXVOekF5TXpFeU1EZzNNemt3TVZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpZNU9EWTBNeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblJYaHdZVzVrYVc1bklIQmhjbUZzYkdWc0lHcGhkeUJrWlhacFkyVWdabTl5SUhWelpTQjNhWFJvSUdGdUlHVnNaV04wY205dFpXTm9ZVzVwWTJGc0lHUnlhWFpsY2lCa1pYWnBZMlVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJsMFlYUnBiMjV6T2lBeE16VTFMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dNVEUyTGprek16Z3dNRGc0TWpBd016QTRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dNakl3TGpJeE5ERTVOekExTkRNNU5qQTNYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHdZWFJsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJOekV4TlRZMUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2ROWlhSb2IyUXNJR0Z3Y0dGeVlYUjFjeXdnWVc1a0lITjVjM1JsYlNCbWIzSWdjSEpsZG1sbGQybHVaeUJ6WldGeVkyZ2djbVZ6ZFd4MGN5Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREV6T0Rnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE16Y3VOVEEwTkRneE1qa3dOelkzTXpVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1qY3pMalF4TVRZNU5UZzBOemt4TXpVMlhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkd1lYUmxiblFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk56RTJNak16Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0owVnNaV04wY205dFpXTm9ZVzVwWTJGc0lHUnlhWFpsY2lCaGJtUWdjbVZ0YjNSbElITjFjbWRwWTJGc0lHbHVjM1J5ZFcxbGJuUWdZWFIwWVdOb2JXVnVkQ0JvWVhacGJtY2dZMjl0Y0hWMFpYSWdZWE56YVhOMFpXUWdZMjl1ZEhKdmJDQmpZWEJoWW1sc2FYUnBaWE1uTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJsMFlYUnBiMjV6T2lBeE1qUTBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dPVGt1T1RnM05EUTVNamMzTkRBeE1EY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXlNVEl1TlRrMU1qY3lNams1TmpJMk1EWmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTNNVGd6TmpFbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUcGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW5UV1YwYUc5a0lHRnVaQ0JoY0hCaGNtRjBkWE1nWm05eUlISmxiR2xoWW14bElHRnVaQ0J6WTJGc1lXSnNaU0JrYVhOMGNtbGlkWFJwYjI0Z2IyWWdaR0YwWVNCbWFXeGxjeUJwYmlCa2FYTjBjbWxpZFhSbFpDQnVaWFIzYjNKcmN5Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREV6TkRrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1qRTBMalEzTURZME5UUXlNREF4TlRVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE56a3VOelkwTkRVek9ETXpNVEUxTkRWY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjNCaGRHVnVkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZM01qUXpPVGtuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRwY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBblRXVjBhRzlrY3lCaGJtUWdZWEJ3WVhKaGRIVnpJR1p2Y2lCbGJtRmliR2x1WnlCclpYbGliMkZ5WkNCaFkyTmxiR1Z5WVhSdmNuTWdhVzRnWVhCd2JHbGpZWFJwYjI1eklHbHRjR3hsYldWdWRHVmtJSFpwWVNCaElHSnliM2R6WlhJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEybDBZWFJwYjI1ek9pQXhNamN4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRNdU9EWTFORE0zTURrNE1ETTJOVGszTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRFMk9DNHdORFkyTlRBM05UazNOell4Tmx4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpjeU56VXlNaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblZISmhibk5wYzNSdmNpQmhibVFnYzJWdGFXTnZibVIxWTNSdmNpQmtaWFpwWTJVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEybDBZWFJwYjI1ek9pQXpNekF4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTkRVdU5Ea3pNREE1TURnMk5UTXpORGMyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRFNExqTTVPVE16TmpjMk1UZzJOVFUxTlZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpjeU9EY3dNaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNkVGVYTjBaVzBnWVc1a0lHMWxkR2h2WkNCMGJ5QnBiWEJzWlcxbGJuUWdZVzRnYVc1MFpXZHlZWFJsWkNCelpXRnlZMmdnWTJWdWRHVnlJSE4xY0hCdmNuUnBibWNnWVNCbWRXeHNMWFJsZUhRZ2MyVmhjbU5vSUdGdVpDQnhkV1Z5ZVNCdmJpQmhJR1JoZEdGaVlYTmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRJNU1DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMDFNQzQzTnpZMU1USTJPVFkwTnprMk5DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlOalV1TmpRek9UUXhOalkwTWpZeE9WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qY3lPRGsyTUNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5WR1ZqYUc1cGNYVmxjeUJtYjNJZ2JXRnVZV2RwYm1jZ2JYVnNkR2x3YkdVZ2RHaHlaV0ZrY3lCcGJpQmhJR0p5YjNkelpYSWdaVzUyYVhKdmJtMWxiblFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJsMFlYUnBiMjV6T2lBeE1qZzNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVE14TGpnMk1EazRNall3TURJM01qYzBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEUzTnk0d09UWXlOemt5TlRFMk5qQTNOVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OamN6TWpBNU5TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVFdWMGFHOWtJR0Z1WkNCaGNIQmhjbUYwZFhNZ1ptOXlJRzFoY0hCcGJtY2dZbVYwZDJWbGJpQllUVXdnWVc1a0lISmxiR0YwYVc5dVlXd2djbVZ3Y21WelpXNTBZWFJwYjI1ekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNVE14T0N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMwME5TNHhOelF6TURneU5qZzNOelUwTkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweE5USXVNak01TXpnek5UVXlPVGc0TURSY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjNCaGRHVnVkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZM016SXhNREFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owUmhkR0ZpWVhObElHRmpZMlZ6Y3lCdFpYUm9iMlFnWVc1a0lITjVjM1JsYlNCbWIzSWdkWE5sY2lCeWIyeGxJR1JsWm1sdVpXUWdZV05qWlhOekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNVE0wTnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMwMU9TNHlNVEF4TXpZNE1EWXlPVEkyTnpRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1UYzBMamd6T0RjM09Ua3dPRFE1TlRjeVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkd1lYUmxiblFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk56TXlNVEV4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0owMWxkR2h2WkN3Z1lYQndZWEpoZEhWekxDQnplWE4wWlcwc0lHRnVaQ0J3Y205bmNtRnRJSEJ5YjJSMVkzUWdabTl5SUdGMGRHRmphR2x1WnlCbWFXeGxjeUJoYm1RZ2IzUm9aWElnYjJKcVpXTjBjeUIwYnlCaElIQmhjblJwWVd4c2VTQnlaWEJzYVdOaGRHVmtJR1JoZEdGaVlYTmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRJNU5DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMDVNQzQzTXprM01EVXdORGM1TkRVeExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUSTBOQzQzTVRrNU1ETXlPRGMzTkRNeE5GeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qYzFORFk0TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9seHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDZFFZWEowYVdGc2JIa2djbVZ3YkdsallYUmxaQ0JrYVhOMGNtbGlkWFJsWkNCa1lYUmhZbUZ6WlNCM2FYUm9JRzExYkhScGNHeGxJR3hsZG1Wc2N5QnZaaUJ5WlcxdmRHVWdZMnhwWlc1MGN5Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREV5Tmprc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE56a3VOVGd3T0RNNE56QXpNVEkyTlRVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1qSTRMakUzTWpRd05UUXhOek00TkRKY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjNCaGRHVnVkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZM05qTXpOVEVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owMWxkR2h2WkN3Z1lYQndZWEpoZEhWekxDQmhibVFnYzNsemRHVnRJR1p2Y2lCaGRIUmhZMmhwYm1jZ2MyVmhjbU5vSUhKbGMzVnNkSE1uTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJsMFlYUnBiMjV6T2lBeE5EZzNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEkxTGpJME16UTNORGN6TXpRNU1qYzBNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB5TmpNdU1qVTNOREEzT1RRd01qRXdOamRjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKM0JoZEdWdWRDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelkzTmpNMU1ERW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFKbGJXOTBaU0JrYjJOMWJXVnVkQ0J6WlhKMmFXNW5KeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRNeE9TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERTFPQzR6TWpVek9ETTNOakl3T1RReUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ09UTXVORGsxTkRZeU16RTFNVFk1TVRsY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjNCaGRHVnVkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZM05qZzVNRFFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owUmhkR0VnWTI5dGJYVnVhV05oZEdsdmJpQnRaWFJvYjJRZ2RYTnBibWNnYlc5aWFXeGxJSFJsY20xcGJtRnNKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRJMU5peGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHpNRGN1T1RjMk1EWXhOVGd4TXpNME1UUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXhPQzQzTmprM05UWTJOemszT1Rjek9UWmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTNPREl6T0RNbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMU41YzNSbGJTQmhibVFnYldWMGFHOWtJSFJ2SUdsdGNHeGxiV1Z1ZENCaElIQmxjbk5wYzNSbGJuUWdZVzVrSUdScGMyMXBjM05wWW14bElITmxZWEpqYUNCalpXNTBaWElnWm5KaGJXVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRRMmwwWVhScGIyNXpPaUF4TWpneUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xURXlMamszTmpFM056VTFOemd6TlRnMU1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlOekl1T1RFNU5EUXdOREEzTXpjNU1WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qYzRNelV5TkNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5VbTlpYjNScFl5QnpkWEpuYVdOaGJDQjBiMjlzSUhkcGRHZ2dkV3gwY21GemIzVnVaQ0JqWVhWMFpYSnBlbWx1WnlCaGJtUWdZM1YwZEdsdVp5QnBibk4wY25WdFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRVd05TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklEUXpMak00TWpNeE1EazROamswTURZMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01qYzVMakE0TWpFM09EQXhNVFEzTnpFMFhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkd1lYUmxiblFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk56ZzJNemd5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0oxTjFjbWRwWTJGc0lITjBZWEJzYVc1bklHbHVjM1J5ZFcxbGJuUWdhVzVqYjNKd2IzSmhkR2x1WnlCaGJpQmhjblJwWTNWc1lYUnBiMjRnYW05cGJuUWdabTl5SUdFZ1ptbHlhVzVuSUdKaGNpQjBjbUZqYXljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklERXpOekVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF4TXpRdU9UUXdOemd4TmpRMU1ESTRNelVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TmpVdU1UQXdPREl6TnpNMU5qWXpPREZjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKM0JoZEdWdWRDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelk0TURRek16QW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjAxbGRHaHZaQ0JoYm1RZ2MzbHpkR1Z0SUdadmNpQmhZMk5sYzNOcGJtY2dRMUpOSUdSaGRHRWdkbWxoSUhadmFXTmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRNME9DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklEUXhMalEwTlRJMU1UY3lNemcwTWpnMk5TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlNell1T1RreE5UWTBPREV3T1RnMk5WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qZ3dPVFkxTXljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5WR1ZzWlcxbGRHVnlaV1FnWTJoaGNtRmpkR1Z5YVhOMGFXTWdiVzl1YVhSdmNpQnplWE4wWlcwZ1lXNWtJRzFsZEdodlpDQnZaaUIxYzJsdVp5QjBhR1VnYzJGdFpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREV5TlRBc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1Ua3lMak0yTmpVNU5EYzNOVFk0TURnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBNE5TNHlNREF6T1RjeE16ZzFPVEUxTkZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpneU5qVTJOU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblRXVjBhRzlrSUdGdVpDQmhjSEJoY21GMGRYTWdabTl5SUhObGNuWnBibWNnWm1sc1pYTWdkRzhnWW5KdmQzTnBibWNnWTJ4cFpXNTBjeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYVhSaGRHbHZibk02SURFeU5UTXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNVGczTGpJd01qQTNPRFl4TWpFME1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlNRFV1T0RBeU9EQTJOekUwTURrM05WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qZ3lOalU0TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5UV1YwYUc5a0lHRnVaQ0J6ZVhOMFpXMGdabTl5SUhWemFXNW5JR1pwYkdVZ2MzbHpkR1Z0Y3lCbWIzSWdZMjl1ZEdWdWRDQnRZVzVoWjJWdFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRJMk1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHhOek11TXprd056RTNNVE0wTXpRMU9USXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRPRFF1TnpRNE1UQTJORFV6T1RFd05USmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTRNalkzTkRVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMU41YzNSbGJTQmhibVFnYldWMGFHOWtJR1p2Y2lCemJXRnlkQ0J6WTNKcGNIUnBibWNnWTJGc2JDQmpaVzUwWlhKeklHRnVaQ0JqYjI1bWFXZDFjbUYwYVc5dUlIUm9aWEpsYjJZbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEybDBZWFJwYjI1ek9pQXhNamt3TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRjMkxqYzRNVEkyTkRNek1USXhNREExTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRFNE9TNHlNakUwT0RFM05URXlOVEExTkZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpneU9UWTFOU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNkTlpYUm9iMlFnWVc1a0lITjVjM1JsYlNCbWIzSWdjMlZ5ZG1WeUlITjVibU5vY205dWFYcGhkR2x2YmlCM2FYUm9JR0VnWTI5dGNIVjBhVzVuSUdSbGRtbGpaU0IyYVdFZ1lTQmpiMjF3WVc1cGIyNGdaR1YyYVdObEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNVEk1TWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURVMExqRTFNRFkzTWpFd056QXhPRFk1TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRFNU15NDFOVGsxTkRNeE1UVTBOVE0xT0Z4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpnek1ERTNOQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblRXVmthV05oYkNCcGJuTjBjblZ0Wlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNVE0wTlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURJME1TNDJPRE0yTlRZek1EUXdNREF5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTVRjNExqZ3hNREUxTlRRNU5ESTBOek5jYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKM0JoZEdWdWRDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelk0TkRJM05EZ25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVHBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FuVlhOaFoyVWdZbUZ6WldRZ2MzUnlaVzVuZEdnZ1ltVjBkMlZsYmlCeVpXeGhkR1ZrSUdsdVptOXliV0YwYVc5dUlHbHVJR0Z1SUdsdVptOXliV0YwYVc5dUlISmxkSEpwWlhaaGJDQnplWE4wWlcwbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEybDBZWFJwYjI1ek9pQXhNamN6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRJMU5TNDNOamN4TkRBeE56WXpPVEU0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRnNUxqTXdPVFF4TkRrd01UWXdNekE1WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyT0RRek5EQXpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkVGRYSm5hV05oYkNCamJHRnRjR2x1Wnl3Z1kzVjBkR2x1WnlCaGJtUWdjM1JoY0d4cGJtY2daR1YyYVdObEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNVEkzT0N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURnd0xqWXlNalkzT0RnNE16RTNOVEUxTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTWpBMExqWTNNalE1TWpreU9UVTNOVGN5WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyT0RVd01qVXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkSmJuUmxiR3hwWjJWdWRDQmxiR1ZqZEhKdmJtbGpJR0Z3Y0d4cFlXNWpaU0J6ZVhOMFpXMGdZVzVrSUcxbGRHaHZaQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYVhSaGRHbHZibk02SURFM09EUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNalk1TGpBNU16azJNalUzTVRZNU9ESXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQTRNQzQzT1RFMU1qVTBNRGt4TnpFd00xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qZzFNRGc1TlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5RWE56YVdkdWJXVnVkQ0J0WVc1aFoyVnlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRReU9TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHhNRFF1TnpFMU1qTXhOekk0T1RrNU56Z3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNak0zTGpZM05EZzVNRFV4TkRrMU16Z3pYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHdZWFJsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJPRFV3T1RRNUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKMU41YzNSbGJTQmhibVFnYldWMGFHOWtJR1p2Y2lCblpXNWxjbUYwYVc1bklHRWdaSGx1WVcxcFl5QnBiblJsY21aaFkyVWdkbWxoSUdFZ1kyOXRiWFZ1YVdOaGRHbHZibk1nYm1WMGQyOXlheWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYVhSaGRHbHZibk02SURFeU56WXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXhOekF1T0RrME9EUTNPRFkyTmpReU15eGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHhOVGN1TVRZeU16azVOak00TnpJM09WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qZzFNamt4TlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TVzVpY21Wa0lHTnZjbTRnYkdsdVpTQk1TREk0TTBKMFRVOU9PREV3Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ01UVTROQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREl4TkM0eU9EYzRNalV5TmpZMk56azNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEl5TVM0Mk5UQTJORFU1TURZeU5UY3pOVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5Oamt3TlRBMU55Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2RUZFhKbmFXTmhiQ0J6ZEdGd2JHbHVaeUJwYm5OMGNuVnRaVzUwSUdsdVkyOXljRzl5WVhScGJtY2dZU0JtYVhKcGJtY2diV1ZqYUdGdWFYTnRJR2hoZG1sdVp5QmhJR3hwYm10bFpDQnlZV05ySUhSeVlXNXpiV2x6YzJsdmJpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREV6T1Rnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeU1EUXVNalEwTXpFME1Ea3hOelF6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRjNExqRXdNREl6TmpjeU1qTXlOakEzWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyT1RVNU9EVXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSjFOMWNtZHBZMkZzSUhOMFlYQnNhVzVuSUdsdWMzUnlkVzFsYm5RZ2QybDBhQ0J0ZFd4MGFYTjBjbTlyWlNCbWFYSnBibWNnYVc1amIzSndiM0poZEdsdVp5QmhiaUJoYm5ScExXSmhZMnQxY0NCdFpXTm9ZVzVwYzIwbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEybDBZWFJwYjI1ek9pQXhNamM1TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTWpFMExqUTNOelF4TVRRd01qTTJOVGd5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRVMkxqSTVNVFU0TnpZek5qVTVNVEV5TlZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmprMk5ETTJNeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNkVGRYSm5hV05oYkNCemRHRndiR2x1WnlCcGJuTjBjblZ0Wlc1MElHaGhkbWx1WnlCaGNuUnBZM1ZzWVhScGIyNGdhbTlwYm5RZ2MzVndjRzl5ZENCd2JHRjBaWE1nWm05eUlITjFjSEJ2Y25ScGJtY2dZU0JtYVhKcGJtY2dZbUZ5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ01UTXpNQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREUzTVM0NE9USTBOekkzTURnNU9EQXlPQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzA1Tnk0ME1UQXdNalEyTWpVMU1ESTVNMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OamszT0RreU1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVTNWeVoybGpZV3dnYzNSaGNHeHBibWNnYVc1emRISjFiV1Z1ZENCcGJtTnZjbkJ2Y21GMGFXNW5JR0Z1SUVVdFltVmhiU0JtYVhKcGJtY2diV1ZqYUdGdWFYTnRKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRJM01TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklESXlNQzQ1T1RrNE1EQXpPREEwTURRMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUY3hMalF5TURjNE1UTTFOak0yTlRRMVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkd1lYUmxiblFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk9UZ3hOakk0Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFRkWEpuYVdOaGJDQnBibk4wY25WdFpXNTBJSGRwZEdnZ1lTQnNZWFJsY21Gc0xXMXZkbWx1WnlCaGNuUnBZM1ZzWVhScGIyNGdZMjl1ZEhKdmJDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREUxT0Rnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeE5UVXVNVEl5TURrMk5qYzNNemczTWpJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE9UTXVOamsyTWpnM05URTBOakF5T1RSY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjNCaGRHVnVkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpjd01EQTRNVGduTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRwY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBblUzVnlaMmxqWVd3Z2MzUmhjR3hwYm1jZ2FXNXpkSEoxYldWdWRDQm9ZWFpwYm1jZ2MyVndZWEpoZEdVZ1pHbHpkR2x1WTNRZ1kyeHZjMmx1WnlCaGJtUWdabWx5YVc1bklITjVjM1JsYlhNbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEybDBZWFJwYjI1ek9pQXhOREl5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTWpJM0xqQXhOelk0T0RRMU16YzVOamt5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTnk0d01qUXdOVFkyTVRFME5qTXdOVEZjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKM0JoZEdWdWRDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKemN3TWpVM05ETW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVHBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FuUlhoMFpYSnVZV3dnYVc1bWRYTnBiMjRnWkdWMmFXTmxJSGRwZEdnZ2NtVnRiM1JsSUhCeWIyZHlZVzF0YVc1bkxDQmliMngxY3lCbGMzUnBiV0YwYjNJZ1lXNWtMMjl5SUhacFluSmhkR2x2YmlCaGJHRnliU0JqWVhCaFltbHNhWFJwWlhNbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEybDBZWFJwYjI1ek9pQXhNelE0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRFek9TNHpNelE0TnpJM05UYzBOREkzTlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURRMkxqVXlNRFl4TVRFMU16TTBNems0WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MzTURRNU1Ua3dKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSjAxbGRHaHZaQ0JtYjNJZ1ptOXliV2x1WnlCYWJrOGdabWxzYlN3Z2JXVjBhRzlrSUdadmNpQm1iM0p0YVc1bklGcHVUeUJ6WlcxcFkyOXVaSFZqZEc5eUlHeGhlV1Z5TENCdFpYUm9iMlFnWm05eUlHWmhZbkpwWTJGMGFXNW5JSE5sYldsamIyNWtkV04wYjNJZ1pHVjJhV05sTENCaGJtUWdjMlZ0YVdOdmJtUjFZM1J2Y2lCa1pYWnBZMlVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJsMFlYUnBiMjV6T2lBek1qTTBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEk0T1M0eE1Ea3hPRGd6TXpZeE1TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMDVOeTQ1TmpjM05qa3pPRFUwT1RVek4xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk56QTFOVGN6TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9seHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDZFRkWEpuYVdOaGJDQnpkR0Z3YkdsdVp5QnBibk4wY25WdFpXNTBJR2x1WTI5eWNHOXlZWFJwYm1jZ1lTQjBZWEJsY21Wa0lHWnBjbWx1WnlCaVlYSWdabTl5SUdsdVkzSmxZWE5sWkNCbWJHVjRhV0pwYkdsMGVTQmhjbTkxYm1RZ2RHaGxJR0Z5ZEdsamRXeGhkR2x2YmlCcWIybHVkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYVhSaGRHbHZibk02SURFek1qVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXlNekF1TkRrMU1UZ3pPRFkwTXprNU9EZ3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXROVGt1TmpReU1qUTFOamM0TlRneU5EaGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6Y3dOakV3TVRRbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUcGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW5UbUYwZFhKaGJDMXpkWEJsY214aGRIUnBZMlVnYUc5dGIyeHZaMjkxY3lCemFXNW5iR1VnWTNKNWMzUmhiQ0IwYUdsdUlHWnBiRzBzSUcxbGRHaHZaQ0JtYjNJZ2NISmxjR0Z5WVhScGIyNGdkR2hsY21Wdlppd2dZVzVrSUdSbGRtbGpaU0IxYzJsdVp5QnpZV2xrSUhOcGJtZHNaU0JqY25semRHRnNJSFJvYVc0Z1ptbHNiU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYVhSaGRHbHZibk02SURNek16a3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXROUzQ0TURBNE9ESXdORFE1TURFME16a3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQTJPQzQxTWpZME1UVTVOVEF6TVRVeU5WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk56QTJORE0wTmljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5WSEpoYm5OcGMzUnZjaUJoYm1RZ2MyVnRhV052Ym1SMVkzUnZjaUJrWlhacFkyVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRRMmwwWVhScGIyNXpPaUF6TWpZNExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xUTXVOREF3TXpBek1UVXhPVGt4TXpjeE5peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklESTFMams0TVRNMU5qZ3pOakEwTXpZNE9GeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk56RXdOVGcyT0Njc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TR2xuYUMxbGJHVmpkSEp2YmlCdGIySnBiR2wwZVNCMGNtRnVjMmx6ZEc5eUlIZHBkR2dnZW1sdVl5QnZlR2xrWlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklETXlNek1zWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TVRjdU9ETTFOemcxTnpRNU56ZzFPREUzTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTVRrNUxqa3hPRGd6TnpJd01qRXdNekExWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MzTVRFeE56WTVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSjFOMWNtZHBZMkZzSUdsdWMzUnlkVzFsYm5RZ2FXNWpiM0p3YjNKaGRHbHVaeUJoYmlCaGNuUnBZM1ZzWVhScGIyNGdiV1ZqYUdGdWFYTnRJR2hoZG1sdVp5QnliM1JoZEdsdmJpQmhZbTkxZENCMGFHVWdiRzl1WjJsMGRXUnBibUZzSUdGNGFYTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRRMmwwWVhScGIyNXpPaUF4TWpjNExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ01UVXhMakl5TlRjNU9ETXlOVEkwTURRMUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUTTNMakUzTURrNU1EYzBOelE1TURFelhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkd1lYUmxiblFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjM01UUTNNVE00Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0oxTjFjbWRwWTJGc0lITjBZWEJzYVc1bklHbHVjM1J5ZFcxbGJuUWdhR0YyYVc1bklHRnVJR1ZzWldOMGNtOWhZM1JwZG1VZ2NHOXNlVzFsY2lCaFkzUjFZWFJsWkNCaWRYUjBjbVZ6Y3lCa1pYQnNiM2x0Wlc1MElHMWxZMmhoYm1semJTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREUwTWpnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeE9Ea3VNRGcyTVRRek1qTTROVGMxTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRjekxqWTVNVE13TXpreU5qZ3pPVEkwWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MzTVRVNU56VXdKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkVGRYSm5hV05oYkNCemRHRndiR2x1WnlCa1pYWnBZMlVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJsMFlYUnBiMjV6T2lBeE1qVTRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVFF4TGpJNU9UazFNVGcyTlRFNU5EUXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dNamt5TGpnME5qSTJOelExTXpjNE1qSmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6Y3lNVEU0TWpVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMGx1WkdsMWJTQnZlR2xrWlMxaVlYTmxaQ0IwYUdsdUlHWnBiRzBnZEhKaGJuTnBjM1J2Y25NZ1lXNWtJR05wY21OMWFYUnpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTXpJME5TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHpNVEl1TXpnek9UQTFOekl5TVRRM055eGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMDFMall4TkRVME1UVTJOekV6TXpBd04xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk56STBOamN6TkNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5VbTkwWVhKNUlHaDVaSEpoZFd4cFl5QndkVzF3SUdGamRIVmhkR1ZrSUcxMWJIUnBMWE4wY205clpTQnpkWEpuYVdOaGJDQnBibk4wY25WdFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRJNE9DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklESXdNQzQwTkRVMk16TTRNREE0TmpVeE5TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMDJNeTR4T0RnMk5UVTRPREEzTmpnNE5seHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk56STRNamM0TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5RMjl0WW1sdVpXUWdZbWx1WVhKNUlHOTRhV1JsSUhObGJXbGpiMjVrZFdOMGIzSWdaR1YyYVdObEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNekkzTXl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMweE1qVXVPRE13T1RBME1UUTNOems0Tml4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMwek1TNHlOemM0TnpjNE9UTTFPREEwT0RoY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjNCaGRHVnVkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpjeU9UYzVOemNuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxTmxiV2xqYjI1a2RXTjBiM0lnWkdWMmFXTmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTXpNeE9DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHhNamd1TWpneU9EZzJNamsyT1RZM01qWXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXROVFV1TWpZeE5EYzFOVGM0TURNek1qbGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6Y3pNak16TlRZbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUcGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW5URzVEZFU4b1V5eFRaU3hVWlNsdGIyNXZZM0o1YzNSaGJHeHBibVVnZEdocGJpQm1hV3h0TENCcGRITWdiV0Z1ZFdaaFkzUjFjbWx1WnlCdFpYUm9iMlFzSUdGdVpDQnZjSFJwWTJGc0lHUmxkbWxqWlNCdmNpQmxiR1ZqZEhKdmJtbGpJR1JsZG1salpTQjFjMmx1WnlCMGFHVWdiVzl1YjJOeWVYTjBZV3hzYVc1bElIUm9hVzRnWm1sc2JTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJRE15TlRFc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1UZ3VOVGszTlRVek1EVXpPVFUxTnpRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBNE9DNDVOVFV6TVRZeE1EZ3pPRGsyT0Z4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTnpNME1EUXhNU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNkVGVYTjBaVzBnWVc1a0lHMWxkR2h2WkNCbWIzSWdaMlZ1WlhKaGRHbHVaeXdnWTJGd2RIVnlhVzVuTENCaGJtUWdiV0Z1WVdkcGJtY2dZM1Z6ZEc5dFpYSWdiR1ZoWkNCcGJtWnZjbTFoZEdsdmJpQnZkbVZ5SUdFZ1kyOXRjSFYwWlhJZ2JtVjBkMjl5YXljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklERXlPRElzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF4TnpFdU1UUXdPRE14TlRVNU1UWTVPQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB5TURJdU1qUTRPRE0zTURnd05EUTRNRGhjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKM0JoZEdWdWRDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKemN6T0RBMk9UVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVHBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FuVTNWeVoybGpZV3dnYzNSaGNHeHBibWNnYVc1emRISjFiV1Z1ZENCb1lYWnBibWNnWVNCemFXNW5iR1VnYkc5amEyOTFkQ0J0WldOb1lXNXBjMjBnWm05eUlIQnlaWFpsYm5ScGIyNGdiMllnWm1seWFXNW5KeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRNNE5peGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERTROaTR5TlRnek16VXpNREV4TURFNU5DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlNUzQyTmpNeU1UZzNNekkwTlRJd09WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmNHRjBaVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk56TTRNRFk1Tmljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9seHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDZEJjblJwWTNWc1lYUnBibWNnYzNWeVoybGpZV3dnYzNSaGNHeHBibWNnYVc1emRISjFiV1Z1ZENCcGJtTnZjbkJ2Y21GMGFXNW5JR0VnZEhkdkxYQnBaV05sSUVVdFltVmhiU0JtYVhKcGJtY2diV1ZqYUdGdWFYTnRKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTVRNNE9DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklESXdOeTQ1TURJNU5Ua3pPVEF6TVRjNUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUZ3VOVE14TlRNek56TTNOakl4T0RnMVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkd1lYUmxiblFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjM016ZzFNakkwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0oxUm9hVzRnWm1sc2JTQjBjbUZ1YzJsemRHOXlJR2hoZG1sdVp5QmhiaUJsZEdOb2FXNW5JSEJ5YjNSbFkzUnBiMjRnWm1sc2JTQmhibVFnYldGdWRXWmhZM1IxY21sdVp5QnRaWFJvYjJRZ2RHaGxjbVZ2Wmljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklETXlNalFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TWpBNUxqZ3lNak13TkRneU5UVTFNek0xTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRFek9DNDFNVEF3TkRBNU9UQXdNamt6WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MzTkRBeU5UQTJKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSjAxbGRHaHZaSE1nYjJZZ2JXRnJhVzVuSUhSb2FXNGdabWxzYlNCMGNtRnVjMmx6ZEc5eWN5QmpiMjF3Y21semFXNW5JSHBwYm1NdGIzaHBaR1V0WW1GelpXUWdjMlZ0YVdOdmJtUjFZM1J2Y2lCdFlYUmxjbWxoYkhNZ1lXNWtJSFJ5WVc1emFYTjBiM0p6SUcxaFpHVWdkR2hsY21WaWVTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJRE15TlRnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeU1EVXVNREkwTnpVMk5qYzBORGMzTnpRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE9EVXVOamM0Tnpnd05qWTBORE13TXpoY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjNCaGRHVnVkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpjME1EUTFNRGduTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxTjFjbWRwWTJGc0lITjBZWEJzYVc1bklHRnVaQ0JqZFhSMGFXNW5JR1JsZG1salpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMURhWFJoZEdsdmJuTTZJREUxTVRjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeE5ESXVPRFV6TkRnNE5qRTNNekl6Tnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURFdU16TXlOVGc0TlRJNE1UYzBPRFUxTTF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTnpReE1USXdPU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblJtbGxiR1F0WldabVpXTjBJSFJ5WVc1emFYTjBiM0lnWVc1a0lHMWxkR2h2WkNCbWIzSWdiV0Z1ZFdaaFkzUjFjbWx1WnlCMGFHVWdjMkZ0WlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklETXlOVFVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUE1T0M0ME5qSXdOekl5TVRFNE16VXlPQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREV5TXk0d016QTRORGMzTlRNM01ESTNPVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OelExTXpBMk5TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVTJWdWMyOXlJR0Z1WkNCcGJXRm5aU0J3YVdOcmRYQWdaR1YyYVdObEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNekl6TUN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMwd0xqRTJOVGN6TnpRek9UUXlOamN4T0RVMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01UUXhMakk0T1RJeU9UTTFNams1TURJeVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkd1lYUmxiblFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjM05EVXpNRGczSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0oxUm9hVzR0Wm1sc2JTQjBjbUZ1YzJsemRHOXlJR0Z1WkNCMGFHbHVMV1pwYkcwZ1pHbHZaR1VnYUdGMmFXNW5JR0Z0YjNKd2FHOTFjeTF2ZUdsa1pTQnpaVzFwWTI5dVpIVmpkRzl5SUd4aGVXVnlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTXpJME1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklEWTBMamt5TmpFNU9UQTRNamN5TWpJeUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01UZ3hMamcwTlRrek5qWTFNRGt3TkRRelhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkd1lYUmxiblFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjM05EWXlPRFl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFVjbUZ1YzJsemRHOXlJSFZ6YVc1bklHRnVJR2x6YjNaaGJHVnVkQ0J6WlcxcFkyOXVaSFZqZEc5eUlHOTRhV1JsSUdGeklIUm9aU0JoWTNScGRtVWdZMmhoYm01bGJDQnNZWGxsY2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklETXlORFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TmprdU5qRTJOemt4TkRJNE5EZ3lOVEVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TVRjdU9UVXhORE14TnpZMk56RXhPVEkwWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2R3WVhSbGJuUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MzTkRZME9EUTJKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkVGRYSm5hV05oYkNCcGJuTjBjblZ0Wlc1MElHaGhkbWx1WnlCaElISmxiVzkyWVdKc1pTQmlZWFIwWlhKNUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNVEk0Tnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURFNE1TNDROREU1TkRrMU5UazVNVFk0Tml4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMwMkxqRXpNRE0xTmpZME5EVTBNVGMxT1Z4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTnpRMk9ETXdOQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblRXVjBhRzlrSUc5bUlHWmhZbkpwWTJGMGFXNW5JRzk0YVdSbElITmxiV2xqYjI1a2RXTjBiM0lnWkdWMmFXTmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5wZEdGMGFXOXVjem9nTXpJME1DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklEUXpMakUwTkRRM05ESXlPRGMyTkRrNUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ09EUXVNekE0TlRjME5EazRPRE01TURGY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjNCaGRHVnVkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpjMU1ERXlPVE1uTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRwY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBblUyVnRhV052Ym1SMVkzUnZjaUJrWlhacFkyVWdhVzRnZDJocFkyZ2dlbWx1WXlCdmVHbGtaU0JwY3lCMWMyVmtJR0Z6SUdFZ2MyVnRhV052Ym1SMVkzUnZjaUJ0WVhSbGNtbGhiQ0JoYm1RZ2JXVjBhRzlrSUdadmNpQnRZVzUxWm1GamRIVnlhVzVuSUhSb1pTQnpaVzFwWTI5dVpIVmpkRzl5SUdSbGRtbGpaU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYVhSaGRHbHZibk02SURNeU1UWXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXhNREF1TnpVNU9EUTBPVFUyTVRrM05qTXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXlOak11T1RNNU1qZ3hNVGMzTmpVek9EZGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6YzFNRFkzT1RFbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUcGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW5VM1Z5WjJsallXd2djM1JoY0d4cGJtY2dhVzV6ZEhKMWJXVnVkQ0IzYVhSb0lHMWxZMmhoYm1sallXd2diV1ZqYUdGdWFYTnRJR1p2Y2lCc2FXMXBkR2x1WnlCdFlYaHBiWFZ0SUhScGMzTjFaU0JqYjIxd2NtVnpjMmx2Ymljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklERXlOVGNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF4TmpJdU9EazVORE0zTkRrek9ETTRNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB4TXk0MU1EYzJOalF6TmpRMk1URXlOVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5jR0YwWlc1MEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5Oell5TURZMU5TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2ROWlhSb2IyUXNJR1JsZG1salpTQmhibVFnWTI5dGNIVjBaWElnY0hKdlozSmhiU0J3Y205a2RXTjBJR1p2Y2lCcFpHVnVkR2xtZVdsdVp5QjJhWE5wZEc5eWN5QnZaaUIzWldKemFYUmxjeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYVhSaGRHbHZibk02SURFeU5ETXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXlOek11TnpRMU16STFOekExT0RRM01TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHhNelF1TVRFNU5qazNNVFk0TURZM09ETmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozQmhkR1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6YzJNekk1T0RVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMU52ZVdKbFlXNGdaWFpsYm5RZ1RVOU9PRGszT0RnZ1lXNWtJRzFsZEdodlpITWdabTl5SUdSbGRHVmpkR2x2YmlCMGFHVnlaVzltSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ01UUTNOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREkxTGpFMU5qUXhNamN6TVRFek1EazVOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREl6TWk0Mk16Z3pOelExTXpZek1UWTFYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHdZWFJsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzNOall6TmpBM0p5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2ROZFd4MGFYQnZhVzUwSUhSdmRXTm9jMk55WldWdUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnBkR0YwYVc5dWN6b2dNakl4Tnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURFME9DNHpNVGN5T1RBM05UY3hORFF4TWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweU5USXVNVEl3TlRReE1UY3lPVFUyTWx4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuY0dGMFpXNTBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTnpZM05EWTFNQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblUyVnRhV052Ym1SMVkzUnZjaUJrWlhacFkyVWdZVzVrSUcxaGJuVm1ZV04wZFhKcGJtY2diV1YwYUc5a0lIUm9aWEpsYjJZbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEybDBZWFJwYjI1ek9pQXpORE01TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTWpZMUxqSXdOemMxTWpjek5URXhPRGcxTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nT1RjdU1EZzNOVE14TnpVMk5EazROemxjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKM0JoZEdWdWRDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKemMzTXpJNE1Ua25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFObGJXbGpiMjVrZFdOMGIzSWdaR1YyYVdObElHRnVaQ0J0WVc1MVptRmpkSFZ5YVc1bklHMWxkR2h2WkNCMGFHVnlaVzltSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOcGRHRjBhVzl1Y3pvZ016STRPQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREkwTVM0eU56UXpNalEzTlRZNU5qRTBOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJRGt5TGpVM09URTNNVFU1TmpZeE5UazFYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHdZWFJsYm5RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzRNRFV6TVRnMEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RUYjNsaVpXRnVJR1YyWlc1MElFMVBUamc1TnpnNElHRnVaQ0J0WlhSb2IyUnpJR1p2Y2lCa1pYUmxZM1JwYjI0Z2RHaGxjbVZ2Wmljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRGFYUmhkR2x2Ym5NNklERXlORGtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF4TWk0M05ERTNNemt5TnpRMU1UazROaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREl5TXk0ek16QTFNRGswTmpnMU16ZzFORnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MwTURneU5qQXlMVEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owRmtZVzBnU0dWc2JHVnlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREkzT0N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMwM09DNDVOemt4T0RNMk56ZzNPRE01TlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURFM05TNDRNelExT0RVMU1UazBOVFk1TjF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk5UVXhNamMyTFRFeEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RCWkhKcFlXNGdSM1YwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xURXlOaTQwT1RFMk16ZzVOamc0TWpBNE1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklEYzNMakExTXpreU5UUXlPRGswTkRNM1hHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTFOVEV5TnpZdE15Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUVd4aGJpQklZWFZpWVdOb0p5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklERTFMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEV6TXk0MU5EUTRNRFl4T0RVeE56VTFOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREV6TGpjek5qUTBNek0zT1RVME1qUXpYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelkzTXpJd09UVXRNU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblFXeGxlQ0JYWVhKemFHRjJjMnQ1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURNNExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xUUXhMalF6TURBMk1Ea3hNREUwTmpneExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xURXhOUzQyT1RRMk9ERXpOekEyTkRneE4xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzBNRGd5TURrM0xURW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBGc1puSmxaQ0JGTGlCTllXNXVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRGN6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRFMk5pNHlOVEV5TnpneU16UXhOelk0T0N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURZMExqSXhOREkwTlRVMk5qSXpNek01WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpjME1ESTFNRFl0TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5RVzVrY21WaElFTXVJRk5qZFdSbGNta25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREl6TWk0d01qRXdNVE0xTmpRNU5EUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXlNREV1TlRRek5qQTFOVE15TVRRMU5UTmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5Oakk1TlRVek1DMHhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkQmJtUnlaWGNnVFM0Z1VtbDBZMmhwWlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xURTRNQzR4TXpJM01ERXdPVE00TURnNE15eGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHhOelV1T0Rrek16VTROelV3TXpreU9EVmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OVGswTkRjNU1TMHhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkQmJtUnlaWGNnVnk0Z1UyTm9aWEp3WW1sbGNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dPRGt1TURNMU9UWTNPRGczTURJeU56RXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQTNNeTQwTVRrMk5qWXdNVFUyTWpBMU9GeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJOalkxTmpRNExUUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBGdVpISjZaV29nVUM0Z1RXRjZkWEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMweE55NDNOVGsxTnpjek9ERXpNekkyT1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMwNU1DNHdORE15TnpnNE5ERTBNVEV6T0Z4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk5UYzNOekkyTFRRbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMEZ1YVd3Z1N5NGdRVzV1WVdSaGRHRW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVGtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0T1RBdU1qY3lNemMzTWpZM05UZzFPREVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TVRReUxqRXhPVGd4TlRVek1USTNPRFJjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpNek5qRXpOeTB6Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZEJibWxzSUUxMWEzVnVaR0Z1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURJMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ05EUXVPVGMxTnpBd01ETTRPREl3TlRrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1UY3pMakU1TVRJMk16QTFNakUyTXpWY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qZ3lPVFkxTlMwekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RCYm5Wd1lXMGdVMmx1WjJoaGJDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXhNaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJRFk0TGpBek16UXhORGszTURnd09EQTRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEUxT1M0Mk1UWTBNRGt3TVRnek1ETXhYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelV5TnpZeU5qSXRNaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblFYSjBhSFZ5SUV3dUlFcHZhRzV6YjI0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ09TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERTROUzQxTURrMU5qWTBNelV5TWpJNExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUSXlPQzQ0TkRFNU9URTFPRGs0TkRBMVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6Y3dPREk0TXpJdE5DY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUVhsaGJtOXlhU0JGYm1Sdkp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklEVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXhNVFl1TURreU5qRTFOek13TVRBNU5URXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXhORGt1TVRjeE56WXdPREU0TnpVMU56TmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5Oak0zTURVNE5DMHhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkQmVtVnlJRUpsYzNSaGRuSnZjeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUE0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRJME1DNDBNVEk1TWpReE5URTVOREE0Tnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURFNU55NDBNREl3TVRBM01qazRORFl6T0Z4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMU56SXlPVGszTFRJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMEpsYUhKaFpDQkJjbWxoSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURjMUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xUYzJMamc0TmpNNU5UYzVPRGs1TWpZNExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01UUXdMalU1TnpRek5EZ3dNamcxTVRRMFhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6UTVOekl5TWpRdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUW1WdWJtbGxJRlJvYjIxd2MyOXVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRFEyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTVRJNUxqZ3dOek0xTURVeU16ZzVPREV5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRRdU5EZ3hPVGN5TlRVNU9ETTVPVGd6WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpjMk1qQTJOVFV0TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5RbXJEdG5KdUlGTndaWEpzYVc1bkp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklERXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXlOalV1TmprNE1ESTBOall3TWpFek5ETXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNVFl6TGpFM05EZzNOVGt5TmpneU5EZGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OalUxTVRJM05pMHhNaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblFtOWlJRTExY25SbVpXeGtkQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF4TkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMweE1EUXVOVGMyTURJMk5ERTJNRFV3TWpNc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBME15NHlNVGt5T1RNNE5qQXhOelE1TVZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk9EQTVOalV6TFRrbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMEp5WVdRZ1ZDNGdTR2wwWlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xURTNPQzQzTkRBMk9UUTBNamsxT1Rjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE1UUXVOVFkwTXpBeE1EY3hNREF6TVRGY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qWTJOVFkwT0MwMUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RDY21saGJpQkhjbTkyWlhNbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ015eGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMDBMakEyTXpjd016Y3lOelU1TXpVMU9TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMDVNeTR5TkRZMk5qQXlNVFl4TlRFM04xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzNNREF3T0RFNExUTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBKeWFXRnVJRW91SUVobGJXMWxiR2RoY200bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01peGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklESTFNUzQ0TnpneU5USTNNVFk1TWpJd09DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklESTRMakk0T1Rnd016RTVOVEkyTURBNFhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTJOVGcxTnpjdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUW5KcFlXNGdVUzRnU0hWd2NHa25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dPVFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF4TWpNdU1UazJNekU1T0RjNE16VXlOVGdzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TWpZNUxqVTFORGsxTlRJM056Y3hNVEZjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTlRRMk5UZzVOUzB4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZENjbmxoYmlCRUxpQkxibTlrWld3bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01UUTNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dNalE1TGpJM01UVTVNelV5TlRBNU5qazJMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dNVFE1TGpnNU5ESXlOamsyTlRNME5EUmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OVGswT0RBd05pMHhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkRFlYSnNZU0JOTGlCTllXNXVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRE13TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRFME9DNDBNVEUxTXpRM05qazROemd3TlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURJMk9DNHlNVEF5TXpZNE5UTXpOekF4WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZMU5UZ3pOVEV0T0Njc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5RMkZ5ZVNCRUxpQlVZV3hpYjNRbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ05URXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNalF5TGpFeU1ERXpOek01TmpBd09EVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXhMakE0TURreE1EVTROakUzTWpJME9ETmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OVEUzTmpZME5DMHhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkRGFHRmtJRk55YVhOaGRHaGhjR0YwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURJNExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xURXdOaTQxT1RjNE1ETXlOVFkwTlRJNE9TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklEVTJMamN5TkRFMU9UazJNalEzTXpZelhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTNNekl3T1RVdE1pY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUTJoaGJtUnlZV3RoYm5RZ1VtRnRhM0pwYzJodVlTQkNhR0YyYzJGeUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklEY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXROVFl1TkRRMk9USTBNak0yTURJNE5UZ3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNVEUwTGpNNE9UTTJNelUxT1RVeU5USXhYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelk0TURRek16QXROU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblEyaHlhWE1nU0dGMlpXNG5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dPQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJRGMyTGpVNE9UazJPVEkyTmpBM01ESTNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEl6TXk0MU9UTTNOalF5TVRjM05EazJPRnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MxT0RVNU9URTJMVE1uTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owTm9jbWx6ZEc5d2FHVnlJRUV1SUVwMWJHbGhiaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF6TlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURNeUxqUTVOVEk1TWpBeU9URTFOVEkyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTXpBM0xqZzFOVGczTVRVM016STVPVEUzWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpVNU5qTTVOVE10TXljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5RMmh5YVhOMGIzQm9aWElnVTNSaGRXSmxjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTXpndU9EYzJORGs1TVRjM016QTRPVE0yTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRJMU5DNDJPRFV6TXpjeE5EZzFOREEzWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZMU9UTTRNelF0TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5RMmgxYm05dVp5QlJhWFVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTXpBc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1qazVMalV4TXpVM01EY3pNamMxTnpZM0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01qZ3VOamt6TlRnMk1UTXpNVGM1TlRBMVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6VTNNRE16TlRjdE15Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUTJsdVpIa2dXR2x1WnlCUmFYVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNemNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TXpBM0xqWXdORGswTmpBeU1EZzRORGswTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRNMkxqQTVPVGMwTWprM05qa3lOVFUwWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpVek9ESXlNekl0TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5RMnhwWm1ZZ1NHRm5kV1VuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTWpVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1UVTRMamswT0RnNU1UY3dOemt5TWpFM0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ056VXVOVGN6TmpZeE1qVTVOamN3T1RGY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qVXpOVGt3T1MweEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RFWVhacFpDQkNjbUZrYkdWNUlGSjFjM1FuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVRBc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeU9UTXVPRGt6TnpneU5qWTRPREV5TVRVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE1EZ3VNalF3TkRVMU9USTJPVEEwTkRsY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5UY3hNemt4TVMweEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RFWVhacFpDQkRMaUJTWVdObGJtVjBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREV4Tnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMwM01DNDNNekU1T1RrNU5qY3lPVEEzTml4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURJNE15NDJPRGcwTlRBeU1UTXlOall4WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpVMU1USTBNall0TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5SR0YyYVdRZ1NDNGdUR1YyZVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBNU55eGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERTNOUzQyTWpJM016TTBOamd5T1RVNU15eGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklERTVOUzR3TXpNME9EQTVNakEwTWpjNE5WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzFOelUxTnpNM0xUTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBSaGRtbGtJRXRoY213Z1RHVmxJRkJsZEdWeWMyOXVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREV3TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRFeE5pNHhPVGs1TnpVNU16a3lNRFk0TVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURJek5TNDBNak14TnpRMk56YzJPRGN3Tmx4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk1EQTBNamMyTFRFekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RFWVhacFpDQk1MaUJTWVdKaVpYSnpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRGtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUE1TUM0d05UUTFOVEV6T0Rnek9UUTJOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB4T1RrdU56WTNNalF6TURJMk5qQTVPVEpjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTkRFeU56SXlOeTB4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZEVZWFpwWkNCVUxpQkhjbVZsYmljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeU5UTXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXpNakF1TURVek9EazFOalE1TXpRM05DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlMalUyTnpRME1EWTVPRE0zT0RNM056ZGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OVE15T1RZMU5TMHhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkRVpXRnVJRXd1SUVkaGNtNWxjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUE1TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nT0RJdU9UZzJPRE0zT0RZMk5UZzBOQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzAzTlM0d01UUTNNakUxTlRBd01qRXpPRnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTlRVeE1qYzJMVGtuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owUmxZbTl5WVdnZ1VuVndjR1Z5ZENjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeU1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHhNVGd1TWpZMU5USTVNemMwTlRFMU1EY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXlNQzR4TXpFME9ERXhPRGt4TURFMk9UVmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OalUxTVRJM05pMHhNQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblJHVnVibWx6SUZBdUlFSnBjMmh2Y0Njc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeE5peGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHhNVE11TURReE16ZzBNekkyTlRrNU5ETXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQTJPQzQxTXpRM09URTRNVFUyTWpJNVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6VTVNVGd4TlRrdE1pY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUkdWdWVtbHNJRmRwYkd4dmRXZG9ZbmtnUTJobGMyNWxlU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUE0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRJeU1TNHpORE00TVRZek1UazNOek15TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRFNE1DNHpNVEkxT0RnMk9EUXpOVGN5TlZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk9URXlPRE01TFRJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMFJsY21WcklFUmxaU0JFWlhacGJHeGxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREV5Tnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURFeU5DNHdNRFUyTWpNMk9UY3hORFl3T1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURNd0xqTXdNelV4T0RVM016SXhNek15T0Z4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk56RTRNell4TFRnbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMFJ2YldWdWFXTWdTaTRnVEdGU2IzTmhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRGNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TVRnMUxqRTJNelF3TWpjeE5URTFPRGdzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF4T1RFdU5EazRPREExTlRnd09UQTRPVFpjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpnMU1EazBPUzB4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZEViM1ZuSUZkaGNtNWxjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTVRrM0xqUXhNRGsxT0RZMk1qUTRPRGdzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TVRReExqVXhNVE0zTkRJMU9UQXhNamMzWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZMU16QTVNekl0TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5SRzkxWjJ4aGN5QkNMaUJJYjJabWJXRnVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRFF4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTVRFeUxqWTFPVEF5TWpBeU5qYzRPRGcyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRReExqazFNVGM1TkRFNU16UXdPREF4WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZME16UTFOVEF0TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5SRzkxWjJ4aGN5QkxMaUJYWVhKdVpYSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVEVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TWpRd0xqSXhNekExTVRnd016RTBOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzAxT0M0ek9EVXpORFV5TWpFM05qQTBORnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyT0RVd09EazFMVFVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owUjFZVzVsSUZkaGJtUnNaWE56Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURNc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1UUXhMamMzTVRJd016Y3dPVFUzTlRBMUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUSXpOUzQ0TkRrME5UZzRPRFUxTlRNek5seHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzNOak15T1RnMUxUUW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBWc2JHVnVJRVJwWTJ0cGJuTnZiaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUExTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRZdU5qVXdOekV5T1RVek5qVTVNak15TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTWpRekxqZzFPVEl5TkRrME9UYzNPVGsyWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpVMk1UWTFNekl0TXljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5SWEJvY21GcGJTQklaV3hzWlhJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01USTFMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEV6Tmk0Mk5qSTNOamt6TVRjNE5qYzRPQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREUwT0M0MU1EZ3pNekk0TnpNd05qZzBORnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTnpJME16azVMVEVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owVnlibk4wSUV0aGRHTm9iM1Z5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeU1DNDBOakEzTURVeE56YzRNVFk0TVRZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1UTTRMall6TVRZeE56UXpORFl3TkRkY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5EUXdNelk0TnkweUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RGZFdkbGJtVWdUQzRnVkdsdGNHVnliV0Z1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURZNUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ01UWTNMamd4TkRBMU9UYzJNalF3TXpJeUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01qTXVOalV6TnprME16UTROamN3TlRFMlhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTVNRFV3TlRjdE1pY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUm5KbFpHVnlhV05ySUVVdUlGTm9aV3gwYjI0c0lFbFdKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREV3TkRjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeU1EWXVPVFF3TlRVMk1ERXhOakU1TlRnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE16TXVOak0zT1RRME1ERTVNakl4TURWY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5UQTBNVEE0TmkwMEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RHY21Wa2NtbGpJRU11SUVOdmJHMWhiaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF4TVRrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE9UTXVNRGN4TkRFMU1qSXlNek0xTmpVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE9EY3VOakV6T0RJM09URXlNVFEzTnpSY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qUXpNemt5TVMweUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RITGlCV2FXTjBiM0lnVkhKbGVYb25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVGtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TWpVd0xqSXhOREU1TWpJd09EY3lORGtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF4TVRjdU56QTVNell4T0RneE1qZzNPRGxjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpVMU9ETTFNUzB4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZEhZWEp5ZVNCTkxpQlRkR1ZwYkNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeU1TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHhPVGN1TlRVd016TTRORE0zTURjd09EZ3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNVFF1T1RZNU1EVTBNVFUzTWpVMU1qWXhYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelUzTURjek5qa3RNaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblIyVnZabVp5WlhrZ1F5NGdTSFZsYVd3bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ016Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQTRPQzQzTnpjek1qRXlPVGszTlRrMk9DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMDFPUzR6TkRJNU5EUTJPVEE1TURRek1WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJPREkyTlRneUxUSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBkbGIzSm5aU0JGY21samMzTnZiaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRFMU9DNHdNakEzTURnMU5USTBPVGt6Tnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweE1URXVOREV6TlRVMk5qWXdOelUwTVROY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBblVrVXlPRGt6TWkweUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RIY21Gb1lXMGdWeTRnUW5KNVlXNG5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVGNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF6TURJdU1UVXhPVGN4TnpRNU9ERTVPVFVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF5TGprM01URTFNek13TVRJeE56RTRObHh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTVRRME5qYzVMVEVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owZHlaV2R2Y25rZ1V5QklaWEp0WVc0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ056QXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNVEEzTGpBNE56SXhNakV5TkRNNE1qVXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEl5TGprNU9UTXlOVGs0TURRM05UTTBORnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTmpBeE1EZzNMVEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owZDFZVzVuYUc5dVp5QlpZVzVuSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeE9ERXVPVFF3TURnMk9EQTRNREl5TVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURjM0xqWTJOemM0TmpJek16Z3hNVGxjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpVM056Y3lOaTB6Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZElaVzV5ZVNCRUxpQktZWGtuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMweE1qSXVNREl6TWpBME56WTVPREkwT1Rrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1UVTNMamsxTlRZMk56TXlOREU0TWpnMVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6UXlPRE13TWpRdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuU0dWdWNua2dVaTRnVTJsbGJtdHBaWGRwWTNvbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ016VXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXlOelF1TmpBME1UVTJNRE0zTVRJM01qY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNamN1TWpjek16QTVOakkxT0RRMU5qZGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5Oek15TXpNMU5pMDFKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkSWFXUmxibTl5YVNCSWFYSmhiV0YwYzNVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ05DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHpOaTQyTURVME1qUXlOVEU1TlRBME5EWXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXhNVFV1T0RVd01EZzVNekU1T1RnNFhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6UTNNRE13TVRrdE1pY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuU0dsa1pXOGdTRzl6YjI1dkp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklEWTRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVGt1T0RVNU5EVTNNRGswTWpNM016TXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dNVEV5TGpFNE16YzBOamsyTXpRNE9URXpYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelF5TlRNd05qRXRNeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblNHbGtaVzhnVDJodWJ5Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTFOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREUyTGpReU5ETTVOemd6TlRreE16azVNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREV1TlRrNE1USTVNRE15TVRFME1URTJNbHh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MxTWpjeU1EWTVMVFluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owaHBjbTl0YVdOb2FTQlBkR0VuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVRrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE5ESXVPVE13TWpNeE1qTXpNams1TlRZMUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ056SXVNRE13T0RFMU56Z3lPVFl4TVRoY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5UQTBNVEl3TUMweEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RJYVhKdmJXbDBjM1VnU1hOb2FXa25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dOREFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TWpRd0xqUTFNRGsyTWprek16a3lPVFlzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TVRVd0xqSTNOakF4TWpZMU9UZzRNelV5WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZNE5qTXpOak10TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TR2x6WVhSdklGbGhZblYwWVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBME1DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklEWXdMalF6TnpJeE5EYzJOalUwTlRVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBMU5pNDBPVFkyTkRreU1UZzRNVE00TjF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjM016ZzFNakkwTFRJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMGhwZEc5emFHa2dTRzlyWVhKcEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklETXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNalF4TGpnek1UQXpNek0zT1RrMU1URXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNVE16TGpVME1EUTVOemM1TWprMU5ESTRYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelV3TkRFeU1EQXROQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblNXdDFhR2x5YnlCWllXMWhaM1ZqYUdrbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01UQXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNakk0TGpjNE1EZzJOekF4TnpFNU1UVXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEUyTWk0ek5qWTNNVFU0T0RVMk1ERTNYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelE1T1RjeU5qSXRNU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblNXdDFieUJUWVd0dmJtOG5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dPU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB5TWk0ME5URTFOVFkyTlRJek9UTTVORE1zWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TXpRdU1EUTNOVEF4TmpnME1UZ3lNVEZjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTlRBNE1UUXlNaTB4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZEpjMmhwWVc1bklGTm9hV2duTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTWpnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1qZzJMak15TnpBM056VTVOREF6T1RZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1qTXVOek16TVRBMU1URTVORFU0TkRrM1hHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WXlPREU0T1RndE1pY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuU21GamNYVmxiSGx1SUVFdUlFMWhjblJwYm04bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ05ETXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXROemN1TkRBME1qWTJOelEyTXpBeU5UZ3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXlNek11TVRRek5qWXlNRGt6T1RjME1EWmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OalkyTlRZME9DMHpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkS1lXa3RTbVZwYmlCWmRTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVE14TGpnME1EQTFNamcyTkRreU5qY3pMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVGt4TGpZeU16YzFOelEzTXpZME1URTVYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelE0TURrMk9UY3RNU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblNtRnRaWE1nUkM0Z1EyRjFjMlY1TENCSlNVa25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVEE0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRFM09DNHlOalV5TVRZeE1qQTBNaklzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUExTVM0M05UVTJPREE1TXpBM05EWTJPRFZjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTkRnMk16UXlOUzB5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZEtZVzFsY3lCTUxpQklaVzVyWlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeU5TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHlNamt1T0RJMk16SXpNalkyT1RNeE5EUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQTRNUzR4TkRnek9URTRNelV3TkRVeFhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6VTFNek15TXpndE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuU21GdFpYTWdVMkY1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFeE5TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHhNVEF1TWpZMU1UUTJOVEExTlRBek1UTXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXhPRGt1TnpNNE5ERTVNRGN5TmpFek56UmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OamN4TVRVMk5TMHlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkS1lYTnZiaUJhYjNOekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklERTBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVE0yTGpjNU56WXpOVGd6TURReE16TTRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVE13TXk0ek5qQTJNamt6TVRRd01EVTNYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelkxTlRFeU56WXRPQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblNtRjVJRmx2Ym1WdGIzUnZKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREkyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRFd09DNHpPVEEyTURFeE5UQTJOVFk1Tml4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURNd0xqWTJOelV6TURrMk5EazRORGd4TjF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMU9EWXpNekkyTFRFbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMHBsWm1aeVpYa2dSUzRnVG1GMWMyVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB6TkM0NU56UTJPRGM0TWpZMU1UTTVPU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREl5TlM0MU16YzRNVEkzTmpZM01qUXlOMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MwT1RVeE1qYzRMVEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owcGxabVp5WlhrZ1NTNGdRMjlvWlc0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ05EVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNVEEyTGpZM056STVNalUyTURBek5ESXlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEkzTlM0NU5qWTFOVGMyTlRFNE1qRXlNMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTXprek5qQTFMVEVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owcGxabVp5WlhrZ1RHOXZiV0Z1Y3ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xURXlMakE0T1RVeU16STRNRGcyTWpFMk5DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHhORFl1T0RjeU9UVTJPRGt5TlRBMU5qUmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OVEkwTXpZeU1pMHlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkS1pXWm1jbVY1SUUwdUlFWnBjMk5vWlhJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01qTXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXROamt1TVRFMU1UQTFOelkwTURNMk5qTXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNVEl4TGpVNU5UazJNak00TWpjNE9URXhYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelU0T1RjMU5qTXROQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblNtVm1abkpsZVNCVExpQlRkMkY1ZW1VbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01qTTNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dNVGd5TGpjMU56VXlNVGczTnpBM01USXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXROREl1TmpVeU1qWTBPRGMxTXprM09USTFYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKemMyTURnM05qRXROQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblNtVnVibWxtWlhJZ1VtbHVaV2hoY25RbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ09TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERTBMall3TXpBek16Y3hOelkwTkRnM055eGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklESTFPQzR3TVRZNU16Z3dOemswTXpBM05seHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzNNemd3TmprMkxUTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBwbGNuSjVJRkl1SUUxdmNtZGhiaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTWpRd0xqYzNPVEl6TlRFeU5UTTVNVGN5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTUM0M05UWXhPRFUyTlRVeU1qSTJNalZjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTlRjeE5UUTFNQzB4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZEtaWE56WlNCQmJXSnliM05sSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFNUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ016WXVNVGd3TkRJek5URTBOVEE0TWpBMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUSTNNUzR4TVRneE5URTRPVEUyTmpZMU4xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJOekV4TlRZMUxUTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBwcFlXNHRTblZ1WnlCWmFXNW5KeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREUxTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRVeUxqUXdOVGswTXpZeU9URTJNREkzTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRJNU9DNDJNakE1T0RVeU5EUTJOVGMzWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZMU1UWXlNamN0TkNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TbTlsZVNCRGFHVnVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRFV3TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRFMU5DNDFORFkyTnpFek5qSTVNRGs1TXl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURJd09DNDVOVEEzTWpJNE1EY3pORE16TjF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk1qTXpOakUzTFRJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMHB2YUc0Z1EyOXJaWEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTWprc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1UQTNMamd4T0Rrek9ERTFOak15TVRRMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xURTNNQzQ1TURjME5qYzJNak14TmpVMlhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6UTFOakUwTkRRdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuU205b2JpQklMaUJNYVhacGJtZHpkRzl1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURNeExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xURTFNaTQ0TlRNd01EUTBORFU0TXprMU5peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklEZzFMakV3T1RRd01EQTRPVFkwT1RZM1hHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6VXlNemN4TnpndE1pY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuU205b2JpQktMaUJOWVhOMGNtOTBiM1JoY204bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ056Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNakExTGpRNU56TTVOVGt3T1RVNE5UTXlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dOVEF1TXpFME56YzVOekEwT0RRNE5qaGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OalF5TkRnME55MHpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkS2IyaHVJRW91SUZOb2FXNG5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB4T0RVdU16YzBORFl6TlRVM01UQXpPRFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TXk0eU9EY3lNREkzTVRBMk1qTTFPRGsxWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpVM01UTTVNVEV0TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TbTlvYmlCWExpQkNaV0Z5WkhOc1pYa25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVEV3TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRNekxqZ3hORGMxT1RnNE5qTTRNakF5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTWpZeUxqZzRNalkzTWpFeE1URXpOekkxWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZMk9UQXpPRGN0TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TbTlvYmlCYWFXMXRaWEp0WVc0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01UWXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNVEF6TGpnMk5ETTJOREk0TlRBeExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01qZzNMakF6TWpReE5USXdOemN3TXpWY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qSTVOVFV6TUMweUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RLYjI1aGRHaGhiaUJDY21Ga2MyaGhkeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUEzTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRJeE1TNDROekUwTWpZd09URXdORGM0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRJeU5DNDFNRGt3TkRjNE56UTBOVEV5TTF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk9UWTBNell6TFRJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMHB2YzJWd2FDQkRhR0Z5YkdWeklFaGxkV2xzSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeE5UY3VPRGswT1RBNU5qQTVOelUwTWpnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1USTJMalEwTnpneE9ETXhPVGMxTURZMFhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTRNRFF6TXpBdE5DY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuU205elpYQm9JRWhoY21JbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01UWXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQTJNUzR4TWpZMk5EZ3lNalExT0RVMk5peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlOamd1TVRrd09EZ3hOall4TVRnNU9WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzNNVFUwTkRjM0xUSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBwdmMyaDFZU0JCTGlCVGRISnBZMnR2Ymljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBek1TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERTBNeTQyTURjM01qYzJORFU1T1Rrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1qZ3hMalkyT1RNMk9USTJNVEUwTWx4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk5qWTFOalE0TFRFbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMHRoY21WdUlFSnliMlJsY25ObGJpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVFV5TGpnNE56YzJNVFl4TnpRd05qYzBOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB4TXpVdU1qVXpNalEyTURFeU1USTNORGhjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpreE5ERTRNaTB4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZExZWFJ6ZFhSdmMyaHBJRlJoYTJWa1lTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXhNaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB6TURFdU9EazBNek0wT0RjMk9URXhPRFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TnpBdU5ETXpNalEyTlRBNE1EZzVNRFpjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTlRreU5USXlOQzB4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZExZWHAxYTJrZ1MyOWlZWGxoYzJocEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklESXlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVFF4TGprd01EWTNOamt4T0RBNU5qUXhOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJRGN1TXpBeE16VTROVGsyTmpJeU9URXlYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKemN3TmpFd01UUXROQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblMyRjZkWE5vYVdkbElGVmxaR0VuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nT0N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMwek55NDJOalE1TmpNMk16UTBPRE15TXl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURVNUxqWXlORGMxTlRZMU56TTRNamcyWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpRek5UWTBOVFV0TXljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TMlZwYzJocElGTmhhWFJ2Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURZd0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ01UQXVNakU1TVRRd05qTXpPVEV3TURnMUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01URTBMall3TmpFeE1EQTRORFl3TlRZM1hHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WXhOelUzTlRJdE9TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUzJWcGRHZ2dRUzRnUm5KcFpXUnRZVzRuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTlRZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE56SXVOelkwTnpnek9UazBNekkyT1RJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE5UY3VPVFl5T0RBeU5EWXdNVFEzTXpSY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBblJESTJNems0TnkweEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RMWldsMGFDQk1MaUJOYVd4c2FXMWhiaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF4TkRnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeU9EVXVNamN3TlRVeE5EWXpNRGs0TURZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE5DNHhOakUyTURjMk9UazVOVEk0TkRWY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBblJETXdOREl6TkMweUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RMWldsMGFDQlNZWFJqYkdsbVppY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTNOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREk1T0M0eU5UUXpPRFkxTlRZME5EVTROeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzAyTWk0d016YzNNek01T1RBM016QTJNVFZjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpnek9ETTVOeTB6Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZExaVzVuYnlCQmEybHRiM1J2Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURNd01TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklESXpNeTR6TURVNU1UQTRPVEk0TkRFeU5DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklERXhPQzR4TWpnMk5UZ3hORGMwTkRJNE0xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzBNRGN5TWpNMkxURW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjB0bGJtcHBJRTV2YlhWeVlTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTNNaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB4T0M0ME9URTFOek0yTWpBM05EZzBOVFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF4TmpRdU16TXhPVGMwTXpnNE1qQTROVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MwT0Rrd05qRXhMVE1uTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owdGxibTVsZEdnZ1NDNGdUVzlzYkdWdVlYVmxjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF4TXprc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeE56RXVNVEl4TXprd09Ua3hNalV5T0RRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE5Ea3VPREkzT0Rrek1qRTRNekl3TjF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMU5EQTVORGs0TFRRbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMHRsYm01bGRHZ2dVeTRnVjJGc1pYTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNelFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF4TlRFdU5qRTFNRFkxTURBME9EWXpOalVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TmpndU1UY3hOVE13TVRBNU5qazNOVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTlRVNE16VXhMVEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owdGxjbk4wYVc0Z1VtVmljbWx1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1qRXpMams1T0RNeU5qUTRNakU1T0RrekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xURTRMakl4TURJd016VXdPVGN3TmprMVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6Y3dPRE13TnpVdE15Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUzJWMmFXNGdVaTRnUkc5c2JDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXpNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREU1TlM0eE56RTJNVGcyTVRJNU5qUXhNaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREl4TGpneU56VTNNVGt3TnpFNE1qZzJYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelk0TWpZM05EVXRNeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblMyVjJhVzRnVWk0Z1RtbDRKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRFVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TVRFekxqVXlNekU0TXpRNU5qYzVOemcyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRFNE5pNDJOVGcxTURRMk5EQTVOemMyTjF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjME5qZ3lOVGsyTFRJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMHRsZG1sdUlGY3VJRk50YVhSb0p5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklESTBOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREUwTWk0d01UVXhOekExTWpZeE9USXlOQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJRE0xTGpNeE56RXpNRE15TURRd01ERTRYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKell6TXpZeE16Y3RNU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblMybHVaeTFJZDJFZ1RHVmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRGNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF5T1M0eE16WTBNVFk0TWpFek9EazFORFVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TVRVeUxqZ3pPRGt5TWpjNU1UQXdNVE0xWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZMU5UTTFOak10TXljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TMnhoZFhNZ1Z5NGdVM1J5YjJKbGJDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dNVGd1TlRBeU1qWTVPREF5T0RrMk1UZzNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEkzTnk0NE5ESXlPVEV4T1RFMk5EUTROVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MxTnpFMU5qYzFMVEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owdHZjbVY1SUV0c2FXNWxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRFkzTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTVRBM0xqTTVNamd3T0RZME1EUTJOVFlzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF3TGpFeU5EazNNVFk0TXpreE1qQTRPRGd4WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZM01UZ3pOakV0TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TM0pwYzJodVlTQk5ZVzVuYVdGd2RXUnBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRElzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TWpJeExqUXlNelV4TVRneE1EazFNemMyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTWpFd0xqWTRORFl5TVRBM05qSXhOamsyWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZMU56YzNNall0TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TM1ZoYm1jdFdXRnVaeUJJZFdGdVp5Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEV4TUM0NU1ESTVNelEzTkRReE9UWXpOQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB4TkRRdU1URXdOelEzTnpJM05EQXhPVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MzTVRVNU56VXdMVFVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oweGxaU0JCYm00Z1QyeHpiMjRuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVRBeUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xURXlMakk1TVRBME5UY3lPVGd4TmpVNU15eGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklESTROQzR6TWpJNE1qUXdNamMyTnpGY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qY3hPRE0yTVMwMEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RNWlhKdmVTQlNMaUJMWVhKblpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTJMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEkwTmk0MU5qZzVPRFE1TlRrd01UZ3lPQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREUzTmk0NE5qUXpNRGd5TkRnNU1USTRYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelkxTlRFeU56WXROQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblRIVnBjeUJLTGlCTllXeGhkbVVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTWpVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1UVXdMalEyT1RVMU1UVTROREV5TVRBMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01UVXVORFkyTmpneE16VTFOVGswTURRelhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WXdORGd4TVRBdE15Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVEhsdUlFMHVJRWx5ZG1sdVp5Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTFNQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREU0TlM0NE9UTTJPREkxTlRJd016WXpPQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREl4TVM0M016UTVOek14Tmpnek56UTBORnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTnpFNE16WXhMVE1uTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oweDVibTVsSUUwdUlFMTFjbUZqYUNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xURTROQzQxT1Rjek1UWXhNalU1T1RNM09TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklERTJPQzQ1TlRRMU9UQXpNREV5T0RRd05GeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzFPVFE0TnpnNUxURW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjAxaFoyNTFjeUJNWVhKemMyOXVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRE15TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTWpneUxqTTBPVGczTkRNME9USXpNRFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TVRBMUxqZzFNemt3TlRjMk9ETTVOREE1WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZNE1qazJOVFV0TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5UV0ZuYm5WeklGWmxhbXh6ZEhKMWNDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTFMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dPRFF1TlRjMk9ETTBNakExTURVNE5Ea3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNakV4TGpZd05UUTJOVGt4TVRJNU1USXlYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelkzTVRFMU5qVXROQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblRXRnlZeUJEWVd4MFlXSnBZVzV2Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFNExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xUSXhMalUzTWpVd016VTBOekF6TVRjMk5TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHpNRE11TWpVd01ERXlNRFE0TURBNE9EUmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OekEzT0RVd015MHpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkTllYSnBZVzV1WlNCTllXeDJaVzRuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTWpRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBek9TNHpOalEzT0RreE1qRTRNems0TWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURJd05DNDFNRGMyTVRBNE9ESXpOemsyTWx4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk1qSXpNakExTFRJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMDFoY21zZ1JTNGdRM0p2ZG1Wc2JHRW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVEVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TWpNNUxqRXpNRFkzTXpNNU1qQTNOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREUxT1M0MU16ZzJNalk0TVRJd056QXpYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelkyTWpFNE16UXRNaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblRXRnlheUJTWVc1a2JHVWdRbTk1Ym5NbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ09TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklEa3lMamsxTVRVNU9URXpOREE0TkRRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE16a3VOekkwT1RFMk9UazBNVGd4TWpsY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5UVXpOREV6TWkweEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2ROWVhKcklGTXVJRlp5WldWclpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTVPU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB4TWpZdU1UYzBNVFF5TkRBNE1qVXlNRElzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF4T0RJdU1UUTRPRFk0TURFM05EZzFNelJjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTkRnNU1qSTBOQzAwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZE5ZWEpySUZNdUlGcGxhVzVsY2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeE1USXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQTROeTQ0TmpVMU1USXpNemswTkRjNU1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMDVNeTQyTVRRek5UazBPVGt3TmpnMk5seHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJPREk1TmpVMUxUWW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjAxaGNuUnBiaUJUZFhOelpYSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dPQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJRGcyTGpVeE5qWTBORGszTVRZek1URXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNVGMyTGpNMk9EQTFOamcyTWpRNE5ESmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5ORFE0TmpjeU1DMHhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkTllYTmhhR2x5YnlCSWFYSmhibThuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTmpRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1qWXVORGN6T1RReE1ESXhNekk0T0RNMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ05UQXVOVGd6T0RjM05UQXhNamczTkRjMVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6VTJNakkyTlRNdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVFdGellXaHBjbThnVDNKcGRHRW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVE1zWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TkRNdU16RXhPVFF6TlRFeU5EWTVOVEEwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nT0RndU1EVTROVEkwTURFd09USXpOakpjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpBNE1EazVPQzB6Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZE5ZWE5oYnlCSmMyOXRkWEpoSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURNc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1qYzNMakUyTnpNNU5qZzNNek0wTVRrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE5qa3VNVFl6TVRNMU9UQXpOVGczTmpsY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5Ea3dNalkzTVMwekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2ROWVhOaGMyaHBJRXRoZDJGellXdHBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRFEwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTWpVdU5EazVPRE0wT1RneE56VXhOVEExTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTVRJdU5EVTRPRE0xT1RZeU9UQTNOelk0WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpVeE1UYzRNemd0TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5UV0YwZEdobGR5QkJMaUJRWVd4dFpYSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNakV6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTVRFeExqZzBORFF3TnpFNU5URXlPRGN4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTVRjdU5UVXpOVEl5TkRNNE5UUTNNekZjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpVM056Y3lOaTB5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZE5ZWFIwYUdWM0lGTXVJRTFoYkdSbGJpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXhOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzA0T1M0M056STRNVGN4TlRjMk1qRXhNaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB5TVRJdU5USXdNREE1T1RRNE1EYzBOVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTmpZMU5qVTFMVEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owMXBZMmhoWld3Z1FTNGdUWGxsY2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xUSXlNaTR4TlRRNE9UZzBNalkyTWpjNExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUa3hMamc0TXpjd056YzVPVGczTVRJMVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6VTJNekkwTXpJdE5DY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVFdsamFHRmxiQ0JGTGlCVFpYUnpaWEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTkRZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeU16WXVNVFExTXpRNE5qa3dOVGt4TlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweU9TNDFNek13TkRNME16YzBNVFkyTnpaY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5UTXdOall5TXkwekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2ROYVdOb1lXVnNJRVl1SUZSdmJXRnpZMjhuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nT0Rrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1UTTJMak0xTURNME1ESXlNekF4T1RJMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01UWTJMamczTXpjMk56ZzJNRGsxTXpZeVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTJNRFkzTkRRdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVFdsamFHRmxiQ0JITGlCTmFXdDFjbUZySnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ01UUXpMakEyTVRBM01USXpPREk0TnpnM0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01qQXpMalk0TmpVd01ETXdPRFkwTmpnMlhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WXlOalF3T0RjdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVFdsamFHRmxiQ0JRTGlCWGFHbDBiV0Z1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFek5DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklEZzRMak14TXpNd056a3dPVGc0T0RJeUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01qTTNMakV3TkRjMk5USTRNRFU0TkRJeVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTJOalUyTkRndE1pY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVFdsamFHRmxiQ0JVYzNWdVoyaHphU0JaZFNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ055NHpNRFExTlRrM05ERXhPRGd4TURBMUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xURXdNUzQyTWpnNU16TTBOams0TmpNeU0xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJNRGd4TlRFNExURW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjAxcFkyaGxiQ0JMTGlCQ2IzZHRZVzR0UVcxMVlXZ25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dOVFlzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF4TlRNdU5UVTRNRFUzTURNeU9USTJOelFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF5TnpndU56VTROREUyTXpVNU1EUXdNMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MwTWpJME56STFMVEVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owMXBZMmhwYnlCTFlXUnZkR0VuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVRjekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ056QXVNalV5TkRreE1UQXdOamN3TVRFc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeU5qQXVNVGMyTXpBMk9EUTFNREEzT0RSY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qZzFNRGswT1MweUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2ROYVd0bElFMTVaWEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURJd01DNDVPRFF4TURBeU56STVNRFkzTnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweE5qVXVNVGd3TURrNU5ERTFPVEU0TjF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMU1qWXhNRE0zTFRJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMDFwYmlCYWFIVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVEU1TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTVRnM0xqSXhOemczT1Rrd05URTVORFExTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTVRFNUxqRTRNRFV5TXpJeU1qUXhNVEkwWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZM016SXhNREF0TkNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5UV2x1WjNSbElFb3VJRU5vWlc0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMDNOQzQ0T1RNNU5qZ3lNVEV6TlRBMU5DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHhORFF1TkRneE5URXdNVEU0TkRBNU9EWmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OVEUzTmpVd01pMHpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkTmFYUmphR1ZzYkNCS0xpQlFZV3h0WlhJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ05EQXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXpNVFV1Tnprd09USTJNakV6TXpjMU16Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXROVGd1TnprMk5qWTVNemswTVRrM05qTmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5Oek00TlRJeU5DMHpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkTmIzUnZhR2xyYnlCWmIzTm9hV1JoSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1qTXhMakU0TnpZNE16STBPRFEzTkRRekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xURXhOaTQwTlRFd056YzFOamM1TVRJM01seHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzFPVEU0TVRVNUxURW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjAxMWJtUnBJRVp2YlhWcmIyNW5KeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREV5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRJeU1TNDJNalV5TmpneE5UTTFNekU0Tml4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweU1ERXVOelV6TVRjek9EZ3lOalUwTnpWY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk56WXpNams0TlMwekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RPWVc1amVTQlVZWGxzYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ05TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklEVXdMakF4TlRnNE5qUTVNamsxTmpnME5TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklESXlOeTR5TnpVNU5UUXdOemd3TkRrM1hHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6YzBOamd6TURRdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVG05aWRYbDFhMmtnUzJGcWFTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXhOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJRFF4TGpneU1qTTNOakE0TWpFMk1UWTVOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJRFV5TGpVeE5ESTBOamMxTWpnMU5ESTFOVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MzTWpBMU56RTJMVFVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owNXZjbWxvYVhSdklGTnZibVVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVRrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeU5qa3VNVEUxTURZMU5UWTNNekUwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTnpBdU1ERXlNalE0TXpZeU5Ea3pOVGhjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTlRNMU9EVXhOQzB6Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFFZWFZzSUUwdUlFMWxZV1J2ZDNNbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ056QXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNVGN4TGpJMk9UYzFOVE14TmpNNE5EY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXlOVFl1TlRRM09UUXpPVEE0T0RjeE56TmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OalUxT0RNMU1TMHpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkUVlYVnNJRll1SUVkdmIyUmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREUxTkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMweU16QXVNVFl4TVRReE9UWXpPVEE1TXpZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1UTXVOREV3TXpFME9EUTFNREF4T1RFelhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTNNVEUxTmpVdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVUdGMmFYUnlZU0JUZFdKeVlXMWhibWxoYlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeU1DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMDJMak0zTWpjME9ETTBOemswTnpNek9DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlPVGN1T1RZM01ESTJORGt3T1RBMk9GeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDZEVOREl6TnpZeExUTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFCbGRHVnlJRWh2Ym1jbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01qVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNakEzTGpBeU9URXpORFEwTkRVNE56VTJMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dNVEV6TGpJd05EUTBOemN5TURjM05EWmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OakUxTWprNE55MHlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkUVpYUmxjaUJOWVhKa2FXeHZkbWxqYUNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeE1UQXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNVEV6TGpjd05UUXhORFl5TnpZek5ERTBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVGN4TGpZek9EWTJPRGM0TkRRNE9USTRYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelU0TnpNd09UWXRNU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblVHVjBaWElnVXk0Z1RHbHRKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREU1TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRReExqUTVOekUxTnpVNU9UUTNOemtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TWpJNUxqZzJNelEzTXpnME9EWXpNRGhjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpjek1qRXhNUzAwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFFaWFJsY2lCVGFXRnRJRk41SUV4cGJTQkpTVWtuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMweE1Ua3VOamczTnpZd09EY3hPREV5T1RFc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1qWTBMamMwTkRFeE5UTXhORGt5TkRKY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qZzFNRGc1TlMwekp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RRWlhSbGNpQlRhV0Z0SUZONUlFeHBiU3dnU1VsSkp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklETXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNVE0zTGpVeE16STNPRFl4T0RZNE9Ua3lMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEkxTXk0d05UQXhOVEkyTXpReE5qQXhNMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MzTVRVNU56VXdMVFFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxQm9hV3hwY0NCU2Iza25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dORFVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TlRVdU9URTFNek14T0RNM016TTBOVGcwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTWpZMUxqUTFNamN6T1RrNE5Ua3dOVGxjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpFd016QXpNeTAzSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFFhR2xzYkdsd0lFcHZhRzRnVUd4aGJuUmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRGMyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRnNUxqVTJNVGN5TmpNME1qY3pPVE00TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTVRJNExqUTVNelU1T1RVME1ESXdPVE0zWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpVNU56ZzRNamt0TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5VR2t0V1hVZ1EyaDFibWNuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVRVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBM09TNHdNek16TURNd09UYzJPRE16TXl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweE5qWXVPRGsyTWpBek1ERTBNREkyT1RWY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qQTVNakE0TXkweUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RRY21GemFHRnVkQ0JEYUdGMGRHVnlhbVZsSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFeUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xURXlOeTQ1T0RFMk5qSTBPRGszT0RBME5TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlNall1TURrMU9UQXpNakk1T0RNd05qZGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5Oek0wTURReE1TMHhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkU1lXTm9ZV1ZzSUV3dUlFTnZiMnNuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURFME5TNDFPREUyTkRNME9UVXpOamcxTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRFNE5TNDVNVEUxTWpJM09EUTRNalV4WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpRNE56STJNRE10TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5VbUZzY0dnZ1UzUmxZWEp1Y3ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBNE1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHhOeTQyTXpneU5qRXhNemszTkRBd056Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXpNVEV1T0RjME5EQXdPVFl3TVRZeU16VmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5Oamd6TmpVME1DMDJKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkU1lXNWtlU0JJYjJabWJXRnVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRFkyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRrMkxqWTNPVEUxTURZeU1qY3hOVEl6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRFNExqZzJNekkyTnpZME1qTXpPRE0xTjF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjME56azROVGswTFRFbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMUpwWTJoaGNtUWdRUzRnU0dsc2JITjBaV0ZrSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURVMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ01qSXdMamswTURRek1EUXpNalU0T0Rjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE5UVXVPVEl4TWpRNU16SXhOekUzTVZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMU1EazNNVEl5TFRJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMUpwWTJoaGNtUWdSUzRnVUhWeWRtbHpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREl5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRJek1TNDJNakl4TVRjek5EZzFNekV5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTlRndU5UTXlOemc0TlRrek5EQTJORFkxWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZeU5qZzRNRE10TXljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5VbWxqYUdGeVpDQkhiM0p0WVc0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01UQXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQTNOaTQzTVRZMk56UXpPVEl5T0RJd01peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlORGN1TkRBM05UWTRORGMxTkRNek5qWmNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oybHVkbVZ1ZEc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5OVEkzTVRVME15MHhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkU2FXTm9ZWEprSUV3dUlFZHlZVzUwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURJeUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ01UQTRMak0zTnprd01qWXhOak00TVRVMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xURXdPUzQxTXpReU9UYzNOREF4TVRJd05WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJNRGt5TURnekxURW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFKdlltVnlkQ0JCTGlCQ2NtOWtaWEp6Wlc0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01qRXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNVEUyTGpjNE5qYzNNekk1TXpnd016TXlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEl4TVM0M05ETXhNakUzTWpjMU5EZzVPRnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MxT0Rjek1EazJMVEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxSnZZbVZ5ZENCQ2NtOWtaWEp6YjI0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ015eGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklETXlMalEzTURVMk5ETTJNamN4TURNek5DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlNVEl1TXpVMk5UQXpOell4Tmprd05GeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzFPVFl6T1RVekxURW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFKdlltVnlkQ0JEY21GdEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklETXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXpPUzQzTXpFMk5UWXlNamd3TXpZd05EUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXRNVFU1TGpjd01URTNOREU1TmpZeU9EVXpYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelF6TmpJek9EY3RNU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblVtOTVJRU5zWVhKckp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklESXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEUwTXk0ek9EQTJOVFEyTnpnd05UVTRNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzA0TXk0eE9EWTBOamt6TWpNek1qZzVORnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MxTkRFM056Y3dMVGduTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxSjVieUJJWVhsaGMyaHBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRGN4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTVRBNUxqVTJPVEF3TWpjd01UZ3hNekl5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nT1RRdU1qWTVNRGMzTmpFNU16TXpPVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTURneE9EYzFMVEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxTmhibXB2ZVNCRGFHRjBkR1Z5YW1WbEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklESXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNVFk0TGpVMU16VXhOekU1TXpjek1qYzBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVFUxTGpBd016a3hNekkzTnpFd01EY3lYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelUwTVRZeU5UVXRNU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblUyTnZkSFFnUVM0Z1FtVnlaMlZ0WVc1dUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklERXdOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREl6Tmk0NU9EUXpOalU0TkRNM09ETXhMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEUxTkM0MU16ZzFNekk0T1RNMk16RTBYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZHBiblpsYm5SdmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKelkzTWpRek9Ua3RNaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblUyaGhibXRoY2lCVExpQk9ZWFJvWVc0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklEZ3VNREUzTmpVeE16STJOekV6T0RBekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xURXpNaTQyTnpRek9USXdOVFl6TWpZMk5GeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJPREEwTXpNd0xURW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFOb1lXNXViMjRnU205dVpYTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJRGN4TGpFek1qQTJPVGd4T0RRME5qTXhMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEkxT0M0ME9Ua3pOREl6T1RrME1UTTNObHh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyT0RnM056TTJMVFFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxTm9ZVzUwYUdrZ1IyRnVaWE5oYmljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xUTTJMams1TkRnNE1qRXdOelUyTkRBM05DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklERTNOaTQwTkRNMU1qRXdNemsxTXpFMlhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WXhPRE0xT0RrdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVTJocGJpQkxhVzBuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTkRjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE1qZzNMalkzTWpZMk5EWTJOamM1T0N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURRMUxqZ3hNall4TVRZME1UTTVNRFkzTkZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk5qVTBNRE15TFRRbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMU52Ym1kNGFXRnVaeUJYWldrbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ055eGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERXpNaTR6TVRrNU1UY3hNRFEwTURneUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ09EWXVNek16TmpreU1ERTRNVEU0TnpWY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qYzRNelV5TkMweEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RUZEdWd2FHVnVJRU11SUVGdVpHVnljMjl1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBMk1pNDJNakF3TnpJd01UTTVOVEExTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTXpBeUxqUTVOakU0T0RVM01EZ3pNREkzWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpVM056UXpOVGN0TVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5VM1JsZG1WdUlFMHVJRWh2Wm1aaVpYSm5KeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREV3Tml4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMweU9UZ3VNVFE1T0RFMU56ZzVNems1TkRRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBNE9DNDFOamd3TXpVeE1EUTFNRE01WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpVMU9UUXhOamt0TWljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5VM1JsZG1WdUlGQXVJRWh2ZEdWc2JHbHVaeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF6TURZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeE56Z3VNekV6TlRZeU1qUTBNakEzTlRZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1qVTFMalF6TURReU5UQTNORGd3TlRjNFhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6WTFNall6TXpVdE1pY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVTNWellXNGdUUzRnVkhKbGVYb25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVFVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TWpjNUxqSXpNemcwTnpFek1EUXhPRE1zWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF4TXprdU9Ua3lOVGN6TXpZM01qYzVORFZjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmpZek9USTBOaTB4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFVZWFJ6ZFhsaElFaHZibVJoSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFd09TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklESTFNQzR3TmpBeU1EYzNNakF4TmpnMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ05qWXVNek0wTURFek1qSXlOamcyTXpkY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5UTTBOVFl6T1MwMkp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RVWVhSemRYbGhJRWwzWVhOaGEya25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVEUyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nT0RZdU16TXpOakV6TkRRM01UYzNNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREUxTnk0NE1qVTVNelEyTWpBMk1EYzBNMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MyTXpJME5UWTRMVEVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxUm9ZVzVvSUVScFpXTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzAzT0M0d016RTBOelEyT1RFeU5URTROQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB5TnpJdU5UZzROall3TmpnMk1UY3hPRnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MxTnpFMU5EVXdMVEluTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxUm9iMjFoY3lCTkxpQlNiM1JvZDJWcGJpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXhNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB4T1M0eE5qVXhNREV3TVRNeU5ERTBPVE1zWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TWpBNExqRTRNRFEyTkRBNE5EQTJNVGxjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuVWtVek9UZzBNUzAwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFViMlJrSUZCb2FXeHNhWEFnVDIxaGFYUnpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJRGNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF4TWprdU9Ua3pNRFk0TlRRMk1qVXdNRGNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TWpJdU1EUTVPVEF4TmpFMU1ETTROREE0WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RwYm5abGJuUnZjaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSnpZNE5UQTVORGt0TXljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5WRzl0SUVGaWMyaHBjbVVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURFME1DNHlOalUyTmprd01qY3hOVEl5T0N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweE5UTXVNemt4TnpJNU5EZzBNemsxT0Z4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjM01EWXhNREUwTFRZbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMVJ2YzJocGJ5QkxZVzFwZVdFbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01qVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQTVMakV5TmpJM01USTNOakkxTkRNM055eGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklERXdNUzQ0TWpJNU9EWXpNRFUxTmpNeU5seHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzJOekU0TXpZeExURW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFacGFtRjVJRkl1SUVKaGMyRnVhU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUE1TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRJd01TNHpPREl5TnpFM016SXdOVEF5Tnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURJd09DNDNORE15TnpBME9Ua3lOak15T0Z4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuYVc1MlpXNTBiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNjMk56RTRNell4TFRVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMVpwZEdGc2VTQlRMaUJTWlhaemFXNG5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNVE1zWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0TVRrNExqY3dORGN6TURjNE1ESTBPVGd6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTVRVeUxqUXdOVEl5TVRFMk5qVTVORE5jYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTmprM09Ea3lNUzB6Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFhhV3hzYVdGdElFSXVJRmRsYVhObGJtSjFjbWRvTENCSlNTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXhOVElzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF5TkRndU1qUXpPVE01TURZeU9UTTNNek1zWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0T1RBdU1qa3pOREkxTWpRek5qa3pNalJjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTlRJMU56azNNUzB5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFhhV3hzYVdGdElGQXVJRlpoYmlCQmJuUjNaWEp3Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURZNUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xUSTBNeTQxTWpBNU9URTVNVFkzTnprc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeU15NDBNVGMyTnprNU56YzVNVEV6TWpkY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJsdWRtVnVkRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbk5qZ3lPVFkxTlMweEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RZYVdGdlptVnBJRWgxWVc1bkp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklEVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQTRPUzQ1T0RnM05ERTJNVEF6T0RVMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xURTROeTQzT1RReE16azVPREUyTXpRNE0xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbmFXNTJaVzUwYjNJbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDYzFNamd6TkRVeUxURW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFscExVTm9hU0JUYUdsb0p5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklETXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVE15TXk0M01UTTFPVFkwTVRnM01URTJNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREl6TGprd09Ea3pOalU0TmpRNU5EQTRObHh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5hVzUyWlc1MGIzSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2MxT1RBeE9EazJMVEVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0oxbHZjbUZ0SUVkaGJDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTNOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB4TURjdU1qTXlNalUxTVRBMk1qQTBPRGtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF4TWpRdU56TTFOREUzTXprd01qWXhNVEpjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZG1WdWRHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuTkRVM016UTNNaTB4Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFpiM05vYVdocGNtOGdTWFJ2Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFNE9TeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERXhPQzR5TURJMU1Ea3pPRE00TXpnNU1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklESTROeTQ1TmpFMU16STJORE0wTWpnelhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkcGJuWmxiblJ2Y2ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0p6VTROVFU1TlRjdE1TY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuV21obGJtY2dXWFZoYmljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBMU9DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERXpPQzR3T1RJd05qazFNakUzTXpFNUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01USTBMakEyTkRRd01URTNPVGMyT1ROY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJGemMybG5ibVZsSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbmIzSm5YMW8xT1dGVlFrZDBXamxRTlZGNlpFWnBTMjFhSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZEJZbXhoYVhObElFeHBiV2wwWldRbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ01peGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHhPVEF1TkRneU1URXpNREF4TURjME1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHlNell1TlRNMk1UazJPVGcxTXprME9EZGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oyRnpjMmxuYm1WbEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdsa09pQW5iM0puWHpSNlR6SkNZekE0ZURVMldHcEVjVFZVWlVKd0p5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RCWTJObGJuUjFjbVVnVEV4UUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklESXhNQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREUzTWk0NE5qWXdNak13TURnek16azFOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREkxTXk0M01ETXpNRGd4TlRReE5qVTROVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5ZWE56YVdkdVpXVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2R2Y21kZlluZHhPRE5xWW1OalMzRkdOR3BLY2xCallWSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBGa2RtRnVZMlZrSUVKcGIyNXBZM01nUVVjbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ05qTXpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEUzTmk0NU1UUTJPRFEzTWprNE1UVTFOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREl6TXk0Mk16TTRPRE0xTWpVNU5qRTVYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZGhjM05wWjI1bFpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKMjl5WjE5SlJGVmlVekE1V2xJd1NtaEtPR3BHUlhCMFZDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUVhCd2JHVWdTVzVqTGljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeU1UQXlNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREUxTVM0Mk9ESTBOalkwTVRVM09EZzJOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzB5TWpJdU1USTBPRGMwT0RneE5EUTRPVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5ZWE56YVdkdVpXVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2R2Y21kZlJXaFpSbEJKU2tWdFdWRlpVbTlaZG5OdWNIa25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBOaGJtOXVJRXRoWW5WemFHbHJhU0JMWVdsemFHRW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dOelExT1RZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBME9TNDBPREl5TXpreU1EVTNNekk1Tml4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURFek5DNHdPVEl5T0RnM016RXhOVFU1TWx4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuWVhOemFXZHVaV1VuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNkdmNtZGZTVzFsWnpsWE5sQXhWRVUyU1RKUmRYUlROSGtuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owTmhjMmx2SUVOdmJYQjFkR1Z5SUVOdkxpd2dUSFJrTGljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBME5USXhMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEUzT1M0NE1UYzFPVE0wTVRJd05URTFMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEUwTWk0M01UZ3lPRGcxTWpreU1UQTBORnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5ZWE56YVdkdVpXVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2R2Y21kZk9HTnpUV2QwWjI1T01HMVNSVnB3VGxBeFNta25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBObGNtVmljbUZzSUZaaGMyTjFiR0Z5SUVGd2NHeHBZMkYwYVc5dWN5d2dTVzVqTGljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ01qWTRMamd3TURRMU5ERTBORFF6T0Rjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeE5qUXVOVEl6TmprME56Z3pNVFUyT0ROY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJGemMybG5ibVZsSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbmIzSm5YekJsVkhJeldFbENha0ZMY0ZoclF6WTRNak55Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZERaWEp0WlhRc0lFbHVZeTRuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SUMwME9DNDBNRE0zTWpjMk9EazFOVEUxTml4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURJd05TNDBOREF5TlRnNE16Z3lOakEyTmx4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuWVhOemFXZHVaV1VuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNkdmNtZGZNVEEzVjB0T1VHSjJSRVJMY2xwQ2JHMTNPRlVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owTnZiblJwWjI4Z1UyOW1kSGRoY21Vc0lFbHVZeTRuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURJNU9TNHpNVGMwTXpVNU1EazFPVFV6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTkRndU1ETTBPVEkwTmprNE1EQTRNek5jYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMkZ6YzJsbmJtVmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuYjNKblgzQndSV3hyUlhSUmRrWjBSelpCTkRjMU5GVkpKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkRllYTjBiV0Z1SUV0dlpHRnJJRU52YlhCaGJua25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNakUxTXprc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeU1URXVNemMxTWpVNU5ERXpOVEkzT0RZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeU1UY3VOVGd5T0RjM09EWTFNekl4TURoY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJGemMybG5ibVZsSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbmIzSm5YekJxVUZkTk4xbHhhSFJZYlRCc2JUTm1iVEZaSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZEZUVU1nUTI5eWNHOXlZWFJwYjI0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ05EazNOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB4T0RrdU56QXhOVFl5TnpRNE16ZzVOek1zWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF0TVRFd0xqQXhOVFU1T0Rrd05ETTNOakk0WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RoYzNOcFoyNWxaU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSjI5eVoxOVhhREpqYms5SmVrdHNhSHBxZFhGV2JVOXhXU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblJXNWxZM1J2SUVGQ0p5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklERXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXlORE11TmpjMk5UUXhNakkwTmpJMU9DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklDMHhNekV1TWpBNU1ETXhNVGcyTmpBNU9WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbllYTnphV2R1WldVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDZHZjbWRmV0hVMloxaFRjMngwUkVKYVZFRm9UVVpDVjBRbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMFYwYUdsamIyNGdSVzVrYnkxVGRYSm5aWElzSUVsdVl5NG5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREl5TkM0M01USTBNelU0TURNeE5qUTNOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJRE01TGpZd09UZzBNalV5TlRRM09EWTFYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZGhjM05wWjI1bFpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKMjl5WjE5T1prdENRamxVVjBZMFFYTTRWRk5oYzBvMWJpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuUlhSb2FXTnZiaUJGYm1SdkxWTjFjbWRsY25rc0lFbHVZeTRuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTWpFNU5DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERTNNUzR3TnpRek56QXlNalEzTmpZMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUVTFMakF6Tmpnd056QTVPRGswTmpBNVhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkaGMzTnBaMjVsWlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0oyOXlaMTkyVXpaeVkwdDVZekp4VGpOeVJtUllNRkF5U3ljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5TR1YzYkdWMGRDMVFZV05yWVhKa0lFUmxkbVZzYjNCdFpXNTBJRU52YlhCaGJua3NJRXd1VUM0bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHRjBaVzUwY3pvZ016VXhNVGdzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUF0T1RBdU16RXdNemsyT0RVeU5qWTVOQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzAxTUM0d05USXhOakk0T1RJNU5EVTBYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZGhjM05wWjI1bFpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKM0JsY2w5MFdESmxNbmxXVEdkNVRtZHZZa1Z3ZWxkTFZDY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuU0dsa1pXOGdUMmh1Ynljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xUTTVMalV6TmpFeU9EUXlOekEwTkRNMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xUSXdMakkzTURJM016TTFORGszTnpJMU1seHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbllYTnphV2R1WldVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDZHZjbWRmVFV0MlltNURZM2xRZFdSWVpYaFZkbk5UZDBZbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dYQ0pJYjJ4a1pXNG5jeUJHYjNWdVpHRjBhVzl1SUZObFpXUnpMQ0JKYm1NdVhDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTRNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREkwTUM0d09UazVNRFU1T0RVeE9UQTRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dMVEl3Tmk0d01qWXpOell4TkRnd05qRXlOVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5ZWE56YVdkdVpXVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2R2Y21kZlprRXdZWHB4YjBKSFJYcHZVRzk1T0RWS2VYWW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjBsT1ZGVkpWRWxXUlNCVFZWSkhTVU5CVENCUFVFVlNRVlJKVDA1VExDQkpUa011Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURFeU1ESXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXhOUzR6TnpnNE5qSTROalUwTkRjMk1qUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQXlPVEF1TWpFM09ESXlNamczTlRJeU0xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbllYTnphV2R1WldVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDZHZjbWRmUkhSMFdrMTJhM2wyVnpObVZqWnZRMVZOVkVZbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMHBoY0dGdUlGTmphV1Z1WTJVZ1lXNWtJRlJsWTJodWIyeHZaM2tnUVdkbGJtTjVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREV4TlRjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBeE15NHhOek0wTlRBM016RXdOakV3T0RZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBMU5pNDBPRFl4TkRBNU9UVTNOemMyTjF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuWVhOemFXZHVaV1VuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNkdmNtZGZZelYyZVVKNlN6ZHBhV3RyVlRSRWFsRkdTRlFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owcGhjR0Z1SUZOamFXVnVZMlVnWVc1a0lGUmxZMmh1YjJ4dloza2dRMjl5Y0c5eVlYUnBiMjRuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTkRFNExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ05qTXVOVFl6TVRjd05UZ3lOelVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUEyTGpJM016WTNNelV4T1RBNU1EYzFNMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5ZWE56YVdkdVpXVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2R2Y21kZlJuWm5ka2RHWlRoS1dqQnBXV3hhT0RCM1pVWW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjB0dmJtbHVhMnhwYW10bElGQm9hV3hwY0hNZ1JXeGxZM1J5YjI1cFkzTWdUaTVXTGljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeE56RXpPQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB4TWpNdU1qUXhOemt4TWpNM09UQXhPVEVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF5TnpBdU9UazNORFkxTkRnME5ERXdNVFpjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMkZ6YzJsbmJtVmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuYjNKblgxaGpjVU5xZEZRNGNHazRUV3N6VldwUmJFUjBKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkTVJ5QkZiR1ZqZEhKdmJtbGpjeUJKYm1NdUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklETXlOekkxTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTFRJM055NHpORFl3TWpJNU9UZzBOVFU0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTnk0eE16TTJPVGd5TWpJMU5ETXdNVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5ZWE56YVdkdVpXVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2R3WlhKZlJFbHFWVlJOTjJ4SWFFUnpRWG95ZFRocWFVOG5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjAxaGMyRnphR2tnUzJGM1lYTmhhMmtuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0VUdGMFpXNTBjem9nTXl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURFNUxqZzVOVFF6TmpVNU5qWTJNamt3T0N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SUMweE1DNDNNVGN4TnpneU5UQTVNREE1TVRoY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJGemMybG5ibVZsSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbmIzSm5YMGRXVFd4TVZtSjNRMFJUYVhGUU9VOW5PRlJ1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZE5aV1IwY205dWFXTWdUV2x1YVUxbFpDd2dTVzVqTGljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBNE1EQXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQXRNVGd6TGpjME1ESXpOREU1TURVM05ERTNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dNemN1TmpnM01qRTROelk1T0RNNU1EZzFYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZGhjM05wWjI1bFpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKMjl5WjE5UmR6aEZjM0pPTUUwMU1tNVdVVlZOTm5aelZpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVFc5dWMyRnVkRzhnVkdWamFHNXZiRzluZVNCTVRFTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dPRFk0T1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGc2SURFNUxqYzJNemt3TVRRNE9ETTFNalkzTXl4Y2JpQWdJQ0FnSUNBZ0lDQWdJSGs2SURFNU5pNDJNakl6TmpnMk1qVTRPVGMzTkZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuWVhOemFXZHVaV1VuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNkdmNtZGZhalZWTlVsRllURkdTV0puZEhJM2FVNXpVVTBuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owMTFjbUYwWVNCTllXNTFabUZqZEhWeWFXNW5JRU52TGl3Z1RIUmtMaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUEzTXpReUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ09EY3VOalE0TnpneE9UY3hNRGc0TVRjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBeU9URXVNVEF5TXpFNU5UZzNNak0xTWx4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuWVhOemFXZHVaV1VuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUNkdmNtZGZNWEEwUmxkRmIwbDBhbmxMWW5kVWNFTktiMnduTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0owNWxkSGR2Y21zZ1FYQndiR2xoYm1ObExDQkpibU11Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURVek1DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklDMHlNakl1TWpreU1ETTNNakV4T0RBMU1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklERTBPUzR3T0RNM01qRTFOVEkzTWpBMk1seHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbllYTnphV2R1WldVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDZHZjbWRmUVZSUFYwaGtORWRIWVc5b01UUjZkWFJZY1RjbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMUJ2ZDJWeUlFMWxaR2xqWVd3Z1NXNTBaWEoyWlc1MGFXOXVjeXdnU1c1akxpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQXpNQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREV3T0M0NE9ERXhNRE01T1RjME9UY3dOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREU0Tmk0NE5UTXpPRGM0TWpZeU5qVTVYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZGhjM05wWjI1bFpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKMjl5WjE5ck9GWTNZelZuYm0xRE4xTldiWFZ3TlZaMU55Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVW1GcGJtUmhibU5sSUVOdmJXMTFibWxqWVhScGIyNXpMQ0JKYm1NdUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklETXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNE9pQTJOUzR4TlRjeE56WTVOREkyTkRReE55eGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklEZ3pMalF4T1RRek5qTTNPREl3TkRBeFhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkaGMzTnBaMjVsWlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0oyOXlaMTh5TkRKb1NtVm5kMlpSUTJWUU9XaHpabmR3Vnljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5VbWxuYUhRZ1RtOTNJRlJsWTJodWIyeHZaMmxsY3l3Z1NXNWpMaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTVRnMkxqZ3hPVFkxTWpneE5qQXlNalk0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlVG9nTFRFNE15NDBNREUzTURJMU1UUTFPRFV6WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ2RoYzNOcFoyNWxaU2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaRG9nSjI5eVoxODJjamwwTjFwQk5sbFVNRE14VDJRMGEwMVFaeWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBblVtbG5hSFJ1YjNjZ1ZHVmphRzV2Ykc5bmFXVnpMQ0JKYm1NdUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklERXdMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VEb2dMVEl6TVM0M016WXhOVGc0TURFeU1qSXpOaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzAzTkM0d09Ua3hOamszTURrek5ESTFNbHh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5ZWE56YVdkdVpXVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2R2Y21kZk1rbEdPVGQ2Vm5sdFUzVnlZVk51VlVGWWJYRW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFOaGJubHZJRVZzWldOMGNtbGpJRU52TGl3Z1RIUmtMaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUE0TXpnekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ0xUSTRNeTQ1TURJNE1qVXpOakE0T1RRMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ0xURXlOeTQ0TnpJMU16TTRNVGsyT1RFM01WeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBbllYTnphV2R1WldVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklDZHZjbWRmY0d4YVlreDRhWGx6UlZOaVlVazVjRTlsZVcwbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dKMU5GVFVsRFQwNUVWVU5VVDFJZ1JVNUZVa2RaSUV4QlFrOVNRVlJQVWxrZ1EwOHVMQ0JNVkVRdUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklERXpPRGcxTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTWpVMkxqSXlPRE01T0RjMk16YzVNRFVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUF4TWpRdU5EWXhOREUyT1RZd05qWTFNakpjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMkZ6YzJsbmJtVmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuYjNKblgwTk5WMk52UTBwWFVFOW1hWE5NVjNKTGRubGtKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkVGFHRnljQ0JMWVdKMWMyaHBhMmtnUzJGcGMyaGhKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJoZEdWdWRITTZJREl5TlRRd0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ05DNHdPVFUxTmpBME1EWTBPREkyTnpFc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE16SXVNVE0yTVRnME9ESTFOems1TXpoY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJGemMybG5ibVZsSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbmIzSm5Yemd6VGs1blNuSlFOV3hyU1U0NE56WnJUbVZISnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFRhV1ZpWld3Z1UzbHpkR1Z0Y3l3Z1NXNWpMaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF5T1Rnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lBdE16TXVPVEU1T1RRM05USXpNVFE0TkRJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I1T2lBdE1qRXlMalU1T1RReU9EZzVPRGc0TVRGY2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSjJGemMybG5ibVZsSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xrT2lBbmIzSm5YMG80Vm01QmVrWnhSV3BYWjNoeE5HVjJOekY2Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDZFRkR0Z5YVc5dUlFbHVjM1J5ZFcxbGJuUnpJRU52Y25CdmNtRjBhVzl1Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCaGRHVnVkSE02SURJd0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnZURvZ01UYzRMams0TkRFMk5qVTBNVEUyTXpRMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ01UWTVMalUwT0RJeE1qRXhNVGt3TWpjMlhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNkaGMzTnBaMjVsWlNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWkRvZ0oyOXlaMTl0TW5ST1VFcHJRVEpuTVVGWFQyTTNkWHBUTVNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5WR2hsY21GVFpXNXpaU3dnU1c1akxpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXMVFZWFJsYm5Sek9pQTFNeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzB4TWpVdU9URTBOVGs1T0RRMk1EZzFNU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJREV6TWk0ME1UY3pPVEExTkRVeE5qRXhOMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQW5ZWE56YVdkdVpXVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJQ2R2Y21kZlNtcHlUVFpWYldWUFdUQlJOVTF0YjA1cFVEZ25MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSjFSUFMxbFBJRWxPVTFSSlZGVlVSU0JQUmlCVVJVTklUazlNVDBkWkp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQmhkR1Z1ZEhNNklETTVOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJREU0TGpZeE5ERXpNREE0TVRFMk5qUTJMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2VUb2dNVFkxTGpJeE1qVXpOams1TlRVME1qRTBYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZGhjM05wWjI1bFpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKMjl5WjE5bGQxWnpRM1YwY0ZKNlJEbHdWREEzYTBKdlJTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVkhsamJ5QklaV0ZzZEdOaGNtVWdSM0p2ZFhBZ1RGQW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVR0YwWlc1MGN6b2dOU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJQzAyTnk0eU5UUXpNRFV5TmpjME1qRXdOeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJRE13T0M0Mk1UUTVNamd5TURReE5UYzVYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDZGhjM05wWjI1bFpTY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCcFpEb2dKMjl5WjE4MWQwNU9ja28wZWtaUk5VdFJPRTlYYm5wU1F5Y3NYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFuVlc1cGRHVmtJRk4wWVhSbGN5QlRkWEowYVdOaGJDQkRiM0p3YjNKaGRHbHZiaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnVkVzFRWVhSbGJuUnpPaUF4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nTWpneUxqYzRNVEF3T1RJeU5EUXpNU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIazZJQzAxTWk0NU9ERTFPVEF4TVRVd09EY3hORFJjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMkZ6YzJsbmJtVmxKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHbGtPaUFuYjNKblh6TjJTVEphTld0RE1WTmhVMnhpVlVKdlQwSlVKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkWFpXSkZlQ0JEYjIxdGRXNXBZMkYwYVc5dWN5d2dTVzVqTGljc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUVlYUmxiblJ6T2lBeU1peGNiaUFnSUNBZ0lDQWdJQ0FnSUhnNklERTROeTR6TmpjMk16azFNVEV5T0RjeE5DeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklERXdNUzR5TURnME9UZzBOekE0TURFNE1WeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ1hTeGNiaUFnSUNCc2FXNXJjem9nVzF4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFNVFl5TWpjbkxDQjBZWEpuWlhRNklDYzFNelU0TlRFMExUTW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qVXhOakl5Tnljc0lIUmhjbWRsZERvZ0p6VTNOVFUzTXpjdE15Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5URTJNakkzSnl3Z2RHRnlaMlYwT2lBbk5UazBPREF3TmkweEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMU1UWXlNamNuTENCMFlYSm5aWFE2SUNjMk5URTJNakkzTFRRbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpVeE5qSXlOeWNzSUhSaGNtZGxkRG9nSjI5eVoxOWlkM0U0TTJwaVkyTkxjVVkwYWtweVVHTmhVaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOVE0xT1RBNUp5d2dkR0Z5WjJWME9pQW5OalV6TlRrd09TMHhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFNelU1TURrbkxDQjBZWEpuWlhRNklDZHZjbWRmTVRBM1YwdE9VR0oyUkVSTGNscENiRzEzT0ZVbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpVME9Ua3dPQ2NzSUhSaGNtZGxkRG9nSnpZek9UTTJNRFV0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTlRRNU9UQTRKeXdnZEdGeVoyVjBPaUFuYjNKblh6Z3pUazVuU25KUU5XeHJTVTQ0TnpaclRtVkhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFOVE0xTmpNbkxDQjBZWEpuWlhRNklDYzFOekUxTkRVd0xURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qVTFNelUyTXljc0lIUmhjbWRsZERvZ0p6VTNNVFUwTlRBdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5UVXpOVFl6Snl3Z2RHRnlaMlYwT2lBbk5qVTFNelUyTXkwekp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMU5UTTFOak1uTENCMFlYSm5aWFE2SUNkdmNtZGZPRE5PVG1kS2NsQTFiR3RKVGpnM05tdE9aVWNuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OalUxT0RNeU1DY3NJSFJoY21kbGREb2dKelE0TURrMk9UY3RNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOVFU0TXpJd0p5d2dkR0Z5WjJWME9pQW5ORGcyTXpReU5TMHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFOVGd6TWpBbkxDQjBZWEpuWlhRNklDYzFNRGszTVRJeUxUSW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qVTFPRE15TUNjc0lIUmhjbWRsZERvZ0oyOXlaMTlIVmsxc1RGWmlkME5FVTJseFVEbFBaemhVYmljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTlRVNE16VXhKeXdnZEdGeVoyVjBPaUFuTlRBNU56RXlNaTB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkxTlRnek5URW5MQ0IwWVhKblpYUTZJQ2MxTWpNM01UYzRMVEluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OalUxT0RNMU1TY3NJSFJoY21kbGREb2dKelV5TlRjNU56RXRNaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOVFU0TXpVeEp5d2dkR0Z5WjJWME9pQW5OalF5TkRnME55MHpKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFOVGd6TlRFbkxDQjBZWEpuWlhRNklDYzJOVFU0TXpVeExURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qVTFPRE0xTVNjc0lIUmhjbWRsZERvZ0p6WTFOVGd6TlRFdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5UVTRNelV4Snl3Z2RHRnlaMlYwT2lBbk5qVTFPRE0xTVMwekp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMU5UZ3pOVEVuTENCMFlYSm5aWFE2SUNjMk5UVTRNelV4TFRnbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpVMU9ETTFNU2NzSUhSaGNtZGxkRG9nSjI5eVoxOUhWazFzVEZaaWQwTkVVMmx4VURsUFp6aFViaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOVFl3TkRZeEp5d2dkR0Z5WjJWME9pQW5OVGt4T0RFMU9TMHhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFOakEwTmpFbkxDQjBZWEpuWlhRNklDYzFPVEU0TVRVNUxUSW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qVTJNekUzTkNjc0lIUmhjbWRsZERvZ0p6UXlOVE13TmpFdE15Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5UWXpNVGMwSnl3Z2RHRnlaMlYwT2lBbk5Ea3dNalkzTVMwekp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMU5qTXhOelFuTENCMFlYSm5aWFE2SUNjME9UazNNall5TFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpVMk16RTNOQ2NzSUhSaGNtZGxkRG9nSnpVNU1qVXlNalF0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTlRZek1UYzBKeXdnZEdGeVoyVjBPaUFuYjNKblgwTk5WMk52UTBwWFVFOW1hWE5NVjNKTGRubGtKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFOak14TnpRbkxDQjBZWEpuWlhRNklDZHdaWEpmUkVscVZWUk5OMnhJYUVSelFYb3lkVGhxYVU4bklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpVMk16RTNOQ2NzSUhSaGNtZGxkRG9nSjNCbGNsOTBXREpsTW5sV1RHZDVUbWR2WWtWd2VsZExWQ2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOVFkxTlRBNUp5d2dkR0Z5WjJWME9pQW5OREE0TWpZd01pMHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFOalUxTURrbkxDQjBZWEpuWlhRNklDYzFNRFF4TURnMkxUUW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qVTJOVFV3T1Njc0lIUmhjbWRsZERvZ0p6VXpNRFkyTWpNdE15Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5UWTFOVEE1Snl3Z2RHRnlaMlYwT2lBbk5UVXpNekl6T0MweEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMU5qVTFNRGtuTENCMFlYSm5aWFE2SUNjMU5UTTBNVE15TFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpVMk5UVXdPU2NzSUhSaGNtZGxkRG9nSnpVMk1UWTFNekl0TXljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTlRZMU5UQTVKeXdnZEdGeVoyVjBPaUFuTlRjeU1qazVOeTB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkxTmpVMU1Ea25MQ0IwWVhKblpYUTZJQ2MxT1RBeE9EazJMVEVuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OalUyTlRVd09TY3NJSFJoY21kbGREb2dKell4TURNd016TXROeWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOVFkxTlRBNUp5d2dkR0Z5WjJWME9pQW5OakUzTlRjMU1pMDVKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFOalUxTURrbkxDQjBZWEpuWlhRNklDZHZjbWRmYlRKMFRsQkthMEV5WnpGQlYwOWpOM1Y2VXpFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpVM01USTRNaWNzSUhSaGNtZGxkRG9nSnpZd09ERTFNVGd0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTlRjeE1qZ3lKeXdnZEdGeVoyVjBPaUFuYjNKblh6UjZUekpDWXpBNGVEVTJXR3BFY1RWVVpVSndKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFOelEyTXpVbkxDQjBZWEpuWlhRNklDYzFOekUxTkRVd0xURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qVTNORFl6TlNjc0lIUmhjbWRsZERvZ0p6VTNNVFUwTlRBdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5UYzBOak0xSnl3Z2RHRnlaMlYwT2lBbk5UazJNemsxTXkwekp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMU56UTJNelVuTENCMFlYSm5aWFE2SUNkdmNtZGZPRE5PVG1kS2NsQTFiR3RKVGpnM05tdE9aVWNuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OalUzTnpjeU5pY3NJSFJoY21kbGREb2dKelkxTnpjM01qWXRNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOVGMzTnpJMkp5d2dkR0Z5WjJWME9pQW5OalUzTnpjeU5pMHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTFOemMzTWpZbkxDQjBZWEpuWlhRNklDYzJOVGMzTnpJMkxUTW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qVTNOemN5Tmljc0lIUmhjbWRsZERvZ0p6WTFOemMzTWpZdE5DY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5UYzNOekkySnl3Z2RHRnlaMlYwT2lBbmIzSm5Yemd6VGs1blNuSlFOV3hyU1U0NE56WnJUbVZISnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkxT0RjNE16VW5MQ0IwWVhKblpYUTZJQ2MyTkRNek9USXhMVEluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OalU0Tnpnek5TY3NJSFJoY21kbGREb2dKelkxTWpZek16VXRNaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOakF4TURnM0p5d2dkR0Z5WjJWME9pQW5OVEkyTVRBek55MHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTJNREV3T0RjbkxDQjBZWEpuWlhRNklDYzJOakF4TURnM0xUSW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qWXdNVEE0Tnljc0lIUmhjbWRsZERvZ0oyOXlaMTh6ZGtreVdqVnJRekZUWVZOc1lsVkNiMDlDVkNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTmpBeU1qVXlKeXdnZEdGeVoyVjBPaUFuTkRnNU1EWXhNUzB6SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkyTURJeU5USW5MQ0IwWVhKblpYUTZJQ2R2Y21kZlNqaFdia0Y2Um5GRmFsZG5lSEUwWlhZM01Yb25JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qWXdOREV4Tnljc0lIUmhjbWRsZERvZ0p6VTROek13T1RZdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5qQTBNVEUzSnl3Z2RHRnlaMlYwT2lBbk5UZzNNekE1TmkweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMk1EUXhNVGNuTENCMFlYSm5aWFE2SUNkdmNtZGZPRE5PVG1kS2NsQTFiR3RKVGpnM05tdE9aVWNuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oall3TkRFeU9DY3NJSFJoY21kbGREb2dKell6TWpRMU5qZ3RNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOakEwTVRJNEp5d2dkR0Z5WjJWME9pQW5iM0puWHpnelRrNW5TbkpRTld4clNVNDROelpyVG1WSEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMk1EWTNORFFuTENCMFlYSm5aWFE2SUNjMk5qQTJOelEwTFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpZd05qYzBOQ2NzSUhSaGNtZGxkRG9nSjI5eVoxODBlazh5UW1Nd09IZzFObGhxUkhFMVZHVkNjQ2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOakE1TVRVd0p5d2dkR0Z5WjJWME9pQW5OVGsyTXprMU15MHhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTJNRGt4TlRBbkxDQjBZWEpuWlhRNklDYzJNek0yTVRNM0xURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qWXdPVEUxTUNjc0lIUmhjbWRsZERvZ0p6WXpNell4TXpjdE15Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5qQTVNVFV3Snl3Z2RHRnlaMlYwT2lBbmIzSm5Yemd6VGs1blNuSlFOV3hyU1U0NE56WnJUbVZISnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkyTWpFNE16UW5MQ0IwWVhKblpYUTZJQ2MxT1RRME56a3hMVEVuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oall5TVRnek5DY3NJSFJoY21kbGREb2dKelkyTWpFNE16UXRNaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOakl4T0RNMEp5d2dkR0Z5WjJWME9pQW5iM0puWDJzNFZqZGpOV2R1YlVNM1UxWnRkWEExVm5VM0p5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMk5ERTFNek1uTENCMFlYSm5aWFE2SUNjME9EQTVOamszTFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpZME1UVXpNeWNzSUhSaGNtZGxkRG9nSnpRNE5qTTBNalV0TWljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTmpReE5UTXpKeXdnZEdGeVoyVjBPaUFuTlRBNU56RXlNaTB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkyTkRFMU16TW5MQ0IwWVhKblpYUTZJQ2R2Y21kZlIxWk5iRXhXWW5kRFJGTnBjVkE1VDJjNFZHNG5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qWTBORFV6TWljc0lIUmhjbWRsZERvZ0p6UXhNamN5TWpjdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5qUTBOVE15Snl3Z2RHRnlaMlYwT2lBbk5ESTRNekF5TkMweEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMk5EUTFNekluTENCMFlYSm5aWFE2SUNjMU1UYzJOVEF5TFRNbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpZME5EVXpNaWNzSUhSaGNtZGxkRG9nSjBReU5qTTVPRGN0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTmpRME5UTXlKeXdnZEdGeVoyVjBPaUFuUkRNd05ESXpOQzB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkyTkRRMU16SW5MQ0IwWVhKblpYUTZJQ2RTUlRJNE9UTXlMVEluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OalkwTkRVek1pY3NJSFJoY21kbGREb2dKMjl5WjE4MWQwNU9ja28wZWtaUk5VdFJPRTlYYm5wU1F5Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5qVTBNRE15Snl3Z2RHRnlaMlYwT2lBbk5USTJNVEF6TnkweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMk5UUXdNekluTENCMFlYSm5aWFE2SUNjMU9EVTFPVFUzTFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpZMU5EQXpNaWNzSUhSaGNtZGxkRG9nSnpZMk1ERXdPRGN0TWljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTmpVME1ETXlKeXdnZEdGeVoyVjBPaUFuTmpZMU5EQXpNaTAwSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkyTlRRd016SW5MQ0IwWVhKblpYUTZJQ2R2Y21kZk0zWkpNbG8xYTBNeFUyRlRiR0pWUW05UFFsUW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qWTFOakU1TXljc0lIUmhjbWRsZERvZ0p6UTRPVEl5TkRRdE5DY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5qVTJNVGt6Snl3Z2RHRnlaMlYwT2lBbk5USTNNVFUwTXkweEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMk5UWXhPVE1uTENCMFlYSm5aWFE2SUNjMU16STVOalUxTFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpZMU5qRTVNeWNzSUhSaGNtZGxkRG9nSnpVME1EazBPVGd0TkNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTmpVMk1Ua3pKeXdnZEdGeVoyVjBPaUFuTlRjd056TTJPUzB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkyTlRZeE9UTW5MQ0IwWVhKblpYUTZJQ2R2Y21kZlRtWkxRa0k1VkZkR05FRnpPRlJUWVhOS05XNG5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qWTJOVFkwT0Njc0lIUmhjbWRsZERvZ0p6WTJOalUyTkRndE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5qWTFOalE0Snl3Z2RHRnlaMlYwT2lBbk5qWTJOVFkwT0MweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMk5qVTJORGduTENCMFlYSm5aWFE2SUNjMk5qWTFOalE0TFRNbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpZMk5UWTBPQ2NzSUhSaGNtZGxkRG9nSnpZMk5qVTJORGd0TkNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTmpZMU5qUTRKeXdnZEdGeVoyVjBPaUFuTmpZMk5UWTBPQzAxSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkyTmpVMk5EZ25MQ0IwWVhKblpYUTZJQ2R2Y21kZk9ETk9UbWRLY2xBMWJHdEpUamczTm10T1pVY25JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qWTJOVFkxTlNjc0lIUmhjbWRsZERvZ0p6WTBNelExTlRBdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5qWTFOalUxSnl3Z2RHRnlaMlYwT2lBbk5qWTJOVFkxTlMweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZMk5qVTJOVFVuTENCMFlYSm5aWFE2SUNkdmNtZGZObkk1ZERkYVFUWlpWREF6TVU5a05HdE5VR2NuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oalk0TkRRek9DY3NJSFJoY21kbGREb2dKelU0TnpNd09UWXRNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOamcwTkRNNEp5d2dkR0Z5WjJWME9pQW5OakE1TWpBNE15MHhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTJPRFEwTXpnbkxDQjBZWEpuWlhRNklDZHZjbWRmT0ROT1RtZEtjbEExYkd0SlRqZzNObXRPWlVjbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpZNU1ETTROeWNzSUhSaGNtZGxkRG9nSnpZeU9ERTRPVGd0TWljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTmprd016ZzNKeXdnZEdGeVoyVjBPaUFuTmpZNU1ETTROeTB4SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkyT1RBek9EY25MQ0IwWVhKblpYUTZJQ2R2Y21kZlJuWm5ka2RHWlRoS1dqQnBXV3hhT0RCM1pVWW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qWTVNekl6TWljc0lIUmhjbWRsZERvZ0p6VTBNVFl5TlRVdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk5qa3pNak15Snl3Z2RHRnlaMlYwT2lBbmIzSm5YMDFMZG1KdVEyTjVVSFZrV0dWNFZYWnpVM2RHSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkyT1RnMk5ETW5MQ0IwWVhKblpYUTZJQ2MyTWpZME1EZzNMVEVuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oalk1T0RZME15Y3NJSFJoY21kbGREb2dKMjl5WjE5QlZFOVhTR1EwUjBkaGIyZ3hOSHAxZEZoeE55Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk56RXhOVFkxSnl3Z2RHRnlaMlYwT2lBbk5qY3hNVFUyTlMweEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZM01URTFOalVuTENCMFlYSm5aWFE2SUNjMk56RXhOVFkxTFRJbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpjeE1UVTJOU2NzSUhSaGNtZGxkRG9nSnpZM01URTFOalV0TXljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTnpFeE5UWTFKeXdnZEdGeVoyVjBPaUFuTmpjeE1UVTJOUzAwSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzTVRFMU5qVW5MQ0IwWVhKblpYUTZJQ2R2Y21kZk9ETk9UbWRLY2xBMWJHdEpUamczTm10T1pVY25JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qY3hOakl6TXljc0lIUmhjbWRsZERvZ0p6WXlOalF3T0RjdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk56RTJNak16Snl3Z2RHRnlaMlYwT2lBbmIzSm5YMEZVVDFkSVpEUkhSMkZ2YURFMGVuVjBXSEUzSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzTVRnek5qRW5MQ0IwWVhKblpYUTZJQ2MyTWpJek1qQTFMVEluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamN4T0RNMk1TY3NJSFJoY21kbGREb2dKell6TnpBMU9EUXRNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOekU0TXpZeEp5d2dkR0Z5WjJWME9pQW5OamN4T0RNMk1TMHhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTNNVGd6TmpFbkxDQjBZWEpuWlhRNklDYzJOekU0TXpZeExUSW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qY3hPRE0yTVNjc0lIUmhjbWRsZERvZ0p6WTNNVGd6TmpFdE15Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk56RTRNell4Snl3Z2RHRnlaMlYwT2lBbk5qY3hPRE0yTVMwMEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZM01UZ3pOakVuTENCMFlYSm5aWFE2SUNjMk56RTRNell4TFRVbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpjeE9ETTJNU2NzSUhSaGNtZGxkRG9nSnpZM01UZ3pOakV0T0NjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTnpFNE16WXhKeXdnZEdGeVoyVjBPaUFuYjNKblh6RndORVpYUlc5SmRHcDVTMkozVkhCRFNtOXNKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTNNalF6T1RrbkxDQjBZWEpuWlhRNklDYzJOekkwTXprNUxURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qY3lORE01T1Njc0lIUmhjbWRsZERvZ0p6WTNNalF6T1RrdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk56STBNems1Snl3Z2RHRnlaMlYwT2lBbmIzSm5Yemd6VGs1blNuSlFOV3hyU1U0NE56WnJUbVZISnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzTWpjMU1qSW5MQ0IwWVhKblpYUTZJQ2MwTWpVek1EWXhMVE1uSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamN5TnpVeU1pY3NJSFJoY21kbGREb2dKelE1TURJMk56RXRNeWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOekkzTlRJeUp5d2dkR0Z5WjJWME9pQW5iM0puWDJNMWRubENla3MzYVdscmExVTBSR3BSUmtoVUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZM01qZzNNREluTENCMFlYSm5aWFE2SUNjMk5UYzNOekkyTFRJbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpjeU9EY3dNaWNzSUhSaGNtZGxkRG9nSnpZM01URTFOalV0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTnpJNE56QXlKeXdnZEdGeVoyVjBPaUFuTmpjeE1UVTJOUzB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzTWpnM01ESW5MQ0IwWVhKblpYUTZJQ2MyTnpFeE5UWTFMVE1uSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamN5T0Rjd01pY3NJSFJoY21kbGREb2dKelkzTVRFMU5qVXROQ2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOekk0TnpBeUp5d2dkR0Z5WjJWME9pQW5iM0puWHpnelRrNW5TbkpRTld4clNVNDROelpyVG1WSEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZM01qZzVOakFuTENCMFlYSm5aWFE2SUNjMk16a3pOakExTFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpjeU9EazJNQ2NzSUhSaGNtZGxkRG9nSjI5eVoxODRNMDVPWjBweVVEVnNhMGxPT0RjMmEwNWxSeWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOek15TURrMUp5d2dkR0Z5WjJWME9pQW5OVEkwTXpZeU1pMHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTNNekl3T1RVbkxDQjBZWEpuWlhRNklDYzJOek15TURrMUxURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qY3pNakE1TlNjc0lIUmhjbWRsZERvZ0p6WTNNekl3T1RVdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk56TXlNRGsxSnl3Z2RHRnlaMlYwT2lBbmIzSm5Yemd6VGs1blNuSlFOV3hyU1U0NE56WnJUbVZISnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzTXpJeE1EQW5MQ0IwWVhKblpYUTZJQ2MxTnpFMU5EVXdMVEluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamN6TWpFd01DY3NJSFJoY21kbGREb2dKelkxTnpjM01qWXRNaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOek15TVRBd0p5d2dkR0Z5WjJWME9pQW5OalUzTnpjeU5pMDBKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTNNekl4TURBbkxDQjBZWEpuWlhRNklDYzJOalkxTmpRNExURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qY3pNakV3TUNjc0lIUmhjbWRsZERvZ0p6WTNNekl4TURBdE5DY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk56TXlNVEF3Snl3Z2RHRnlaMlYwT2lBbmIzSm5Yemd6VGs1blNuSlFOV3hyU1U0NE56WnJUbVZISnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzTXpJeE1URW5MQ0IwWVhKblpYUTZJQ2MwT1RVeE1qYzRMVEluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamN6TWpFeE1TY3NJSFJoY21kbGREb2dKell3T1RJd09ETXRNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOek15TVRFeEp5d2dkR0Z5WjJWME9pQW5OakE1TWpBNE15MHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTNNekl4TVRFbkxDQjBZWEpuWlhRNklDYzJOek15TVRFeExUUW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qY3pNakV4TVNjc0lIUmhjbWRsZERvZ0oyOXlaMTg0TTA1T1owcHlVRFZzYTBsT09EYzJhMDVsUnljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTnpVME5qZ3hKeXdnZEdGeVoyVjBPaUFuTlRnM016QTVOaTB4SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzTlRRMk9ERW5MQ0IwWVhKblpYUTZJQ2MyTURreU1EZ3pMVEVuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamMxTkRZNE1TY3NJSFJoY21kbGREb2dKell3T1RJd09ETXRNaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOelUwTmpneEp5d2dkR0Z5WjJWME9pQW5iM0puWHpnelRrNW5TbkpRTld4clNVNDROelpyVG1WSEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZM05qTXpOVEVuTENCMFlYSm5aWFE2SUNjMk56RXhOVFkxTFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpjMk16TTFNU2NzSUhSaGNtZGxkRG9nSnpZM01URTFOalV0TWljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTnpZek16VXhKeXdnZEdGeVoyVjBPaUFuTmpjeE1UVTJOUzB6SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzTmpNek5URW5MQ0IwWVhKblpYUTZJQ2MyTnpFeE5UWTFMVFFuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamMyTXpNMU1TY3NJSFJoY21kbGREb2dKMjl5WjE4NE0wNU9aMHB5VURWc2EwbE9PRGMyYTA1bFJ5Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk56WXpOVEF4Snl3Z2RHRnlaMlYwT2lBbk5USTJNVEF6TnkweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZM05qTTFNREVuTENCMFlYSm5aWFE2SUNjMU9EVTFPVFUzTFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpjMk16VXdNU2NzSUhSaGNtZGxkRG9nSnpZMk1ERXdPRGN0TWljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTnpZek5UQXhKeXdnZEdGeVoyVjBPaUFuTmpZMU5EQXpNaTAwSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzTmpNMU1ERW5MQ0IwWVhKblpYUTZJQ2R2Y21kZk0zWkpNbG8xYTBNeFUyRlRiR0pWUW05UFFsUW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qYzJPRGt3TkNjc0lIUmhjbWRsZERvZ0p6WXhPRE0xT0RrdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk56WTRPVEEwSnl3Z2RHRnlaMlYwT2lBbmIzSm5YMWhqY1VOcWRGUTRjR2s0VFdzelZXcFJiRVIwSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzT0RJek9ETW5MQ0IwWVhKblpYUTZJQ2MyTnpFeE5UWTFMVEVuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamM0TWpNNE15Y3NJSFJoY21kbGREb2dKelkzTVRFMU5qVXRNaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJOemd5TXpnekp5d2dkR0Z5WjJWME9pQW5OamN4TVRVMk5TMHpKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTNPREl6T0RNbkxDQjBZWEpuWlhRNklDYzJOekV4TlRZMUxUUW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qYzRNak00TXljc0lIUmhjbWRsZERvZ0oyOXlaMTg0TTA1T1owcHlVRFZzYTBsT09EYzJhMDVsUnljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyTnpnek5USTBKeXdnZEdGeVoyVjBPaUFuTlRnMU9Ua3hOaTB6SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelkzT0RNMU1qUW5MQ0IwWVhKblpYUTZJQ2MyTnpnek5USTBMVEVuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamM0TXpVeU5DY3NJSFJoY21kbGREb2dKMjl5WjE5bVFUQmhlbkZ2UWtkRmVtOVFiM2s0TlVwNWRpY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk56ZzJNemd5Snl3Z2RHRnlaMlYwT2lBbk5qVXpNRGt6TWkweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZM09EWXpPREluTENCMFlYSm5aWFE2SUNkdmNtZGZUbVpMUWtJNVZGZEdORUZ6T0ZSVFlYTktOVzRuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oamd3TkRNek1DY3NJSFJoY21kbGREb2dKelUzTVRVME5UQXRNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJPREEwTXpNd0p5d2dkR0Z5WjJWME9pQW5OakkyT0Rnd015MHpKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTRNRFF6TXpBbkxDQjBZWEpuWlhRNklDYzJPREEwTXpNd0xURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qZ3dORE16TUNjc0lIUmhjbWRsZERvZ0p6WTRNRFF6TXpBdE5DY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk9EQTBNek13Snl3Z2RHRnlaMlYwT2lBbk5qZ3dORE16TUMwMUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZNE1EUXpNekFuTENCMFlYSm5aWFE2SUNkdmNtZGZPRE5PVG1kS2NsQTFiR3RKVGpnM05tdE9aVWNuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oamd3T1RZMU15Y3NJSFJoY21kbGREb2dKelF3T0RJd09UY3RNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJPREE1TmpVekp5d2dkR0Z5WjJWME9pQW5ORFUyTVRRME5DMHhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTRNRGsyTlRNbkxDQjBZWEpuWlhRNklDYzBPREE1TmprM0xURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qZ3dPVFkxTXljc0lIUmhjbWRsZERvZ0p6UTROak0wTWpVdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk9EQTVOalV6Snl3Z2RHRnlaMlYwT2lBbk5UQTVOekV5TWkweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZNE1EazJOVE1uTENCMFlYSm5aWFE2SUNjMU1qTTNNVGM0TFRJbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpnd09UWTFNeWNzSUhSaGNtZGxkRG9nSnpVek9ESXlNekl0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyT0RBNU5qVXpKeXdnZEdGeVoyVjBPaUFuTmpnd09UWTFNeTA1SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelk0TURrMk5UTW5MQ0IwWVhKblpYUTZJQ2RFTkRJek56WXhMVE1uSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oamd3T1RZMU15Y3NJSFJoY21kbGREb2dKMjl5WjE5SFZrMXNURlppZDBORVUybHhVRGxQWnpoVWJpY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk9ESTJOVFkxSnl3Z2RHRnlaMlYwT2lBbk5qSTVOVFV6TUMweEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZNE1qWTFOalVuTENCMFlYSm5aWFE2SUNjMk1qazFOVE13TFRJbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpneU5qVTJOU2NzSUhSaGNtZGxkRG9nSjI5eVoxOWFOVGxoVlVKSGRGbzVVRFZSZW1SR2FVdHRXaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJPREkyTlRneUp5d2dkR0Z5WjJWME9pQW5ORE0yTWpNNE55MHhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTRNalkxT0RJbkxDQjBZWEpuWlhRNklDYzJNRGd4T0RjMUxUSW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qZ3lOalU0TWljc0lIUmhjbWRsZERvZ0p6WTRNalkxT0RJdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk9ESTJOVGd5Snl3Z2RHRnlaMlYwT2lBbmIzSm5YekJxVUZkTk4xbHhhSFJZYlRCc2JUTm1iVEZaSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelk0TWpZM05EVW5MQ0IwWVhKblpYUTZJQ2MyTWpNek5qRTNMVEluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oamd5TmpjME5TY3NJSFJoY21kbGREb2dKelkxTnpjM01qWXRNaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJPREkyTnpRMUp5d2dkR0Z5WjJWME9pQW5Oamd5TmpjME5TMHpKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTRNalkzTkRVbkxDQjBZWEpuWlhRNklDZHZjbWRmT0ROT1RtZEtjbEExYkd0SlRqZzNObXRPWlVjbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpneU9UWTFOU2NzSUhSaGNtZGxkRG9nSnpVNU56ZzRNamt0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyT0RJNU5qVTFKeXdnZEdGeVoyVjBPaUFuTmpBd05ESTNOaTB4TXljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyT0RJNU5qVTFKeXdnZEdGeVoyVjBPaUFuTmpneU9UWTFOUzB4SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelk0TWprMk5UVW5MQ0IwWVhKblpYUTZJQ2MyT0RJNU5qVTFMVEluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oamd5T1RZMU5TY3NJSFJoY21kbGREb2dKelk0TWprMk5UVXRNeWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJPREk1TmpVMUp5d2dkR0Z5WjJWME9pQW5Oamd5T1RZMU5TMDJKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTRNamsyTlRVbkxDQjBZWEpuWlhRNklDZHZjbWRmT0ROT1RtZEtjbEExYkd0SlRqZzNObXRPWlVjbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpnek1ERTNOQ2NzSUhSaGNtZGxkRG9nSnpRM09UZzFPVFF0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyT0RNd01UYzBKeXdnZEdGeVoyVjBPaUFuTlRRMk5UZzVOUzB4SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelk0TXpBeE56UW5MQ0IwWVhKblpYUTZJQ2R2Y21kZk9HTnpUV2QwWjI1T01HMVNSVnB3VGxBeFNta25JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qZzBNamMwT0Njc0lIUmhjbWRsZERvZ0p6WTBNelExTlRBdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk9EUXlOelE0Snl3Z2RHRnlaMlYwT2lBbk5qWTJOVFkxTlMweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZNE5ESTNORGduTENCMFlYSm5aWFE2SUNkdmNtZGZObkk1ZERkYVFUWlpWREF6TVU5a05HdE5VR2NuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamcwTXpRd015Y3NJSFJoY21kbGREb2dKell5TmpRd09EY3RNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJPRFF6TkRBekp5d2dkR0Z5WjJWME9pQW5iM0puWDBGVVQxZElaRFJIUjJGdmFERTBlblYwV0hFM0p5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZNE5UQXlOVEluTENCMFlYSm5aWFE2SUNjMU56YzBNelUzTFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpnMU1EZzVOU2NzSUhSaGNtZGxkRG9nSnpZd09USXdPRE10TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyT0RVd09EazFKeXdnZEdGeVoyVjBPaUFuTmpBNU1qQTRNeTB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelk0TlRBNE9UVW5MQ0IwWVhKblpYUTZJQ2MyTlRjM056STJMVEluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamcxTURnNU5TY3NJSFJoY21kbGREb2dKelk0TlRBNE9UVXRNeWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJPRFV3T0RrMUp5d2dkR0Z5WjJWME9pQW5OamcxTURnNU5TMDFKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTROVEE0T1RVbkxDQjBZWEpuWlhRNklDZHZjbWRmT0ROT1RtZEtjbEExYkd0SlRqZzNObXRPWlVjbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmpnMU1EazBPU2NzSUhSaGNtZGxkRG9nSnpZNE5UQTVORGt0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyT0RVd09UUTVKeXdnZEdGeVoyVjBPaUFuTmpnMU1EazBPUzB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelk0TlRBNU5Ea25MQ0IwWVhKblpYUTZJQ2MyT0RVd09UUTVMVE1uSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamcxTURrME9TY3NJSFJoY21kbGREb2dKMjl5WjE4eU5ESm9TbVZuZDJaUlEyVlFPV2h6Wm5kd1Z5Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk9EVXlPVEUxSnl3Z2RHRnlaMlYwT2lBbk5USTNOakkyTWkweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZNE5USTVNVFVuTENCMFlYSm5aWFE2SUNkdmNtZGZUVXQyWW01RFkzbFFkV1JZWlhoVmRuTlRkMFluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oamt3TlRBMU55Y3NJSFJoY21kbGREb2dKelU0T1RjMU5qTXROQ2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJPVEExTURVM0p5d2dkR0Z5WjJWME9pQW5Oamt3TlRBMU55MHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTVNRFV3TlRjbkxDQjBZWEpuWlhRNklDZHZjbWRmVG1aTFFrSTVWRmRHTkVGek9GUlRZWE5LTlc0bklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTmprMU9UZzFNaWNzSUhSaGNtZGxkRG9nSnpVMk16STBNekl0TkNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyT1RVNU9EVXlKeXdnZEdGeVoyVjBPaUFuTmprd05UQTFOeTB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelk1TlRrNE5USW5MQ0IwWVhKblpYUTZJQ2R2Y21kZlRtWkxRa0k1VkZkR05FRnpPRlJUWVhOS05XNG5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qazJORE0yTXljc0lIUmhjbWRsZERvZ0p6VTBNRGswT1RndE5DY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjMk9UWTBNell6Snl3Z2RHRnlaMlYwT2lBbk5qazJORE0yTXkweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpZNU5qUXpOak1uTENCMFlYSm5aWFE2SUNkdmNtZGZUbVpMUWtJNVZGZEdORUZ6T0ZSVFlYTktOVzRuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OamszT0RreU1TY3NJSFJoY21kbGREb2dKelUyTXpJME16SXROQ2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzJPVGM0T1RJeEp5d2dkR0Z5WjJWME9pQW5Oamt3TlRBMU55MHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6WTVOemc1TWpFbkxDQjBZWEpuWlhRNklDYzJPVGM0T1RJeExUTW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk5qazNPRGt5TVNjc0lIUmhjbWRsZERvZ0oyOXlaMTlPWmt0Q1FqbFVWMFkwUVhNNFZGTmhjMG8xYmljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MyT1RneE5qSTRKeXdnZEdGeVoyVjBPaUFuTlRRd09UUTVPQzAwSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKelk1T0RFMk1qZ25MQ0IwWVhKblpYUTZJQ2R2Y21kZlRtWkxRa0k1VkZkR05FRnpPRlJUWVhOS05XNG5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56QXdNRGd4T0Njc0lIUmhjbWRsZERvZ0p6VTJNekkwTXpJdE5DY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM01EQXdPREU0Snl3Z2RHRnlaMlYwT2lBbk5qa3dOVEExTnkweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjd01EQTRNVGduTENCMFlYSm5aWFE2SUNjM01EQXdPREU0TFRNbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpBd01EZ3hPQ2NzSUhSaGNtZGxkRG9nSjI5eVoxOVlkVFpuV0ZOemJIUkVRbHBVUVdoTlJrSlhSQ2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNNREkxTnpRekp5d2dkR0Z5WjJWME9pQW5OREE0TWpBNU55MHhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6Y3dNalUzTkRNbkxDQjBZWEpuWlhRNklDYzBOVFl4TkRRMExURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56QXlOVGMwTXljc0lIUmhjbWRsZERvZ0p6UTRNRGsyT1RjdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM01ESTFOelF6Snl3Z2RHRnlaMlYwT2lBbk5URTNOalkwTkMweEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjd01qVTNORE1uTENCMFlYSm5aWFE2SUNjMU16Z3lNak15TFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpBeU5UYzBNeWNzSUhSaGNtZGxkRG9nSnpZMU5URXlOell0TVRBbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpBeU5UYzBNeWNzSUhSaGNtZGxkRG9nSnpZMU5URXlOell0TVRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpBeU5UYzBNeWNzSUhSaGNtZGxkRG9nSnpZMU5URXlOell0TVRJbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpBeU5UYzBNeWNzSUhSaGNtZGxkRG9nSnpZMU5URXlOell0TXljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTURJMU56UXpKeXdnZEdGeVoyVjBPaUFuTmpVMU1USTNOaTAwSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN3TWpVM05ETW5MQ0IwWVhKblpYUTZJQ2MyTlRVeE1qYzJMVGduSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OekF5TlRjME15Y3NJSFJoY21kbGREb2dKelkxTlRFeU56WXRPU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNNREkxTnpRekp5d2dkR0Z5WjJWME9pQW5iM0puWDBkV1RXeE1WbUozUTBSVGFYRlFPVTluT0ZSdUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjd05Ea3hPVEFuTENCMFlYSm5aWFE2SUNjMk1EZ3dPVGs0TFRNbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpBME9URTVNQ2NzSUhSaGNtZGxkRG9nSnpZNU1UUXhPREl0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTURRNU1Ua3dKeXdnZEdGeVoyVjBPaUFuYjNKblh6SkpSamszZWxaNWJWTjFjbUZUYmxWQldHMXhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6Y3dOVFUzTXpFbkxDQjBZWEpuWlhRNklDYzFOak15TkRNeUxUUW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56QTFOVGN6TVNjc0lIUmhjbWRsZERvZ0p6WTVNRFV3TlRjdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM01EVTFOek14Snl3Z2RHRnlaMlYwT2lBbk5qazNPRGt5TVMwekp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjd05UVTNNekVuTENCMFlYSm5aWFE2SUNkdmNtZGZUbVpMUWtJNVZGZEdORUZ6T0ZSVFlYTktOVzRuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OekEyTVRBeE5DY3NJSFJoY21kbGREb2dKelEwT0RZM01qQXRNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNNRFl4TURFMEp5d2dkR0Z5WjJWME9pQW5ORGN3TXpBeE9TMHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6Y3dOakV3TVRRbkxDQjBZWEpuWlhRNklDYzFNamN5TURZNUxUWW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56QTJNVEF4TkNjc0lIUmhjbWRsZERvZ0p6VTJNakkyTlRNdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM01EWXhNREUwSnl3Z2RHRnlaMlYwT2lBbk56QTJNVEF4TkMwMEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjd05qRXdNVFFuTENCMFlYSm5aWFE2SUNjM01EWXhNREUwTFRZbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpBMk1UQXhOQ2NzSUhSaGNtZGxkRG9nSjI5eVoxOUVkSFJhVFhacmVYWlhNMlpXTm05RFZVMVVSaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNNRFkwTXpRMkp5d2dkR0Z5WjJWME9pQW5OREkxTXpBMk1TMHpKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6Y3dOalF6TkRZbkxDQjBZWEpuWlhRNklDYzBPVEF5TmpjeExUTW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56QTJORE0wTmljc0lIUmhjbWRsZERvZ0oyOXlaMTlFZEhSYVRYWnJlWFpYTTJaV05tOURWVTFVUmljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTVRBMU9EWTRKeXdnZEdGeVoyVjBPaUFuTlRnMk16TXlOaTB4SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN4TURVNE5qZ25MQ0IwWVhKblpYUTZJQ2MyT0RnM056TTJMVFFuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OekV3TlRnMk9DY3NJSFJoY21kbGREb2dKMjl5WjE4d1pWUnlNMWhKUW1wQlMzQllhME0yT0RJemNpY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM01URXhOelk1Snl3Z2RHRnlaMlYwT2lBbk5UUXdPVFE1T0MwMEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjeE1URTNOamtuTENCMFlYSm5aWFE2SUNjMU9EazNOVFl6TFRRbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpFeE1UYzJPU2NzSUhSaGNtZGxkRG9nSnpZMU16QTVNekl0TWljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTVRFeE56WTVKeXdnZEdGeVoyVjBPaUFuTmprd05UQTFOeTB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN4TVRFM05qa25MQ0IwWVhKblpYUTZJQ2R2Y21kZlRtWkxRa0k1VkZkR05FRnpPRlJUWVhOS05XNG5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56RTBOekV6T0Njc0lIUmhjbWRsZERvZ0p6WTVNRFV3TlRjdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM01UUTNNVE00Snl3Z2RHRnlaMlYwT2lBbmIzSm5YMDVtUzBKQ09WUlhSalJCY3poVVUyRnpTalZ1SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN4TlRrM05UQW5MQ0IwWVhKblpYUTZJQ2MwT0RjeU5qQXpMVEVuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OekUxT1RjMU1DY3NJSFJoY21kbGREb2dKelUzTVRNNU1URXRNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNNVFU1TnpVd0p5d2dkR0Z5WjJWME9pQW5OVGN4TXpreE1TMHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6Y3hOVGszTlRBbkxDQjBZWEpuWlhRNklDYzNNVFU1TnpVd0xUUW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56RTFPVGMxTUNjc0lIUmhjbWRsZERvZ0p6Y3hOVGszTlRBdE5TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM01UVTVOelV3Snl3Z2RHRnlaMlYwT2lBbmIzSm5YMlYzVm5ORGRYUndVbnBFT1hCVU1EZHJRbTlGSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN5TVRFNE1qVW5MQ0IwWVhKblpYUTZJQ2MxTURneE5ESXlMVEVuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oekl4TVRneU5TY3NJSFJoY21kbGREb2dKelV5T0RNME5USXRNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNNakV4T0RJMUp5d2dkR0Z5WjJWME9pQW5OVGN3TXpNMU55MHpKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6Y3lNVEU0TWpVbkxDQjBZWEpuWlhRNklDYzJOVGt6T0RNMExUSW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56STBOamN6TkNjc0lIUmhjbWRsZERvZ0p6WTVNRFV3TlRjdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM01qUTJOek0wSnl3Z2RHRnlaMlYwT2lBbmIzSm5YMDVtUzBKQ09WUlhSalJCY3poVVUyRnpTalZ1SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN5T0RJM09ESW5MQ0IwWVhKblpYUTZJQ2MyTVRRME5qYzVMVEVuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oekk0TWpjNE1pY3NJSFJoY21kbGREb2dKell4TlRJNU9EY3RNaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNNamd5TnpneUp5d2dkR0Z5WjJWME9pQW5Oamd6TmpVME1DMDJKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6Y3lPREkzT0RJbkxDQjBZWEpuWlhRNklDZHZjbWRmZGxNMmNtTkxlV015Y1U0emNrWmtXREJRTWtzbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpJNU56azNOeWNzSUhSaGNtZGxkRG9nSnpZeE5EUTJOemt0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTWprM09UYzNKeXdnZEdGeVoyVjBPaUFuTmpFMU1qazROeTB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN5T1RjNU56Y25MQ0IwWVhKblpYUTZJQ2MyT0RNMk5UUXdMVFluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oekk1TnprM055Y3NJSFJoY21kbGREb2dKMjl5WjE5MlV6WnlZMHQ1WXpKeFRqTnlSbVJZTUZBeVN5Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM016SXpNelUySnl3Z2RHRnlaMlYwT2lBbk5EUTROamN5TUMweEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjek1qTXpOVFluTENCMFlYSm5aWFE2SUNjME56QXpNREU1TFRJbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpNeU16TTFOaWNzSUhSaGNtZGxkRG9nSnpVeU56SXdOamt0TmljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTXpJek16VTJKeXdnZEdGeVoyVjBPaUFuTlRZeU1qWTFNeTB4SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN6TWpNek5UWW5MQ0IwWVhKblpYUTZJQ2MzTURZeE1ERTBMVFFuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oek15TXpNMU5pY3NJSFJoY21kbGREb2dKemN6TWpNek5UWXROU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNNekl6TXpVMkp5d2dkR0Z5WjJWME9pQW5iM0puWDBSMGRGcE5kbXQ1ZGxjelpsWTJiME5WVFZSR0p5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjek5EQTBNVEVuTENCMFlYSm5aWFE2SUNjM016UXdOREV4TFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpNNE1EWTVOU2NzSUhSaGNtZGxkRG9nSnpVME1EazBPVGd0TkNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTXpnd05qazFKeXdnZEdGeVoyVjBPaUFuTlRZek1qUXpNaTAwSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN6T0RBMk9UVW5MQ0IwWVhKblpYUTZJQ2MyT1RBMU1EVTNMVEluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oek00TURZNU5TY3NJSFJoY21kbGREb2dKemN3T0RNd056VXRNeWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNNemd3TmprMUp5d2dkR0Z5WjJWME9pQW5iM0puWDA1bVMwSkNPVlJYUmpSQmN6aFVVMkZ6U2pWdUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjek9EQTJPVFluTENCMFlYSm5aWFE2SUNjMU5qTXlORE15TFRRbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpNNE1EWTVOaWNzSUhSaGNtZGxkRG9nSnpZNU1EVXdOVGN0TWljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTXpnd05qazJKeXdnZEdGeVoyVjBPaUFuTnpBNE16QTNOUzB6SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN6T0RBMk9UWW5MQ0IwWVhKblpYUTZJQ2MzTXpnd05qazJMVE1uSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5Oek00TURZNU5pY3NJSFJoY21kbGREb2dKMjl5WjE5T1prdENRamxVVjBZMFFYTTRWRk5oYzBvMWJpY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM016ZzFNakkwSnl3Z2RHRnlaMlYwT2lBbk5UQTBNVEl3TUMweEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjek9EVXlNalFuTENCMFlYSm5aWFE2SUNjMU1EUXhNakF3TFRRbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpNNE5USXlOQ2NzSUhSaGNtZGxkRG9nSnpjek9EVXlNalF0TWljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTXpnMU1qSTBKeXdnZEdGeVoyVjBPaUFuTnpNNE5USXlOQzB6SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemN6T0RVeU1qUW5MQ0IwWVhKblpYUTZJQ2R2Y21kZlNXMWxaemxYTmxBeFZFVTJTVEpSZFhSVE5Ia25JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56UXdNalV3Tmljc0lIUmhjbWRsZERvZ0p6VTFNVEkwTWpZdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM05EQXlOVEEySnl3Z2RHRnlaMlYwT2lBbk5qQTBPREV4TUMwekp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjME1ESTFNRFluTENCMFlYSm5aWFE2SUNjM05EQXlOVEEyTFRJbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpRd01qVXdOaWNzSUhSaGNtZGxkRG9nSjI5eVoxOXdjRVZzYTBWMFVYWkdkRWMyUVRRM05UUlZTU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNOREEwTlRBNEp5d2dkR0Z5WjJWME9pQW5ORFk0TWpVNU5pMHlKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6YzBNRFExTURnbkxDQjBZWEpuWlhRNklDYzFNVEUzT0RNNExURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56UXdORFV3T0Njc0lIUmhjbWRsZERvZ0p6VTNNVFUyTnpVdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM05EQTBOVEE0Snl3Z2RHRnlaMlYwT2lBbk5qa3hNamd6T1MweUp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjME1EUTFNRGduTENCMFlYSm5aWFE2SUNkdmNtZGZUbVpMUWtJNVZGZEdORUZ6T0ZSVFlYTktOVzRuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OelF4TVRJd09TY3NJSFJoY21kbGREb2dKelV6TkRVMk16a3ROaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNOREV4TWpBNUp5d2dkR0Z5WjJWME9pQW5OVFF4TnpjM01DMDRKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6YzBNVEV5TURrbkxDQjBZWEpuWlhRNklDYzNNRGd5T0RNeUxUUW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56UXhNVEl3T1Njc0lIUmhjbWRsZERvZ0oyOXlaMTlGYUZsR1VFbEtSVzFaVVZsU2IxbDJjMjV3ZVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTkRVek1EWTFKeXdnZEdGeVoyVjBPaUFuTkRBM01qSXpOaTB4SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemMwTlRNd05qVW5MQ0IwWVhKblpYUTZJQ2MwTXpVMk5EVTFMVE1uSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OelExTXpBMk5TY3NJSFJoY21kbGREb2dKelEzTURNd01Ua3RNaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNORFV6TURZMUp5d2dkR0Z5WjJWME9pQW5OekEyTVRBeE5DMDJKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6YzBOVE13TmpVbkxDQjBZWEpuWlhRNklDZHZjbWRmUldoWlJsQkpTa1Z0V1ZGWlVtOVpkbk51Y0hrbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpRMU16QTJOU2NzSUhSaGNtZGxkRG9nSjI5eVoxOUthbkpOTmxWdFpVOVpNRkUxVFcxdlRtbFFPQ2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNORFV6TURnM0p5d2dkR0Z5WjJWME9pQW5OVE0wTlRZek9TMDJKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6YzBOVE13T0RjbkxDQjBZWEpuWlhRNklDZHZjbWRmUldoWlJsQkpTa1Z0V1ZGWlVtOVpkbk51Y0hrbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpRMk1qZzJNaWNzSUhSaGNtZGxkRG9nSnpZeE5EUTJOemt0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTkRZeU9EWXlKeXdnZEdGeVoyVjBPaUFuTmpnek5qVTBNQzAySnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemMwTmpJNE5qSW5MQ0IwWVhKblpYUTZJQ2R2Y21kZmRsTTJjbU5MZVdNeWNVNHpja1prV0RCUU1rc25JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56UTJORGcwTmljc0lIUmhjbWRsZERvZ0p6UTBNRE0yT0RjdE1pY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM05EWTBPRFEySnl3Z2RHRnlaMlYwT2lBbk5UZzVOelUyTXkwMEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjME5qUTRORFluTENCMFlYSm5aWFE2SUNjMk9UQTFNRFUzTFRJbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpRMk5EZzBOaWNzSUhSaGNtZGxkRG9nSnpjd09ETXdOelV0TXljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTkRZME9EUTJKeXdnZEdGeVoyVjBPaUFuYjNKblgwNW1TMEpDT1ZSWFJqUkJjemhVVTJGelNqVnVKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6YzBOamd6TURRbkxDQjBZWEpuWlhRNklDYzJPRFl6TXpZekxURW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56UTJPRE13TkNjc0lIUmhjbWRsZERvZ0p6YzBOamd6TURRdE1TY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM05EWTRNekEwSnl3Z2RHRnlaMlYwT2lBbmIzSm5YMFZvV1VaUVNVcEZiVmxSV1ZKdldYWnpibkI1SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemMxTURFeU9UTW5MQ0IwWVhKblpYUTZJQ2MwTWpJME56STFMVEVuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OelV3TVRJNU15Y3NJSFJoY21kbGREb2dKelExTnpNME56SXRNU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNOVEF4TWprekp5d2dkR0Z5WjJWME9pQW5iM0puWDJvMVZUVkpSV0V4UmtsaVozUnlOMmxPYzFGTkp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjMU1EWTNPVEVuTENCMFlYSm5aWFE2SUNjME5EQXpOamczTFRJbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpVd05qYzVNU2NzSUhSaGNtZGxkRG9nSnpRNU56SXlNalF0TVNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTlRBMk56a3hKeXdnZEdGeVoyVjBPaUFuTmprd05UQTFOeTB5SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemMxTURZM09URW5MQ0IwWVhKblpYUTZJQ2RTUlRNNU9EUXhMVFFuSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OelV3TmpjNU1TY3NJSFJoY21kbGREb2dKMjl5WjE5T1prdENRamxVVjBZMFFYTTRWRk5oYzBvMWJpY2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM05qSXdOalUxSnl3Z2RHRnlaMlYwT2lBbk5UazBPRGM0T1MweEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjMk1qQTJOVFVuTENCMFlYSm5aWFE2SUNjM05qSXdOalUxTFRJbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpZeU1EWTFOU2NzSUhSaGNtZGxkRG9nSjI5eVoxOVhhREpqYms5SmVrdHNhSHBxZFhGV2JVOXhXU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNOak15T1RnMUp5d2dkR0Z5WjJWME9pQW5OekEzT0RVd015MHpKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6YzJNekk1T0RVbkxDQjBZWEpuWlhRNklDYzNOakE0TnpZeExUUW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56WXpNams0TlNjc0lIUmhjbWRsZERvZ0p6YzJNekk1T0RVdE15Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjM05qTXlPVGcxSnl3Z2RHRnlaMlYwT2lBbk56WXpNams0TlMwMEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjMk16STVPRFVuTENCMFlYSm5aWFE2SUNkdmNtZGZVWGM0UlhOeVRqQk5OVEp1VmxGVlRUWjJjMVluSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OelkyTXpZd055Y3NJSFJoY21kbGREb2dKelUxT1RReE5qa3RNaWNnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNOall6TmpBM0p5d2dkR0Z5WjJWME9pQW5OalkxT0RVM055MHhKeUI5TEZ4dUlDQWdJQ0FnSUNCN0lITnZkWEpqWlRvZ0p6YzJOak0yTURjbkxDQjBZWEpuWlhRNklDYzNNVFUwTkRjM0xUSW5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk56WTJNell3Tnljc0lIUmhjbWRsZERvZ0oyOXlaMTlKUkZWaVV6QTVXbEl3U21oS09HcEdSWEIwVkNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTmpjME5qVXdKeXdnZEdGeVoyVjBPaUFuTmpZek9USTBOaTB4SnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemMyTnpRMk5UQW5MQ0IwWVhKblpYUTZJQ2MyT0RNNE16azNMVE1uSUgwc1hHNGdJQ0FnSUNBZ0lIc2djMjkxY21ObE9pQW5OelkzTkRZMU1DY3NJSFJoY21kbGREb2dKemN5TURVM01UWXROU2NnZlN4Y2JpQWdJQ0FnSUNBZ2V5QnpiM1Z5WTJVNklDYzNOamMwTmpVd0p5d2dkR0Z5WjJWME9pQW5iM0puWDNCc1dtSk1lR2w1YzBWVFltRkpPWEJQWlhsdEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpjM016STRNVGtuTENCMFlYSm5aWFE2SUNjMk5qTTVNalEyTFRFbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuTnpjek1qZ3hPU2NzSUhSaGNtZGxkRG9nSnpZNE16Z3pPVGN0TXljZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2MzTnpNeU9ERTVKeXdnZEdGeVoyVjBPaUFuTnpJd05UY3hOaTAxSnlCOUxGeHVJQ0FnSUNBZ0lDQjdJSE52ZFhKalpUb2dKemMzTXpJNE1Ua25MQ0IwWVhKblpYUTZJQ2R2Y21kZmNHeGFZa3g0YVhselJWTmlZVWs1Y0U5bGVXMG5JSDBzWEc0Z0lDQWdJQ0FnSUhzZ2MyOTFjbU5sT2lBbk9EQTFNekU0TkNjc0lIUmhjbWRsZERvZ0p6Y3dOemcxTURNdE15Y2dmU3hjYmlBZ0lDQWdJQ0FnZXlCemIzVnlZMlU2SUNjNE1EVXpNVGcwSnl3Z2RHRnlaMlYwT2lBbk56WXdPRGMyTVMwMEp5QjlMRnh1SUNBZ0lDQWdJQ0I3SUhOdmRYSmpaVG9nSnpnd05UTXhPRFFuTENCMFlYSm5aWFE2SUNjM05qTXlPVGcxTFRNbklIMHNYRzRnSUNBZ0lDQWdJSHNnYzI5MWNtTmxPaUFuT0RBMU16RTROQ2NzSUhSaGNtZGxkRG9nSnpjMk16STVPRFV0TkNjZ2ZTeGNiaUFnSUNBZ0lDQWdleUJ6YjNWeVkyVTZJQ2M0TURVek1UZzBKeXdnZEdGeVoyVjBPaUFuYjNKblgxRjNPRVZ6Y2s0d1RUVXlibFpSVlUwMmRuTldKeUI5WEc0Z0lDQWdYVnh1ZlZ4dUlpd2lMeW9xWEc0Z0tpQkFZWFYwYUc5eUlFcHBZV05vWlc1bklGQmhiaUE4YW1GamEybGxZVzU0YVhOQVoyMWhhV3d1WTI5dFBseHVJQ29nUUdSbGMyTnlhWEIwYVc5dUlGQnliM1pwWkdVZ2RHaGxJR1Z1ZEhKaGJtTmxJRzltSUU1bGRGWXVhbk11WEc0Z0tpQkFaR1Z3Wlc1a1pXNWpaWE1nYVc1MFpYSm1ZV05sY3k1MGN5d2dkWFJwYkhNdmJXRndNaTVxY3l3Z2JtOWtaUzUwY3l3Z2JHbHVheTUwYzF4dUlDb3ZYRzVjYm1sdGNHOXlkQ0FxSUdGeklHbHVkR1Z5Wm1GalpYTWdabkp2YlNBbkxpOXBiblJsY21aaFkyVnpKMXh1YVcxd2IzSjBJRTFoY0RJZ1puSnZiU0FuTGk5MWRHbHNjeTl0WVhBeUoxeHVhVzF3YjNKMElFNXZaR1VnWm5KdmJTQW5MaTl1YjJSbEoxeHVhVzF3YjNKMElFeHBibXNnWm5KdmJTQW5MaTlzYVc1ckoxeHVhVzF3YjNKMElDb2dZWE1nWkdWbVlYVnNkRU52Ym1acFozTWdabkp2YlNBbkxpOWpiMjVtYVdkekoxeHVhVzF3YjNKMElDb2dZWE1nWkdGMFlYTmxkQ0JtY205dElDY3VMMlJoZEdGelpYUW5YRzVwYlhCdmNuUWdleUJTWlc1a1pYSmxjaUI5SUdaeWIyMGdKeTR2Y21WdVpHVnlaWEluWEc1cGJYQnZjblFnZXlCSmJuUmxjbUZqZEdsdmJrMWhibUZuWlhJZ2ZTQm1jbTl0SUNjdUwybHVkR1Z5WVdOMGFXOXVMMmx1ZEdWeVlXTjBhVzl1SjF4dWFXMXdiM0owSUNvZ1lYTWdWWFJwYkhNZ1puSnZiU0FuTGk5MWRHbHNjeTkxZEdsc2N5ZGNibWx0Y0c5eWRDQjdJRXhoWW1Wc1RXRnVZV2RsY2lCOUlHWnliMjBnSnk0dmJHRmlaV3d2YkdGaVpXd25YRzVjYm1Oc1lYTnpJRTVsZEZZZ2UxeHVJQ0FnSUhCMVlteHBZeUJWZEdsc2N5QTlJRlYwYVd4elhHNWNiaUFnSUNCd2RXSnNhV01nYkdGaVpXeE5ZVzVoWjJWeU9pQk1ZV0psYkUxaGJtRm5aWEpjYmx4dUlDQWdJSEIxWW14cFl5QWtYMmxrTW01dlpHVWdQU0J1WlhjZ1RXRndLQ2xjYmlBZ0lDQndkV0pzYVdNZ0pGOWxibVJ6TW14cGJtc2dQU0J1WlhjZ1RXRndNaWdwWEc0Z0lDQWdjSFZpYkdsaklDUmZjMjkxY21ObFNXUXliR2x1YTNNNklFMWhjRHh6ZEhKcGJtY3NJRk5sZER4TWFXNXJQajRnUFNCdVpYY2dUV0Z3S0NsY2JpQWdJQ0J3ZFdKc2FXTWdKRjkwWVhKblpYUkpaREpzYVc1cmN6b2dUV0Z3UEhOMGNtbHVaeXdnVTJWMFBFeHBibXMrUGlBOUlHNWxkeUJOWVhBb0tWeHVJQ0FnSUhCMVlteHBZeUFrWDJOdmJuUmhhVzVsY2pvZ1NGUk5URVJwZGtWc1pXMWxiblJjYmlBZ0lDQndkV0pzYVdNZ0pGOXlaVzVrWlhKbGNqb2dVbVZ1WkdWeVpYSmNiaUFnSUNCd2RXSnNhV01nSkY5amIyNW1hV2R6SUQwZ1NsTlBUaTV3WVhKelpTaEtVMDlPTG5OMGNtbHVaMmxtZVNoa1pXWmhkV3gwUTI5dVptbG5jeWtwSUM4dklFNVBWRVU2SUdSbFpYQWdZMjl3ZVNCamIyNW1hV2R6WEc0Z0lDQWdjSFZpYkdsaklDUmZhVzUwWlhKaFkzUnBiMjQ2SUVsdWRHVnlZV04wYVc5dVRXRnVZV2RsY2x4dVhHNGdJQ0FnY0hWaWJHbGpJQ1JmYkdGNmVVeHBibXRWY0dSaGRHVWdQU0JtWVd4elpTQXZMeUJtYkdGbklIUnZJR052Ym5SeWIyd2diR0Y2ZVNCMWNHUmhkR1VnYkdsdWF5QnZjaUJ1YjNSY2JseHVJQ0FnSUhCeWFYWmhkR1VnSkY5a1lYUmhPaUJwYm5SbGNtWmhZMlZ6TGs1dlpHVk1hVzVyUkdGMFlTQTlJSHNnYm05a1pYTTZJRnRkTENCc2FXNXJjem9nVzEwZ2ZWeHVYRzRnSUNBZ2NISnBkbUYwWlNBa1gyMXZaR2xtYVdWa1RHbHVhME52ZFc1MElEMGdNQ0F2THlCeVpXTnZjbVFnYlc5a2FXWnBaV1FnYkdsdWF5QnVkVzBnZEc4Z1kyOXVkSEp2YkNCc1lYcDVJSFZ3WkdGMFpWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dRR1JsYzJOeWFYQjBhVzl1SUdOeVpXRjBaU0JPWlhSV0lHOWlhbVZqZEM1Y2JpQWdJQ0FnS2lCQWNHRnlZVzBnWTI5dVptbG5jeUJqYjI1bWFXZDFjbUYwYVc5dWN5QnZaaUJPWlhSV0xDQnRkWE4wSUdsdVkyeDFaR1VnWVNCZ1kyOXVkR0ZwYm1WeU9pQklWRTFNUkdsMlJXeGxiV1Z1ZEdBZ2RHVnliVnh1SUNBZ0lDQXFMMXh1SUNBZ0lIQjFZbXhwWXlCamIyNXpkSEoxWTNSdmNpaGpiMjVtYVdkek9pQmhibmtwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0VvSjJOdmJuUmhhVzVsY2ljZ2FXNGdZMjl1Wm1sbmN5a2dmSHdnWTI5dVptbG5jeTVqYjI1MFlXbHVaWEl1ZEdGblRtRnRaU0FoUFQwZ0owUkpWaWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lFVnljbTl5S0NkRGIyNTBZV2x1WlhJZ2MyaHZkV3hrSUdKbElITndaV05wWm1sbFpDQmhjeUJoSUdScGRpQmxiR1Z0Wlc1MElTY3BYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZEdocGN5NGtYMk52Ym5SaGFXNWxjaUE5SUdOdmJtWnBaM011WTI5dWRHRnBibVZ5WEc0Z0lDQWdJQ0FnSUM4dklHOTJaWEp5YVdSbElHTnZibVpwWjNOY2JpQWdJQ0FnSUNBZ1ptOXlJQ2hqYjI1emRDQnJaWGtnYVc0Z1kyOXVabWxuY3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHdGxlU0E5UFQwZ0oyTnZiblJoYVc1bGNpY3BJR052Ym5ScGJuVmxJQzh2SUU1UFZFVTZJR1Y0WTJ4MVpHVWdZMjl1ZEdGcGJtVnlJR2x1SUdOdmJtWnBaM05jYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqYjI1bWFXZHpXMnRsZVYwZ1BUMDlJRTlpYW1WamRDaGpiMjVtYVdkelcydGxlVjBwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTRrWDJOdmJtWnBaM05iYTJWNVhTQTlJSHNnTGk0dWRHaHBjeTRrWDJOdmJtWnBaM05iYTJWNVhTd2dMaTR1WTI5dVptbG5jMXRyWlhsZElIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NGtYMk52Ym1acFozTmJhMlY1WFNBOUlHTnZibVpwWjNOYmEyVjVYVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdZMkZ1ZG1GeklEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnblkyRnVkbUZ6SnlrZ0x5OGdWRTlFVHpvZ1kyOXVjMmxrWlhJZ2JtOWtaU0JsYm5acGNtOXRaVzUwTENCa2IyTjFiV1Z1ZENCdWIzUWdaR1ZtYVc1bFpGeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCd2FYaGxiRkpoZEdsdklEMGdkMmx1Wkc5M0xtUmxkbWxqWlZCcGVHVnNVbUYwYVc4Z2ZId2dNVnh1SUNBZ0lDQWdJQ0JqWVc1MllYTXVjM1I1YkdVdWQybGtkR2dnUFNCMGFHbHpMaVJmWTI5dVptbG5jeTUzYVdSMGFDQXJJQ2R3ZUNkY2JpQWdJQ0FnSUNBZ1kyRnVkbUZ6TG5OMGVXeGxMbWhsYVdkb2RDQTlJSFJvYVhNdUpGOWpiMjVtYVdkekxtaGxhV2RvZENBcklDZHdlQ2RjYmlBZ0lDQWdJQ0FnWTJGdWRtRnpMbk5sZEVGMGRISnBZblYwWlNnbmQybGtkR2duTENCVGRISnBibWNvZEdocGN5NGtYMk52Ym1acFozTXVkMmxrZEdnZ0tpQndhWGhsYkZKaGRHbHZLU2xjYmlBZ0lDQWdJQ0FnWTJGdWRtRnpMbk5sZEVGMGRISnBZblYwWlNnbmFHVnBaMmgwSnl3Z1UzUnlhVzVuS0hSb2FYTXVKRjlqYjI1bWFXZHpMbWhsYVdkb2RDQXFJSEJwZUdWc1VtRjBhVzhwS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMaVJmWTI5dWRHRnBibVZ5TG1Gd2NHVnVaRU5vYVd4a0tHTmhiblpoY3lsY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TGlSZmNtVnVaR1Z5WlhJZ1BTQnVaWGNnVW1WdVpHVnlaWElvZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ1ZG1GekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJSFJvYVhNdUpGOWpiMjVtYVdkekxuZHBaSFJvTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQjBhR2x6TGlSZlkyOXVabWxuY3k1b1pXbG5hSFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtRMjlzYjNJNklIUm9hWE11SkY5amIyNW1hV2R6TG1KaFkydG5jbTkxYm1SRGIyeHZjaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHNXZaR1ZNYVcxcGREb2dkR2hwY3k0a1gyTnZibVpwWjNNdWJtOWtaVXhwYldsMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdsdWEweHBiV2wwT2lCMGFHbHpMaVJmWTI5dVptbG5jeTVzYVc1clRHbHRhWFJjYmlBZ0lDQWdJQ0FnZlNsY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TG14aFltVnNUV0Z1WVdkbGNpQTlJRzVsZHlCTVlXSmxiRTFoYm1GblpYSW9kR2hwY3lsY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TGlSZmFXNTBaWEpoWTNScGIyNGdQU0J1WlhjZ1NXNTBaWEpoWTNScGIyNU5ZVzVoWjJWeUtIUm9hWE1wWEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TGlSZlkyOXVabWxuY3k1bGJtRmliR1ZRWVc1YWIyOXRLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGlSZmFXNTBaWEpoWTNScGIyNHVhVzVwZEZwdmIyMG9LVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTRrWDJsdWRHVnlZV04wYVc5dUxtbHVhWFJOYjNWelpTZ3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NIVmliR2xqSUNSZllXUmtUVzlrYVdacFpXUk1hVzVyUTI5MWJuUW9iam9nYm5WdFltVnlLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVKRjl0YjJScFptbGxaRXhwYm10RGIzVnVkQ0FyUFNCdVhHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxpUmZiVzlrYVdacFpXUk1hVzVyUTI5MWJuUWdQaUIwYUdsekxpUmZZMjl1Wm1sbmN5NXNZWHA1VEdsdWExVndaR0YwWlZSb2NtVnphRzlzWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NGtYMnhoZW5sTWFXNXJWWEJrWVhSbElEMGdkSEoxWlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1FHUmxjMk55YVhCMGFXOXVJR1JoZEdFZ1oyVjBkR1Z5SUhObGRIUmxjbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQnViMlJsVEdsdWEwUmhkR0UvSUhSb1pTQnViMlJsTFd4cGJtc3RaR0YwWVNCdlppQmhJR2R5WVhCb0xDQndjbTkyYVdSbFpEOXpaWFIwWlhJNloyVjBkR1Z5TzF4dUlDQWdJQ0FxTDF4dUlDQWdJSEIxWW14cFl5QmtZWFJoS0c1dlpHVk1hVzVyUkdGMFlUODZJR2x1ZEdWeVptRmpaWE11VG05a1pVeHBibXRFWVhSaEtTQjdYRzRnSUNBZ0lDQWdJR2xtSUNodWIyUmxUR2x1YTBSaGRHRWdQVDA5SUhWdVpHVm1hVzVsWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdUpGOWtZWFJoWEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJrWld4bGRHVWdiMnhrSUdSaGRHRmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVKRjlrWVhSaElEMGdleUF1TGk1MGFHbHpMaVJmWkdGMFlTd2dMaTR1Ym05a1pVeHBibXRFWVhSaElIMWNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVKRjlwWkRKdWIyUmxJRDBnYm1WM0lFMWhjQ2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGlSZlpXNWtjekpzYVc1cklEMGdibVYzSUUxaGNESW9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTRrWDNOdmRYSmpaVWxrTW14cGJtdHpJRDBnYm1WM0lFMWhjQ2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGlSZmRHRnlaMlYwU1dReWJHbHVhM01nUFNCdVpYY2dUV0Z3S0NsY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhaR1JPYjJSbGN5aDBhR2x6TGlSZlpHRjBZUzV1YjJSbGN5bGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZV1JrVEdsdWEzTW9kR2hwY3k0a1gyUmhkR0V1YkdsdWEzTXBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJBWkdWelkzSnBjSFJwYjI0Z2FXNXBkR2xoYkdsNlpTQmhibVFnWVdSa0lHRWdibTlrWlZ4dUlDQWdJQ0FxSUVCd1lYSmhiU0J1YjJSbFJHRjBZU0IwYUdVZ1pHRjBZU0J2WmlCaElHNXZaR1VzSUdsdVkyeDFaR1VnYVdRc0lITjBlV3hsY3k0dUxseHVJQ0FnSUNBcUwxeHVJQ0FnSUhCMVlteHBZeUJoWkdST2IyUmxLRzV2WkdWRVlYUmhPaUJwYm5SbGNtWmhZMlZ6TGs1dlpHVkVZWFJoS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZrWkU1dlpHVnpLRnR1YjJSbFJHRjBZVjBwV3pCZFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1FHUmxjMk55YVhCMGFXOXVJR2x1YVhScFlXeHBlbVVnWVc1a0lHRmtaQ0JoSUd4cGJtdGNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2JHbHVhMFJoZEdFZ2RHaGxJR1JoZEdFZ2IyWWdZU0JzYVc1ckxDQnBibU5zZFdSbElITnZkWEpqWlN3Z2RHRnlaMlYwTENCaGJtUWdjM1I1YkdWekxpNHVYRzRnSUNBZ0lDb3ZYRzRnSUNBZ2NIVmliR2xqSUdGa1pFeHBibXNvYkdsdWEwUmhkR0U2SUdsdWRHVnlabUZqWlhNdVRHbHVhMFJoZEdFcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVdSa1RHbHVhM01vVzJ4cGJtdEVZWFJoWFNsYk1GMWNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQkFaR1Z6WTNKcGNIUnBiMjRnYVc1cGRHbGhiR2w2WlNCaGJtUWdZV1JrSUdGdUlHRnljbUY1SUc5bUlHNXZaR1Z6TGx4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3YVc1MFpYSm1ZV05sY3k1T2IyUmxSR0YwWVZ0ZGZTQnViMlJsYzBSaGRHRTZJR0VnWkdGMFlTQmhjbkpoZVNCdlppQnViMlJsY3lCMGIySmxJR0ZrWkdWa1hHNGdJQ0FnSUNvZ1FHMWxiV0psY205bUlFNWxkRlpjYmlBZ0lDQWdLaTljYmlBZ0lDQndkV0pzYVdNZ1lXUmtUbTlrWlhNb2JtOWtaWE5FWVhSaE9pQnBiblJsY21aaFkyVnpMazV2WkdWRVlYUmhXMTBwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYm1WM1RtOWtaWE1nUFNCdWIyUmxjMFJoZEdFdWJXRndLQ2h1YjJSbFJHRjBZU2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYm05a1pVUmhkR0V1YVdRZ1BTQnViMlJsUkdGMFlTNXBaQzUwYjFOMGNtbHVaeWdwWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCdWIyUmxJRDBnYm1WM0lFNXZaR1VvZEdocGN5d2dibTlrWlVSaGRHRXBYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdWIyUmxYRzRnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVKRjl5Wlc1a1pYSmxjaTVoWkdST2IyUmxjeWh1WlhkT2IyUmxjeWxjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZDA1dlpHVnpYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dRR1JsYzJOeWFYQjBhVzl1SUdsdWFYUnBZV3hwZW1VZ1lXNWtJR0ZrWkNCaGJpQmhjbkpoZVNCdlppQnNhVzVyY3k1Y2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTJsdWRHVnlabUZqWlhNdVRHbHVhMFJoZEdGYlhYMGdiR2x1YTNORVlYUmhPaUJoSUdSaGRHRWdZWEp5WVhrZ2IyWWdiR2x1YTNNZ2RHOWlaU0JoWkdSbFpGeHVJQ0FnSUNBcUlFQnRaVzFpWlhKdlppQk9aWFJXWEc0Z0lDQWdJQ292WEc0Z0lDQWdjSFZpYkdsaklHRmtaRXhwYm10ektHeHBibXR6UkdGMFlUb2dhVzUwWlhKbVlXTmxjeTVNYVc1clJHRjBZVnRkS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUc1bGQweHBibXR6SUQwZ2JHbHVhM05FWVhSaExtMWhjQ2dvYkdsdWEwUmhkR0VwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4cGJtdEVZWFJoTG5OdmRYSmpaU0E5SUd4cGJtdEVZWFJoTG5OdmRYSmpaUzUwYjFOMGNtbHVaeWdwWEc0Z0lDQWdJQ0FnSUNBZ0lDQnNhVzVyUkdGMFlTNTBZWEpuWlhRZ1BTQnNhVzVyUkdGMFlTNTBZWEpuWlhRdWRHOVRkSEpwYm1jb0tWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JzYVc1cklEMGdibVYzSUV4cGJtc29kR2hwY3l3Z2JHbHVhMFJoZEdFcFhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiR2x1YTF4dUlDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQXZMeUIwYUdsekxpUmZjbVZ1WkdWeVpYSXVZV1JrVEdsdWEzTW9ibVYzVEdsdWEzTXBYRzRnSUNBZ0lDQWdJSFJvYVhNdUpGOXlaVzVrWlhKbGNpNWhaR1JNYVc1cmN5aGJMaTR1ZEdocGN5NGtYMlZ1WkhNeWJHbHVheTUyWVd4MVpYTW9LVjBwSUM4dklFNVBWRVU2SUhCeVpYTmxjblpsSUd4cGJtc2diM0prWlhJc0lHNXZkQ0JsYkdWbllXNTBYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGRNYVc1cmMxeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFQmtaWE5qY21sd2RHbHZiaUJuWlhRZ1lTQk9iMlJsSUc5aWFtVmpkQ0JtY205dElIUm9aU0JwWkRKdWIyUmxJRTFoY0NCa1lYUmhJSE4wY25WamRIVnlaVnh1SUNBZ0lDQXFJRUJ3WVhKaGJTQnBaQ0J1YjJSbElHbGtYRzRnSUNBZ0lDb3ZYRzRnSUNBZ2NIVmliR2xqSUdkbGRFNXZaR1ZDZVVsa0tHbGtPaUJ6ZEhKcGJtY3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdUpGOXBaREp1YjJSbExtZGxkQ2hwWkNsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCQVpHVnpZM0pwY0hScGIyNGdaMlYwSUdFZ1RHbHVheUJ2WW1wbFkzUWdabkp2YlNCMGFHVWdaVzVrY3pKc2FXNXJJRTFoY0RJZ1pHRjBZU0J6ZEhKMVkzUjFjbVZjYmlBZ0lDQWdLaUJBY0dGeVlXMGdaVzVrU1dReElHOXVaU0JsYm1RZ2FXUWdiMllnZEdobElHeHBibXNnS0hOdmRYSmpaU0J2Y2lCMFlYSm5aWFFwWEc0Z0lDQWdJQ29nUUhCaGNtRnRJR1Z1WkVsa01pQmhibTkwYUdWeUlHVnVaQ0JwWkNCdlppQjBhR1VnYkdsdWF5QW9jMjkxY21ObElHOXlJSFJoY21kbGRDbGNiaUFnSUNBZ0tpOWNiaUFnSUNCd2RXSnNhV01nWjJWMFRHbHVhMEo1Ulc1a2N5aGxibVJKWkRFNklITjBjbWx1Wnl3Z1pXNWtTV1F5T2lCemRISnBibWNwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVKRjlsYm1Sek1teHBibXN1WjJWMEtGdGxibVJKWkRFc0lHVnVaRWxrTWwwcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1FHUmxjMk55YVhCMGFXOXVJR2RsZENCaGJHd2dibTlrWlhOY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J3ZFdKc2FXTWdibTlrWlhNb0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmJMaTR1ZEdocGN5NGtYMmxrTW01dlpHVXVkbUZzZFdWektDbGRYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dRR1JsYzJOeWFYQjBhVzl1SUdkbGRDQmhiR3dnYkdsdWEzTmNiaUFnSUNBZ0tpOWNiaUFnSUNCd2RXSnNhV01nYkdsdWEzTW9LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJiTGk0dWRHaHBjeTRrWDJWdVpITXliR2x1YXk1MllXeDFaWE1vS1YxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCQVpHVnpZM0pwY0hScGIyNGdkMmx3WlNCaGJHd2dkR2hsSUdSaGRHRWdhVzRnZEdobElHbHVjM1JoYm1ObFhHNGdJQ0FnSUNvZ1FHMWxiV0psY205bUlFNWxkRlpjYmlBZ0lDQWdLaTljYmlBZ0lDQndkV0pzYVdNZ2QybHdaU2dwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTRrWDJSaGRHRWdQU0IxYm1SbFptbHVaV1JjYmlBZ0lDQWdJQ0FnZEdocGN5NGtYMmxrTW01dlpHVWdQU0J1WlhjZ1RXRndLQ2xjYmlBZ0lDQWdJQ0FnZEdocGN5NGtYMlZ1WkhNeWJHbHVheUE5SUc1bGR5Qk5ZWEF5S0NsY2JpQWdJQ0FnSUNBZ2RHaHBjeTRrWDNOdmRYSmpaVWxrTW14cGJtdHpJRDBnYm1WM0lFMWhjQ2dwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVKRjkwWVhKblpYUkpaREpzYVc1cmN5QTlJRzVsZHlCTllYQW9LVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRUJrWlhOamNtbHdkR2x2YmlCeVpYUjFjbTRnWW5WcGJHUXRhVzRnWkdGMFlYTmxkQ0JoWTJOdmNtUnBibWNnZEc4Z2JtRnRaVnh1SUNBZ0lDQXFJRUJ3WVhKaGJTQnVZVzFsSUdSaGRHRnpaWFFnYm1GdFpWeHVJQ0FnSUNBcUwxeHVJQ0FnSUhCMVlteHBZeUJzYjJGa1JHRjBZWE5sZENodVlXMWxPaUJ6ZEhKcGJtY3BJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHNWhiV1VnYVc0Z1pHRjBZWE5sZENrZ2NtVjBkWEp1SUdSaGRHRnpaWFJiYm1GdFpWMWNibHh1SUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtHQk9aWFJXSUdSdlpYTWdibTkwSUdoaGRtVWdZblZwYkdRdGFXNGdaR0YwWVhObGREb2dKSHR1WVcxbGZXQXBYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjdJRzV2WkdWek9pQmJYU3dnYkdsdWEzTTZJRnRkSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCbmFYWmxiaUJ3YjNOcGRHbHZiaXdnY21WMGRYSnVJR1ZzWlcxbGJuUWdiMjRnZEdocGN5QndhWGhsYkNCcFppQmxlR2x6ZEhOY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZUNCNElIQnZjMXh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjVJSGtnY0c5elhHNGdJQ0FnSUNvdlhHNGdJQ0FnY0hWaWJHbGpJR2RsZEVWc1pXMWxiblJDZVZCdmMybDBhVzl1S0Z4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2FXNTBaWEptWVdObGN5NVFiM05wZEdsdmJseHVJQ0FnSUNrNklIc2dkSGx3WlRvZ0oyNXZaR1VuSUh3Z0oyeHBibXNuT3lCbGJHVnRaVzUwT2lCT2IyUmxJSHdnVEdsdWF5QjlJSHdnZFc1a1pXWnBibVZrSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYVdRZ1BTQjBhR2x6TGlSZmNtVnVaR1Z5WlhJdVoyVjBTV1JDZVZCdmMybDBhVzl1S0hCdmMybDBhVzl1S1Z4dUlDQWdJQ0FnSUNCcFppQW9hV1FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnYVdRZ1BUMDlJQ2R6ZEhKcGJtY25LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdibTlrWlNBOUlIUm9hWE11WjJWMFRtOWtaVUo1U1dRb2FXUXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMjV2WkdVbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkdWdFpXNTBPaUJ1YjJSbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29hV1FwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYkdsdWF5QTlJSFJvYVhNdVoyVjBUR2x1YTBKNVJXNWtjeWhwWkZzd1hTd2dhV1JiTVYwcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0oyeHBibXNuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiR1Z0Wlc1ME9pQnNhVzVyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nUUdSbGMyTnlhWEIwYVc5dUlHUnlZWGNnWld4bGJXVnVkSE5jYmlBZ0lDQWdLaTljYmlBZ0lDQndkV0pzYVdNZ1pISmhkeWdwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdUpGOXNZWHA1VEdsdWExVndaR0YwWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1ZFOUVUem9nYldGNVltVWdibVZsWkNCdGIzSmxJR1ZtWm1samFXVnVkQ0JoYm1RZ2NtVnNhV0ZpYkdVZ2QyRjVJSFJ2SUhOMGIzSmxJR0Z1WkNCblpYUWdZV3hzSUd4cGJtdHpYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMaVJmY21WdVpHVnlaWEl1YkdsdWEwMWhibUZuWlhJdWNtVm1jbVZ6YUZCdmMybDBhVzl1S0ZzdUxpNTBhR2x6TGlSZlpXNWtjekpzYVc1ckxuWmhiSFZsY3lncFhTbGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVKRjlzWVhwNVRHbHVhMVZ3WkdGMFpTQTlJR1poYkhObFhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxpUmZiVzlrYVdacFpXUk1hVzVyUTI5MWJuUWdQU0F3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2RHaHBjeTRrWDNKbGJtUmxjbVZ5TG1SeVlYY29LVnh1SUNBZ0lIMWNibjFjYmx4dVpYaHdiM0owSUhzZ1RtVjBWaUI5WEc0aUxDSXZLaXBjYmlBcUlFQmhkWFJvYjNJZ1dHbGhiMlJ2Ym1jZ1dtaGhieUE4ZW1oaGIzaHBZVzlrYjI1blFIcHFkUzVsWkhVdVkyNCtYRzRnS2lCQVpHVnpZM0pwY0hScGIyNGdhR0Z1Wkd4bElHRnNiQ0JwYm5SbGNtRmpkR2x2YmlCcGJpQk9aWFJXWEc0Z0tpOWNibHh1YVcxd2IzSjBJSHNnVG1WMFZpQjlJR1p5YjIwZ0ozTnlZeWRjYmx4dVpYaHdiM0owSUdOc1lYTnpJRWx1ZEdWeVlXTjBhVzl1VFdGdVlXZGxjaUI3WEc0Z0lDQWdjSEpwZG1GMFpTQnVaWFIyT2lCT1pYUldYRzRnSUNBZ2NISnBkbUYwWlNCMGNtRnVjMlp2Y20wZ1BTQjdYRzRnSUNBZ0lDQWdJSGc2SURBc1hHNGdJQ0FnSUNBZ0lIazZJREFzWEc0Z0lDQWdJQ0FnSUdzNklERmNiaUFnSUNCOVhHNGdJQ0FnY0hKcGRtRjBaU0JwYzAxdmRYTmxSRzkzYmlBOUlHWmhiSE5sWEc0Z0lDQWdjSEpwZG1GMFpTQnBjMDF2ZFhObFRXOTJaU0E5SUdaaGJITmxYRzRnSUNBZ2NISnBkbUYwWlNCdGIzVnpaVVJ2ZDI1RmJHVnRaVzUwWEc0Z0lDQWdjSEpwZG1GMFpTQnRiM1Z6WlVSdmQyNUZiR1Z0Wlc1MFQzSnBaMmx1VUc5ek9pQjdJSGc2SUc1MWJXSmxjanNnZVRvZ2JuVnRZbVZ5SUgwZ0x5OGdUazlVUlRvZ2NtVmpiM0prSUhCdmN5d2diMjVzZVNCemRYQndiM0owSUc1dlpHVW5jeUJrY21GblhHNWNiaUFnSUNCd2NtbDJZWFJsSUcxdmRYTmxSRzkzYmxCdmN6b2dleUI0T2lCdWRXMWlaWEk3SUhrNklHNTFiV0psY2lCOVhHNGdJQ0FnY0hKcGRtRjBaU0JrY21GblUzUmhjblJVY21GdWMyWnZjbTA2SUhzZ2VEb2diblZ0WW1WeU95QjVPaUJ1ZFcxaVpYSTdJR3M2SUc1MWJXSmxjaUI5WEc1Y2JpQWdJQ0J3ZFdKc2FXTWdZMjl1YzNSeWRXTjBiM0lvYm1WMGRqb2dUbVYwVmlrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG01bGRIWWdQU0J1WlhSMlhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ2FXNXBkQ0I2YjI5dEpuQmhiaUJwYm5SbGNtRmpkR2x2Ymx4dUlDQWdJQ0FxSUdOMWNuSmxiblJzZVNCdWJ5QmpZV3hzWW1GamExeHVJQ0FnSUNBcUwxeHVJQ0FnSUhCMVlteHBZeUJwYm1sMFdtOXZiU2dwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWTJGdWRtRnpJRDBnZEdocGN5NXVaWFIyTGlSZlkyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0lvSjJOaGJuWmhjeWNwWEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR2hoYm1Sc1pWTmpjbTlzYkNBOUlDaGxkblE2SUUxdmRYTmxWMmhsWld4RmRtVnVkQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdlQ0E5SUdWMmRDNXZabVp6WlhSWUlIeDhJR1YyZEM1d1lXZGxXQ0F0SUdOaGJuWmhjeTV2Wm1aelpYUk1aV1owWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCNUlEMGdaWFowTG05bVpuTmxkRmtnZkh3Z1pYWjBMbkJoWjJWWklDMGdZMkZ1ZG1GekxtOW1abk5sZEZSdmNGeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdaR1ZzZEdFZ1BTQmxkblF1WkdWc2RHRlpJRDhnWlhaMExtUmxiSFJoV1NBdklEUXdJRG9nWlhaMExtUmxkR0ZwYkNBL0lDMWxkblF1WkdWMFlXbHNJRG9nTUZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dSbGJIUmhLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdheUE5SUUxaGRHZ3VjRzkzS0RFdU1Td2daR1ZzZEdFcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUwY21GdWMyWnZjbTB1ZUNBOUlDZ3hJQzBnYXlrZ0tpQjRJQ3NnYXlBcUlIUm9hWE11ZEhKaGJuTm1iM0p0TG5oY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMblJ5WVc1elptOXliUzU1SUQwZ0tERWdMU0JyS1NBcUlIa2dLeUJySUNvZ2RHaHBjeTUwY21GdWMyWnZjbTB1ZVZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUwY21GdWMyWnZjbTB1YXlBcVBTQnJYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtNWxkSFl1SkY5eVpXNWtaWEpsY2k1elpYUlVjbUZ1YzJadmNtMG9kR2hwY3k1MGNtRnVjMlp2Y20wcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV1WlhSMkxteGhZbVZzVFdGdVlXZGxjaTV6WlhSVWNtRnVjMlp2Y20wb2RHaHBjeTUwY21GdWMyWnZjbTBwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXVaWFIyTG1SeVlYY29LVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCbGRuUXVjSEpsZG1WdWRFUmxabUYxYkhRb0tWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMFJQVFUxdmRYTmxVMk55YjJ4c0p5d2dhR0Z1Wkd4bFUyTnliMnhzTENCbVlXeHpaU2xjYmlBZ0lDQWdJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMjF2ZFhObGQyaGxaV3duTENCb1lXNWtiR1ZUWTNKdmJHd3NJR1poYkhObEtWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlITmxkSFZ3SUdOc2FXTnJJSFYwYVd4cGRIbGNiaUFnSUNBZ0tpOWNiaUFnSUNCd2RXSnNhV01nYVc1cGRFMXZkWE5sS0NrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCallXNTJZWE1nUFNCMGFHbHpMbTVsZEhZdUpGOWpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2lnblkyRnVkbUZ6SnlsY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYUdGdVpHeGxUVzkxYzJWRWIzZHVJRDBnS0dWMmREb2dUVzkxYzJWRmRtVnVkQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdlQ0E5SUdWMmRDNXZabVp6WlhSWUlIeDhJR1YyZEM1d1lXZGxXQ0F0SUdOaGJuWmhjeTV2Wm1aelpYUk1aV1owWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCNUlEMGdaWFowTG05bVpuTmxkRmtnZkh3Z1pYWjBMbkJoWjJWWklDMGdZMkZ1ZG1GekxtOW1abk5sZEZSdmNGeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdlVWx1ZGlBOUlIUm9hWE11Ym1WMGRpNGtYMk52Ym1acFozTXVhR1ZwWjJoMElDMGdlVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1selRXOTFjMlZFYjNkdUlEMGdkSEoxWlZ4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dGIzVnpaVVJ2ZDI1UWIzTWdQU0I3SUhnc0lIa2dmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVrY21GblUzUmhjblJVY21GdWMyWnZjbTBnUFNCS1UwOU9MbkJoY25ObEtFcFRUMDR1YzNSeWFXNW5hV1o1S0hSb2FYTXVkSEpoYm5ObWIzSnRLU2xjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dGIzVnpaVVJ2ZDI1RmJHVnRaVzUwSUQwZ2RHaHBjeTV1WlhSMkxtZGxkRVZzWlcxbGJuUkNlVkJ2YzJsMGFXOXVLSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhrNklIbEpiblpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1dGIzVnpaVVJ2ZDI1RmJHVnRaVzUwUHk1bGJHVnRaVzUwTG5CdmMybDBhVzl1S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdjbVZqYjNKa0lHOXlaMmx1SUhCdmMybDBhVzl1SUdadmNpQmtjbUZuWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXRiM1Z6WlVSdmQyNUZiR1Z0Wlc1MFQzSnBaMmx1VUc5eklEMGdleUF1TGk1MGFHbHpMbTF2ZFhObFJHOTNia1ZzWlcxbGJuUXVaV3hsYldWdWRDNXdiM05wZEdsdmJpZ3BJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR2hoYm1Sc1pVMXZkWE5sVFc5MlpTQTlJQ2hsZG5RNklFMXZkWE5sUlhabGJuUXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElIZ2dQU0JsZG5RdWIyWm1jMlYwV0NCOGZDQmxkblF1Y0dGblpWZ2dMU0JqWVc1MllYTXViMlptYzJWMFRHVm1kRnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZVNBOUlHVjJkQzV2Wm1aelpYUlpJSHg4SUdWMmRDNXdZV2RsV1NBdElHTmhiblpoY3k1dlptWnpaWFJVYjNCY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YVhOTmIzVnpaVVJ2ZDI0cElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1selRXOTFjMlZOYjNabElEMGdkSEoxWlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0YwYUdsekxtMXZkWE5sUkc5M2JrVnNaVzFsYm5RZ2ZId2dJWFJvYVhNdWJXOTFjMlZFYjNkdVJXeGxiV1Z1ZEM1bGJHVnRaVzUwTG5CdmMybDBhVzl1S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUhCaGJpd2dkMmhsYmlCdWIzUWdaSEpoWjJkcGJtY2dibTlrWlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5SeVlXNXpabTl5YlM1NElEMGdkR2hwY3k1a2NtRm5VM1JoY25SVWNtRnVjMlp2Y20wdWVDQXJJSGdnTFNCMGFHbHpMbTF2ZFhObFJHOTNibEJ2Y3k1NFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRISmhibk5tYjNKdExua2dQU0IwYUdsekxtUnlZV2RUZEdGeWRGUnlZVzV6Wm05eWJTNTVJQ3NnZVNBdElIUm9hWE11Ylc5MWMyVkViM2R1VUc5ekxubGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTVsZEhZdUpGOXlaVzVrWlhKbGNpNXpaWFJVY21GdWMyWnZjbTBvZEdocGN5NTBjbUZ1YzJadmNtMHBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVibVYwZGk1c1lXSmxiRTFoYm1GblpYSXVjMlYwVkhKaGJuTm1iM0p0S0hSb2FYTXVkSEpoYm5ObWIzSnRLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTVsZEhZdVpISmhkeWdwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdaSEpoWnlCdWIyUmxYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViVzkxYzJWRWIzZHVSV3hsYldWdWRDNWxiR1Z0Wlc1MExuQnZjMmwwYVc5dUtIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZzZYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXRiM1Z6WlVSdmQyNUZiR1Z0Wlc1MFQzSnBaMmx1VUc5ekxuZ2dLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNoNElDMGdkR2hwY3k1dGIzVnpaVVJ2ZDI1UWIzTXVlQ2tnTHlCMGFHbHpMblJ5WVc1elptOXliUzVyTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVRwY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xdmRYTmxSRzkzYmtWc1pXMWxiblJQY21sbmFXNVFiM011ZVNBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdLSGtnTFNCMGFHbHpMbTF2ZFhObFJHOTNibEJ2Y3k1NUtTQXZJSFJvYVhNdWRISmhibk5tYjNKdExtdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dVpYUjJMbVJ5WVhjb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdlVWx1ZGlBOUlIUm9hWE11Ym1WMGRpNGtYMk52Ym1acFozTXVhR1ZwWjJoMElDMGdlVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHVnNaVzFsYm5RZ1BTQjBhR2x6TG01bGRIWXVaMlYwUld4bGJXVnVkRUo1VUc5emFYUnBiMjRvZXlCNExDQjVPaUI1U1c1MklIMHBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dWc1pXMWxiblEvTG1Wc1pXMWxiblF1SkY5b2IzWmxja05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnNaVzFsYm5RdVpXeGxiV1Z1ZEM0a1gyaHZkbVZ5UTJGc2JHSmhZMnNvWld4bGJXVnVkQzVsYkdWdFpXNTBJR0Z6SUdGdWVTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlDOHZJR04xY25KbGJuUnNlU0J1YjNRZ2MzVndjRzl5ZENCb2IzWmxjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhR0Z1Wkd4bFRXOTFjMlZWY0NBOUlDaGxkblE2SUUxdmRYTmxSWFpsYm5RcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doZEdocGN5NXBjMDF2ZFhObFRXOTJaU0FtSmlCMGFHbHpMbTF2ZFhObFJHOTNia1ZzWlcxbGJuUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THlCamJHbGphMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbTF2ZFhObFJHOTNia1ZzWlcxbGJuUS9MbVZzWlcxbGJuUXVKRjlqYkdsamEwTmhiR3hpWVdOcktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViVzkxYzJWRWIzZHVSV3hsYldWdWRDNWxiR1Z0Wlc1MExpUmZZMnhwWTJ0RFlXeHNZbUZqYXloY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViVzkxYzJWRWIzZHVSV3hsYldWdWRDNWxiR1Z0Wlc1MElHRnpJR0Z1ZVZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXBJQzh2SUZSUFJFODZJRzV2ZENCbGJHVm5ZVzUwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVwYzAxdmRYTmxSRzkzYmlBOUlHWmhiSE5sWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1selRXOTFjMlZOYjNabElEMGdabUZzYzJWY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXOTFjMlZFYjNkdVJXeGxiV1Z1ZENBOUlIVnVaR1ZtYVc1bFpGeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMjF2ZFhObFpHOTNiaWNzSUdoaGJtUnNaVTF2ZFhObFJHOTNiaWxjYmlBZ0lDQWdJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMjF2ZFhObGJXOTJaU2NzSUdoaGJtUnNaVTF2ZFhObFRXOTJaU2xjYmlBZ0lDQWdJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMjF2ZFhObGRYQW5MQ0JvWVc1a2JHVk5iM1Z6WlZWd0tWeHVJQ0FnSUgxY2JuMWNiaUlzSWk4cUtseHVJQ29nUUdGMWRHaHZjaUJZYVdGdlpHOXVaeUJhYUdGdklEeDZhR0Z2ZUdsaGIyUnZibWRBZW1wMUxtVmtkUzVqYmo1Y2JpQXFJRUJrWlhOamNtbHdkR2x2YmlCbmNtRndhQ0JzWVdKbGJDQnlaV3hoZEdWa0lHTnNZWE56SUc5eUlHMWxkR2h2WkZ4dUlDb3ZYRzVjYm1sdGNHOXlkQ0I3SUU1bGRGWWdmU0JtY205dElDZHpjbU1uWEc1cGJYQnZjblFnVG05a1pTQm1jbTl0SUNkemNtTXZibTlrWlNkY2JtbHRjRzl5ZENCN0lGUnlZVzV6Wm05eWJTQjlJR1p5YjIwZ0p5NHVMMmx1ZEdWeVptRmpaWE1uWEc1Y2JtVjRjRzl5ZENCamJHRnpjeUJNWVdKbGJFMWhibUZuWlhJZ2UxeHVJQ0FnSUhCeWFYWmhkR1VnSkY5amIzSmxPaUJPWlhSV1hHNGdJQ0FnY0hKcGRtRjBaU0FrWDNOMlp6b2dVMVpIUld4bGJXVnVkRnh1SUNBZ0lIQnlhWFpoZEdVZ0pGOXZabVp6WlhRNklIc2dlRG9nYm5WdFltVnlPeUI1T2lCdWRXMWlaWElnZlZ4dUlDQWdJSEJ5YVhaaGRHVWdKRjltYjI1MFUybDZaVG9nYm5WdFltVnlYRzRnSUNBZ2NISnBkbUYwWlNBa1gzTjBjbTlyWlZkcFpIUm9PaUJ1ZFcxaVpYSmNibHh1SUNBZ0lIQjFZbXhwWXlCamIyNXpkSEoxWTNSdmNpaGpiM0psT2lCT1pYUldLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVKRjlqYjNKbElEMGdZMjl5WlZ4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11SkY5emRtY2dQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9KMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5KeXdnSjNOMlp5Y3BJR0Z6SUZOV1IwVnNaVzFsYm5SY2JpQWdJQ0FnSUNBZ1kyOXlaUzRrWDJOdmJuUmhhVzVsY2k1d2NtVndaVzVrS0hSb2FYTXVKRjl6ZG1jcFhHNGdJQ0FnSUNBZ0lIUm9hWE11SkY5emRtY3VjMlYwUVhSMGNtbGlkWFJsS0NkM2FXUjBhQ2NzSUdOdmNtVXVKRjlqYjI1bWFXZHpMbmRwWkhSb0tWeHVJQ0FnSUNBZ0lDQjBhR2x6TGlSZmMzWm5Mbk5sZEVGMGRISnBZblYwWlNnbmFHVnBaMmgwSnl3Z1kyOXlaUzRrWDJOdmJtWnBaM011YUdWcFoyaDBLVnh1SUNBZ0lDQWdJQ0JqYjNKbExpUmZZMjl1ZEdGcGJtVnlMbk4wZVd4bExuQnZjMmwwYVc5dUlEMGdKM0psYkdGMGFYWmxKMXh1SUNBZ0lDQWdJQ0JqYjNKbExpUmZZMjl1ZEdGcGJtVnlMbk4wZVd4bExtOTJaWEptYkc5M0lEMGdKMmhwWkdSbGJpZGNiaUFnSUNBZ0lDQWdZMjl5WlM0a1gyTnZiblJoYVc1bGNpNXpkSGxzWlM1M2FXUjBhQ0E5SUdOdmNtVXVKRjlqYjI1bWFXZHpMbmRwWkhSb1hHNGdJQ0FnSUNBZ0lHTnZjbVV1SkY5amIyNTBZV2x1WlhJdWMzUjViR1V1YUdWcFoyaDBJRDBnWTI5eVpTNGtYMk52Ym1acFozTXVhR1ZwWjJoMFhHNGdJQ0FnSUNBZ0lIUm9hWE11SkY5emRtY3VjM1I1YkdVdWNHOXphWFJwYjI0Z1BTQW5ZV0p6YjJ4MWRHVW5YRzRnSUNBZ0lDQWdJSFJvYVhNdUpGOXpkbWN1YzNSNWJHVXViM1psY21ac2IzY2dQU0FuZG1semFXSnNaU2RjYmlBZ0lDQWdJQ0FnZEdocGN5NGtYM04yWnk1emRIbHNaUzV3YjJsdWRHVnlSWFpsYm5SeklEMGdKMjV2Ym1VblhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k0a1gyOW1abk5sZENBOUlIUm9hWE11SkY5amIzSmxMaVJmWTI5dVptbG5jeTVzWVdKbGJDNXZabVp6WlhSY2JpQWdJQ0FnSUNBZ2RHaHBjeTRrWDJadmJuUlRhWHBsSUQwZ2RHaHBjeTRrWDJOdmNtVXVKRjlqYjI1bWFXZHpMbXhoWW1Wc0xtWnZiblJUYVhwbFhHNGdJQ0FnSUNBZ0lIUm9hWE11SkY5emRISnZhMlZYYVdSMGFDQTlJSFJvYVhNdUpGOWpiM0psTGlSZlkyOXVabWxuY3k1c1lXSmxiQzV6ZEhKdmEyVlhhV1IwYUZ4dUlDQWdJQ0FnSUNCMGFHbHpMaVJmYzNabkxuTmxkRUYwZEhKcFluVjBaU2duZEhKaGJuTm1iM0p0Snl3Z1lIUnlZVzV6YkdGMFpTZ2tlM1JvYVhNdUpGOXZabVp6WlhRdWVIMGdKSHQwYUdsekxpUmZiMlptYzJWMExubDlLV0FwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVKRjl6ZG1jdWMyVjBRWFIwY21saWRYUmxLQ2RtYjI1MExYTnBlbVVuTENCZ0pIdDBhR2x6TGlSZlptOXVkRk5wZW1WOWNIaGdLVnh1SUNBZ0lDQWdJQ0IwYUdsekxpUmZjM1puTG5ObGRFRjBkSEpwWW5WMFpTZ25jM1J5YjJ0bEp5d2dZSGRvYVhSbFlDbGNiaUFnSUNBZ0lDQWdkR2hwY3k0a1gzTjJaeTV6WlhSQmRIUnlhV0oxZEdVb0ozTjBjbTlyWlMxM2FXUjBhQ2NzSUdBa2UzUm9hWE11SkY5emRISnZhMlZYYVdSMGFIMXdlR0FwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nWkhKaGR5QnViMlJsSjNNZ2JHRmlaV3hjYmlBZ0lDQWdLaUJBY0dGeVlXMGdibTlrWlNCdWIyUmxJSFJ2SUdGa1pDQnNZV0psYkZ4dUlDQWdJQ0FxTDF4dUlDQWdJSEIxWW14cFl5QmtjbUYzVEdGaVpXd29ibTlrWlRvZ1RtOWtaU2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J3YjNNZ1BTQnViMlJsTG5CdmMybDBhVzl1S0NsY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnZEdWNGRDQTlJRzV2WkdVdWRHVjRkQ2dwWEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0YwWlhoMEtTQnlaWFIxY201Y2JseHVJQ0FnSUNBZ0lDQmpiMjV6ZENCMFpYaDBSV3hsYldWdWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5Z25hSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY25MQ0FuZEdWNGRDY3BYRzRnSUNBZ0lDQWdJSFJsZUhSRmJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTZ25hV1FuTENCdWIyUmxMbWxrS0NrcFhHNGdJQ0FnSUNBZ0lIUmxlSFJGYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnbmVDY3NJRk4wY21sdVp5aHdiM011ZUNrcFhHNGdJQ0FnSUNBZ0lIUmxlSFJGYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnbmVTY3NJRk4wY21sdVp5aHdiM011ZVNrcFhHNGdJQ0FnSUNBZ0lIUmxlSFJGYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnbmRHVjRkQzFoYm1Ob2IzSW5MQ0FuYzNSaGNuUW5LVnh1SUNBZ0lDQWdJQ0IwWlhoMFJXeGxiV1Z1ZEM1elpYUkJkSFJ5YVdKMWRHVW9KMkZzYVdkdWJXVnVkQzFpWVhObGJHbHVaU2NzSUNkdGFXUmtiR1VuS1Z4dUlDQWdJQ0FnSUNCMFpYaDBSV3hsYldWdWRDNXBibTVsY2toVVRVd2dQU0IwWlhoMFhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k0a1gzTjJaeTVoY0hCbGJtUkRhR2xzWkNoMFpYaDBSV3hsYldWdWRDbGNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQnlaVzF2ZG1VZ2JtOWtaU2R6SUd4aFltVnNYRzRnSUNBZ0lDb2dRSEJoY21GdElHNXZaR1VnYm05a1pTQjBieUJrWld4bGRHVWdiR0ZpWld4Y2JpQWdJQ0FnS2k5Y2JpQWdJQ0J3ZFdKc2FXTWdjbVZ0YjNabFRHRmlaV3dvYm05a1pUb2dUbTlrWlNrZ2UxeHVJQ0FnSUNBZ0lDQXZMeUJBZEhNdGFXZHViM0psWEc0Z0lDQWdJQ0FnSUhSb2FYTXVKRjl6ZG1jdVoyVjBSV3hsYldWdWRFSjVTV1FvYm05a1pTNXBaQ2dwS1Q4dWNtVnRiM1psS0NsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCelpYUWdkbWxsZDNCdmNuUWdkSEpoYm5ObWIzSnRYRzRnSUNBZ0lDb2dRSEJoY21GdElIUnlZVzV6Wm05eWJWeHVJQ0FnSUNBcUwxeHVJQ0FnSUhCMVlteHBZeUJ6WlhSVWNtRnVjMlp2Y20wb2RISmhibk5tYjNKdE9pQlVjbUZ1YzJadmNtMHBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NGtYM04yWnk1elpYUkJkSFJ5YVdKMWRHVW9YRzRnSUNBZ0lDQWdJQ0FnSUNBbmRISmhibk5tYjNKdEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdCMGNtRnVjMnhoZEdVb0pIdDBhR2x6TGlSZmIyWm1jMlYwTG5nZ0t5QW9NU0F0SUhSeVlXNXpabTl5YlM1cktTQXFJQzAwTURBZ0t5QjBjbUZ1YzJadmNtMHVlSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWtlM1JvYVhNdUpGOXZabVp6WlhRdWVTQXJJQ2d4SUMwZ2RISmhibk5tYjNKdExtc3BJQ29nTFRNd01DQXJJSFJ5WVc1elptOXliUzU1ZlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0J6WTJGc1pTZ2tlM1J5WVc1elptOXliUzVyZlNsZ1hHNGdJQ0FnSUNBZ0lDbGNiaUFnSUNBZ0lDQWdkR2hwY3k0a1gzTjJaeTV6WlhSQmRIUnlhV0oxZEdVb0oyWnZiblF0YzJsNlpTY3NJR0FrZTNSb2FYTXVKRjltYjI1MFUybDZaU0F2SUhSeVlXNXpabTl5YlM1cmZYQjRZQ2xjYmlBZ0lDQWdJQ0FnZEdocGN5NGtYM04yWnk1elpYUkJkSFJ5YVdKMWRHVW9KM04wY205clpTMTNhV1IwYUNjc0lHQWtlM1JvYVhNdUpGOXpkSEp2YTJWWGFXUjBhQ0F2SUhSeVlXNXpabTl5YlM1cmZYQjRZQ2xjYmlBZ0lDQjlYRzU5WEc0aUxDSXZLaXBjYmlBcUlFQmhkWFJvYjNJZ1NtbGhZMmhsYm1jZ1VHRnVJRHhxWVdOcmFXVmhibmhwYzBCbmJXRnBiQzVqYjIwK1hHNGdLaUJBWkdWelkzSnBjSFJwYjI0Z1VISnZkbWxrWlNCaElFeHBibXNnWTJ4aGMzTXVYRzRnS2lCQVpHVndaVzVrWlc1alpYTWdhVzUwWlhKbVlXTmxjeTUwY3l3Z2RYUnBiSE12YVhNdWRITmNiaUFxTDF4dVhHNXBiWEJ2Y25RZ1RtOWtaU0JtY205dElDY3VMMjV2WkdVblhHNXBiWEJ2Y25RZ0tpQmhjeUJwYm5SbGNtWmhZMlZ6SUdaeWIyMGdKeTR2YVc1MFpYSm1ZV05sY3lkY2JtbHRjRzl5ZENCN0lFNWxkRllnZlNCbWNtOXRJQ2N1TDJsdVpHVjRKMXh1WEc1amJHRnpjeUJNYVc1cklIdGNiaUFnSUNCd2RXSnNhV01nSkY5amJHbGphME5oYkd4aVlXTnJPaUFvYkdsdWF6b2dUR2x1YXlrZ1BUNGdkbTlwWkZ4dUlDQWdJSEIxWW14cFl5QWtYMmh2ZG1WeVEyRnNiR0poWTJzNklDaHNhVzVyT2lCTWFXNXJLU0E5UGlCMmIybGtYRzVjYmlBZ0lDQndjbWwyWVhSbElDUmZZMjl5WlRvZ1RtVjBWbHh1SUNBZ0lIQnlhWFpoZEdVZ0pGOXpiM1Z5WTJVNklFNXZaR1ZjYmlBZ0lDQndjbWwyWVhSbElDUmZkR0Z5WjJWME9pQk9iMlJsWEc0Z0lDQWdjSEpwZG1GMFpTQWtYM04wY205clpWZHBaSFJvT2lCdWRXMWlaWEpjYmlBZ0lDQndjbWwyWVhSbElDUmZjM1J5YjJ0bFEyOXNiM0k2SUdsdWRHVnlabUZqWlhNdVEyOXNiM0pjYmx4dUlDQWdJSEIxWW14cFl5QmpiMjV6ZEhKMVkzUnZjaWhqYjNKbExDQnNhVzVyUkdGMFlUb2dhVzUwWlhKbVlXTmxjeTVNYVc1clJHRjBZU2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMaVJmWTI5eVpTQTlJR052Y21WY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWkdWbVlYVnNkRU52Ym1acFozTWdQU0IwYUdsekxpUmZZMjl5WlM0a1gyTnZibVpwWjNOY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWkdGMFlTQTlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDNHVMbnRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEhKdmEyVlhhV1IwYURvZ1pHVm1ZWFZzZEVOdmJtWnBaM011YkdsdWF5NXpkSEp2YTJWWGFXUjBhQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEhKdmEyVkRiMnh2Y2pvZ1pHVm1ZWFZzZEVOdmJtWnBaM011YkdsdWF5NXpkSEp2YTJWRGIyeHZjaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYkdsamEwTmhiR3hpWVdOck9pQmtaV1poZFd4MFEyOXVabWxuY3k1c2FXNXJMbU5zYVdOclEyRnNiR0poWTJzc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHOTJaWEpEWVd4c1ltRmphem9nWkdWbVlYVnNkRU52Ym1acFozTXViR2x1YXk1b2IzWmxja05oYkd4aVlXTnJYRzRnSUNBZ0lDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnTGk0dWJHbHVhMFJoZEdGY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR052Ym5OMElITnZkWEpqWlU1dlpHVWdQU0IwYUdsekxpUmZZMjl5WlM1blpYUk9iMlJsUW5sSlpDaGtZWFJoTG5OdmRYSmpaU2xjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdkR0Z5WjJWMFRtOWtaU0E5SUhSb2FYTXVKRjlqYjNKbExtZGxkRTV2WkdWQ2VVbGtLR1JoZEdFdWRHRnlaMlYwS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbk52ZFhKalpWUmhjbWRsZENoN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6YjNWeVkyVTZJSE52ZFhKalpVNXZaR1VzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBZWEpuWlhRNklIUmhjbWRsZEU1dlpHVmNiaUFnSUNBZ0lDQWdmU2xjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMaVJmYzNSeWIydGxWMmxrZEdnZ1BTQmtZWFJoTG5OMGNtOXJaVmRwWkhSb1hHNGdJQ0FnSUNBZ0lIUm9hWE11SkY5emRISnZhMlZEYjJ4dmNpQTlJR1JoZEdFdWMzUnliMnRsUTI5c2IzSmNibHh1SUNBZ0lDQWdJQ0IwYUdsekxuTmxkRU5zYVdOclEyRnNiR0poWTJzb1pHRjBZUzVqYkdsamEwTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFaHZkbVZ5UTJGc2JHSmhZMnNvWkdGMFlTNW9iM1psY2tOaGJHeGlZV05yS1Z4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUdkbGRIUmxjaTl6WlhSMFpYSWdiMllnZEdobElITnZkWEpqWlZ4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3VG05a1pYMGdXMjV2WkdWZFhHNGdJQ0FnSUNvZ1FISmxkSFZ5Ym5NZ2UwNXZaR1Y5SUdFZ2MyOTFjbU5sSUU1dlpHVWdUMkpxWldOMFhHNGdJQ0FnSUNvZ1FHMWxiV0psY205bUlFeHBibXRjYmlBZ0lDQWdLaTljYmlBZ0lDQndkV0pzYVdNZ2MyOTFjbU5sS0c1dlpHVS9PaUJPYjJSbEtTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUQwOVBTQXhLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJ6WlhSMFpYSmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjMjkxY21ObFZHRnlaMlYwS0h0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemIzVnlZMlU2SUc1dlpHVXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR0Z5WjJWME9pQjBhR2x6TGlSZmRHRnlaMlYwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxpUmZjMjkxY21ObFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1oyVjBkR1Z5TDNObGRIUmxjaUJ2WmlCMGFHVWdkR0Z5WjJWMFhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUh0T2IyUmxmU0JiYm05a1pWMWNiaUFnSUNBZ0tpQkFjbVYwZFhKdWN5QjdUbTlrWlgwZ1lTQjBZWEpuWlhRZ1RtOWtaU0JQWW1wbFkzUmNiaUFnSUNBZ0tpQkFiV1Z0WW1WeWIyWWdUR2x1YTF4dUlDQWdJQ0FxTDF4dUlDQWdJSEIxWW14cFl5QjBZWEpuWlhRb2JtOWtaVDg2SUU1dlpHVXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnZ1BUMDlJREVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUhObGRIUmxjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6YjNWeVkyVlVZWEpuWlhRb2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITnZkWEpqWlRvZ2RHaHBjeTRrWDNOdmRYSmpaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwWVhKblpYUTZJRzV2WkdWY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVKRjkwWVhKblpYUmNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQm5aWFIwWlhJdmMyVjBkR1Z5SUc5bUlITnZkWEpqWlNCaGJtUWdkR0Z5WjJWMFhHNGdJQ0FnSUNwY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTNOdmRYSmpaVlJoY21kbGRFOWlhbjBnVzN0emIzVnlZMlU2SUU1dlpHVXNJSFJoY21kbGREb2dUbTlrWlgxZFhHNGdJQ0FnSUNvZ1FISmxkSFZ5Ym5NZ1QySnFaV04wSUh0emIzVnlZMlU2SUU1dlpHVXNJSFJoY21kbGREb2dUbTlrWlgxY2JpQWdJQ0FnS2lCQWJXVnRZbVZ5YjJZZ1RHbHVhMXh1SUNBZ0lDQXFMMXh1SUNBZ0lIQjFZbXhwWXlCemIzVnlZMlZVWVhKblpYUW9jMjkxY21ObFZHRnlaMlYwVDJKcVB6b2dleUJ6YjNWeVkyVTZJRTV2WkdVN0lIUmhjbWRsZERvZ1RtOWtaU0I5S1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2hoY21kMWJXVnVkSE11YkdWdVozUm9JRDRnTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdiMnhrVTI5MWNtTmxPaUJPYjJSbElEMGdkR2hwY3k0a1gzTnZkWEpqWlZ4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2IyeGtWR0Z5WjJWME9pQk9iMlJsSUQwZ2RHaHBjeTRrWDNSaGNtZGxkRnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYm1WM1UyOTFjbU5sSUQwZ2MyOTFjbU5sVkdGeVoyVjBUMkpxTG5OdmRYSmpaVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYm1WM1ZHRnlaMlYwSUQwZ2MyOTFjbU5sVkdGeVoyVjBUMkpxTG5SaGNtZGxkRnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYm1WM1UyOTFjbU5sU1dRZ1BTQnVaWGRUYjNWeVkyVXVhV1FvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JtVjNWR0Z5WjJWMFNXUWdQU0J1WlhkVVlYSm5aWFF1YVdRb0tWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ibVYzVTI5MWNtTmxJRDA5UFNCdVpYZFVZWEpuWlhRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJsY25KdmNqb2djMlZzWmlCc2IyOXdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRVZ5Y205eUtHQlRaV3htSUd4dmIzQWdLQ1I3Ym1WM1UyOTFjbU5sU1dSOUlEdzlQaUFrZTI1bGQxUmhjbWRsZEVsa2ZTa2dhWE1nYm05MElHRnNiRzkzWldRdVlDbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11SkY5amIzSmxMaVJmWlc1a2N6SnNhVzVyTG1oaGN5aGJibVYzVTI5MWNtTmxTV1FzSUc1bGQxUmhjbWRsZEVsa1hTa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THlCbGNuSnZjam9nYlhWc2RHbHdiR1VnYkdsdWExeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2loZ1RYVnNkR2x3YkdVZ2JHbHVheUFvSkh0dVpYZFRiM1Z5WTJWSlpIMGdQRDArSUNSN2JtVjNWR0Z5WjJWMFNXUjlLU0JwY3lCdWIzUWdZV3hzYjNka0xtQXBYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHZiR1JUYjNWeVkyVWdKaVlnYjJ4a1ZHRnlaMlYwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdaR1ZzWlhSbElHOXNaQ0JOWVhCY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMaVJmWTI5eVpTNGtYMlZ1WkhNeWJHbHVheTVrWld4bGRHVW9XMjlzWkZOdmRYSmpaUzVwWkNncExDQnZiR1JVWVhKblpYUXVhV1FvS1YwcFhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGlSZlkyOXlaUzRrWDNOdmRYSmpaVWxrTW14cGJtdHpMbWRsZENodmJHUlRiM1Z5WTJVdWFXUW9LU2svTG1SbGJHVjBaU2gwYUdsektWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11SkY5amIzSmxMaVJmZEdGeVoyVjBTV1F5YkdsdWEzTXVaMlYwS0c5c1pGUmhjbWRsZEM1cFpDZ3BLVDh1WkdWc1pYUmxLSFJvYVhNcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdUpGOXpiM1Z5WTJVZ1BTQnVaWGRUYjNWeVkyVmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVKRjkwWVhKblpYUWdQU0J1WlhkVVlYSm5aWFJjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11SkY5amIzSmxMaVJmWlc1a2N6SnNhVzVyTG5ObGRDaGJibVYzVTI5MWNtTmxTV1FzSUc1bGQxUmhjbWRsZEVsa1hTd2dkR2hwY3lsY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRjBhR2x6TGlSZlkyOXlaUzRrWDNOdmRYSmpaVWxrTW14cGJtdHpMbWhoY3lodVpYZFRiM1Z5WTJWSlpDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxpUmZZMjl5WlM0a1gzTnZkWEpqWlVsa01teHBibXR6TG5ObGRDaHVaWGRUYjNWeVkyVkpaQ3dnYm1WM0lGTmxkQ2hiZEdocGMxMHBLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMaVJmWTI5eVpTNGtYM052ZFhKalpVbGtNbXhwYm10ekxtZGxkQ2h1WlhkVGIzVnlZMlZKWkNrdVlXUmtLSFJvYVhNcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVhSb2FYTXVKRjlqYjNKbExpUmZkR0Z5WjJWMFNXUXliR2x1YTNNdWFHRnpLRzVsZDFSaGNtZGxkRWxrS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11SkY5amIzSmxMaVJmZEdGeVoyVjBTV1F5YkdsdWEzTXVjMlYwS0c1bGQxUmhjbWRsZEVsa0xDQnVaWGNnVTJWMEtGdDBhR2x6WFNrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdUpGOWpiM0psTGlSZmRHRnlaMlYwU1dReWJHbHVhM011WjJWMEtHNWxkMVJoY21kbGRFbGtLUzVoWkdRb2RHaHBjeWxjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MyOTFjbU5sT2lCMGFHbHpMaVJmYzI5MWNtTmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHRnlaMlYwT2lCMGFHbHpMaVJmZEdGeVoyVjBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJ6WlhRdloyVjBJSE4wY205clpTQjNhV1IwYUNCdlppQmhJRzV2WkdWY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTI1MWJXSmxjbjBnVzNaaGJIVmxYVnh1SUNBZ0lDQXFJRUJ0WlcxaVpYSnZaaUJPYjJSbFhHNGdJQ0FnSUNvdlhHNGdJQ0FnY0hWaWJHbGpJSE4wY205clpWZHBaSFJvS0haaGJIVmxQem9nYm5WdFltVnlLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaGhjbWQxYldWdWRITXViR1Z1WjNSb0lEMDlQU0F4S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxpUmZjM1J5YjJ0bFYybGtkR2dnUFNCMllXeDFaVnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTRrWDJOdmNtVXVKRjl5Wlc1a1pYSmxjaTVzYVc1clRXRnVZV2RsY2k1amFHRnVaMlZCZEhSeWFXSjFkR1VvZEdocGN5d2dKM04wY205clpWZHBaSFJvSnlsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTRrWDNOMGNtOXJaVmRwWkhSb1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ2MyVjBMMmRsZENCemRISnZhMlVnWTI5c2IzSWdiMllnWVNCdWIyUmxYRzRnSUNBZ0lDb2dRSEJoY21GdElIdERiMnh2Y24wZ1czWmhiSFZsWFZ4dUlDQWdJQ0FxTDF4dUlDQWdJSEIxWW14cFl5QnpkSEp2YTJWRGIyeHZjaWgyWVd4MVpUODZJR2x1ZEdWeVptRmpaWE11UTI5c2IzSXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnZ1BUMDlJREVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdUpGOXpkSEp2YTJWRGIyeHZjaUE5SUhaaGJIVmxYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMaVJmWTI5eVpTNGtYM0psYm1SbGNtVnlMbXhwYm10TllXNWhaMlZ5TG1Ob1lXNW5aVUYwZEhKcFluVjBaU2gwYUdsekxDQW5jM1J5YjJ0bFEyOXNiM0luS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMaVJmYzNSeWIydGxRMjlzYjNKY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCelpYUWdhRzkyWlhJZ1kyRnNiR0poWTJzZ1puVnVZM1JwYjI1Y2JpQWdJQ0FnS2lCQWNHRnlZVzBnWTJGc2JHSmhZMnNnYUc5MlpYSWdZMkZzYkdKaFkyc2dablZ1WTNScGIyNWNiaUFnSUNBZ0tpOWNiaUFnSUNCd2NtbDJZWFJsSUhObGRFaHZkbVZ5UTJGc2JHSmhZMnNvWTJGc2JHSmhZMnM2SUNoc2FXNXJPaUJNYVc1cktTQTlQaUIyYjJsa0tTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdUpGOW9iM1psY2tOaGJHeGlZV05ySUQwZ1kyRnNiR0poWTJ0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCelpYUWdZMnhwWTJzZ1kyRnNiR0poWTJzZ1puVnVZM1JwYjI1Y2JpQWdJQ0FnS2lCQWNHRnlZVzBnWTJGc2JHSmhZMnNnWTJ4cFkyc2dZMkZzYkdKaFkyc2dablZ1WTNScGIyNWNiaUFnSUNBZ0tpOWNiaUFnSUNCd2NtbDJZWFJsSUhObGRFTnNhV05yUTJGc2JHSmhZMnNvWTJGc2JHSmhZMnM2SUNoc2FXNXJPaUJNYVc1cktTQTlQaUIyYjJsa0tTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdUpGOWpiR2xqYTBOaGJHeGlZV05ySUQwZ1kyRnNiR0poWTJ0Y2JpQWdJQ0I5WEc1OVhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElFeHBibXRjYmlJc0lpOHFLbHh1SUNvZ1FHRjFkR2h2Y2lCS2FXRmphR1Z1WnlCUVlXNGdQR3BoWTJ0cFpXRnVlR2x6UUdkdFlXbHNMbU52YlQ1Y2JpQXFJRUJrWlhOamNtbHdkR2x2YmlCUWNtOTJhV1JsSUdFZ1RtOWtaU0JqYkdGemN5NWNiaUFxSUVCa1pYQmxibVJsYm1ObGN5QnBiblJsY21aaFkyVnpMblJ6TENCMWRHbHNjeTlwY3k1MGMxeHVJQ292WEc1Y2JtbHRjRzl5ZENBcUlHRnpJR2x1ZEdWeVptRmpaWE1nWm5KdmJTQW5MaTlwYm5SbGNtWmhZMlZ6SjF4dWFXMXdiM0owSUhzZ2FYTldZV3hwWkVsa0lIMGdabkp2YlNBbkxpOTFkR2xzY3k5cGN5ZGNibWx0Y0c5eWRDQjdJRTVsZEZZZ2ZTQm1jbTl0SUNjdUwybHVaR1Y0SjF4dWFXMXdiM0owSUhzZ1RHbHVhMEYwZEhJZ2ZTQm1jbTl0SUNjdUwzSmxibVJsY21WeUwybHVkR1Z5Wm1GalpYTW5YRzVwYlhCdmNuUWdUR2x1YXlCbWNtOXRJQ2N1TDJ4cGJtc25YRzVjYm1Oc1lYTnpJRTV2WkdVZ2UxeHVJQ0FnSUhCMVlteHBZeUFrWDJOc2FXTnJRMkZzYkdKaFkyczZJQ2h1YjJSbE9pQk9iMlJsS1NBOVBpQjJiMmxrWEc0Z0lDQWdjSFZpYkdsaklDUmZhRzkyWlhKRFlXeHNZbUZqYXpvZ0tHNXZaR1U2SUU1dlpHVXBJRDArSUhadmFXUmNibHh1SUNBZ0lIQnlhWFpoZEdVZ0pGOWpiM0psT2lCT1pYUldYRzRnSUNBZ2NISnBkbUYwWlNBa1gybGtPaUJ6ZEhKcGJtZGNiaUFnSUNCd2NtbDJZWFJsSUNSZmNHOXphWFJwYjI0Z1BTQjdYRzRnSUNBZ0lDQWdJSGc2SURBc1hHNGdJQ0FnSUNBZ0lIazZJREJjYmlBZ0lDQjlYRzRnSUNBZ2NISnBkbUYwWlNBa1gzTjBjbTlyWlZkcFpIUm9PaUJ1ZFcxaVpYSmNiaUFnSUNCd2NtbDJZWFJsSUNSZmMzUnliMnRsUTI5c2IzSTZJR2x1ZEdWeVptRmpaWE11UTI5c2IzSmNiaUFnSUNCd2NtbDJZWFJsSUNSZlptbHNiRG9nYVc1MFpYSm1ZV05sY3k1RGIyeHZjbHh1SUNBZ0lIQnlhWFpoZEdVZ0pGOXlPaUJ1ZFcxaVpYSWdMeThnY21Ga2FYVnpYRzRnSUNBZ2NISnBkbUYwWlNBa1gzTm9iM2RNWVdKbGJEb2dZbTl2YkdWaGJseHVJQ0FnSUhCeWFYWmhkR1VnSkY5MFpYaDBPaUJ6ZEhKcGJtZGNiaUFnSUNCd2NtbDJZWFJsSUNSZmRHVjRkRTltWm5ObGREb2dleUI0T2lCdWRXMWlaWEk3SUhrNklHNTFiV0psY2lCOUlDOHZJRTVQVkVVNklHUmxjSEpsWTJGMFpXUXNJR04xY25KbGJuUWdibTkwSUhWelpXUmNibHh1SUNBZ0lIQjFZbXhwWXlCamIyNXpkSEoxWTNSdmNpaGpiM0psTENCdWIyUmxSR0YwWVRvZ2FXNTBaWEptWVdObGN5NU9iMlJsUkdGMFlTa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxpUmZZMjl5WlNBOUlHTnZjbVZjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdaR1ZtWVhWc2RFTnZibVpwWjNNZ1BTQjBhR2x6TGlSZlkyOXlaUzRrWDJOdmJtWnBaM05jYmlBZ0lDQWdJQ0FnWTI5dWMzUWdaR0YwWVNBOUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUM0dUxudGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRPaUIwYUdsekxpUmZjRzl6YVhScGIyNHVlQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1T2lCMGFHbHpMaVJmY0c5emFYUnBiMjR1ZVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRISnZhMlZYYVdSMGFEb2daR1ZtWVhWc2RFTnZibVpwWjNNdWJtOWtaUzV6ZEhKdmEyVlhhV1IwYUN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRISnZhMlZEYjJ4dmNqb2daR1ZtWVhWc2RFTnZibVpwWjNNdWJtOWtaUzV6ZEhKdmEyVkRiMnh2Y2l4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeU9pQmtaV1poZFd4MFEyOXVabWxuY3k1dWIyUmxMbklzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm1sc2JEb2daR1ZtWVhWc2RFTnZibVpwWjNNdWJtOWtaUzVtYVd4c0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9iM2RNWVdKbGJEb2daR1ZtWVhWc2RFTnZibVpwWjNNdWJtOWtaUzV6YUc5M1RHRmlaV3dzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGREb2daR1ZtWVhWc2RFTnZibVpwWjNNdWJtOWtaUzUwWlhoMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnNhV05yUTJGc2JHSmhZMnM2SUdSbFptRjFiSFJEYjI1bWFXZHpMbTV2WkdVdVkyeHBZMnREWVd4c1ltRmpheXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvYjNabGNrTmhiR3hpWVdOck9pQmtaV1poZFd4MFEyOXVabWxuY3k1dWIyUmxMbWh2ZG1WeVEyRnNiR0poWTJ0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQXVMaTV1YjJSbFJHRjBZVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTRrWDNObGRFbGtLR1JoZEdFdWFXUXBYRzRnSUNBZ0lDQWdJSFJvYVhNdUpGOXdiM05wZEdsdmJpQTlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIZzZJR1JoZEdFdWVDeGNiaUFnSUNBZ0lDQWdJQ0FnSUhrNklHUmhkR0V1ZVZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIUm9hWE11SkY5emRISnZhMlZYYVdSMGFDQTlJR1JoZEdFdWMzUnliMnRsVjJsa2RHaGNiaUFnSUNBZ0lDQWdkR2hwY3k0a1gzTjBjbTlyWlVOdmJHOXlJRDBnWkdGMFlTNXpkSEp2YTJWRGIyeHZjbHh1SUNBZ0lDQWdJQ0IwYUdsekxpUmZabWxzYkNBOUlHUmhkR0V1Wm1sc2JGeHVJQ0FnSUNBZ0lDQjBhR2x6TGlSZmNpQTlJR1JoZEdFdWNseHVJQ0FnSUNBZ0lDQjBhR2x6TGlSZmMyaHZkMHhoWW1Wc0lEMGdaR0YwWVM1emFHOTNUR0ZpWld4Y2JpQWdJQ0FnSUNBZ2RHaHBjeTRrWDNSbGVIUWdQU0JrWVhSaExuUmxlSFJjYmx4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k0a1gzTm9iM2RNWVdKbGJDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6YUc5M1RHRmlaV3dvZEhKMVpTbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjMlYwUTJ4cFkydERZV3hzWW1GamF5aGtZWFJoTG1Oc2FXTnJRMkZzYkdKaFkyc3BYRzRnSUNBZ0lDQWdJSFJvYVhNdWMyVjBTRzkyWlhKRFlXeHNZbUZqYXloa1lYUmhMbWh2ZG1WeVEyRnNiR0poWTJzcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1oyVjBkR1Z5SUc5bUlIQnlhWFpoZEdVZ2NISnZjR1Z5ZEhrZ0pGOXBaRnh1SUNBZ0lDQXFJRUJ0WlcxaVpYSnZaaUJPYjJSbFhHNGdJQ0FnSUNvdlhHNGdJQ0FnY0hWaWJHbGpJR2xrS0NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTRrWDJsa1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ2MyVjBMMmRsZENCNElIQnZjM1JwYjI1Y2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTI1MWJXSmxjbjBnVzNaaGJIVmxYVnh1SUNBZ0lDQXFJRUJ0WlcxaVpYSnZaaUJPYjJSbFhHNGdJQ0FnSUNvdlhHNGdJQ0FnY0hWaWJHbGpJSGdvZG1Gc2RXVS9PaUJ1ZFcxaVpYSXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnZ1BpQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CdmMybDBhVzl1S0h0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNE9pQjJZV3gxWlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmU2xjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NGtYM0J2YzJsMGFXOXVMbmhjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJ6WlhRdloyVjBJSGtnY0c5emRHbHZibHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjdiblZ0WW1WeWZTQmJkbUZzZFdWZFhHNGdJQ0FnSUNvZ1FHMWxiV0psY205bUlFNXZaR1ZjYmlBZ0lDQWdLaTljYmlBZ0lDQndkV0pzYVdNZ2VTaDJZV3gxWlQ4NklHNTFiV0psY2lrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWVhKbmRXMWxiblJ6TG14bGJtZDBhQ0ErSURBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjRzl6YVhScGIyNG9lMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGs2SUhaaGJIVmxYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGlSZmNHOXphWFJwYjI0dWVWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlITmxkQzluWlhRZ2NHOXpkR2x2Ymx4dUlDQWdJQ0FxSUVCdFpXMWlaWEp2WmlCT2IyUmxYRzRnSUNBZ0lDb3ZYRzRnSUNBZ2NIVmliR2xqSUhCdmMybDBhVzl1S0hCdmMybDBhVzl1UHpvZ2FXNTBaWEptWVdObGN5NVFiM05wZEdsdmJpa2dlMXh1SUNBZ0lDQWdJQ0JzWlhRZ2JHbHVhMU5sZEhNZ1BTQjdmVnh1WEc0Z0lDQWdJQ0FnSUM4dklHVXVaeTRnYzJWMFQyNWxVRzl6YVhScGIyNG9KM2duTENBeEtTQnRaV0Z1Y3lCelpYUWdlQ0J3YjNOcGRHbHZiaUIzYVhSb0lIWmhiSFZsSURGY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzJWMFQyNWxVRzl6YVhScGIyNGdQU0FvYTJWNUxDQjJZV3gxWlNrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTRrWDNCdmMybDBhVzl1VzJ0bGVWMGdQU0IyWVd4MVpTQXZMeUJyWlhrNklDZDRKeUJ2Y2lBbmVTZGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hkR2hwY3k0a1gyTnZjbVV1SkY5c1lYcDVUR2x1YTFWd1pHRjBaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklHeGhlbVZNYVc1clZYQmtZWFJsSUcxbFlXNXpJSFZ3WkdGMFpTQnNhVzVyY3lCcGJpQmlZWFJqYUNCdGIyUmxYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUMkpxWldOMExtVnVkSEpwWlhNb2JHbHVhMU5sZEhNcExtWnZja1ZoWTJnb0tHVnVkSEo1S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklHVnVkSEo1V3pCZE9pQW5jMjkxY21ObEp5QXZJQ2QwWVhKblpYUW5YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklHVnVkSEo1V3pGZE9pQjBhR1VnYkdsdWF5QnpaWFJjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYTJWNUlEMGdaVzUwY25sYk1GMGdZWE1nVEdsdWEwRjBkSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYzJWMElEMGdaVzUwY25sYk1WMGdZWE1nVTJWMFBFeHBibXMrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6WlhRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11SkY5amIzSmxMaVJmWVdSa1RXOWthV1pwWldSTWFXNXJRMjkxYm5Rb2MyVjBMbk5wZW1VcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLR052Ym5OMElHeHBibXNnYjJZZ2MyVjBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTRrWDJOdmNtVXVKRjl5Wlc1a1pYSmxjaTVzYVc1clRXRnVZV2RsY2k1amFHRnVaMlZCZEhSeWFXSjFkR1VvYkdsdWF5d2dhMlY1S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdsbUlDaGhjbWQxYldWdWRITXViR1Z1WjNSb0lENGdNQ0FtSmlBb0ozZ25JR2x1SUhCdmMybDBhVzl1SUh4OElDZDVKeUJwYmlCd2IzTnBkR2x2YmlrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4cGJtdFRaWFJ6SUQwZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJR1pwYm1RZ2JHbHVhM01nWm5KdmJTOTBieUIwYUdseklHNXZaR1ZjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YjNWeVkyVTZJSFJvYVhNdUpGOWpiM0psTGlSZmMyOTFjbU5sU1dReWJHbHVhM011WjJWMEtIUm9hWE11SkY5cFpDa3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR0Z5WjJWME9pQjBhR2x6TGlSZlkyOXlaUzRrWDNSaGNtZGxkRWxrTW14cGJtdHpMbWRsZENoMGFHbHpMaVJmYVdRcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSjNnbklHbHVJSEJ2YzJsMGFXOXVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFQyNWxVRzl6YVhScGIyNG9KM2duTENCd2IzTnBkR2x2Ymk1NEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NkNUp5QnBiaUJ3YjNOcGRHbHZiaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhObGRFOXVaVkJ2YzJsMGFXOXVLQ2Q1Snl3Z2NHOXphWFJwYjI0dWVTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdUpGOWpiM0psTGlSZmNtVnVaR1Z5WlhJdWJtOWtaVTFoYm1GblpYSXVZMmhoYm1kbFFYUjBjbWxpZFhSbEtIUm9hWE1zSUNkd2IzTnBkR2x2YmljcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k0a1gzQnZjMmwwYVc5dVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ2MyVjBMMmRsZENCemRISnZhMlVnZDJsa2RHZ2diMllnWVNCdWIyUmxYRzRnSUNBZ0lDb2dRSEJoY21GdElIdHVkVzFpWlhKOUlGdDJZV3gxWlYxY2JpQWdJQ0FnS2lCQWJXVnRZbVZ5YjJZZ1RtOWtaVnh1SUNBZ0lDQXFMMXh1SUNBZ0lIQjFZbXhwWXlCemRISnZhMlZYYVdSMGFDaDJZV3gxWlQ4NklHNTFiV0psY2lrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWVhKbmRXMWxiblJ6TG14bGJtZDBhQ0E5UFQwZ01Ta2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTRrWDNOMGNtOXJaVmRwWkhSb0lEMGdkbUZzZFdWY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdUpGOWpiM0psTGlSZmNtVnVaR1Z5WlhJdWJtOWtaVTFoYm1GblpYSXVZMmhoYm1kbFFYUjBjbWxpZFhSbEtIUm9hWE1zSUNkemRISnZhMlZYYVdSMGFDY3BYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdUpGOXpkSEp2YTJWWGFXUjBhRnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJSE5sZEM5blpYUWdjM1J5YjJ0bElHTnZiRzl5SUc5bUlHRWdibTlrWlZ4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3UTI5c2IzSjlJRnQyWVd4MVpWMWNiaUFnSUNBZ0tpOWNiaUFnSUNCd2RXSnNhV01nYzNSeWIydGxRMjlzYjNJb2RtRnNkV1UvT2lCcGJuUmxjbVpoWTJWekxrTnZiRzl5S1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2hoY21kMWJXVnVkSE11YkdWdVozUm9JRDA5UFNBeEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMaVJmYzNSeWIydGxRMjlzYjNJZ1BTQjJZV3gxWlZ4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k0a1gyTnZjbVV1SkY5eVpXNWtaWEpsY2k1dWIyUmxUV0Z1WVdkbGNpNWphR0Z1WjJWQmRIUnlhV0oxZEdVb2RHaHBjeXdnSjNOMGNtOXJaVU52Ykc5eUp5bGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k0a1gzTjBjbTlyWlVOdmJHOXlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2djMlYwTDJkbGRDQm1hV3hzSUdOdmJHOXlJRzltSUdFZ2JtOWtaVnh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjdRMjlzYjNKOUlGdDJZV3gxWlYxY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J3ZFdKc2FXTWdabWxzYkNoMllXeDFaVDg2SUdsdWRHVnlabUZqWlhNdVEyOXNiM0lwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ2dQVDA5SURFcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVKRjltYVd4c0lEMGdkbUZzZFdWY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdUpGOWpiM0psTGlSZmNtVnVaR1Z5WlhJdWJtOWtaVTFoYm1GblpYSXVZMmhoYm1kbFFYUjBjbWxpZFhSbEtIUm9hWE1zSUNkbWFXeHNKeWxjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NGtYMlpwYkd4Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCelpYUXZaMlYwSUhKaFpHbDFjeUJ2WmlCaElHNXZaR1ZjYmlBZ0lDQWdLaUJBY0dGeVlXMGdlMjUxYldKbGNuMGdXM0pkWEc0Z0lDQWdJQ292WEc0Z0lDQWdjSFZpYkdsaklISW9kbUZzZFdVL09pQnVkVzFpWlhJcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0dGeVozVnRaVzUwY3k1c1pXNW5kR2dnUFQwOUlERXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11SkY5eUlEMGdkbUZzZFdWY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdUpGOWpiM0psTGlSZmNtVnVaR1Z5WlhJdWJtOWtaVTFoYm1GblpYSXVZMmhoYm1kbFFYUjBjbWxpZFhSbEtIUm9hWE1zSUNkeVlXUnBkWE1uS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMaVJmY2x4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUdOdmJuUnliMndnYkdGaVpXd2djMmh2ZHlCdmNpQnViM1JjYmlBZ0lDQWdLaUJBY0dGeVlXMGdkbUZzZFdWY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J3ZFdKc2FXTWdjMmh2ZDB4aFltVnNLSFpoYkhWbE9pQmliMjlzWldGdUtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdUpGOXphRzkzVEdGaVpXd2dQU0IyWVd4MVpWeHVJQ0FnSUNBZ0lDQnBaaUFvZG1Gc2RXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11SkY5amIzSmxMbXhoWW1Wc1RXRnVZV2RsY2k1a2NtRjNUR0ZpWld3b2RHaHBjeWxjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11SkY5amIzSmxMbXhoWW1Wc1RXRnVZV2RsY2k1eVpXMXZkbVZNWVdKbGJDaDBhR2x6S1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1oyVjBMM05sZENCdWIyUmxKM01nYkdGaVpXeGNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2RtRnNkV1VnYkdGaVpXd2dkR1Y0ZEZ4dUlDQWdJQ0FxTDF4dUlDQWdJSEIxWW14cFl5QjBaWGgwS0haaGJIVmxQem9nYzNSeWFXNW5LU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaDJZV3gxWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NGtYM1JsZUhRZ1BTQjJZV3gxWlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMaVJmZEdWNGRGeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlHZGxkQzl6WlhRZ2IyWm1jMlYwSUhaaGJIVmxYRzRnSUNBZ0lDb2dRSEJoY21GdElIWmhiSFZsSUc5bVpuTmxkQ0IyWVd4MVpWeHVJQ0FnSUNBcUlFQmtaWEJ5WldOaGRHVmtJRzV2ZENCMWMyVmtJR04xY25KbGJuUnNlU3dnYm05MElITjFjSEJ2Y25RZ2MyVjBJRzV2WkdVbmN5QnNZV0psYkNCdlptWnpaWFFnYVc1a2FYWnBaSFZoYkd4NVhHNGdJQ0FnSUNvdlhHNGdJQ0FnY0hWaWJHbGpJSFJsZUhSUFptWnpaWFFvZG1Gc2RXVS9PaUI3SUhnNklHNTFiV0psY2pzZ2VUb2diblZ0WW1WeUlIMHBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIWmhiSFZsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxpUmZkR1Y0ZEU5bVpuTmxkQ0E5SUhaaGJIVmxYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdUpGOTBaWGgwVDJabWMyVjBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2djMlYwSUhSb1pTQnBaQ0J2WmlCMGFHbHpJRzV2WkdVdVhHNGdJQ0FnSUNvZ2FYUWdhWE1nYjI1c2VTQjFjMlZrSUdadmNpQmpiMjV6ZEhKMVkzUnZjbHh1SUNBZ0lDQXFJR0psWTJGMWMyVWdZU0J1YjJSbEozTWdhV1FnYVhNZ2JtOTBJR0ZzYkc5M1pXUWdkRzhnWW1VZ1kyaGhibWRsWkM1Y2JpQWdJQ0FnS2lCQWNISnBkbUYwWlZ4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3YzNSeWFXNW5mU0IyWVd4MVpWeHVJQ0FnSUNBcUlFQnlaWFIxY201eklHNXZkR2hwYm1kY2JpQWdJQ0FnS2lCQWJXVnRZbVZ5YjJZZ1RtOWtaVnh1SUNBZ0lDQXFMMXh1SUNBZ0lIQnlhWFpoZEdVZ0pGOXpaWFJKWkNoMllXeDFaVG9nYzNSeWFXNW5LU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaHBjMVpoYkdsa1NXUW9kbUZzZFdVcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k0a1gyTnZjbVV1SkY5cFpESnViMlJsTG1oaGN5aDJZV3gxWlNrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb1lFUjFjR3hwWTJGMFpTQnViMlJsSUNna2UzWmhiSFZsZlNrZ2FYTWdibTkwSUdGc2JHOTNaV1F1WUNsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwYzFaaGJHbGtTV1FvZEdocGN5NGtYMmxrS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnblEyRnVJRzV2ZENCamFHRnVaMlVnZEdobElHbGtJRzltSUdGdUlHVjRhWE4wSUc1dlpHVXVKeWxjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVKRjlqYjNKbExpUmZhV1F5Ym05a1pTNXpaWFFvZG1Gc2RXVXNJSFJvYVhNcFhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxpUmZhV1FnUFNCMllXeDFaVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0dCSmJuWmhiR2xrSUVsRUlDUjdkbUZzZFdWOVlDbGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJSE5sZENCb2IzWmxjaUJqWVd4c1ltRmpheUJtZFc1amRHbHZibHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQmpZV3hzWW1GamF5Qm9iM1psY2lCallXeHNZbUZqYXlCbWRXNWpkR2x2Ymx4dUlDQWdJQ0FxTDF4dUlDQWdJSEJ5YVhaaGRHVWdjMlYwU0c5MlpYSkRZV3hzWW1GamF5aGpZV3hzWW1GamF6b2dLRzV2WkdVNklFNXZaR1VwSUQwK0lIWnZhV1FwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTRrWDJodmRtVnlRMkZzYkdKaFkyc2dQU0JqWVd4c1ltRmphMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJSE5sZENCamJHbGpheUJqWVd4c1ltRmpheUJtZFc1amRHbHZibHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQmpZV3hzWW1GamF5QmpiR2xqYXlCallXeHNZbUZqYXlCbWRXNWpkR2x2Ymx4dUlDQWdJQ0FxTDF4dUlDQWdJSEJ5YVhaaGRHVWdjMlYwUTJ4cFkydERZV3hzWW1GamF5aGpZV3hzWW1GamF6b2dLRzV2WkdVNklFNXZaR1VwSUQwK0lIWnZhV1FwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTRrWDJOc2FXTnJRMkZzYkdKaFkyc2dQU0JqWVd4c1ltRmphMXh1SUNBZ0lIMWNibjFjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnVG05a1pWeHVJaXdpWlhod2IzSjBJR1JsWm1GMWJIUWdYQ0lqZG1WeWMybHZiaUF6TURBZ1pYTmNYRzV3Y21WamFYTnBiMjRnYUdsbmFIQWdabXh2WVhRN1hGeHVhVzRnZG1Wak5DQmpiMnh2Y2p0Y1hHNWNYRzV2ZFhRZ2RtVmpOQ0JtY21GbmJXVnVkRU52Ykc5eU8xeGNibHhjYm5admFXUWdiV0ZwYmloMmIybGtLU0I3WEZ4dUlDQWdJR1p5WVdkdFpXNTBRMjlzYjNJZ1BTQjJaV00wS0dOdmJHOXlMbkpuWWlBcUlHTnZiRzl5TG1Fc0lHTnZiRzl5TG1FcE8xeGNibjFjSWpzaUxDSmxlSEJ2Y25RZ1pHVm1ZWFZzZENCY0lpTjJaWEp6YVc5dUlETXdNQ0JsYzF4Y2JuQnlaV05wYzJsdmJpQm9hV2RvY0NCbWJHOWhkRHRjWEc1cGJpQjJaV00wSUdOdmJHOXlPMXhjYmx4Y2JtbHVJSFpsWXpRZ2FXUTdYRnh1WEZ4dUx5OGdWRTlFVHpvZ1lXeHNJR2xrSUhKbGJHRjBaV1FnYzJoaFpHVnlJRzVsWldRZ1kyeGxZVzRnZFhCY1hHNXZkWFFnZG1Wak5DQm1jbUZuYldWdWRFTnZiRzl5TzF4Y2JseGNiblp2YVdRZ2JXRnBiaWgyYjJsa0tTQjdYRnh1SUNBZ0lHWnlZV2R0Wlc1MFEyOXNiM0lnUFNCcFpEdGNYRzU5WENJN0lpd2laWGh3YjNKMElHUmxabUYxYkhRZ1hDSWpkbVZ5YzJsdmJpQXpNREFnWlhOY1hHNXdjbVZqYVhOcGIyNGdhR2xuYUhBZ1pteHZZWFE3WEZ4dWFXNGdkbVZqTXlCcGJsWmxjblJsZUZCdmN6dGNYRzVwYmlCMlpXTXlJR2x1VTI5MWNtTmxVRzl6YVhScGIyNDdYRnh1YVc0Z2RtVmpNaUJwYmxSaGNtZGxkRkJ2YzJsMGFXOXVPMXhjYm1sdUlHWnNiMkYwSUdsdVUzUnliMnRsVjJsa2RHZzdYRnh1YVc0Z2RtVmpOQ0JwYmxOMGNtOXJaVU52Ykc5eU8xeGNibHhjYm1sdUlIWmxZelFnYVc1SlpEdGNYRzVjWEc1dmRYUWdkbVZqTkNCamIyeHZjanRjWEc1Y1hHNXZkWFFnZG1Wak5DQnBaRHRjWEc1Y1hHNTFibWxtYjNKdElHMWhkRE1nY0hKdmFtVmpkR2x2Ymp0Y1hHNTFibWxtYjNKdElIWmxZeklnYzJOaGJHVTdYRnh1ZFc1cFptOXliU0IyWldNeUlIUnlZVzV6YkdGMFpUdGNYRzVjWEc1MmIybGtJRzFoYVc0b2RtOXBaQ2tnZTF4Y2JpQWdJQ0JwWkNBOUlHbHVTV1E3WEZ4dVhGeHVJQ0FnSUdOdmJHOXlJRDBnYVc1VGRISnZhMlZEYjJ4dmNqdGNYRzVjWEc0Z0lDQWdkbVZqTWlCemIzVnlZMlVnUFNCcGJsTnZkWEpqWlZCdmMybDBhVzl1SUNvZ2MyTmhiR1VnS3lCMGNtRnVjMnhoZEdVN1hGeHVJQ0FnSUhabFl6SWdkR0Z5WjJWMElEMGdhVzVVWVhKblpYUlFiM05wZEdsdmJpQXFJSE5qWVd4bElDc2dkSEpoYm5Oc1lYUmxPMXhjYmlBZ0lDQjJaV015SUdSbGJIUmhJRDBnYzI5MWNtTmxJQzBnZEdGeVoyVjBPMXhjYmlBZ0lDQjJaV015SUdObGJuUmxjaUE5SURBdU5TQXFJQ2h6YjNWeVkyVWdLeUIwWVhKblpYUXBPMXhjYmlBZ0lDQm1iRzloZENCc1pXNGdQU0JzWlc1bmRHZ29aR1ZzZEdFcE8xeGNiaUFnSUNCbWJHOWhkQ0J3YUdrZ1BTQmhkR0Z1S0dSbGJIUmhMbmtnTHlCa1pXeDBZUzU0S1R0Y1hHNWNYRzRnSUNBZ2JXRjBNeUJzYVc1bFgzTmpZV3hsSUQwZ2JXRjBNeWhjWEc0Z0lDQWdJQ0FnSUd4bGJpd2dNQ3dnTUN4Y1hHNGdJQ0FnSUNBZ0lEQXNJR2x1VTNSeWIydGxWMmxrZEdnc0lEQXNYRnh1SUNBZ0lDQWdJQ0F3TENBd0xDQXhYRnh1SUNBZ0lDazdYRnh1SUNBZ0lHMWhkRE1nYkdsdVpWOXliM1JoZEdVZ1BTQnRZWFF6S0Z4Y2JpQWdJQ0FnSUNBZ1kyOXpLSEJvYVNrc0lITnBiaWh3YUdrcExDQXdMRnhjYmlBZ0lDQWdJQ0FnTFhOcGJpaHdhR2twTENCamIzTW9jR2hwS1N3Z01DeGNYRzRnSUNBZ0lDQWdJREFzSURBc0lERmNYRzRnSUNBZ0tUdGNYRzRnSUNBZ2JXRjBNeUJzYVc1bFgzUnlZVzV6YkdGMFpTQTlJRzFoZERNb1hGeHVJQ0FnSUNBZ0lDQXhMQ0F3TENBd0xGeGNiaUFnSUNBZ0lDQWdNQ3dnTVN3Z01DeGNYRzRnSUNBZ0lDQWdJR05sYm5SbGNpNTRMQ0JqWlc1MFpYSXVlU3dnTVZ4Y2JpQWdJQ0FwTzF4Y2JpQWdJQ0JjWEc0Z0lDQWdiV0YwTXlCMGNtRnVjMlp2Y20wZ1BTQnNhVzVsWDNSeVlXNXpiR0YwWlNBcUlHeHBibVZmY205MFlYUmxJQ29nYkdsdVpWOXpZMkZzWlR0Y1hHNWNYRzRnSUNBZ1oyeGZVRzl6YVhScGIyNGdQU0IyWldNMEtIQnliMnBsWTNScGIyNGdLaUIwY21GdWMyWnZjbTBnS2lCcGJsWmxjblJsZUZCdmN5d2dNUzRwTzF4Y2JuMWNJanNpTENJdktpcGNiaUFxSUVCaGRYUm9iM0lnV0dsaGIyUnZibWNnV21oaGJ5QThlbWhoYjNocFlXOWtiMjVuUUhwcWRTNWxaSFV1WTI0K1hHNGdLaUJBWkdWelkzSnBjSFJwYjI0Z1RHbHVheUIxYzJWa0lHbHVJSEpsYm1SbGNtVnlYRzRnS2k5Y2JseHVhVzF3YjNKMElIWmxjblJUYUdGa1pYSlRkSElnWm5KdmJTQW5MaTkyWlhKMFpYZ3VaMnh6YkNkY2JtbHRjRzl5ZENCbWNtRm5VMmhoWkdWeVUzUnlJR1p5YjIwZ0p5NHZabkpoWjIxbGJuUXVaMnh6YkNkY2JtbHRjRzl5ZENCcFpGWmxjblJUYUdGa1pYSlRkSElnWm5KdmJTQW5MaTlwWkMxMlpYSjBaWGd1WjJ4emJDZGNibWx0Y0c5eWRDQnBaRVp5WVdkVGFHRmtaWEpUZEhJZ1puSnZiU0FuTGk5cFpDMW1jbUZuYldWdWRDNW5iSE5zSjF4dWFXMXdiM0owSUh0Y2JpQWdJQ0JqY21WaGRHVlFjbTluY21GdExGeHVJQ0FnSUdOeVpXRjBaVUZ5Y21GNVFuVm1abVZ5TEZ4dUlDQWdJR1Y0ZEhKaFkzUkJkSFJ5YVdKMWRHVnpSbkp2YlZOb1lXUmxjaXhjYmlBZ0lDQmxibU52WkdWU1pXNWtaWEpKWkZ4dWZTQm1jbTl0SUNjdUxpOHVMaTkxZEdsc2N5ZGNibWx0Y0c5eWRDQjdJRlJ5WVc1elptOXliU0I5SUdaeWIyMGdKeTR1THk0dUx5NHVMMmx1ZEdWeVptRmpaWE1uWEc1cGJYQnZjblFnZXlCU1pXNWtaWEpCZEhSeWFXSjFkR1VzSUV4cGJtdEJkSFJ5TENCTWFXNXJUV0Z1WVdkbGNrTnZibVpwWjNNZ2ZTQm1jbTl0SUNjdUxpOHVMaTlwYm5SbGNtWmhZMlZ6SjF4dWFXMXdiM0owSUV4cGJtc2dabkp2YlNBbkxpNHZMaTR2TGk0dmJHbHVheWRjYm1sdGNHOXlkQ0JOWVhBeUlHWnliMjBnSnk0dUx5NHVMeTR1TDNWMGFXeHpMMjFoY0RJblhHNWNibVZ1ZFcwZ1RHbHVhMEYwZEhKTFpYa2dlMXh1SUNBZ0lGUkZUVkJNUVZSRkxGeHVJQ0FnSUZOUFZWSkRSU3hjYmlBZ0lDQlVRVkpIUlZRc1hHNGdJQ0FnVjBsRVZFZ3NYRzRnSUNBZ1EwOU1UMUpjYm4xY2JseHVaVzUxYlNCTWFXNXJTV1JCZEhSeVMyVjVJSHRjYmlBZ0lDQlVSVTFRVEVGVVJTeGNiaUFnSUNCVFQxVlNRMFVzWEc0Z0lDQWdWRUZTUjBWVUxGeHVJQ0FnSUZkSlJGUklMRnh1SUNBZ0lFTlBURTlTTEZ4dUlDQWdJRWxFWEc1OVhHNWNibU52Ym5OMElFeHBibXRCZEhSeVRXRndJRDBnZTF4dUlDQWdJSE52ZFhKalpUb2dUR2x1YTBGMGRISkxaWGt1VTA5VlVrTkZMRnh1SUNBZ0lIUmhjbWRsZERvZ1RHbHVhMEYwZEhKTFpYa3VWRUZTUjBWVUxGeHVJQ0FnSUhOMGNtOXJaVmRwWkhSb09pQk1hVzVyUVhSMGNrdGxlUzVYU1VSVVNDeGNiaUFnSUNCemRISnZhMlZEYjJ4dmNqb2dUR2x1YTBGMGRISkxaWGt1UTA5TVQxSmNibjFjYmx4dVpYaHdiM0owSUdOc1lYTnpJRkpsYm1SbGNreHBibXROWVc1aFoyVnlJSHRjYmlBZ0lDQndjbWwyWVhSbElHZHNPaUJYWldKSFRESlNaVzVrWlhKcGJtZERiMjUwWlhoMFhHNGdJQ0FnY0hKcGRtRjBaU0JzYVcxcGREb2diblZ0WW1WeVhHNGdJQ0FnY0hKcGRtRjBaU0JqYjNWdWRDQTlJREJjYmlBZ0lDQndjbWwyWVhSbElIZHBaSFJvT2lCdWRXMWlaWEpjYmlBZ0lDQndjbWwyWVhSbElHaGxhV2RvZERvZ2JuVnRZbVZ5WEc0Z0lDQWdjSEpwZG1GMFpTQndhWGhsYkZKaGRHbHZPaUJ1ZFcxaVpYSmNiaUFnSUNCd2NtbDJZWFJsSUhCeWIyZHlZVzA2SUZkbFlrZE1VSEp2WjNKaGJWeHVJQ0FnSUhCeWFYWmhkR1VnWVhSMGNtbGlkWFJsY3pvZ1VtVnVaR1Z5UVhSMGNtbGlkWFJsWEc0Z0lDQWdjSEpwZG1GMFpTQnBaRkJ5YjJkeVlXMDZJRmRsWWtkTVVISnZaM0poYlZ4dUlDQWdJSEJ5YVhaaGRHVWdhV1JCZEhSeWFXSjFkR1Z6T2lCU1pXNWtaWEpCZEhSeWFXSjFkR1ZjYmlBZ0lDQndjbWwyWVhSbElHbGtWR1Y0ZEhWeVpUb2dWMlZpUjB4VVpYaDBkWEpsWEc0Z0lDQWdjSEpwZG1GMFpTQnlaVzVrWlhKSlpGUnZTV1J6T2lCN0lGdHJaWGs2SUc1MWJXSmxjbDA2SUZ0emRISnBibWNzSUhOMGNtbHVaMTBnZlZ4dVhHNGdJQ0FnY0hKcGRtRjBaU0JwWkhOVWIwbHVaR1Y0SUQwZ2JtVjNJRTFoY0RJb0tWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dZM0psWVhSbElISmxibVJsY2lCc2FXNXJJRzFoYm1GblpYSmNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ1oyd2dWMlZpUjB3Z1kyOXVkR1Y0ZEZ4dUlDQWdJQ0FxSUVCd1lYSmhiU0J3WVhKaGJYTWdibVZ6YzJWellYSjVJR052Ym1acFozTWdabTl5SUd4cGJtc2diV0Z1WVdkbGNseHVJQ0FnSUNBcUlFQndZWEpoYlNCcFpGUmxlSFIxY21VZ2RHVjRkSFZ5WlNCemRHOXlaU0JsYkdWdFpXNTBjeUJwWkNCdlppQmxZV05vSUhCcGVHVnNYRzRnSUNBZ0lDb3ZYRzRnSUNBZ2NIVmliR2xqSUdOdmJuTjBjblZqZEc5eUtGeHVJQ0FnSUNBZ0lDQm5iRG9nVjJWaVIwd3lVbVZ1WkdWeWFXNW5RMjl1ZEdWNGRDeGNiaUFnSUNBZ0lDQWdjR0Z5WVcxek9pQk1hVzVyVFdGdVlXZGxja052Ym1acFozTXNYRzRnSUNBZ0lDQWdJR2xrVkdWNGRIVnlaVG9nVjJWaVIweFVaWGgwZFhKbFhHNGdJQ0FnS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhzZ2JHbHRhWFFzSUhkcFpIUm9MQ0JvWldsbmFIUWdmU0E5SUhCaGNtRnRjMXh1SUNBZ0lDQWdJQ0IwYUdsekxtZHNJRDBnWjJ4Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVzYVcxcGRDQTlJR3hwYldsMFhHNGdJQ0FnSUNBZ0lIUm9hWE11ZDJsa2RHZ2dQU0IzYVdSMGFGeHVJQ0FnSUNBZ0lDQjBhR2x6TG1obGFXZG9kQ0E5SUdobGFXZG9kRnh1SUNBZ0lDQWdJQ0IwYUdsekxuQnBlR1ZzVW1GMGFXOGdQU0IzYVc1a2IzY3VaR1YyYVdObFVHbDRaV3hTWVhScGJ5QjhmQ0F4WEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6SUQwZ1pYaDBjbUZqZEVGMGRISnBZblYwWlhOR2NtOXRVMmhoWkdWeUtIWmxjblJUYUdGa1pYSlRkSElwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSEp2WjNKaGJTQTlJR055WldGMFpWQnliMmR5WVcwb2RHaHBjeTVuYkN3Z2RtVnlkRk5vWVdSbGNsTjBjaXdnWm5KaFoxTm9ZV1JsY2xOMGNpd2dkR2hwY3k1aGRIUnlhV0oxZEdWektWeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdWFXUkJkSFJ5YVdKMWRHVnpJRDBnWlhoMGNtRmpkRUYwZEhKcFluVjBaWE5HY205dFUyaGhaR1Z5S0dsa1ZtVnlkRk5vWVdSbGNsTjBjaWxjYmlBZ0lDQWdJQ0FnZEdocGN5NXBaRkJ5YjJkeVlXMGdQU0JqY21WaGRHVlFjbTluY21GdEtIUm9hWE11WjJ3c0lHbGtWbVZ5ZEZOb1lXUmxjbE4wY2l3Z2FXUkdjbUZuVTJoaFpHVnlVM1J5TENCMGFHbHpMbWxrUVhSMGNtbGlkWFJsY3lsY2JpQWdJQ0FnSUNBZ2RHaHBjeTVwWkZSbGVIUjFjbVVnUFNCcFpGUmxlSFIxY21WY2JpQWdJQ0FnSUNBZ2RHaHBjeTV5Wlc1a1pYSkpaRlJ2U1dSeklEMGdlMzFjYmx4dUlDQWdJQ0FnSUNBdkx5QnBibWwwSUdGeWNtRjVjMXh1SUNBZ0lDQWdJQ0F2THlCd2NtVjBkR2xsY2kxcFoyNXZjbVZjYmlBZ0lDQWdJQ0FnZEdocGN5NWhkSFJ5YVdKMWRHVnpXMHhwYm10QmRIUnlTMlY1TGxSRlRWQk1RVlJGWFM1aGNuSmhlU0E5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvVzF4dUlDQWdJQ0FnSUNBZ0lDQWdMVEF1TlN3Z01DNDFMQ0F4TGpBc1hHNGdJQ0FnSUNBZ0lDQWdJQ0F0TUM0MUxDQXRNQzQxTENBeExqQXNYRzRnSUNBZ0lDQWdJQ0FnSUNBd0xqVXNJREF1TlN3Z01TNHdMRnh1SUNBZ0lDQWdJQ0FnSUNBZ01DNDFMQ0F0TUM0MUxDQXhMakFzWEc0Z0lDQWdJQ0FnSUYwcFhHNGdJQ0FnSUNBZ0lIUm9hWE11WVhSMGNtbGlkWFJsY3k1bWIzSkZZV05vS0NoaGRIUnlLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXRjBkSEl1YVhOQ2RXbHNaRWx1S1NCaGRIUnlMbUZ5Y21GNUlEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaGhkSFJ5TG5OcGVtVWdLaUIwYUdsekxteHBiV2wwS1Z4dUlDQWdJQ0FnSUNCOUtWeHVYRzRnSUNBZ0lDQWdJQzh2SUdsdWFYUWdZblZtWm1WeWMxeHVJQ0FnSUNBZ0lDQjBhR2x6TG1GMGRISnBZblYwWlhNdVptOXlSV0ZqYUNnb1lYUjBjaWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWVhSMGNpNWlkV1ptWlhJZ1BTQmpjbVZoZEdWQmNuSmhlVUoxWm1abGNpaDBhR2x6TG1kc0xDQmhkSFJ5TG1GeWNtRjVLVnh1SUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lDOHZJR2x1YVhRZ2FXUWdZWFIwY21saWRYUmxjeUJoYm1RZ1luVm1abVZ5YzF4dUlDQWdJQ0FnSUNBdkx5QlVUMFJQT2lCb1lYSmtZMjlrWlNCamFHVmpheXdnYm1WbFpDQnlaV1poWTNSdmNseHVJQ0FnSUNBZ0lDQjBhR2x6TG1sa1FYUjBjbWxpZFhSbGN5NW1iM0pGWVdOb0tDaGhkSFJ5TENCcFpIZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocFpIZ2dQQ0IwYUdsekxtRjBkSEpwWW5WMFpYTXViR1Z1WjNSb0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1cFpFRjBkSEpwWW5WMFpYTmJhV1I0WFNBOUlIUm9hWE11WVhSMGNtbGlkWFJsYzF0cFpIaGRYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hZWFIwY2k1cGMwSjFhV3hrU1c0cElHRjBkSEl1WVhKeVlYa2dQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLR0YwZEhJdWMybDZaU0FxSUhSb2FYTXViR2x0YVhRcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYUjBjaTVpZFdabVpYSWdQU0JqY21WaGRHVkJjbkpoZVVKMVptWmxjaWgwYUdsekxtZHNMQ0JoZEhSeUxtRnljbUY1S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lDOHZJR2x1YVhRZ2RXNXBabTl5YlhOY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1MWMyVlFjbTluY21GdEtIUm9hWE11Y0hKdlozSmhiU2xjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjSEp2YW1WamRHbHZia3h2WXlBOUlIUm9hWE11WjJ3dVoyVjBWVzVwWm05eWJVeHZZMkYwYVc5dUtIUm9hWE11Y0hKdlozSmhiU3dnSjNCeWIycGxZM1JwYjI0bktWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCelkyRnNaVXh2WXlBOUlIUm9hWE11WjJ3dVoyVjBWVzVwWm05eWJVeHZZMkYwYVc5dUtIUm9hWE11Y0hKdlozSmhiU3dnSjNOallXeGxKeWxjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdkSEpoYm5Oc1lYUmxURzlqSUQwZ2RHaHBjeTVuYkM1blpYUlZibWxtYjNKdFRHOWpZWFJwYjI0b2RHaHBjeTV3Y205bmNtRnRMQ0FuZEhKaGJuTnNZWFJsSnlsY2JseHVJQ0FnSUNBZ0lDQXZMeUIwYUdsekxtZHNMblpwWlhkd2IzSjBLREFzSURBc0lIUm9hWE11ZDJsa2RHZ3NJSFJvYVhNdWFHVnBaMmgwS1NBdkx5QlVUMFJQT2lCMmFXVjNjRzl5ZENCelpYUXNJRzV2ZENCdVpXVmtaV1EvSUhCMWRDQm9aWEpsSUdsdUlHTmhjMlVnWW5WbklHRndjR1ZoY2x4dVhHNGdJQ0FnSUNBZ0lDOHZJSEJ5WlhSMGFXVnlMV2xuYm05eVpWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOXFaV04wYVc5dUlEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaGJYRzRnSUNBZ0lDQWdJQ0FnSUNBeUlDOGdkR2hwY3k1M2FXUjBhQ3dnTUN3Z01DeGNiaUFnSUNBZ0lDQWdJQ0FnSURBc0lDMHlJQzhnZEdocGN5NW9aV2xuYUhRc0lEQXNYRzRnSUNBZ0lDQWdJQ0FnSUNBdE1Td2dNU3dnTVZ4dUlDQWdJQ0FnSUNCZEtWeHVJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xuVnVhV1p2Y20xTllYUnlhWGd6Wm5Zb2NISnZhbVZqZEdsdmJreHZZeXdnWm1Gc2MyVXNJSEJ5YjJwbFkzUnBiMjRwWEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzJOaGJHVWdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLRnN4TENBeFhTbGNiaUFnSUNBZ0lDQWdkR2hwY3k1bmJDNTFibWxtYjNKdE1tWjJLSE5qWVd4bFRHOWpMQ0J6WTJGc1pTbGNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQjBjbUZ1YzJ4aGRHVWdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLRnN3TENBd1hTbGNiaUFnSUNBZ0lDQWdkR2hwY3k1bmJDNTFibWxtYjNKdE1tWjJLSFJ5WVc1emJHRjBaVXh2WXl3Z2RISmhibk5zWVhSbEtWeHVYRzRnSUNBZ0lDQWdJQzh2SUdsa0lIVnVhV1p2Y20xekxDQnBaR1Z1ZEdsallXd2dkRzhnYkdsdWExeHVJQ0FnSUNBZ0lDQXZMeUJVVDBSUE9pQnVaV1ZrSUhKbFptRmpkRzl5SUhSdmIxeHVJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xuVnpaVkJ5YjJkeVlXMG9kR2hwY3k1cFpGQnliMmR5WVcwcFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUdsa1VISnZhbVZqZEdsdmJreHZZeUE5SUhSb2FYTXVaMnd1WjJWMFZXNXBabTl5YlV4dlkyRjBhVzl1S0hSb2FYTXVhV1JRY205bmNtRnRMQ0FuY0hKdmFtVmpkR2x2YmljcFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUdsa1UyTmhiR1ZNYjJNZ1BTQjBhR2x6TG1kc0xtZGxkRlZ1YVdadmNtMU1iMk5oZEdsdmJpaDBhR2x6TG1sa1VISnZaM0poYlN3Z0ozTmpZV3hsSnlsY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYVdSVWNtRnVjMnhoZEdWTWIyTWdQU0IwYUdsekxtZHNMbWRsZEZWdWFXWnZjbTFNYjJOaGRHbHZiaWgwYUdsekxtbGtVSEp2WjNKaGJTd2dKM1J5WVc1emJHRjBaU2NwWEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1MWJtbG1iM0p0VFdGMGNtbDRNMloyS0dsa1VISnZhbVZqZEdsdmJreHZZeXdnWm1Gc2MyVXNJSEJ5YjJwbFkzUnBiMjRwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVaMnd1ZFc1cFptOXliVEptZGlocFpGTmpZV3hsVEc5akxDQnpZMkZzWlNsY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1MWJtbG1iM0p0TW1aMktHbGtWSEpoYm5Oc1lYUmxURzlqTENCMGNtRnVjMnhoZEdVcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1kyaGhibWRsSUd4cGJtc25jeUJoZEhSeWFXSjFkR1ZjYmlBZ0lDQWdLaUJBY0dGeVlXMGdiR2x1YXlCc2FXNXJJR1JoZEdGY2JpQWdJQ0FnS2lCQWNHRnlZVzBnWVhSMGNtbGlkWFJsSUdGMGRISnBZblYwWlNCclpYa2dkRzhnWTJoaGJtZGxYRzRnSUNBZ0lDb3ZYRzRnSUNBZ2NIVmliR2xqSUdOb1lXNW5aVUYwZEhKcFluVjBaU2hzYVc1ck9pQk1hVzVyTENCaGRIUnlhV0oxZEdVNklFeHBibXRCZEhSeUtTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHdGxlU0E5SUV4cGJtdEJkSFJ5VFdGd1cyRjBkSEpwWW5WMFpWMWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1lYUjBjaUE5SUhSb2FYTXVZWFIwY21saWRYUmxjMXRyWlhsZFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUc1dlpHVnpJRDBnYkdsdWF5NXpiM1Z5WTJWVVlYSm5aWFFvS1Z4dUlDQWdJQ0FnSUNCamIyNXpkQ0JwYm1SbGVDQTlJSFJvYVhNdWFXUnpWRzlKYm1SbGVDNW5aWFFvVzI1dlpHVnpMbk52ZFhKalpTNXBaQ2dwTENCdWIyUmxjeTUwWVhKblpYUXVhV1FvS1YwcFhHNGdJQ0FnSUNBZ0lHeGxkQ0JrWVhSaElEMGdiblZzYkZ4dUlDQWdJQ0FnSUNCcFppQW9ZWFIwY21saWRYUmxJRDA5UFNBbmMyOTFjbU5sSnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjRzl6SUQwZ2JtOWtaWE11YzI5MWNtTmxMbkJ2YzJsMGFXOXVLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmhkR0VnUFNCYmNHOXpMbmdzSUhCdmN5NTVYVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dGMGRISnBZblYwWlNBOVBUMGdKM1JoY21kbGRDY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhCdmN5QTlJRzV2WkdWekxuUmhjbWRsZEM1d2IzTnBkR2x2YmlncFhHNGdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaElEMGdXM0J2Y3k1NExDQndiM011ZVYxY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaGhkSFJ5YVdKMWRHVWdQVDA5SUNkemRISnZhMlZYYVdSMGFDY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmhkR0VnUFNCYmJHbHVheTV6ZEhKdmEyVlhhV1IwYUNncElDb2dkR2hwY3k1d2FYaGxiRkpoZEdsdlhWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLR0YwZEhKcFluVjBaU0E5UFQwZ0ozTjBjbTlyWlVOdmJHOXlKeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1kyOXNJRDBnYkdsdWF5NXpkSEp2YTJWRGIyeHZjaWdwWEc0Z0lDQWdJQ0FnSUNBZ0lDQmtZWFJoSUQwZ1cyTnZiQzV5TENCamIyd3VaeXdnWTI5c0xtSXNJR052YkM1aFhWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ25UR2x1YXlCaGRIUnlhV0oxZEdVZ2JtOTBJSE4xY0hCdmNuUmxaQzRuS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlDOHZJR1ZoY214NUlISmxkSFZ5Yml3Z2MydHBjQ0JtYjJ4c2IzZHBibWNnWW5WbVptVnlJR05vWVc1blpWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR0YwZEhJdVlYSnlZWGt1YzJWMEtHUmhkR0VzSUdGMGRISXVjMmw2WlNBcUlHbHVaR1Y0S1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG1KcGJtUkNkV1ptWlhJb2RHaHBjeTVuYkM1QlVsSkJXVjlDVlVaR1JWSXNJR0YwZEhJdVluVm1abVZ5S1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG1KMVptWmxjbE4xWWtSaGRHRW9YRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRzTGtGU1VrRlpYMEpWUmtaRlVpeGNiaUFnSUNBZ0lDQWdJQ0FnSUdGMGRISXVjMmw2WlNBcUlHbHVaR1Y0SUNvZ1lYUjBjaTVoY25KaGVTNUNXVlJGVTE5UVJWSmZSVXhGVFVWT1ZDeGNiaUFnSUNBZ0lDQWdJQ0FnSUdGMGRISXVZWEp5WVhrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeUxuTnBlbVVnS2lCcGJtUmxlQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHRjBkSEl1YzJsNlpWeHVJQ0FnSUNBZ0lDQXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2djbVZtY21WemFDQmhiR3dnY0c5emFYUnBiMjRnYjJZZ1pXUm5aWE5jYmlBZ0lDQWdLaUJBY0dGeVlXMGdiR2x1YTNNZ1lXeHNJR3hwYm1zZ1pHRjBZVnh1SUNBZ0lDQXFMMXh1SUNBZ0lIQjFZbXhwWXlCeVpXWnlaWE5vVUc5emFYUnBiMjRvYkdsdWEzTTZJRXhwYm10YlhTa2dlMXh1SUNBZ0lDQWdJQ0JzWlhRZ1kyOTFiblFnUFNBd1hHNGdJQ0FnSUNBZ0lHeHBibXR6TG1admNrVmhZMmdvS0d4cGJtc3NJR2twSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklGUlBSRTg2SUdOdmJuTnBaR1Z5SUd4cGJtc2dZVzVrSUhKbGJtUmxjaUJzYVc1cklHRjBkSEpwWW5WMFpTQnRZWEJ3YVc1blhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnpiM1Z5WTJVZ1BTQnNhVzVyTG5OdmRYSmpaU2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCemIzVnlZMlZRYjNOcGRHbHZiaUE5SUhOdmRYSmpaUzV3YjNOcGRHbHZiaWdwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1GMGRISnBZblYwWlhOYlRHbHVhMEYwZEhKTFpYa3VVMDlWVWtORlhTNWhjbkpoZVZzeUlDb2dLR052ZFc1MElDc2dhU2xkSUQwZ2MyOTFjbU5sVUc5emFYUnBiMjR1ZUZ4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aGRIUnlhV0oxZEdWelcweHBibXRCZEhSeVMyVjVMbE5QVlZKRFJWMHVZWEp5WVhsYk1pQXFJQ2hqYjNWdWRDQXJJR2twSUNzZ01WMGdQU0J6YjNWeVkyVlFiM05wZEdsdmJpNTVYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhSaGNtZGxkQ0E5SUd4cGJtc3VkR0Z5WjJWMEtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSFJoY21kbGRGQnZjMmwwYVc5dUlEMGdkR0Z5WjJWMExuQnZjMmwwYVc5dUtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZWFIwY21saWRYUmxjMXRNYVc1clFYUjBja3RsZVM1VVFWSkhSVlJkTG1GeWNtRjVXeklnS2lBb1kyOTFiblFnS3lCcEtWMGdQU0IwWVhKblpYUlFiM05wZEdsdmJpNTRYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUYwZEhKcFluVjBaWE5iVEdsdWEwRjBkSEpMWlhrdVZFRlNSMFZVWFM1aGNuSmhlVnN5SUNvZ0tHTnZkVzUwSUNzZ2FTa2dLeUF4WFNBOUlIUmhjbWRsZEZCdmMybDBhVzl1TG5sY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1kzVnljbVZ1ZEd4NUlHNXZJRzVsWldRZ1ptOXlJR052Ykc5eUpuSmxibVJsY2tsa0lHTm9ZVzVuWlZ4dUlDQWdJQ0FnSUNBZ0lDQWdMeXBjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WVhSMGNtbGlkWFJsYzF0TWFXNXJRWFIwY2t0bGVTNVhTVVJVU0YwdVlYSnlZWGxiZEdocGN5NWpiM1Z1ZENBcklHbGRJRDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYVc1ckxuTjBjbTlyWlZkcFpIUm9LQ2tnS2lCMGFHbHpMbkJwZUdWc1VtRjBhVzljYmx4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1kyOXNiM0lnUFNCc2FXNXJMbk4wY205clpVTnZiRzl5S0NsY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlYUjBjbWxpZFhSbGMxdE1hVzVyUVhSMGNrdGxlUzVEVDB4UFVsMHVZWEp5WVhsYk5DQXFJQ2gwYUdsekxtTnZkVzUwSUNzZ2FTbGRJRDBnWTI5c2IzSXVjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6VzB4cGJtdEJkSFJ5UzJWNUxrTlBURTlTWFM1aGNuSmhlVnMwSUNvZ0tIUm9hWE11WTI5MWJuUWdLeUJwS1NBcklERmRJRDBnWTI5c2IzSXVaMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6VzB4cGJtdEJkSFJ5UzJWNUxrTlBURTlTWFM1aGNuSmhlVnMwSUNvZ0tIUm9hWE11WTI5MWJuUWdLeUJwS1NBcklESmRJRDBnWTI5c2IzSXVZbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6VzB4cGJtdEJkSFJ5UzJWNUxrTlBURTlTWFM1aGNuSmhlVnMwSUNvZ0tIUm9hWE11WTI5MWJuUWdLeUJwS1NBcklETmRJRDBnWTI5c2IzSXVZVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCeVpXNWtaWEpKWkVOdmJHOXlJRDBnWlc1amIyUmxVbVZ1WkdWeVNXUW9NaUFxSUNoMGFHbHpMbU52ZFc1MElDc2dhU2tnS3lBeEtTQXZMeUJPVDFSRk9pQnNhVzVySUhKbGJtUmxjaUJwWkN3Z2RYTmxJRzlrWkNCcGJuUmxaMlZ5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1sa1FYUjBjbWxpZFhSbGMxdE1hVzVyU1dSQmRIUnlTMlY1TGtsRVhTNWhjbkpoZVZzMElDb2dLSFJvYVhNdVkyOTFiblFnS3lCcEtWMGdQU0J5Wlc1a1pYSkpaRU52Ykc5eUxuSmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhV1JCZEhSeWFXSjFkR1Z6VzB4cGJtdEpaRUYwZEhKTFpYa3VTVVJkTG1GeWNtRjVXelFnS2lBb2RHaHBjeTVqYjNWdWRDQXJJR2twSUNzZ01WMGdQU0J5Wlc1a1pYSkpaRU52Ykc5eUxtZGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhV1JCZEhSeWFXSjFkR1Z6VzB4cGJtdEpaRUYwZEhKTFpYa3VTVVJkTG1GeWNtRjVXelFnS2lBb2RHaHBjeTVqYjNWdWRDQXJJR2twSUNzZ01sMGdQU0J5Wlc1a1pYSkpaRU52Ykc5eUxtSmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhV1JCZEhSeWFXSjFkR1Z6VzB4cGJtdEpaRUYwZEhKTFpYa3VTVVJkTG1GeWNtRjVXelFnS2lBb2RHaHBjeTVqYjNWdWRDQXJJR2twSUNzZ00xMGdQU0J5Wlc1a1pYSkpaRU52Ykc5eUxtRmNiaUFnSUNBZ0lDQWdJQ0FnSUNvdlhHNGdJQ0FnSUNBZ0lIMHBYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjMjkxY21ObFFYUjBjaUE5SUhSb2FYTXVZWFIwY21saWRYUmxjMXRNYVc1clFYUjBja3RsZVM1VFQxVlNRMFZkWEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSFJoY21kbGRFRjBkSElnUFNCMGFHbHpMbUYwZEhKcFluVjBaWE5iVEdsdWEwRjBkSEpMWlhrdVZFRlNSMFZVWFZ4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUdGeWNpQTlJRnR6YjNWeVkyVkJkSFJ5TENCMFlYSm5aWFJCZEhSeVhWeHVYRzRnSUNBZ0lDQWdJR0Z5Y2k1bWIzSkZZV05vS0NoaGRIUnlLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXRjBkSEl1YVhOQ2RXbHNaRWx1S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1aWFXNWtRblZtWm1WeUtIUm9hWE11WjJ3dVFWSlNRVmxmUWxWR1JrVlNMQ0JoZEhSeUxtSjFabVpsY2lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRzTG1KMVptWmxjbE4xWWtSaGRHRW9YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaMnd1UVZKU1FWbGZRbFZHUmtWU0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeUxuTnBlbVVnS2lCamIzVnVkQ0FxSUdGMGRISXVZWEp5WVhrdVFsbFVSVk5mVUVWU1gwVk1SVTFGVGxRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0YwZEhJdVlYSnlZWGtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRjBkSEl1YzJsNlpTQXFJR052ZFc1MExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeUxuTnBlbVVnS2lCc2FXNXJjeTVzWlc1bmRHaGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXBYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dZV1JrSUd4cGJtdHpJR1JoZEdFZ2RHOGdaVzVuYVc1bFhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUd4cGJtdHpJR3hwYm10eklHUmhkR0ZjYmlBZ0lDQWdLaTljYmlBZ0lDQndkV0pzYVdNZ1lXUmtSR0YwWVNoc2FXNXJjem9nVEdsdWExdGRLU0I3WEc0Z0lDQWdJQ0FnSUM4dklITmxkQ0JoY25KaGVWeHVJQ0FnSUNBZ0lDQnNhVzVyY3k1bWIzSkZZV05vS0Noc2FXNXJMQ0JwS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QlVUMFJQT2lCamIyNXphV1JsY2lCc2FXNXJJR0Z1WkNCeVpXNWtaWElnYkdsdWF5QmhkSFJ5YVdKMWRHVWdiV0Z3Y0dsdVoxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjMjkxY21ObElEMGdiR2x1YXk1emIzVnlZMlVvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2MyOTFjbU5sVUc5emFYUnBiMjRnUFNCemIzVnlZMlV1Y0c5emFYUnBiMjRvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aGRIUnlhV0oxZEdWelcweHBibXRCZEhSeVMyVjVMbE5QVlZKRFJWMHVZWEp5WVhsYk1pQXFJQ2gwYUdsekxtTnZkVzUwSUNzZ2FTbGRJRDBnYzI5MWNtTmxVRzl6YVhScGIyNHVlRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6VzB4cGJtdEJkSFJ5UzJWNUxsTlBWVkpEUlYwdVlYSnlZWGxiTWlBcUlDaDBhR2x6TG1OdmRXNTBJQ3NnYVNrZ0t5QXhYU0E5SUhOdmRYSmpaVkJ2YzJsMGFXOXVMbmxjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RHRnlaMlYwSUQwZ2JHbHVheTUwWVhKblpYUW9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZEdGeVoyVjBVRzl6YVhScGIyNGdQU0IwWVhKblpYUXVjRzl6YVhScGIyNG9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6VzB4cGJtdEJkSFJ5UzJWNUxsUkJVa2RGVkYwdVlYSnlZWGxiTWlBcUlDaDBhR2x6TG1OdmRXNTBJQ3NnYVNsZElEMGdkR0Z5WjJWMFVHOXphWFJwYjI0dWVGeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhkSFJ5YVdKMWRHVnpXMHhwYm10QmRIUnlTMlY1TGxSQlVrZEZWRjB1WVhKeVlYbGJNaUFxSUNoMGFHbHpMbU52ZFc1MElDc2dhU2tnS3lBeFhTQTlJSFJoY21kbGRGQnZjMmwwYVc5dUxubGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6VzB4cGJtdEJkSFJ5UzJWNUxsZEpSRlJJWFM1aGNuSmhlVnQwYUdsekxtTnZkVzUwSUNzZ2FWMGdQVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hwYm1zdWMzUnliMnRsVjJsa2RHZ29LU0FxSUhSb2FYTXVjR2w0Wld4U1lYUnBiMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCamIyeHZjaUE5SUd4cGJtc3VjM1J5YjJ0bFEyOXNiM0lvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aGRIUnlhV0oxZEdWelcweHBibXRCZEhSeVMyVjVMa05QVEU5U1hTNWhjbkpoZVZzMElDb2dLSFJvYVhNdVkyOTFiblFnS3lCcEtWMGdQU0JqYjJ4dmNpNXlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUYwZEhKcFluVjBaWE5iVEdsdWEwRjBkSEpMWlhrdVEwOU1UMUpkTG1GeWNtRjVXelFnS2lBb2RHaHBjeTVqYjNWdWRDQXJJR2twSUNzZ01WMGdQU0JqYjJ4dmNpNW5YRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUYwZEhKcFluVjBaWE5iVEdsdWEwRjBkSEpMWlhrdVEwOU1UMUpkTG1GeWNtRjVXelFnS2lBb2RHaHBjeTVqYjNWdWRDQXJJR2twSUNzZ01sMGdQU0JqYjJ4dmNpNWlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUYwZEhKcFluVjBaWE5iVEdsdWEwRjBkSEpMWlhrdVEwOU1UMUpkTG1GeWNtRjVXelFnS2lBb2RHaHBjeTVqYjNWdWRDQXJJR2twSUNzZ00xMGdQU0JqYjJ4dmNpNWhYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhKbGJtUmxja2xrUTI5c2IzSWdQU0JsYm1OdlpHVlNaVzVrWlhKSlpDZ3lJQ29nS0hSb2FYTXVZMjkxYm5RZ0t5QnBLU0FySURFcElDOHZJRTVQVkVVNklHeHBibXNnY21WdVpHVnlJR2xrTENCMWMyVWdiMlJrSUdsdWRHVm5aWEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YVdSQmRIUnlhV0oxZEdWelcweHBibXRKWkVGMGRISkxaWGt1U1VSZExtRnljbUY1V3pRZ0tpQW9kR2hwY3k1amIzVnVkQ0FySUdrcFhTQTlJSEpsYm1SbGNrbGtRMjlzYjNJdWNseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBaRUYwZEhKcFluVjBaWE5iVEdsdWEwbGtRWFIwY2t0bGVTNUpSRjB1WVhKeVlYbGJOQ0FxSUNoMGFHbHpMbU52ZFc1MElDc2dhU2tnS3lBeFhTQTlJSEpsYm1SbGNrbGtRMjlzYjNJdVoxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBaRUYwZEhKcFluVjBaWE5iVEdsdWEwbGtRWFIwY2t0bGVTNUpSRjB1WVhKeVlYbGJOQ0FxSUNoMGFHbHpMbU52ZFc1MElDc2dhU2tnS3lBeVhTQTlJSEpsYm1SbGNrbGtRMjlzYjNJdVlseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBaRUYwZEhKcFluVjBaWE5iVEdsdWEwbGtRWFIwY2t0bGVTNUpSRjB1WVhKeVlYbGJOQ0FxSUNoMGFHbHpMbU52ZFc1MElDc2dhU2tnS3lBelhTQTlJSEpsYm1SbGNrbGtRMjlzYjNJdVlWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J6YjNWeVkyVlVZWEpuWlhRZ1BTQnNhVzVyTG5OdmRYSmpaVlJoY21kbGRDZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkpsYm1SbGNrbGtWRzlKWkhOYk1pQXFJQ2gwYUdsekxtTnZkVzUwSUNzZ2FTa2dLeUF4WFNBOUlGdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpiM1Z5WTJWVVlYSm5aWFF1YzI5MWNtTmxMbWxrS0Nrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyOTFjbU5sVkdGeVoyVjBMblJoY21kbGRDNXBaQ2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQmRYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWxrYzFSdlNXNWtaWGd1YzJWMEtGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGdHpiM1Z5WTJWVVlYSm5aWFF1YzI5MWNtTmxMbWxrS0Nrc0lITnZkWEpqWlZSaGNtZGxkQzUwWVhKblpYUXVhV1FvS1Ywc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqYjNWdWRDQXJJR2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDbGNiaUFnSUNBZ0lDQWdmU2xjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMbUYwZEhKcFluVjBaWE11Wm05eVJXRmphQ2dvWVhSMGNpa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGaGRIUnlMbWx6UW5WcGJHUkpiaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaMnd1WW1sdVpFSjFabVpsY2loMGFHbHpMbWRzTGtGU1VrRlpYMEpWUmtaRlVpd2dZWFIwY2k1aWRXWm1aWElwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW5iQzVpZFdabVpYSlRkV0pFWVhSaEtGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHNMa0ZTVWtGWlgwSlZSa1pGVWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZWFIwY2k1emFYcGxJQ29nZEdocGN5NWpiM1Z1ZENBcUlHRjBkSEl1WVhKeVlYa3VRbGxVUlZOZlVFVlNYMFZNUlUxRlRsUXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGMGRISXVZWEp5WVhrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0YwZEhJdWMybDZaU0FxSUhSb2FYTXVZMjkxYm5Rc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0YwZEhJdWMybDZaU0FxSUd4cGJtdHpMbXhsYm1kMGFGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0F2THlCcFpDQmlkV1ptWlhJZ1pHRjBZVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQmhkSFJ5SUQwZ2RHaHBjeTVwWkVGMGRISnBZblYwWlhOYlRHbHVhMGxrUVhSMGNrdGxlUzVKUkYxY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1aWFXNWtRblZtWm1WeUtIUm9hWE11WjJ3dVFWSlNRVmxmUWxWR1JrVlNMQ0JoZEhSeUxtSjFabVpsY2lsY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1aWRXWm1aWEpUZFdKRVlYUmhLRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1QlVsSkJXVjlDVlVaR1JWSXNYRzRnSUNBZ0lDQWdJQ0FnSUNCaGRIUnlMbk5wZW1VZ0tpQjBhR2x6TG1OdmRXNTBJQ29nWVhSMGNpNWhjbkpoZVM1Q1dWUkZVMTlRUlZKZlJVeEZUVVZPVkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR0YwZEhJdVlYSnlZWGtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmhkSFJ5TG5OcGVtVWdLaUIwYUdsekxtTnZkVzUwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdZWFIwY2k1emFYcGxJQ29nYkdsdWEzTXViR1Z1WjNSb1hHNGdJQ0FnSUNBZ0lDbGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZkVzUwSUNzOUlHeHBibXR6TG14bGJtZDBhRnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJSE5sZENCVWNtRnVjMlp2Y20wZ2FXNGdVbVZ1WkdWeUlFeHBibXRjYmlBZ0lDQWdLaUJBY0dGeVlXMGdkSEpoYm5ObWIzSnRJR04xY25KbGJuUWdkSEpoYm5ObWIzSnRLSEJoYmlaNmIyOXRJR052Ym1ScGRHbHZiaWxjYmlBZ0lDQWdLaTljYmlBZ0lDQndkV0pzYVdNZ2MyVjBWSEpoYm5ObWIzSnRLSFJ5WVc1elptOXliVG9nVkhKaGJuTm1iM0p0S1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dWRYTmxVSEp2WjNKaGJTaDBhR2x6TG5CeWIyZHlZVzBwWEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSE5qWVd4bFRHOWpJRDBnZEdocGN5NW5iQzVuWlhSVmJtbG1iM0p0VEc5allYUnBiMjRvZEdocGN5NXdjbTluY21GdExDQW5jMk5oYkdVbktWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCMGNtRnVjMnhoZEdWTWIyTWdQU0IwYUdsekxtZHNMbWRsZEZWdWFXWnZjbTFNYjJOaGRHbHZiaWgwYUdsekxuQnliMmR5WVcwc0lDZDBjbUZ1YzJ4aGRHVW5LVnh1WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSE5qWVd4bElEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaGJkSEpoYm5ObWIzSnRMbXNzSUhSeVlXNXpabTl5YlM1clhTbGNiaUFnSUNBZ0lDQWdkR2hwY3k1bmJDNTFibWxtYjNKdE1tWjJLSE5qWVd4bFRHOWpMQ0J6WTJGc1pTbGNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQjBjbUZ1YzJ4aGRHVWdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLRnQwY21GdWMyWnZjbTB1ZUN3Z2RISmhibk5tYjNKdExubGRLVnh1SUNBZ0lDQWdJQ0IwYUdsekxtZHNMblZ1YVdadmNtMHlabllvZEhKaGJuTnNZWFJsVEc5akxDQjBjbUZ1YzJ4aGRHVXBYRzVjYmlBZ0lDQWdJQ0FnTHk4Z2FXUWdkVzVwWm05eWJYTXNJR2xrWlc1MGFXTmhiQ0IwYnlCc2FXNXJYRzRnSUNBZ0lDQWdJQzh2SUZSUFJFODZJRzVsWldRZ2NtVm1ZV04wYjNJZ2RHOXZYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VkWE5sVUhKdlozSmhiU2gwYUdsekxtbGtVSEp2WjNKaGJTbGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2FXUlRZMkZzWlV4dll5QTlJSFJvYVhNdVoyd3VaMlYwVlc1cFptOXliVXh2WTJGMGFXOXVLSFJvYVhNdWFXUlFjbTluY21GdExDQW5jMk5oYkdVbktWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCcFpGUnlZVzV6YkdGMFpVeHZZeUE5SUhSb2FYTXVaMnd1WjJWMFZXNXBabTl5YlV4dlkyRjBhVzl1S0hSb2FYTXVhV1JRY205bmNtRnRMQ0FuZEhKaGJuTnNZWFJsSnlsY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xuVnVhV1p2Y20weVpuWW9hV1JUWTJGc1pVeHZZeXdnYzJOaGJHVXBYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VkVzVwWm05eWJUSm1kaWhwWkZSeVlXNXpiR0YwWlV4dll5d2dkSEpoYm5Oc1lYUmxLVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJSEpsYm1SbGNpQnBaQ0IwYnlCc2FXNXJJR2xrY3loemIzVnlZMlVnWVc1a0lIUmhjbWRsZENsY2JpQWdJQ0FnS2lCQWNHRnlZVzBnY21WdVpHVnlTV1JjYmlBZ0lDQWdLaTljYmlBZ0lDQndkV0pzYVdNZ1oyVjBTV1J6UW5sU1pXNWtaWEpKWkNoeVpXNWtaWEpKWkRvZ2JuVnRZbVZ5S1RvZ1czTjBjbWx1Wnl3Z2MzUnlhVzVuWFNCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpsYm1SbGNrbGtWRzlKWkhOYmNtVnVaR1Z5U1dSZFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1pISmhkeUJzYVc1cmMxeHVJQ0FnSUNBcUwxeHVJQ0FnSUhCMVlteHBZeUJrY21GM0tDa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVqYjNWdWRDQStJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVoyd3VaVzVoWW14bEtIUm9hWE11WjJ3dVFreEZUa1FwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xtSnNaVzVrUm5WdVl5aDBhR2x6TG1kc0xrOU9SU3dnZEdocGN5NW5iQzVQVGtWZlRVbE9WVk5mVTFKRFgwRk1VRWhCS1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHNMblZ6WlZCeWIyZHlZVzBvZEdocGN5NXdjbTluY21GdEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhkSFJ5YVdKMWRHVnpMbVp2Y2tWaFkyZ29LR0YwZEhJcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHNMbVZ1WVdKc1pWWmxjblJsZUVGMGRISnBZa0Z5Y21GNUtHRjBkSEl1YVc1a1pYZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUYwZEhKcFluVjBaWE11Wm05eVJXRmphQ2dvWVhSMGNpd2dhU2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WjJ3dVltbHVaRUoxWm1abGNpaDBhR2x6TG1kc0xrRlNVa0ZaWDBKVlJrWkZVaXdnWVhSMGNpNWlkV1ptWlhJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1MlpYSjBaWGhCZEhSeWFXSlFiMmx1ZEdWeUtGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeUxtbHVaR1Y0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhkSFJ5TG5OcGVtVXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaMnd1Umt4UFFWUXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGRIUnlMbWx6UW5WcGJHUkpiaUEvSURBZ09pQmhkSFJ5TG5OcGVtVWdLaUJoZEhSeUxtRnljbUY1TGtKWlZFVlRYMUJGVWw5RlRFVk5SVTVVTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFlYUjBjaTVwYzBKMWFXeGtTVzRwSUhSb2FYTXVaMnd1ZG1WeWRHVjRRWFIwY21saVJHbDJhWE52Y2loaGRIUnlMbWx1WkdWNExDQXhLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaMnd1WkhKaGQwRnljbUY1YzBsdWMzUmhibU5sWkNoMGFHbHpMbWRzTGxSU1NVRk9SMHhGWDFOVVVrbFFMQ0F3TENBMExDQjBhR2x6TG1OdmRXNTBLVnh1WEc0Z0lDQWdJQ0FnSUM4dklHUnlZWGNnYVdSY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1aWJHVnVaRVoxYm1Nb2RHaHBjeTVuYkM1UFRrVXNJSFJvYVhNdVoyd3VXa1ZTVHlsY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1MWMyVlFjbTluY21GdEtIUm9hWE11YVdSUWNtOW5jbUZ0S1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG1KcGJtUkdjbUZ0WldKMVptWmxjaWgwYUdsekxtZHNMa1pTUVUxRlFsVkdSa1ZTTENCMGFHbHpMbWxrVkdWNGRIVnlaU2xjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMbWxrUVhSMGNtbGlkWFJsY3k1bWIzSkZZV05vS0NoaGRIUnlLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHNMbVZ1WVdKc1pWWmxjblJsZUVGMGRISnBZa0Z5Y21GNUtHRjBkSEl1YVc1a1pYZ3BYRzRnSUNBZ0lDQWdJSDBwWEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWVhSMGNpQTlJSFJvYVhNdWFXUkJkSFJ5YVdKMWRHVnpXMHhwYm10SlpFRjBkSEpMWlhrdVNVUmRYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VZbWx1WkVKMVptWmxjaWgwYUdsekxtZHNMa0ZTVWtGWlgwSlZSa1pGVWl3Z1lYUjBjaTVpZFdabVpYSXBYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VkbVZ5ZEdWNFFYUjBjbWxpVUc5cGJuUmxjaWhjYmlBZ0lDQWdJQ0FnSUNBZ0lHRjBkSEl1YVc1a1pYZ3NYRzRnSUNBZ0lDQWdJQ0FnSUNCaGRIUnlMbk5wZW1Vc1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHNMa1pNVDBGVUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnWm1Gc2MyVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCaGRIUnlMbk5wZW1VZ0tpQmhkSFJ5TG1GeWNtRjVMa0paVkVWVFgxQkZVbDlGVEVWTlJVNVVMRnh1SUNBZ0lDQWdJQ0FnSUNBZ01GeHVJQ0FnSUNBZ0lDQXBYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VkbVZ5ZEdWNFFYUjBjbWxpUkdsMmFYTnZjaWhoZEhSeUxtbHVaR1Y0TENBeEtWeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VaSEpoZDBGeWNtRjVjMGx1YzNSaGJtTmxaQ2gwYUdsekxtZHNMbFJTU1VGT1IweEZYMU5VVWtsUUxDQXdMQ0EwTENCMGFHbHpMbU52ZFc1MEtWeHVJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xtSnBibVJHY21GdFpXSjFabVpsY2loMGFHbHpMbWRzTGtaU1FVMUZRbFZHUmtWU0xDQnVkV3hzS1Z4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dVpXNWhZbXhsS0hSb2FYTXVaMnd1UWt4RlRrUXBYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VZbXhsYm1SR2RXNWpLSFJvYVhNdVoyd3VUMDVGTENCMGFHbHpMbWRzTGs5T1JWOU5TVTVWVTE5VFVrTmZRVXhRU0VFcFhHNGdJQ0FnZlZ4dWZWeHVJaXdpWlhod2IzSjBJR1JsWm1GMWJIUWdYQ0lqZG1WeWMybHZiaUF6TURBZ1pYTmNYRzV3Y21WamFYTnBiMjRnYUdsbmFIQWdabXh2WVhRN1hGeHVhVzRnZG1Wak15QnBibFpsY25SbGVGQnZjenRjWEc1cGJpQjJaV015SUdsdVUyOTFjbU5sVUc5emFYUnBiMjQ3WEZ4dWFXNGdkbVZqTWlCcGJsUmhjbWRsZEZCdmMybDBhVzl1TzF4Y2JtbHVJR1pzYjJGMElHbHVVM1J5YjJ0bFYybGtkR2c3WEZ4dWFXNGdkbVZqTkNCcGJsTjBjbTlyWlVOdmJHOXlPMXhjYmx4Y2JtOTFkQ0IyWldNMElHTnZiRzl5TzF4Y2JseGNiblZ1YVdadmNtMGdiV0YwTXlCd2NtOXFaV04wYVc5dU8xeGNiblZ1YVdadmNtMGdkbVZqTWlCelkyRnNaVHRjWEc1MWJtbG1iM0p0SUhabFl6SWdkSEpoYm5Oc1lYUmxPMXhjYmx4Y2JuWnZhV1FnYldGcGJpaDJiMmxrS1NCN1hGeHVJQ0FnSUdOdmJHOXlJRDBnYVc1VGRISnZhMlZEYjJ4dmNqdGNYRzVjWEc0Z0lDQWdkbVZqTWlCemIzVnlZMlVnUFNCcGJsTnZkWEpqWlZCdmMybDBhVzl1SUNvZ2MyTmhiR1VnS3lCMGNtRnVjMnhoZEdVN1hGeHVJQ0FnSUhabFl6SWdkR0Z5WjJWMElEMGdhVzVVWVhKblpYUlFiM05wZEdsdmJpQXFJSE5qWVd4bElDc2dkSEpoYm5Oc1lYUmxPMXhjYmlBZ0lDQjJaV015SUdSbGJIUmhJRDBnYzI5MWNtTmxJQzBnZEdGeVoyVjBPMXhjYmlBZ0lDQjJaV015SUdObGJuUmxjaUE5SURBdU5TQXFJQ2h6YjNWeVkyVWdLeUIwWVhKblpYUXBPMXhjYmlBZ0lDQm1iRzloZENCc1pXNGdQU0JzWlc1bmRHZ29aR1ZzZEdFcE8xeGNiaUFnSUNCbWJHOWhkQ0J3YUdrZ1BTQmhkR0Z1S0dSbGJIUmhMbmtnTHlCa1pXeDBZUzU0S1R0Y1hHNWNYRzRnSUNBZ2JXRjBNeUJzYVc1bFgzTmpZV3hsSUQwZ2JXRjBNeWhjWEc0Z0lDQWdJQ0FnSUd4bGJpd2dNQ3dnTUN4Y1hHNGdJQ0FnSUNBZ0lEQXNJR2x1VTNSeWIydGxWMmxrZEdnc0lEQXNYRnh1SUNBZ0lDQWdJQ0F3TENBd0xDQXhYRnh1SUNBZ0lDazdYRnh1SUNBZ0lHMWhkRE1nYkdsdVpWOXliM1JoZEdVZ1BTQnRZWFF6S0Z4Y2JpQWdJQ0FnSUNBZ1kyOXpLSEJvYVNrc0lITnBiaWh3YUdrcExDQXdMRnhjYmlBZ0lDQWdJQ0FnTFhOcGJpaHdhR2twTENCamIzTW9jR2hwS1N3Z01DeGNYRzRnSUNBZ0lDQWdJREFzSURBc0lERmNYRzRnSUNBZ0tUdGNYRzRnSUNBZ2JXRjBNeUJzYVc1bFgzUnlZVzV6YkdGMFpTQTlJRzFoZERNb1hGeHVJQ0FnSUNBZ0lDQXhMQ0F3TENBd0xGeGNiaUFnSUNBZ0lDQWdNQ3dnTVN3Z01DeGNYRzRnSUNBZ0lDQWdJR05sYm5SbGNpNTRMQ0JqWlc1MFpYSXVlU3dnTVZ4Y2JpQWdJQ0FwTzF4Y2JpQWdJQ0JjWEc0Z0lDQWdiV0YwTXlCMGNtRnVjMlp2Y20wZ1BTQnNhVzVsWDNSeVlXNXpiR0YwWlNBcUlHeHBibVZmY205MFlYUmxJQ29nYkdsdVpWOXpZMkZzWlR0Y1hHNWNYRzRnSUNBZ1oyeGZVRzl6YVhScGIyNGdQU0IyWldNMEtIQnliMnBsWTNScGIyNGdLaUIwY21GdWMyWnZjbTBnS2lCcGJsWmxjblJsZUZCdmN5d2dNUzRwTzF4Y2JuMWNJanNpTENKbGVIQnZjblFnWkdWbVlYVnNkQ0JjSWlOMlpYSnphVzl1SURNd01DQmxjMXhjYm5CeVpXTnBjMmx2YmlCb2FXZG9jQ0JtYkc5aGREdGNYRzVwYmlCMlpXTXlJSEJ2Y3p0Y1hHNXBiaUJtYkc5aGRDQnlZV1JwZFhNN1hGeHVhVzRnZG1Wak5DQmpiMnh2Y2p0Y1hHNXBiaUJtYkc5aGRDQnpkSEp2YTJWWGFXUjBhRHRjWEc1cGJpQjJaV00wSUhOMGNtOXJaVU52Ykc5eU8xeGNibHhjYm05MWRDQjJaV00wSUdaeVlXZHRaVzUwUTI5c2IzSTdYRnh1WEZ4dWRXNXBabTl5YlNCMlpXTXlJSFpwWlhkd2IzSjBPMXhjYm5WdWFXWnZjbTBnWm14dllYUWdjR2w0Wld4U1lYUnBienRjWEc1Y1hHNW1iRzloZENCcGJrTnBjbU5zWlNncElIdGNYRzRnSUhabFl6SWdabXhwY0Y5d2IzTWdQU0J3YjNNN1hGeHVJQ0JtYkdsd1gzQnZjeTU1SUQwZ2RtbGxkM0J2Y25RdWVTQXRJSEJ2Y3k1NU8xeGNiaUFnWm14dllYUWdjaUE5SUdScGMzUmhibU5sS0dkc1gwWnlZV2REYjI5eVpDNTRlU0F2SUhCcGVHVnNVbUYwYVc4c0lHWnNhWEJmY0c5ektUdGNYRzRnSUdac2IyRjBJR1J5WVhjZ1BTQXhMaUF0SUhOMFpYQW9jbUZrYVhWeklDMGdjM1J5YjJ0bFYybGtkR2dnTHlBeUxpd2djaWs3WEZ4dUlDQnlaWFIxY200Z1pISmhkenRjWEc1OVhGeHVYRnh1Wm14dllYUWdhVzVDYjNKa1pYSW9LU0I3WEZ4dUlDQnBaaUFvYzNSeWIydGxWMmxrZEdnZ1BUMGdNQzRwSUh0Y1hHNGdJQ0FnY21WMGRYSnVJREF1TzF4Y2JpQWdmVnhjYmlBZ2RtVmpNaUJtYkdsd1gzQnZjeUE5SUhCdmN6dGNYRzRnSUdac2FYQmZjRzl6TG5rZ1BTQjJhV1YzY0c5eWRDNTVJQzBnY0c5ekxuazdYRnh1SUNCbWJHOWhkQ0J5SUQwZ1pHbHpkR0Z1WTJVb1oyeGZSbkpoWjBOdmIzSmtMbmg1SUM4Z2NHbDRaV3hTWVhScGJ5d2dabXhwY0Y5d2IzTXBPMXhjYmlBZ1pteHZZWFFnWkhKaGQwOTFkR1Z5SUQwZ01TNGdMU0J6Ylc5dmRHaHpkR1Z3S0NoeVlXUnBkWE1nS3lCemRISnZhMlZYYVdSMGFDQXZJREl1S1NBcUlEQXVPVFVzSUNoeVlXUnBkWE1nS3lCemRISnZhMlZYYVdSMGFDQXZJREl1S1NBcUlERXVNRFVzSUhJcE8xeGNiaUFnWm14dllYUWdaSEpoZDBsdWJtVnlJRDBnTVM0Z0xTQnpkR1Z3S0hKaFpHbDFjeUF0SUhOMGNtOXJaVmRwWkhSb0lDOGdNaTRzSUhJcE8xeGNiaUFnY21WMGRYSnVJR1J5WVhkUGRYUmxjaUFxSUNneExpQXRJR1J5WVhkSmJtNWxjaWs3WEZ4dUlDQXZMeUJ5WlhSMWNtNGdaSEpoZDA5MWRHVnlPMXhjYm4xY1hHNWNYRzUyYjJsa0lHMWhhVzRvZG05cFpDa2dlMXhjYmlBZ0lDQXZMeUJpYjNKa1pYSWdZMmhsWTJzc0lIVnphVzVuSURBdU5TaGpaVzUwWlhJZ2IyWWdjMjF2YjNSb2MzUmxjQ2xjWEc0Z0lDQWdhV1lnS0dsdVEybHlZMnhsS0NrZ1BDQXhMaUFtSmlBb2MzUnliMnRsVjJsa2RHZ2dQQ0F3TGpnZ2ZId2dhVzVDYjNKa1pYSW9LU0E4SURBdU5Ta3BJSHRjWEc0Z0lDQWdJQ0FnSUdScGMyTmhjbVE3WEZ4dUlDQWdJSDFjWEc0Z0lDQWdabkpoWjIxbGJuUkRiMnh2Y2lBOUlHbHVRbTl5WkdWeUtDa2dLaUIyWldNMEtITjBjbTlyWlVOdmJHOXlMbkpuWWlBcUlITjBjbTlyWlVOdmJHOXlMbUVzSUhOMGNtOXJaVU52Ykc5eUxtRXBJQ3NnYVc1RGFYSmpiR1VvS1NBcUlIWmxZelFvWTI5c2IzSXVjbWRpSUNvZ1kyOXNiM0l1WVN3Z1kyOXNiM0l1WVNrN1hGeHVmVndpT3lJc0ltVjRjRzl5ZENCa1pXWmhkV3gwSUZ3aUkzWmxjbk5wYjI0Z016QXdJR1Z6WEZ4dWNISmxZMmx6YVc5dUlHaHBaMmh3SUdac2IyRjBPMXhjYm1sdUlIWmxZeklnY0c5ek8xeGNibWx1SUdac2IyRjBJSEpoWkdsMWN6dGNYRzVwYmlCMlpXTTBJR052Ykc5eU8xeGNibWx1SUdac2IyRjBJSE4wY205clpWZHBaSFJvTzF4Y2JtbHVJSFpsWXpRZ2MzUnliMnRsUTI5c2IzSTdYRnh1WEZ4dWFXNGdkbVZqTkNCcFpEdGNYRzVjWEc1dmRYUWdkbVZqTkNCbWNtRm5iV1Z1ZEVOdmJHOXlPMXhjYmx4Y2JuVnVhV1p2Y20wZ2RtVmpNaUIyYVdWM2NHOXlkRHRjWEc1MWJtbG1iM0p0SUdac2IyRjBJSEJwZUdWc1VtRjBhVzg3WEZ4dVhGeHVabXh2WVhRZ2FXNURhWEpqYkdVb0tTQjdYRnh1SUNCMlpXTXlJR1pzYVhCZmNHOXpJRDBnY0c5ek8xeGNiaUFnWm14cGNGOXdiM011ZVNBOUlIWnBaWGR3YjNKMExua2dMU0J3YjNNdWVUdGNYRzRnSUdac2IyRjBJSElnUFNCa2FYTjBZVzVqWlNobmJGOUdjbUZuUTI5dmNtUXVlSGtnTHlCd2FYaGxiRkpoZEdsdkxDQm1iR2x3WDNCdmN5azdYRnh1SUNCbWJHOWhkQ0JrY21GM0lEMGdNUzRnTFNCemRHVndLSEpoWkdsMWN5QXRJSE4wY205clpWZHBaSFJvSUM4Z01pNHNJSElwTzF4Y2JpQWdjbVYwZFhKdUlHUnlZWGM3WEZ4dWZWeGNibHhjYm1ac2IyRjBJR2x1UW05eVpHVnlLQ2tnZTF4Y2JpQWdhV1lnS0hOMGNtOXJaVmRwWkhSb0lEMDlJREF1S1NCN1hGeHVJQ0FnSUhKbGRIVnliaUF3TGp0Y1hHNGdJSDFjWEc0Z0lIWmxZeklnWm14cGNGOXdiM01nUFNCd2IzTTdYRnh1SUNCbWJHbHdYM0J2Y3k1NUlEMGdkbWxsZDNCdmNuUXVlU0F0SUhCdmN5NTVPMXhjYmlBZ1pteHZZWFFnY2lBOUlHUnBjM1JoYm1ObEtHZHNYMFp5WVdkRGIyOXlaQzU0ZVNBdklIQnBlR1ZzVW1GMGFXOHNJR1pzYVhCZmNHOXpLVHRjWEc0Z0lHWnNiMkYwSUdSeVlYZFBkWFJsY2lBOUlERXVJQzBnYzIxdmIzUm9jM1JsY0Nnb2NtRmthWFZ6SUNzZ2MzUnliMnRsVjJsa2RHZ2dMeUF5TGlrZ0tpQXdMamsxTENBb2NtRmthWFZ6SUNzZ2MzUnliMnRsVjJsa2RHZ2dMeUF5TGlrZ0tpQXhMakExTENCeUtUdGNYRzRnSUdac2IyRjBJR1J5WVhkSmJtNWxjaUE5SURFdUlDMGdjM1JsY0NoeVlXUnBkWE1nTFNCemRISnZhMlZYYVdSMGFDQXZJREl1TENCeUtUdGNYRzRnSUhKbGRIVnliaUJrY21GM1QzVjBaWElnS2lBb01TNGdMU0JrY21GM1NXNXVaWElwTzF4Y2JpQWdMeThnY21WMGRYSnVJR1J5WVhkUGRYUmxjanRjWEc1OVhGeHVYRnh1ZG05cFpDQnRZV2x1S0hadmFXUXBJSHRjWEc0Z0lDQWdMeThnWW05eVpHVnlJR05vWldOckxDQjFjMmx1WnlBd0xqVW9ZMlZ1ZEdWeUlHOW1JSE50YjI5MGFITjBaWEFwWEZ4dUlDQWdJR2xtSUNocGJrTnBjbU5zWlNncElEd2dNUzRnSmlZZ0tITjBjbTlyWlZkcFpIUm9JRHdnTUM0NElIeDhJR2x1UW05eVpHVnlLQ2tnUENBd0xqVXBLU0I3WEZ4dUlDQWdJQ0FnSUNCa2FYTmpZWEprTzF4Y2JpQWdJQ0I5WEZ4dUlDQWdJR1p5WVdkdFpXNTBRMjlzYjNJZ1BTQnBaRHRjWEc1OVhDSTdJaXdpWlhod2IzSjBJR1JsWm1GMWJIUWdYQ0lqZG1WeWMybHZiaUF6TURBZ1pYTmNYRzV3Y21WamFYTnBiMjRnYUdsbmFIQWdabXh2WVhRN1hGeHVhVzRnZG1Wak15QnBibFpsY25SbGVGQnZjenRjWEc1cGJpQjJaV015SUdsdVVHOXphWFJwYjI0N1hGeHVhVzRnWm14dllYUWdhVzVTWVdScGRYTTdYRnh1YVc0Z2RtVmpOQ0JwYmtacGJHdzdYRnh1YVc0Z1pteHZZWFFnYVc1VGRISnZhMlZYYVdSMGFEdGNYRzVwYmlCMlpXTTBJR2x1VTNSeWIydGxRMjlzYjNJN1hGeHVYRnh1YVc0Z2RtVmpOQ0JwYmtsa08xeGNibHhjYm05MWRDQjJaV015SUhCdmN6dGNYRzV2ZFhRZ1pteHZZWFFnY21Ga2FYVnpPMXhjYm05MWRDQjJaV00wSUdOdmJHOXlPMXhjYm05MWRDQm1iRzloZENCemRISnZhMlZYYVdSMGFEdGNYRzV2ZFhRZ2RtVmpOQ0J6ZEhKdmEyVkRiMnh2Y2p0Y1hHNWNYRzV2ZFhRZ2RtVmpOQ0JwWkR0Y1hHNWNYRzUxYm1sbWIzSnRJRzFoZERNZ2NISnZhbVZqZEdsdmJqdGNYRzUxYm1sbWIzSnRJSFpsWXpJZ2MyTmhiR1U3WEZ4dWRXNXBabTl5YlNCMlpXTXlJSFJ5WVc1emJHRjBaVHRjWEc1MWJtbG1iM0p0SUhabFl6SWdkbWxsZDNCdmNuUTdYRnh1WEZ4dWRtOXBaQ0J0WVdsdUtIWnZhV1FwSUh0Y1hHNGdJQ0FnYVdRZ1BTQnBia2xrTzF4Y2JseGNiaUFnSUNCbWJHOWhkQ0J6YVhwbElEMGdhVzVTWVdScGRYTWdLeUJwYmxOMGNtOXJaVmRwWkhSb0lDOGdNaTQ3WEZ4dUlDQWdJSEpoWkdsMWN5QTlJR2x1VW1Ga2FYVnpPMXhjYmlBZ0lDQmpiMnh2Y2lBOUlHbHVSbWxzYkR0Y1hHNGdJQ0FnYzNSeWIydGxWMmxrZEdnZ1BTQnBibE4wY205clpWZHBaSFJvTzF4Y2JpQWdJQ0J6ZEhKdmEyVkRiMnh2Y2lBOUlHbHVVM1J5YjJ0bFEyOXNiM0k3WEZ4dUlDQWdJR1pzYjJGMElIWmxjblJsZUZOcGVtVWdQU0J6YVhwbElDb2dLREl1SUNvZ2MzRnlkQ2d5TGlrcElDb2dNUzQxT3lBdkx5Qk9UMVJGT2lCNElERXVOU0IwYnlCd2NtVjJaVzUwSUdKdmNtUmxjaUJtWVdOMGIzSmNYRzRnSUNBZ2NHOXpJRDBnYzJOaGJHVWdLaUJwYmxCdmMybDBhVzl1SUNzZ2RISmhibk5zWVhSbE8xeGNiaUFnSUNCdFlYUXpJSFJ5WVc1elptOXliU0E5SUcxaGRETW9YRnh1SUNBZ0lDQWdJQ0IyWlhKMFpYaFRhWHBsTENBd0xDQXdMRnhjYmlBZ0lDQWdJQ0FnTUN3Z2RtVnlkR1Y0VTJsNlpTd2dNQ3hjWEc0Z0lDQWdJQ0FnSUhCdmN5NTRMQ0J3YjNNdWVTd2dNVnhjYmlBZ0lDQXBPMXhjYmx4Y2JpQWdJQ0JuYkY5UWIzTnBkR2x2YmlBOUlIWmxZelFvY0hKdmFtVmpkR2x2YmlBcUlIUnlZVzV6Wm05eWJTQXFJR2x1Vm1WeWRHVjRVRzl6TENBeExpazdYRnh1ZlZ3aU95SXNJaThxS2x4dUlDb2dRR0YxZEdodmNpQllhV0Z2Wkc5dVp5QmFhR0Z2SUR4NmFHRnZlR2xoYjJSdmJtZEFlbXAxTG1Wa2RTNWpiajVjYmlBcUlFQmtaWE5qY21sd2RHbHZiaUJPYjJSbElIVnphVzVuSUdsdUlGSmxibVJsY21WeVhHNGdLaTljYmx4dWFXMXdiM0owSUhabGNuUlRhR0ZrWlhKVGRISWdabkp2YlNBbkxpOTJaWEowWlhndVoyeHpiQ2RjYm1sdGNHOXlkQ0JtY21GblUyaGhaR1Z5VTNSeUlHWnliMjBnSnk0dlpuSmhaMjFsYm5RdVoyeHpiQ2RjYm1sdGNHOXlkQ0JwWkZabGNuUlRhR0ZrWlhKVGRISWdabkp2YlNBbkxpOXBaQzEyWlhKMFpYZ3VaMnh6YkNkY2JtbHRjRzl5ZENCcFpFWnlZV2RUYUdGa1pYSlRkSElnWm5KdmJTQW5MaTlwWkMxbWNtRm5iV1Z1ZEM1bmJITnNKMXh1YVcxd2IzSjBJSHRjYmlBZ0lDQmpjbVZoZEdWUWNtOW5jbUZ0TEZ4dUlDQWdJR055WldGMFpVRnljbUY1UW5WbVptVnlMRnh1SUNBZ0lHVjRkSEpoWTNSQmRIUnlhV0oxZEdWelJuSnZiVk5vWVdSbGNpeGNiaUFnSUNCbGJtTnZaR1ZTWlc1a1pYSkpaRnh1ZlNCbWNtOXRJQ2N1TGk4dUxpOTFkR2xzY3lkY2JtbHRjRzl5ZENCN0lGUnlZVzV6Wm05eWJTQjlJR1p5YjIwZ0p5NHVMeTR1THk0dUwybHVkR1Z5Wm1GalpYTW5YRzVwYlhCdmNuUWdleUJTWlc1a1pYSkJkSFJ5YVdKMWRHVXNJRTV2WkdWQmRIUnlMQ0JPYjJSbFRXRnVZV2RsY2tOdmJtWnBaM01nZlNCbWNtOXRJQ2N1TGk4dUxpOXBiblJsY21aaFkyVnpKMXh1YVcxd2IzSjBJRTV2WkdVZ1puSnZiU0FuTGk0dkxpNHZMaTR2Ym05a1pTZGNibHh1Wlc1MWJTQk9iMlJsUVhSMGNrdGxlU0I3WEc0Z0lDQWdWRVZOVUV4QlZFVXNYRzRnSUNBZ1VFOVRTVlJKVDA0c1hHNGdJQ0FnVWtGRVNWVlRMRnh1SUNBZ0lFTlBURTlTTEZ4dUlDQWdJRk5VVWs5TFJWOVhTVVJVU0N4Y2JpQWdJQ0JUVkZKUFMwVmZRMDlNVDFKY2JuMWNibHh1Wlc1MWJTQk9iMlJsU1dSQmRIUnlTMlY1SUh0Y2JpQWdJQ0JVUlUxUVRFRlVSU3hjYmlBZ0lDQlFUMU5KVkVsUFRpeGNiaUFnSUNCU1FVUkpWVk1zWEc0Z0lDQWdRMDlNVDFJc1hHNGdJQ0FnVTFSU1QwdEZYMWRKUkZSSUxGeHVJQ0FnSUZOVVVrOUxSVjlEVDB4UFVpeGNiaUFnSUNCSlJGeHVmVnh1WEc1amIyNXpkQ0JPYjJSbFFYUjBjazFoY0NBOUlIdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1RtOWtaVUYwZEhKTFpYa3VVRTlUU1ZSSlQwNHNYRzRnSUNBZ2NtRmthWFZ6T2lCT2IyUmxRWFIwY2t0bGVTNVNRVVJKVlZNc1hHNGdJQ0FnWm1sc2JEb2dUbTlrWlVGMGRISkxaWGt1UTA5TVQxSXNYRzRnSUNBZ2MzUnliMnRsVjJsa2RHZzZJRTV2WkdWQmRIUnlTMlY1TGxOVVVrOUxSVjlYU1VSVVNDeGNiaUFnSUNCemRISnZhMlZEYjJ4dmNqb2dUbTlrWlVGMGRISkxaWGt1VTFSU1QwdEZYME5QVEU5U1hHNTlYRzVjYm1WNGNHOXlkQ0JqYkdGemN5QlNaVzVrWlhKT2IyUmxUV0Z1WVdkbGNpQjdYRzRnSUNBZ0x5OGdjSEp2WjNKaGJWeHVJQ0FnSUhCeWFYWmhkR1VnWjJ3NklGZGxZa2RNTWxKbGJtUmxjbWx1WjBOdmJuUmxlSFJjYmlBZ0lDQndjbWwyWVhSbElHeHBiV2wwT2lCdWRXMWlaWEpjYmlBZ0lDQndjbWwyWVhSbElHTnZkVzUwSUQwZ01GeHVJQ0FnSUhCeWFYWmhkR1VnZDJsa2RHZzZJRzUxYldKbGNseHVJQ0FnSUhCeWFYWmhkR1VnYUdWcFoyaDBPaUJ1ZFcxaVpYSmNiaUFnSUNCd2NtbDJZWFJsSUhCcGVHVnNVbUYwYVc4NklHNTFiV0psY2x4dUlDQWdJSEJ5YVhaaGRHVWdjSEp2WjNKaGJUb2dWMlZpUjB4UWNtOW5jbUZ0WEc0Z0lDQWdjSEpwZG1GMFpTQmhkSFJ5YVdKMWRHVnpPaUJTWlc1a1pYSkJkSFJ5YVdKMWRHVmNiaUFnSUNCd2NtbDJZWFJsSUdsa1VISnZaM0poYlRvZ1YyVmlSMHhRY205bmNtRnRYRzRnSUNBZ2NISnBkbUYwWlNCcFpFRjBkSEpwWW5WMFpYTTZJRkpsYm1SbGNrRjBkSEpwWW5WMFpWeHVJQ0FnSUhCeWFYWmhkR1VnYVdSVVpYaDBkWEpsT2lCWFpXSkhURlJsZUhSMWNtVmNiaUFnSUNCd2NtbDJZWFJsSUhKbGJtUmxja2xrVkc5SlpEb2dleUJiYTJWNU9pQnVkVzFpWlhKZE9pQnpkSEpwYm1jZ2ZWeHVYRzRnSUNBZ2NISnBkbUYwWlNCcFpGUnZTVzVrWlhnNklIc2dXMnRsZVRvZ2MzUnlhVzVuWFRvZ2JuVnRZbVZ5SUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlHTnlaV0YwWlNCeVpXNWtaWElnYm05a1pTQnRZVzVoWjJWeVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUdkc0lGZGxZa2RNSUdOdmJuUmxlSFJjYmlBZ0lDQWdLaUJBY0dGeVlXMGdjR0Z5WVcxeklHNWxjM05sYzJGeWVTQmpiMjVtYVdkeklHWnZjaUJ1YjJSbElHMWhibUZuWlhKY2JpQWdJQ0FnS2lCQWNHRnlZVzBnYVdSVVpYaDBkWEpsSUhSbGVIUjFjbVVnYzNSdmNtVWdaV3hsYldWdWRITWdhV1FnYjJZZ1pXRmphQ0J3YVhobGJGeHVJQ0FnSUNBcUwxeHVJQ0FnSUhCMVlteHBZeUJqYjI1emRISjFZM1J2Y2loY2JpQWdJQ0FnSUNBZ1oydzZJRmRsWWtkTU1sSmxibVJsY21sdVowTnZiblJsZUhRc1hHNGdJQ0FnSUNBZ0lIQmhjbUZ0Y3pvZ1RtOWtaVTFoYm1GblpYSkRiMjVtYVdkekxGeHVJQ0FnSUNBZ0lDQnBaRlJsZUhSMWNtVTZJRmRsWWtkTVZHVjRkSFZ5WlZ4dUlDQWdJQ2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0I3SUd4cGJXbDBMQ0IzYVdSMGFDd2dhR1ZwWjJoMElIMGdQU0J3WVhKaGJYTmNiaUFnSUNBZ0lDQWdkR2hwY3k1bmJDQTlJR2RzWEc0Z0lDQWdJQ0FnSUhSb2FYTXViR2x0YVhRZ1BTQnNhVzFwZEZ4dUlDQWdJQ0FnSUNCMGFHbHpMbmRwWkhSb0lEMGdkMmxrZEdoY2JpQWdJQ0FnSUNBZ2RHaHBjeTVvWldsbmFIUWdQU0JvWldsbmFIUmNiaUFnSUNBZ0lDQWdkR2hwY3k1d2FYaGxiRkpoZEdsdklEMGdkMmx1Wkc5M0xtUmxkbWxqWlZCcGVHVnNVbUYwYVc4Z2ZId2dNVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZWFIwY21saWRYUmxjeUE5SUdWNGRISmhZM1JCZEhSeWFXSjFkR1Z6Um5KdmJWTm9ZV1JsY2loMlpYSjBVMmhoWkdWeVUzUnlLVnh1SUNBZ0lDQWdJQ0IwYUdsekxuQnliMmR5WVcwZ1BTQmpjbVZoZEdWUWNtOW5jbUZ0S0hSb2FYTXVaMndzSUhabGNuUlRhR0ZrWlhKVGRISXNJR1p5WVdkVGFHRmtaWEpUZEhJc0lIUm9hWE11WVhSMGNtbGlkWFJsY3lsY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TG1sa1FYUjBjbWxpZFhSbGN5QTlJR1Y0ZEhKaFkzUkJkSFJ5YVdKMWRHVnpSbkp2YlZOb1lXUmxjaWhwWkZabGNuUlRhR0ZrWlhKVGRISXBYRzRnSUNBZ0lDQWdJSFJvYVhNdWFXUlFjbTluY21GdElEMGdZM0psWVhSbFVISnZaM0poYlNoMGFHbHpMbWRzTENCcFpGWmxjblJUYUdGa1pYSlRkSElzSUdsa1JuSmhaMU5vWVdSbGNsTjBjaXdnZEdocGN5NXBaRUYwZEhKcFluVjBaWE1wWEc0Z0lDQWdJQ0FnSUhSb2FYTXVhV1JVWlhoMGRYSmxJRDBnYVdSVVpYaDBkWEpsWEc0Z0lDQWdJQ0FnSUhSb2FYTXVjbVZ1WkdWeVNXUlViMGxrSUQwZ2UzMWNibHh1SUNBZ0lDQWdJQ0IwYUdsekxtbGtWRzlKYm1SbGVDQTlJSHQ5WEc1Y2JpQWdJQ0FnSUNBZ0x5OGdhVzVwZENCaGNuSmhlWE5jYmlBZ0lDQWdJQ0FnTHk4Z2NISmxkSFJwWlhJdGFXZHViM0psWEc0Z0lDQWdJQ0FnSUhSb2FYTXVZWFIwY21saWRYUmxjMXRPYjJSbFFYUjBja3RsZVM1VVJVMVFURUZVUlYwdVlYSnlZWGtnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0Z0Y2JpQWdJQ0FnSUNBZ0lDQWdJQzB3TGpVc0lEQXVNQ3dnTVM0d0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnTUM0d0xDQXRNQzQxTENBeExqQXNYRzRnSUNBZ0lDQWdJQ0FnSUNBd0xqQXNJREF1TlN3Z01TNHdMRnh1SUNBZ0lDQWdJQ0FnSUNBZ01DNDFMQ0F3TGpBc0lERXVNQ3hjYmlBZ0lDQWdJQ0FnWFNsY2JpQWdJQ0FnSUNBZ0x5OGdWRTlFVHpvZ1kyOXRZbWx1WlNCMGFHVWdabTlzYkc5M2FXNW5JSFIzYnlCc2IyOXdQMXh1SUNBZ0lDQWdJQ0IwYUdsekxtRjBkSEpwWW5WMFpYTXVabTl5UldGamFDZ29ZWFIwY2lrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZoZEhSeUxtbHpRblZwYkdSSmJpa2dZWFIwY2k1aGNuSmhlU0E5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvWVhSMGNpNXphWHBsSUNvZ2RHaHBjeTVzYVcxcGRDbGNiaUFnSUNBZ0lDQWdmU2xjYmx4dUlDQWdJQ0FnSUNBdkx5QnBibWwwSUdKMVptWmxjbk5jYmlBZ0lDQWdJQ0FnZEdocGN5NWhkSFJ5YVdKMWRHVnpMbVp2Y2tWaFkyZ29LR0YwZEhJcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHRjBkSEl1WW5WbVptVnlJRDBnWTNKbFlYUmxRWEp5WVhsQ2RXWm1aWElvZEdocGN5NW5iQ3dnWVhSMGNpNWhjbkpoZVNsY2JpQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0F2THlCcGJtbDBJR2xrSUdGMGRISnBZblYwWlhNZ1lXNWtJR0oxWm1abGNuTmNiaUFnSUNBZ0lDQWdMeThnVkU5RVR6b2dhR0Z5WkdOdlpHVWdZMmhsWTJzc0lHNWxaV1FnY21WbVlXTjBiM0pjYmlBZ0lDQWdJQ0FnZEdocGN5NXBaRUYwZEhKcFluVjBaWE11Wm05eVJXRmphQ2dvWVhSMGNpd2dhV1I0S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hV1I0SUR3Z2RHaHBjeTVoZEhSeWFXSjFkR1Z6TG14bGJtZDBhQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhV1JCZEhSeWFXSjFkR1Z6VzJsa2VGMGdQU0IwYUdsekxtRjBkSEpwWW5WMFpYTmJhV1I0WFZ4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdGMGRISXVhWE5DZFdsc1pFbHVLU0JoZEhSeUxtRnljbUY1SUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNoaGRIUnlMbk5wZW1VZ0tpQjBhR2x6TG14cGJXbDBLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0YwZEhJdVluVm1abVZ5SUQwZ1kzSmxZWFJsUVhKeVlYbENkV1ptWlhJb2RHaHBjeTVuYkN3Z1lYUjBjaTVoY25KaGVTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0F2THlCcGJtbDBJSFZ1YVdadmNtMXpYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VkWE5sVUhKdlozSmhiU2gwYUdsekxuQnliMmR5WVcwcFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUhCeWIycGxZM1JwYjI1TWIyTWdQU0IwYUdsekxtZHNMbWRsZEZWdWFXWnZjbTFNYjJOaGRHbHZiaWgwYUdsekxuQnliMmR5WVcwc0lDZHdjbTlxWldOMGFXOXVKeWxjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjMk5oYkdWTWIyTWdQU0IwYUdsekxtZHNMbWRsZEZWdWFXWnZjbTFNYjJOaGRHbHZiaWgwYUdsekxuQnliMmR5WVcwc0lDZHpZMkZzWlNjcFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUhSeVlXNXpiR0YwWlV4dll5QTlJSFJvYVhNdVoyd3VaMlYwVlc1cFptOXliVXh2WTJGMGFXOXVLSFJvYVhNdWNISnZaM0poYlN3Z0ozUnlZVzV6YkdGMFpTY3BYRzRnSUNBZ0lDQWdJR052Ym5OMElIWnBaWGR3YjNKMFRHOWpJRDBnZEdocGN5NW5iQzVuWlhSVmJtbG1iM0p0VEc5allYUnBiMjRvZEdocGN5NXdjbTluY21GdExDQW5kbWxsZDNCdmNuUW5LVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQndhWGhsYkZKaGRHbHZURzlqSUQwZ2RHaHBjeTVuYkM1blpYUlZibWxtYjNKdFRHOWpZWFJwYjI0b2RHaHBjeTV3Y205bmNtRnRMQ0FuY0dsNFpXeFNZWFJwYnljcFhHNWNiaUFnSUNBZ0lDQWdMeThnZEdocGN5NW5iQzUyYVdWM2NHOXlkQ2d3TENBd0xDQjBhR2x6TG5kcFpIUm9MQ0IwYUdsekxtaGxhV2RvZENrZ0x5OGdWRTlFVHpvZ2RtbGxkM0J2Y25RZ2MyVjBMQ0J1YjNRZ2JtVmxaR1ZrUHlCd2RYUWdhR1Z5WlNCcGJpQmpZWE5sSUdKMVp5QmhjSEJsWVhKY2JseHVJQ0FnSUNBZ0lDQXZMeUJ3Y21WMGRHbGxjaTFwWjI1dmNtVmNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2NISnZhbVZqZEdsdmJpQTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29XMXh1SUNBZ0lDQWdJQ0FnSUNBZ01pQXZJSFJvYVhNdWQybGtkR2dzSURBc0lEQXNYRzRnSUNBZ0lDQWdJQ0FnSUNBd0xDQXRNaUF2SUhSb2FYTXVhR1ZwWjJoMExDQXdMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0xURXNJREVzSURGY2JpQWdJQ0FnSUNBZ1hTbGNiaUFnSUNBZ0lDQWdkR2hwY3k1bmJDNTFibWxtYjNKdFRXRjBjbWw0TTJaMktIQnliMnBsWTNScGIyNU1iMk1zSUdaaGJITmxMQ0J3Y205cVpXTjBhVzl1S1Z4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUhOallXeGxJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2hiTVN3Z01WMHBYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VkVzVwWm05eWJUSm1kaWh6WTJGc1pVeHZZeXdnYzJOaGJHVXBYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdkSEpoYm5Oc1lYUmxJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2hiTUN3Z01GMHBYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VkVzVwWm05eWJUSm1kaWgwY21GdWMyeGhkR1ZNYjJNc0lIUnlZVzV6YkdGMFpTbGNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQjJhV1YzY0c5eWRDQTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29XM1JvYVhNdWQybGtkR2dzSUhSb2FYTXVhR1ZwWjJoMFhTbGNiaUFnSUNBZ0lDQWdkR2hwY3k1bmJDNTFibWxtYjNKdE1tWjJLSFpwWlhkd2IzSjBURzlqTENCMmFXVjNjRzl5ZENsY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xuVnVhV1p2Y20weFppaHdhWGhsYkZKaGRHbHZURzlqTENCMGFHbHpMbkJwZUdWc1VtRjBhVzhwWEc1Y2JpQWdJQ0FnSUNBZ0x5OGdhV1FnZFc1cFptOXliWE1zSUdsa1pXNTBhV05oYkNCMGJ5QnViMlJsWEc0Z0lDQWdJQ0FnSUM4dklGUlBSRTg2SUc1bFpXUWdjbVZtWVdOMGIzSWdkRzl2WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaMnd1ZFhObFVISnZaM0poYlNoMGFHbHpMbWxrVUhKdlozSmhiU2xjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhV1JRY205cVpXTjBhVzl1VEc5aklEMGdkR2hwY3k1bmJDNW5aWFJWYm1sbWIzSnRURzlqWVhScGIyNG9kR2hwY3k1cFpGQnliMmR5WVcwc0lDZHdjbTlxWldOMGFXOXVKeWxjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhV1JUWTJGc1pVeHZZeUE5SUhSb2FYTXVaMnd1WjJWMFZXNXBabTl5YlV4dlkyRjBhVzl1S0hSb2FYTXVhV1JRY205bmNtRnRMQ0FuYzJOaGJHVW5LVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQnBaRlJ5WVc1emJHRjBaVXh2WXlBOUlIUm9hWE11WjJ3dVoyVjBWVzVwWm05eWJVeHZZMkYwYVc5dUtIUm9hWE11YVdSUWNtOW5jbUZ0TENBbmRISmhibk5zWVhSbEp5bGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2FXUldhV1YzY0c5eWRFeHZZeUE5SUhSb2FYTXVaMnd1WjJWMFZXNXBabTl5YlV4dlkyRjBhVzl1S0hSb2FYTXVhV1JRY205bmNtRnRMQ0FuZG1sbGQzQnZjblFuS1Z4dUlDQWdJQ0FnSUNCamIyNXpkQ0JwWkZCcGVHVnNVbUYwYVc5TWIyTWdQU0IwYUdsekxtZHNMbWRsZEZWdWFXWnZjbTFNYjJOaGRHbHZiaWgwYUdsekxtbGtVSEp2WjNKaGJTd2dKM0JwZUdWc1VtRjBhVzhuS1Z4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dWRXNXBabTl5YlUxaGRISnBlRE5tZGlocFpGQnliMnBsWTNScGIyNU1iMk1zSUdaaGJITmxMQ0J3Y205cVpXTjBhVzl1S1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG5WdWFXWnZjbTB5Wm5Zb2FXUlRZMkZzWlV4dll5d2djMk5oYkdVcFhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dWRXNXBabTl5YlRKbWRpaHBaRlJ5WVc1emJHRjBaVXh2WXl3Z2RISmhibk5zWVhSbEtWeHVJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xuVnVhV1p2Y20weVpuWW9hV1JXYVdWM2NHOXlkRXh2WXl3Z2RtbGxkM0J2Y25RcFhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dWRXNXBabTl5YlRGbUtHbGtVR2w0Wld4U1lYUnBiMHh2WXl3Z2RHaHBjeTV3YVhobGJGSmhkR2x2S1Z4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUhObGRDQlVjbUZ1YzJadmNtMGdhVzRnVW1WdVpHVnlJRTV2WkdWY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZEhKaGJuTm1iM0p0SUdOMWNuSmxiblFnZEhKaGJuTm1iM0p0S0hCaGJpWjZiMjl0SUdOdmJtUnBkR2x2YmlsY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J3ZFdKc2FXTWdjMlYwVkhKaGJuTm1iM0p0S0hSeVlXNXpabTl5YlRvZ1ZISmhibk5tYjNKdEtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VkWE5sVUhKdlozSmhiU2gwYUdsekxuQnliMmR5WVcwcFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUhOallXeGxURzlqSUQwZ2RHaHBjeTVuYkM1blpYUlZibWxtYjNKdFRHOWpZWFJwYjI0b2RHaHBjeTV3Y205bmNtRnRMQ0FuYzJOaGJHVW5LVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQjBjbUZ1YzJ4aGRHVk1iMk1nUFNCMGFHbHpMbWRzTG1kbGRGVnVhV1p2Y20xTWIyTmhkR2x2YmloMGFHbHpMbkJ5YjJkeVlXMHNJQ2QwY21GdWMyeGhkR1VuS1Z4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUhOallXeGxJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2hiZEhKaGJuTm1iM0p0TG1zc0lIUnlZVzV6Wm05eWJTNXJYU2xjYmlBZ0lDQWdJQ0FnZEdocGN5NW5iQzUxYm1sbWIzSnRNbVoyS0hOallXeGxURzlqTENCelkyRnNaU2xjYmx4dUlDQWdJQ0FnSUNCamIyNXpkQ0IwY21GdWMyeGhkR1VnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0Z0MGNtRnVjMlp2Y20wdWVDd2dkSEpoYm5ObWIzSnRMbmxkS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG5WdWFXWnZjbTB5Wm5Zb2RISmhibk5zWVhSbFRHOWpMQ0IwY21GdWMyeGhkR1VwWEc1Y2JpQWdJQ0FnSUNBZ0x5OGdhV1FnZFc1cFptOXliWE1zSUdsa1pXNTBhV05oYkNCMGJ5QnViMlJsWEc0Z0lDQWdJQ0FnSUM4dklGUlBSRTg2SUc1bFpXUWdjbVZtWVdOMGIzSWdkRzl2WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaMnd1ZFhObFVISnZaM0poYlNoMGFHbHpMbWxrVUhKdlozSmhiU2xjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhV1JUWTJGc1pVeHZZeUE5SUhSb2FYTXVaMnd1WjJWMFZXNXBabTl5YlV4dlkyRjBhVzl1S0hSb2FYTXVhV1JRY205bmNtRnRMQ0FuYzJOaGJHVW5LVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQnBaRlJ5WVc1emJHRjBaVXh2WXlBOUlIUm9hWE11WjJ3dVoyVjBWVzVwWm05eWJVeHZZMkYwYVc5dUtIUm9hWE11YVdSUWNtOW5jbUZ0TENBbmRISmhibk5zWVhSbEp5bGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxtZHNMblZ1YVdadmNtMHlabllvYVdSVFkyRnNaVXh2WXl3Z2MyTmhiR1VwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVaMnd1ZFc1cFptOXliVEptZGlocFpGUnlZVzV6YkdGMFpVeHZZeXdnZEhKaGJuTnNZWFJsS1Z4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUdOb1lXNW5aU0J1YjJSbEozTWdZWFIwY21saWRYUmxYRzRnSUNBZ0lDb2dRSEJoY21GdElHNXZaR1VnYm05a1pTQmtZWFJoWEc0Z0lDQWdJQ29nUUhCaGNtRnRJR0YwZEhKcFluVjBaU0JoZEhSeWFXSjFkR1VnYTJWNUlIUnZJR05vWVc1blpWeHVJQ0FnSUNBcUwxeHVJQ0FnSUhCMVlteHBZeUJqYUdGdVoyVkJkSFJ5YVdKMWRHVW9ibTlrWlRvZ1RtOWtaU3dnWVhSMGNtbGlkWFJsT2lCT2IyUmxRWFIwY2lrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCclpYa2dQU0JPYjJSbFFYUjBjazFoY0Z0aGRIUnlhV0oxZEdWZFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUdGMGRISWdQU0IwYUdsekxtRjBkSEpwWW5WMFpYTmJhMlY1WFZ4dUlDQWdJQ0FnSUNCamIyNXpkQ0JwYm1SbGVDQTlJSFJvYVhNdWFXUlViMGx1WkdWNFcyNXZaR1V1YVdRb0tWMWNiaUFnSUNBZ0lDQWdiR1YwSUdSaGRHRWdQU0J1ZFd4c1hHNGdJQ0FnSUNBZ0lHbG1JQ2hoZEhSeWFXSjFkR1VnUFQwOUlDZHdiM05wZEdsdmJpY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhCdmN5QTlJRzV2WkdVdWNHOXphWFJwYjI0b0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlTQTlJRnR3YjNNdWVDd2djRzl6TG5sZFhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9ZWFIwY21saWRYUmxJRDA5UFNBblptbHNiQ2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHTnZiQ0E5SUc1dlpHVXVabWxzYkNncFhHNGdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaElEMGdXMk52YkM1eUxDQmpiMnd1Wnl3Z1kyOXNMbUlzSUdOdmJDNWhYVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dGMGRISnBZblYwWlNBOVBUMGdKM0poWkdsMWN5Y3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmhkR0VnUFNCYmJtOWtaUzV5S0NrZ0tpQjBhR2x6TG5CcGVHVnNVbUYwYVc5ZFhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9ZWFIwY21saWRYUmxJRDA5UFNBbmMzUnliMnRsVjJsa2RHZ25LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmtZWFJoSUQwZ1cyNXZaR1V1YzNSeWIydGxWMmxrZEdnb0tTQXFJSFJvYVhNdWNHbDRaV3hTWVhScGIxMWNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hoZEhSeWFXSjFkR1VnUFQwOUlDZHpkSEp2YTJWRGIyeHZjaWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHTnZiQ0E5SUc1dlpHVXVjM1J5YjJ0bFEyOXNiM0lvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdaR0YwWVNBOUlGdGpiMnd1Y2l3Z1kyOXNMbWNzSUdOdmJDNWlMQ0JqYjJ3dVlWMWNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9KMDV2ZENCemRYQndiM0owWldRZ1RtOWtaU0JoZEhSeWFXSjFkR1V1SnlsY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJseHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR0YwZEhJdVlYSnlZWGt1YzJWMEtHUmhkR0VzSUdGMGRISXVjMmw2WlNBcUlHbHVaR1Y0S1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG1KcGJtUkNkV1ptWlhJb2RHaHBjeTVuYkM1QlVsSkJXVjlDVlVaR1JWSXNJR0YwZEhJdVluVm1abVZ5S1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG1KMVptWmxjbE4xWWtSaGRHRW9YRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRzTGtGU1VrRlpYMEpWUmtaRlVpeGNiaUFnSUNBZ0lDQWdJQ0FnSUdGMGRISXVjMmw2WlNBcUlHbHVaR1Y0SUNvZ1lYUjBjaTVoY25KaGVTNUNXVlJGVTE5UVJWSmZSVXhGVFVWT1ZDeGNiaUFnSUNBZ0lDQWdJQ0FnSUdGMGRISXVZWEp5WVhrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeUxuTnBlbVVnS2lCcGJtUmxlQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHRjBkSEl1YzJsNlpWeHVJQ0FnSUNBZ0lDQXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dZV1JrSUc1dlpHVnpJR1JoZEdFZ2RHOGdaVzVuYVc1bFhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUc1dlpHVnpJRzV2WkdWeklHUmhkR0ZjYmlBZ0lDQWdLaTljYmlBZ0lDQndkV0pzYVdNZ1lXUmtSR0YwWVNodWIyUmxjem9nVG05a1pWdGRLU0I3WEc0Z0lDQWdJQ0FnSUM4dklITmxkQ0JoY25KaGVWeHVJQ0FnSUNBZ0lDQnViMlJsY3k1bWIzSkZZV05vS0NodWIyUmxMQ0JwS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QlVUMFJQT2lCamIyNXphV1JsY2lCdWIyUmxJR0Z1WkNCeVpXNWtaWElnYm05a1pTQmhkSFJ5YVdKMWRHVWdiV0Z3Y0dsdVoxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjRzl6YVhScGIyNGdQU0J1YjJSbExuQnZjMmwwYVc5dUtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZWFIwY21saWRYUmxjMXRPYjJSbFFYUjBja3RsZVM1UVQxTkpWRWxQVGwwdVlYSnlZWGxiTWlBcUlDaDBhR2x6TG1OdmRXNTBJQ3NnYVNsZElEMGdjRzl6YVhScGIyNHVlRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6VzA1dlpHVkJkSFJ5UzJWNUxsQlBVMGxVU1U5T1hTNWhjbkpoZVZzeUlDb2dLSFJvYVhNdVkyOTFiblFnS3lCcEtTQXJJREZkSUQwZ2NHOXphWFJwYjI0dWVWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUYwZEhKcFluVjBaWE5iVG05a1pVRjBkSEpMWlhrdVVrRkVTVlZUWFM1aGNuSmhlVnQwYUdsekxtTnZkVzUwSUNzZ2FWMGdQU0J1YjJSbExuSW9LU0FxSUhSb2FYTXVjR2w0Wld4U1lYUnBiMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCbWFXeHNJRDBnYm05a1pTNW1hV3hzS0NsY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlYUjBjbWxpZFhSbGMxdE9iMlJsUVhSMGNrdGxlUzVEVDB4UFVsMHVZWEp5WVhsYk5DQXFJQ2gwYUdsekxtTnZkVzUwSUNzZ2FTbGRJRDBnWm1sc2JDNXlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUYwZEhKcFluVjBaWE5iVG05a1pVRjBkSEpMWlhrdVEwOU1UMUpkTG1GeWNtRjVXelFnS2lBb2RHaHBjeTVqYjNWdWRDQXJJR2twSUNzZ01WMGdQU0JtYVd4c0xtZGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZWFIwY21saWRYUmxjMXRPYjJSbFFYUjBja3RsZVM1RFQweFBVbDB1WVhKeVlYbGJOQ0FxSUNoMGFHbHpMbU52ZFc1MElDc2dhU2tnS3lBeVhTQTlJR1pwYkd3dVlseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhkSFJ5YVdKMWRHVnpXMDV2WkdWQmRIUnlTMlY1TGtOUFRFOVNYUzVoY25KaGVWczBJQ29nS0hSb2FYTXVZMjkxYm5RZ0t5QnBLU0FySUROZElEMGdabWxzYkM1aFhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZWFIwY21saWRYUmxjMXRPYjJSbFFYUjBja3RsZVM1VFZGSlBTMFZmVjBsRVZFaGRMbUZ5Y21GNVczUm9hWE11WTI5MWJuUWdLeUJwWFNBOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtOWtaUzV6ZEhKdmEyVlhhV1IwYUNncElDb2dkR2hwY3k1d2FYaGxiRkpoZEdsdlhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSE4wY205clpVTnZiRzl5SUQwZ2JtOWtaUzV6ZEhKdmEyVkRiMnh2Y2lncFhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtRjBkSEpwWW5WMFpYTmJUbTlrWlVGMGRISkxaWGt1VTFSU1QwdEZYME5QVEU5U1hTNWhjbkpoZVZzMElDb2dLSFJvYVhNdVkyOTFiblFnS3lCcEtWMGdQU0J6ZEhKdmEyVkRiMnh2Y2k1eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtRjBkSEpwWW5WMFpYTmJUbTlrWlVGMGRISkxaWGt1VTFSU1QwdEZYME5QVEU5U1hTNWhjbkpoZVZzMElDb2dLSFJvYVhNdVkyOTFiblFnS3lCcEtTQXJJREZkSUQxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRISnZhMlZEYjJ4dmNpNW5YRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUYwZEhKcFluVjBaWE5iVG05a1pVRjBkSEpMWlhrdVUxUlNUMHRGWDBOUFRFOVNYUzVoY25KaGVWczBJQ29nS0hSb2FYTXVZMjkxYm5RZ0t5QnBLU0FySURKZElEMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkSEp2YTJWRGIyeHZjaTVpWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1GMGRISnBZblYwWlhOYlRtOWtaVUYwZEhKTFpYa3VVMVJTVDB0RlgwTlBURTlTWFM1aGNuSmhlVnMwSUNvZ0tIUm9hWE11WTI5MWJuUWdLeUJwS1NBcklETmRJRDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEhKdmEyVkRiMnh2Y2k1aFhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSEpsYm1SbGNrbGtRMjlzYjNJZ1BTQmxibU52WkdWU1pXNWtaWEpKWkNneUlDb2dLSFJvYVhNdVkyOTFiblFnS3lCcEtTa2dMeThnVGs5VVJUb2dibTlrWlNCeVpXNWtaWElnYVdRc0lIVnpaU0JsZG1WdUlHbHVkR1ZuWlhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFXUkJkSFJ5YVdKMWRHVnpXMDV2WkdWSlpFRjBkSEpMWlhrdVNVUmRMbUZ5Y21GNVd6UWdLaUFvZEdocGN5NWpiM1Z1ZENBcklHa3BYU0E5SUhKbGJtUmxja2xrUTI5c2IzSXVjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVwWkVGMGRISnBZblYwWlhOYlRtOWtaVWxrUVhSMGNrdGxlUzVKUkYwdVlYSnlZWGxiTkNBcUlDaDBhR2x6TG1OdmRXNTBJQ3NnYVNrZ0t5QXhYU0E5SUhKbGJtUmxja2xrUTI5c2IzSXVaMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVwWkVGMGRISnBZblYwWlhOYlRtOWtaVWxrUVhSMGNrdGxlUzVKUkYwdVlYSnlZWGxiTkNBcUlDaDBhR2x6TG1OdmRXNTBJQ3NnYVNrZ0t5QXlYU0E5SUhKbGJtUmxja2xrUTI5c2IzSXVZbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVwWkVGMGRISnBZblYwWlhOYlRtOWtaVWxrUVhSMGNrdGxlUzVKUkYwdVlYSnlZWGxiTkNBcUlDaDBhR2x6TG1OdmRXNTBJQ3NnYVNrZ0t5QXpYU0E5SUhKbGJtUmxja2xrUTI5c2IzSXVZVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJtUmxja2xrVkc5SlpGc3lJQ29nS0hSb2FYTXVZMjkxYm5RZ0t5QnBLVjBnUFNCdWIyUmxMbWxrS0NsY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFXUlViMGx1WkdWNFcyNXZaR1V1YVdRb0tWMGdQU0IwYUdsekxtTnZkVzUwSUNzZ2FWeHVJQ0FnSUNBZ0lDQjlLVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZWFIwY21saWRYUmxjeTVtYjNKRllXTm9LQ2hoZEhSeUtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdGMGRISXVhWE5DZFdsc1pFbHVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW5iQzVpYVc1a1FuVm1abVZ5S0hSb2FYTXVaMnd1UVZKU1FWbGZRbFZHUmtWU0xDQmhkSFJ5TG1KMVptWmxjaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHNMbUoxWm1abGNsTjFZa1JoZEdFb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVoyd3VRVkpTUVZsZlFsVkdSa1ZTTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhkSFJ5TG5OcGVtVWdLaUIwYUdsekxtTnZkVzUwSUNvZ1lYUjBjaTVoY25KaGVTNUNXVlJGVTE5UVJWSmZSVXhGVFVWT1ZDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVhSMGNpNWhjbkpoZVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZWFIwY2k1emFYcGxJQ29nZEdocGN5NWpiM1Z1ZEN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZWFIwY2k1emFYcGxJQ29nYm05a1pYTXViR1Z1WjNSb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUtWeHVYRzRnSUNBZ0lDQWdJQzh2SUdsa0lHSjFabVpsY2lCa1lYUmhYRzRnSUNBZ0lDQWdJR052Ym5OMElHRjBkSElnUFNCMGFHbHpMbWxrUVhSMGNtbGlkWFJsYzF0T2IyUmxTV1JCZEhSeVMyVjVMa2xFWFZ4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG1KcGJtUkNkV1ptWlhJb2RHaHBjeTVuYkM1QlVsSkJXVjlDVlVaR1JWSXNJR0YwZEhJdVluVm1abVZ5S1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG1KMVptWmxjbE4xWWtSaGRHRW9YRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRzTGtGU1VrRlpYMEpWUmtaRlVpeGNiaUFnSUNBZ0lDQWdJQ0FnSUdGMGRISXVjMmw2WlNBcUlIUm9hWE11WTI5MWJuUWdLaUJoZEhSeUxtRnljbUY1TGtKWlZFVlRYMUJGVWw5RlRFVk5SVTVVTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdZWFIwY2k1aGNuSmhlU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHRjBkSEl1YzJsNlpTQXFJSFJvYVhNdVkyOTFiblFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmhkSFJ5TG5OcGVtVWdLaUJ1YjJSbGN5NXNaVzVuZEdoY2JpQWdJQ0FnSUNBZ0tWeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOTFiblFnS3owZ2JtOWtaWE11YkdWdVozUm9YRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2djbVZ1WkdWeUlHbGtJSFJ2SUdsa1hHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUhKbGJtUmxja2xrSUhKbGJtUmxjaUJwWkNCcGJpQnVkVzFpWlhKY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J3ZFdKc2FXTWdaMlYwU1dSQ2VWSmxibVJsY2tsa0tISmxibVJsY2tsa09pQnVkVzFpWlhJcE9pQnpkSEpwYm1jZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5Wlc1a1pYSkpaRlJ2U1dSYmNtVnVaR1Z5U1dSZFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1pISmhkeUJ1YjJSbGMxeHVJQ0FnSUNBcUwxeHVJQ0FnSUhCMVlteHBZeUJrY21GM0tDa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVqYjNWdWRDQStJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVoyd3VaVzVoWW14bEtIUm9hWE11WjJ3dVFreEZUa1FwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xtSnNaVzVrUm5WdVl5aDBhR2x6TG1kc0xrOU9SU3dnZEdocGN5NW5iQzVQVGtWZlRVbE9WVk5mVTFKRFgwRk1VRWhCS1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHNMblZ6WlZCeWIyZHlZVzBvZEdocGN5NXdjbTluY21GdEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhkSFJ5YVdKMWRHVnpMbVp2Y2tWaFkyZ29LR0YwZEhJcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHNMbVZ1WVdKc1pWWmxjblJsZUVGMGRISnBZa0Z5Y21GNUtHRjBkSEl1YVc1a1pYZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUYwZEhKcFluVjBaWE11Wm05eVJXRmphQ2dvWVhSMGNpd2dhU2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WjJ3dVltbHVaRUoxWm1abGNpaDBhR2x6TG1kc0xrRlNVa0ZaWDBKVlJrWkZVaXdnWVhSMGNpNWlkV1ptWlhJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1MlpYSjBaWGhCZEhSeWFXSlFiMmx1ZEdWeUtGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeUxtbHVaR1Y0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhkSFJ5TG5OcGVtVXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaMnd1Umt4UFFWUXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGRIUnlMbk5wZW1VZ0tpQmhkSFJ5TG1GeWNtRjVMa0paVkVWVFgxQkZVbDlGVEVWTlJVNVVMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWVhSMGNpNXBjMEoxYVd4a1NXNHBJSFJvYVhNdVoyd3VkbVZ5ZEdWNFFYUjBjbWxpUkdsMmFYTnZjaWhoZEhSeUxtbHVaR1Y0TENBeEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VaSEpoZDBGeWNtRjVjMGx1YzNSaGJtTmxaQ2gwYUdsekxtZHNMbFJTU1VGT1IweEZYMU5VVWtsUUxDQXdMQ0EwTENCMGFHbHpMbU52ZFc1MEtWeHVYRzRnSUNBZ0lDQWdJQzh2SUdSeVlYY2dhV1JjYmlBZ0lDQWdJQ0FnZEdocGN5NW5iQzVpYkdWdVpFWjFibU1vZEdocGN5NW5iQzVQVGtVc0lIUm9hWE11WjJ3dVdrVlNUeWxjYmlBZ0lDQWdJQ0FnZEdocGN5NW5iQzUxYzJWUWNtOW5jbUZ0S0hSb2FYTXVhV1JRY205bmNtRnRLVnh1SUNBZ0lDQWdJQ0IwYUdsekxtZHNMbUpwYm1SR2NtRnRaV0oxWm1abGNpaDBhR2x6TG1kc0xrWlNRVTFGUWxWR1JrVlNMQ0IwYUdsekxtbGtWR1Y0ZEhWeVpTbGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxtbGtRWFIwY21saWRYUmxjeTVtYjNKRllXTm9LQ2hoZEhSeUtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xtVnVZV0pzWlZabGNuUmxlRUYwZEhKcFlrRnljbUY1S0dGMGRISXVhVzVrWlhncFhHNGdJQ0FnSUNBZ0lIMHBYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdZWFIwY2lBOUlIUm9hWE11YVdSQmRIUnlhV0oxZEdWelcwNXZaR1ZKWkVGMGRISkxaWGt1U1VSZFhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dVltbHVaRUoxWm1abGNpaDBhR2x6TG1kc0xrRlNVa0ZaWDBKVlJrWkZVaXdnWVhSMGNpNWlkV1ptWlhJcFhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dWRtVnlkR1Y0UVhSMGNtbGlVRzlwYm5SbGNpaGNiaUFnSUNBZ0lDQWdJQ0FnSUdGMGRISXVhVzVrWlhnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeUxuTnBlbVVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xrWk1UMEZVTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdabUZzYzJVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeUxuTnBlbVVnS2lCaGRIUnlMbUZ5Y21GNUxrSlpWRVZUWDFCRlVsOUZURVZOUlU1VUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnTUZ4dUlDQWdJQ0FnSUNBcFhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dWRtVnlkR1Y0UVhSMGNtbGlSR2wyYVhOdmNpaGhkSFJ5TG1sdVpHVjRMQ0F4S1Z4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dVpISmhkMEZ5Y21GNWMwbHVjM1JoYm1ObFpDaDBhR2x6TG1kc0xsUlNTVUZPUjB4RlgxTlVVa2xRTENBd0xDQTBMQ0IwYUdsekxtTnZkVzUwS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG1KcGJtUkdjbUZ0WldKMVptWmxjaWgwYUdsekxtZHNMa1pTUVUxRlFsVkdSa1ZTTENCdWRXeHNLVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaMnd1Wlc1aFlteGxLSFJvYVhNdVoyd3VRa3hGVGtRcFhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dVlteGxibVJHZFc1aktIUm9hWE11WjJ3dVQwNUZMQ0IwYUdsekxtZHNMazlPUlY5TlNVNVZVMTlUVWtOZlFVeFFTRUVwWEc0Z0lDQWdmVnh1ZlZ4dUlpd2laWGh3YjNKMElHUmxabUYxYkhRZ1hDSWpkbVZ5YzJsdmJpQXpNREFnWlhOY1hHNXdjbVZqYVhOcGIyNGdhR2xuYUhBZ1pteHZZWFE3WEZ4dWFXNGdkbVZqTXlCcGJsWmxjblJsZUZCdmN6dGNYRzVwYmlCMlpXTXlJR2x1VUc5emFYUnBiMjQ3WEZ4dWFXNGdabXh2WVhRZ2FXNVNZV1JwZFhNN1hGeHVhVzRnZG1Wak5DQnBia1pwYkd3N1hGeHVhVzRnWm14dllYUWdhVzVUZEhKdmEyVlhhV1IwYUR0Y1hHNXBiaUIyWldNMElHbHVVM1J5YjJ0bFEyOXNiM0k3WEZ4dVhGeHViM1YwSUhabFl6SWdjRzl6TzF4Y2JtOTFkQ0JtYkc5aGRDQnlZV1JwZFhNN1hGeHViM1YwSUhabFl6UWdZMjlzYjNJN1hGeHViM1YwSUdac2IyRjBJSE4wY205clpWZHBaSFJvTzF4Y2JtOTFkQ0IyWldNMElITjBjbTlyWlVOdmJHOXlPMXhjYmx4Y2JuVnVhV1p2Y20wZ2JXRjBNeUJ3Y205cVpXTjBhVzl1TzF4Y2JuVnVhV1p2Y20wZ2RtVmpNaUJ6WTJGc1pUdGNYRzUxYm1sbWIzSnRJSFpsWXpJZ2RISmhibk5zWVhSbE8xeGNiblZ1YVdadmNtMGdkbVZqTWlCMmFXVjNjRzl5ZER0Y1hHNWNYRzUyYjJsa0lHMWhhVzRvZG05cFpDa2dlMXhjYmlBZ0lDQm1iRzloZENCemFYcGxJRDBnYVc1U1lXUnBkWE1nS3lCcGJsTjBjbTlyWlZkcFpIUm9JQzhnTWk0N1hGeHVJQ0FnSUhKaFpHbDFjeUE5SUdsdVVtRmthWFZ6TzF4Y2JpQWdJQ0JqYjJ4dmNpQTlJR2x1Um1sc2JEdGNYRzRnSUNBZ2MzUnliMnRsVjJsa2RHZ2dQU0JwYmxOMGNtOXJaVmRwWkhSb08xeGNiaUFnSUNCemRISnZhMlZEYjJ4dmNpQTlJR2x1VTNSeWIydGxRMjlzYjNJN1hGeHVJQ0FnSUdac2IyRjBJSFpsY25SbGVGTnBlbVVnUFNCemFYcGxJQ29nS0RJdUlDb2djM0Z5ZENneUxpa3BJQ29nTVM0MU95QXZMeUJPVDFSRk9pQjRJREV1TlNCMGJ5QndjbVYyWlc1MElHSnZjbVJsY2lCbVlXTjBiM0pjWEc0Z0lDQWdjRzl6SUQwZ2MyTmhiR1VnS2lCcGJsQnZjMmwwYVc5dUlDc2dkSEpoYm5Oc1lYUmxPMXhjYmlBZ0lDQnRZWFF6SUhSeVlXNXpabTl5YlNBOUlHMWhkRE1vWEZ4dUlDQWdJQ0FnSUNCMlpYSjBaWGhUYVhwbExDQXdMQ0F3TEZ4Y2JpQWdJQ0FnSUNBZ01Dd2dkbVZ5ZEdWNFUybDZaU3dnTUN4Y1hHNGdJQ0FnSUNBZ0lIQnZjeTU0TENCd2IzTXVlU3dnTVZ4Y2JpQWdJQ0FwTzF4Y2JseGNiaUFnSUNCbmJGOVFiM05wZEdsdmJpQTlJSFpsWXpRb2NISnZhbVZqZEdsdmJpQXFJSFJ5WVc1elptOXliU0FxSUdsdVZtVnlkR1Y0VUc5ekxDQXhMaWs3WEZ4dWZWd2lPeUlzSWk4cUtseHVJQ29nUUdSbGMyTnlhWEIwYVc5dUlISmxibVJsY2lCbmNtRndhQ0IxYzJsdVp5QjNaV0puYkZ4dUlDb2dRR0YxZEdodmNpQllhV0Z2Wkc5dVp5QmFhR0Z2SUR4NmFHRnZlR2xoYjJSdmJtZEFlbXAxTG1Wa2RTNWpiajVjYmlBcUwxeHVYRzVwYlhCdmNuUWdleUJTWlc1a1pYSk9iMlJsVFdGdVlXZGxjaUI5SUdaeWIyMGdKeTR2Wld4bGJXVnVkSE12Ym05a1pTOXlaVzVrWlhJdGJtOWtaU2RjYm1sdGNHOXlkQ0JPYjJSbElHWnliMjBnSnk0dUwyNXZaR1VuWEc1cGJYQnZjblFnVEdsdWF5Qm1jbTl0SUNkemNtTXZiR2x1YXlkY2JtbHRjRzl5ZENCN0lGSmxibVJsY2t4cGJtdE5ZVzVoWjJWeUlIMGdabkp2YlNBbkxpOWxiR1Z0Wlc1MGN5OXNhVzVyTDNKbGJtUmxjaTFzYVc1ckoxeHVhVzF3YjNKMElIc2dWSEpoYm5ObWIzSnRMQ0JRYjNOcGRHbHZiaUI5SUdaeWIyMGdKeTR1TDJsdWRHVnlabUZqWlhNblhHNXBiWEJ2Y25RZ2V5QlNaVzVrWlhKbGNrTnZibVpwWjNNZ2ZTQm1jbTl0SUNjdUwybHVkR1Z5Wm1GalpYTW5YRzVwYlhCdmNuUWdleUJEYjJ4dmNpQjlJR1p5YjIwZ0ozTnlZeTlwYm5SbGNtWmhZMlZ6SjF4dWFXMXdiM0owSUhzZ1pHVmpiMlJsVW1WdVpHVnlTV1FnZlNCbWNtOXRJQ2N1TDNWMGFXeHpKMXh1WEc1bGVIQnZjblFnWTJ4aGMzTWdVbVZ1WkdWeVpYSWdlMXh1SUNBZ0lIQjFZbXhwWXlCdWIyUmxUV0Z1WVdkbGNqb2dVbVZ1WkdWeVRtOWtaVTFoYm1GblpYSmNiaUFnSUNCd2RXSnNhV01nYkdsdWEwMWhibUZuWlhJNklGSmxibVJsY2t4cGJtdE5ZVzVoWjJWeVhHNWNiaUFnSUNCd2NtbDJZWFJsSUdkc09pQlhaV0pIVERKU1pXNWtaWEpwYm1kRGIyNTBaWGgwWEc0Z0lDQWdjSEpwZG1GMFpTQmlZV05yWjNKdmRXNWtRMjlzYjNJNklFTnZiRzl5WEc0Z0lDQWdjSEpwZG1GMFpTQjNhV1IwYURvZ2JuVnRZbVZ5WEc0Z0lDQWdjSEpwZG1GMFpTQm9aV2xuYUhRNklHNTFiV0psY2x4dUlDQWdJSEJ5YVhaaGRHVWdhV1JVWlhoMGRYSmxPaUJYWldKSFRGUmxlSFIxY21WY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlHTnlaV0YwWlNCeVpXNWtaWEpsY2lCdlltcGxZM1JjYmlBZ0lDQWdLaUJBY0dGeVlXMGdZMjl1Wm1sbmN5QjdZMkZ1ZG1Gek9pQklWRTFNUTJGdWRtRnpSV3hsYldWdWRDd2dkMmxrZEdnNklHNTFiV0psY2l3Z2FHVnBaMmgwT2lCdWRXMWlaWElzSUdKaFkydG5jbTkxYm1SRGIyeHZjam9nUTI5c2IzSXNJR1JsWm1GMWJIUkRiMjVtYVdkek9pQlBZbXBsWTNSOUlHTnZibVpwWjNNZ2NHRnpjMlZrSUhSdklISmxibVJsY21WeVhHNGdJQ0FnSUNvdlhHNGdJQ0FnY0hWaWJHbGpJR052Ym5OMGNuVmpkRzl5S0dOdmJtWnBaM002SUZKbGJtUmxjbVZ5UTI5dVptbG5jeWtnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0I3SUdOaGJuWmhjeXdnZDJsa2RHZ3NJR2hsYVdkb2RDd2dZbUZqYTJkeWIzVnVaRU52Ykc5eUxDQnViMlJsVEdsdGFYUXNJR3hwYm10TWFXMXBkQ0I5SUQwZ1kyOXVabWxuYzF4dUlDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYkNBOUlHTmhiblpoY3k1blpYUkRiMjUwWlhoMEtDZDNaV0puYkRJbktWeHVJQ0FnSUNBZ0lDQjlJR05oZEdOb0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWduVG1WMFZpQnlaWEYxYVhKbGN5QlhaV0pIVERJZ2MzVndjRzl5ZEdWa0lHSjVJSGx2ZFhJZ1luSnZkM05sY2ljcFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdkR2hwY3k1aVlXTnJaM0p2ZFc1a1EyOXNiM0lnUFNCaVlXTnJaM0p2ZFc1a1EyOXNiM0pjYmlBZ0lDQWdJQ0FnZEdocGN5NTNhV1IwYUNBOUlIZHBaSFJvWEc0Z0lDQWdJQ0FnSUhSb2FYTXVhR1ZwWjJoMElEMGdhR1ZwWjJoMFhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1cGJtbDBTV1JVWlhoMGRYSmxLQ2xjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMbTV2WkdWTllXNWhaMlZ5SUQwZ2JtVjNJRkpsYm1SbGNrNXZaR1ZOWVc1aFoyVnlLRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSHNnZDJsa2RHZ3NJR2hsYVdkb2RDd2diR2x0YVhRNklHNXZaR1ZNYVcxcGRDQjlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVwWkZSbGVIUjFjbVZjYmlBZ0lDQWdJQ0FnS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbXhwYm10TllXNWhaMlZ5SUQwZ2JtVjNJRkpsYm1SbGNreHBibXROWVc1aFoyVnlLRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSHNnZDJsa2RHZ3NJR2hsYVdkb2RDd2diR2x0YVhRNklHeHBibXRNYVcxcGRDQjlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVwWkZSbGVIUjFjbVZjYmlBZ0lDQWdJQ0FnS1Z4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUdGa1pDQnViMlJsY3lCMGJ5QnViMlJsSUcxaGJtRm5aWEpjYmlBZ0lDQWdLaUJBY0dGeVlXMGdibTlrWlhNZ2JtOWtaU0JrWVhSaElHbHVJRTVsZEZaY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J3ZFdKc2FXTWdZV1JrVG05a1pYTW9ibTlrWlhNNklFNXZaR1ZiWFNrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG01dlpHVk5ZVzVoWjJWeUxtRmtaRVJoZEdFb2JtOWtaWE1wWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nWVdSa0lHeHBibXR6SUhSdklHeHBibXNnYldGdVlXZGxjbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQnNhVzVyY3lCc2FXNXJJR1JoZEdFZ2FXNGdUbVYwVmx4dUlDQWdJQ0FxTDF4dUlDQWdJSEIxWW14cFl5QmhaR1JNYVc1cmN5aHNhVzVyY3pvZ1RHbHVhMXRkS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YkdsdWEwMWhibUZuWlhJdVlXUmtSR0YwWVNoc2FXNXJjeWxjYmlBZ0lDQjlYRzVjYmlBZ0lDQndkV0pzYVdNZ2MyVjBWSEpoYm5ObWIzSnRLSFJ5WVc1elptOXliVG9nVkhKaGJuTm1iM0p0S1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11Ym05a1pVMWhibUZuWlhJdWMyVjBWSEpoYm5ObWIzSnRLSFJ5WVc1elptOXliU2xjYmlBZ0lDQWdJQ0FnZEdocGN5NXNhVzVyVFdGdVlXZGxjaTV6WlhSVWNtRnVjMlp2Y20wb2RISmhibk5tYjNKdEtWeHVJQ0FnSUNBZ0lDQjBhR2x6TG1SeVlYY29LVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJR1J5WVhjZ1lXeHNJR1ZzWlcxbGJuUnpYRzRnSUNBZ0lDb3ZYRzRnSUNBZ2NIVmliR2xqSUdSeVlYY29LU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaMnd1WW1sdVpFWnlZVzFsWW5WbVptVnlLSFJvYVhNdVoyd3VSbEpCVFVWQ1ZVWkdSVklzSUhSb2FYTXVhV1JVWlhoMGRYSmxLVnh1SUNBZ0lDQWdJQ0IwYUdsekxtZHNMbU5zWldGeVEyOXNiM0lvTVN3Z01Td2dNU3dnTVNsY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuYkM1amJHVmhjaWgwYUdsekxtZHNMa05QVEU5U1gwSlZSa1pGVWw5Q1NWUXBYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyd3VZbWx1WkVaeVlXMWxZblZtWm1WeUtIUm9hWE11WjJ3dVJsSkJUVVZDVlVaR1JWSXNJRzUxYkd3cFhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1bmJDNWpiR1ZoY2tOdmJHOXlLRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVpWVdOclozSnZkVzVrUTI5c2IzSXVjaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WW1GamEyZHliM1Z1WkVOdmJHOXlMbWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1KaFkydG5jbTkxYm1SRGIyeHZjaTVpTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aVlXTnJaM0p2ZFc1a1EyOXNiM0l1WVZ4dUlDQWdJQ0FnSUNBcFhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dVkyeGxZWElvZEdocGN5NW5iQzVEVDB4UFVsOUNWVVpHUlZKZlFrbFVLVnh1SUNBZ0lDQWdJQ0IwYUdsekxteHBibXROWVc1aFoyVnlMbVJ5WVhjb0tWeHVJQ0FnSUNBZ0lDQjBhR2x6TG01dlpHVk5ZVzVoWjJWeUxtUnlZWGNvS1Z4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUdkbGRDQmxiR1Z0Wlc1MEozTWdhV1FnWVhRZ0tIZ3NJSGtwSUc5bUlHTmhiblpoY3lCcFppQmxlR2x6ZEhOY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZUNCNElIQnZjMXh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjVJSGtnY0c5elhHNGdJQ0FnSUNvdlhHNGdJQ0FnY0hWaWJHbGpJR2RsZEVsa1FubFFiM05wZEdsdmJpaHdiM05wZEdsdmJqb2dVRzl6YVhScGIyNHBPaUJ6ZEhKcGJtY2dmQ0JiYzNSeWFXNW5MQ0J6ZEhKcGJtZGRJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjbVZ1WkdWeVNXUWdQU0IwYUdsekxuSmxZV1JKWkZSbGVIUjFjbVVvY0c5emFYUnBiMjRwWEc0Z0lDQWdJQ0FnSUdsbUlDaHlaVzVrWlhKSlpDQStQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NtVnVaR1Z5U1dRZ0pTQXlJRDA5UFNBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMeThnVGs5VVJUb2dibTlrWlNCb1lYTWdaWFpsYmlCeVpXNWtaWElnYVdRc0lHeHBibXNnYUdGeklHOWtaQ0J5Wlc1a1pYSWdhV1JjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnViMlJsU1dRZ1BTQjBhR2x6TG01dlpHVk5ZVzVoWjJWeUxtZGxkRWxrUW5sU1pXNWtaWEpKWkNoeVpXNWtaWEpKWkNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm05a1pVbGtYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR3hwYm10SlpITWdQU0IwYUdsekxteHBibXROWVc1aFoyVnlMbWRsZEVsa2MwSjVVbVZ1WkdWeVNXUW9jbVZ1WkdWeVNXUXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHeHBibXRKWkhOY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUhKbFlXUWdjR2w0Wld3Z2RtRnNkV1VnWVhRZ0tIZ3NJSGtwSUc5bUlIUmxlSFIxY21WY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZUNCNElIQnZjMXh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjVJSGtnY0c5elhHNGdJQ0FnSUNvdlhHNGdJQ0FnY0hWaWJHbGpJSEpsWVdSSlpGUmxlSFIxY21Vb2NHOXphWFJwYjI0NklGQnZjMmwwYVc5dUtUb2diblZ0WW1WeUlIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2NtRjBhVzhnUFNCM2FXNWtiM2N1WkdWMmFXTmxVR2w0Wld4U1lYUnBieUI4ZkNBeFhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJ3dVltbHVaRVp5WVcxbFluVm1abVZ5S0hSb2FYTXVaMnd1VWtWQlJGOUdVa0ZOUlVKVlJrWkZVaXdnZEdocGN5NXBaRlJsZUhSMWNtVXBYRzRnSUNBZ0lDQWdJR052Ym5OMElISmxZV1JRYVhobGJFSjFabVpsY2lBOUlHNWxkeUJWYVc1ME9FRnljbUY1S0ZzeU5UVXNJREkxTlN3Z01qVTFMQ0F5TlRWZEtTQXZMeUF0TVZ4dUlDQWdJQ0FnSUNCMGFHbHpMbWRzTG5KbFlXUlFhWGhsYkhNb1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlBaFYyRnlibWx1WnpvZ2VDQmhibVFnZVNCaGNtVWdiM0IwYVc5dVlXd2dhVzRnVUc5emFYUnBiMjRzSUc1bFpXUWdkRzhnWTJobFkyc2dkR2hsYlZ4dUlDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNHVlQ0FxSUhKaGRHbHZMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0dWVTQXFJSEpoZEdsdkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnTVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJREVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xsSkhRa0VzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc0xsVk9VMGxIVGtWRVgwSlpWRVVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaV0ZrVUdsNFpXeENkV1ptWlhKY2JpQWdJQ0FnSUNBZ0tWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCdlltcGxZM1JKUkNBOUlHUmxZMjlrWlZKbGJtUmxja2xrS0hKbFlXUlFhWGhsYkVKMVptWmxjaWxjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYjJKcVpXTjBTVVJjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJwYm1sMElGZGxZa2RNSUhSbGVIUjFjbVVnWm05eUlISmxZMjl5WkdsdVp5QndiM05wZEdsdmJpQnZaaUJsYkdWdFpXNTBjMXh1SUNBZ0lDQXFMMXh1SUNBZ0lIQnlhWFpoZEdVZ2FXNXBkRWxrVkdWNGRIVnlaU2dwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWjJ3Z1BTQjBhR2x6TG1kc1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhCcGVHVnNVbUYwYVc4Z1BTQjNhVzVrYjNjdVpHVjJhV05sVUdsNFpXeFNZWFJwYnlCOGZDQXhYRzRnSUNBZ0lDQWdJR052Ym5OMElITmpjbVZsYmxkcFpIUm9JRDBnZEdocGN5NTNhV1IwYUNBcUlIQnBlR1ZzVW1GMGFXOWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MyTnlaV1Z1U0dWcFoyaDBJRDBnZEdocGN5NW9aV2xuYUhRZ0tpQndhWGhsYkZKaGRHbHZYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdabUp2SUQwZ1oyd3VZM0psWVhSbFJuSmhiV1ZpZFdabVpYSW9LVnh1SUNBZ0lDQWdJQ0JuYkM1aWFXNWtSbkpoYldWaWRXWm1aWElvWjJ3dVJsSkJUVVZDVlVaR1JWSXNJR1ppYnlsY2JseHVJQ0FnSUNBZ0lDQmpiMjV6ZENCcFpGUmxlSFIxY21VZ1BTQm5iQzVqY21WaGRHVlVaWGgwZFhKbEtDbGNiaUFnSUNBZ0lDQWdaMnd1WW1sdVpGUmxlSFIxY21Vb1oyd3VWRVZZVkZWU1JWOHlSQ3dnYVdSVVpYaDBkWEpsS1Z4dUlDQWdJQ0FnSUNCbmJDNTBaWGhKYldGblpUSkVLRnh1SUNBZ0lDQWdJQ0FnSUNBZ1oyd3VWRVZZVkZWU1JWOHlSQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lEQXNYRzRnSUNBZ0lDQWdJQ0FnSUNCbmJDNVNSMEpCTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdjMk55WldWdVYybGtkR2dzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpZM0psWlc1SVpXbG5hSFFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQXdMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1oyd3VVa2RDUVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2RzTGxWT1UwbEhUa1ZFWDBKWlZFVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXeHNYRzRnSUNBZ0lDQWdJQ2xjYmlBZ0lDQWdJQ0FnWjJ3dWRHVjRVR0Z5WVcxbGRHVnlhU2huYkM1VVJWaFVWVkpGWHpKRUxDQm5iQzVVUlZoVVZWSkZYMDFKVGw5R1NVeFVSVklzSUdkc0xreEpUa1ZCVWlsY2JpQWdJQ0FnSUNBZ1oyd3VkR1Y0VUdGeVlXMWxkR1Z5YVNobmJDNVVSVmhVVlZKRlh6SkVMQ0JuYkM1VVJWaFVWVkpGWDAxQlIxOUdTVXhVUlZJc0lHZHNMa3hKVGtWQlVpbGNiaUFnSUNBZ0lDQWdaMnd1WW1sdVpGUmxlSFIxY21Vb1oyd3VWRVZZVkZWU1JWOHlSQ3dnYm5Wc2JDbGNiaUFnSUNBZ0lDQWdaMnd1Wm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTWtRb1oyd3VSbEpCVFVWQ1ZVWkdSVklzSUdkc0xrTlBURTlTWDBGVVZFRkRTRTFGVGxRd0xDQm5iQzVVUlZoVVZWSkZYekpFTENCcFpGUmxlSFIxY21Vc0lEQXBYRzVjYmlBZ0lDQWdJQ0FnTHk4Z1ZFOUVUem9nYm1WbFpDQnphVzF3YkdsbWVWeHVJQ0FnSUNBZ0lDQm5iQzVrY21GM1FuVm1abVZ5Y3loYk1GMHViV0Z3S0NoMktTQTlQaUIySUNzZ1oyd3VRMDlNVDFKZlFWUlVRVU5JVFVWT1ZEQXBLVnh1WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSEppYnlBOUlHZHNMbU55WldGMFpWSmxibVJsY21KMVptWmxjaWdwWEc0Z0lDQWdJQ0FnSUdkc0xtSnBibVJTWlc1a1pYSmlkV1ptWlhJb1oyd3VVa1ZPUkVWU1FsVkdSa1ZTTENCeVltOHBYRzRnSUNBZ0lDQWdJR2RzTG1Oc1pXRnlRMjlzYjNJb01Td2dNU3dnTVN3Z01TbGNiaUFnSUNBZ0lDQWdaMnd1Y21WdVpHVnlZblZtWm1WeVUzUnZjbUZuWlNobmJDNVNSVTVFUlZKQ1ZVWkdSVklzSUdkc0xrUkZVRlJJTWpSZlUxUkZUa05KVERnc0lITmpjbVZsYmxkcFpIUm9MQ0J6WTNKbFpXNUlaV2xuYUhRcFhHNGdJQ0FnSUNBZ0lHZHNMbUpwYm1SU1pXNWtaWEppZFdabVpYSW9aMnd1VWtWT1JFVlNRbFZHUmtWU0xDQnVkV3hzS1Z4dUlDQWdJQ0FnSUNCbmJDNW1jbUZ0WldKMVptWmxjbEpsYm1SbGNtSjFabVpsY2loY2JpQWdJQ0FnSUNBZ0lDQWdJR2RzTGtaU1FVMUZRbFZHUmtWU0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnWjJ3dVJFVlFWRWhmVTFSRlRrTkpURjlCVkZSQlEwaE5SVTVVTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdaMnd1VWtWT1JFVlNRbFZHUmtWU0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnY21KdlhHNGdJQ0FnSUNBZ0lDbGNibHh1SUNBZ0lDQWdJQ0JwWmlBb1oyd3VZMmhsWTJ0R2NtRnRaV0oxWm1abGNsTjBZWFIxY3lobmJDNUdVa0ZOUlVKVlJrWkZVaWtnSVQwOUlHZHNMa1pTUVUxRlFsVkdSa1ZTWDBOUFRWQk1SVlJGS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9KMFp5WVcxbFluVm1abVZ5SUdkbGJtVnlZWFJsSUdaaGFXeGxaQ2NwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQm5iQzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9aMnd1UmxKQlRVVkNWVVpHUlZJc0lHNTFiR3dwWEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVwWkZSbGVIUjFjbVVnUFNCbVltOWNiaUFnSUNCOVhHNTlYRzRpTENJdktpcGNiaUFxSUVCaGRYUm9iM0lnV0dsaGIyUnZibWNnV21oaGJ5QThlbWhoYjNocFlXOWtiMjVuUUhwcWRTNWxaSFV1WTI0K1hHNGdLaUJBWkdWelkzSnBjSFJwYjI0Z2RYUnBiR2wwZVNCbWRXNWpkR2x2Ym5NZ1ptOXlJSEpsYm1SbGNtVnlYRzRnS2k5Y2JseHVhVzF3YjNKMElIc2dRMjlzYjNJZ2ZTQm1jbTl0SUNjdUxpOXBiblJsY21aaFkyVnpKMXh1WEc0dktpcGNiaUFxSUdOdmJYQnBiR1VnZDJWaVoyd2djMmhoWkdWeVhHNGdLaUJBY0dGeVlXMGdaMndnVjJWaVIwd2dhVzV6ZEdGdVkyVmNiaUFxSUVCd1lYSmhiU0J6YUdGa1pYSlRkSElnYzJoaFpHVnlJR1pwYkdVZ2FXNGdjM1J5YVc1blhHNGdLaUJBY0dGeVlXMGdjMmhoWkdWeVZIbHdaU0IyWlhKMFpYZ2diM0lnWm5KaFoyMWxiblFnYzJoaFpHVnlYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamIyMXdhV3hsVTJoaFpHVnlLRnh1SUNBZ0lHZHNPaUJYWldKSFRESlNaVzVrWlhKcGJtZERiMjUwWlhoMExGeHVJQ0FnSUhOb1lXUmxjbE4wY2pvZ2MzUnlhVzVuTEZ4dUlDQWdJSE5vWVdSbGNsUjVjR1U2SUc1MWJXSmxjbHh1S1RvZ1YyVmlSMHhUYUdGa1pYSWdlMXh1SUNBZ0lHTnZibk4wSUhOb1lXUmxjaUE5SUdkc0xtTnlaV0YwWlZOb1lXUmxjaWh6YUdGa1pYSlVlWEJsS1Z4dUlDQWdJR2RzTG5Ob1lXUmxjbE52ZFhKalpTaHphR0ZrWlhJc0lITm9ZV1JsY2xOMGNpbGNiaUFnSUNCbmJDNWpiMjF3YVd4bFUyaGhaR1Z5S0hOb1lXUmxjaWxjYmlBZ0lDQnBaaUFvSVdkc0xtZGxkRk5vWVdSbGNsQmhjbUZ0WlhSbGNpaHphR0ZrWlhJc0lHZHNMa05QVFZCSlRFVmZVMVJCVkZWVEtTa2dlMXh1SUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9KMU5vWVdSbGNpQmpiMjF3YVd4bElHWmhhV3hsWkRvZ0p5QXJJR2RzTG1kbGRGTm9ZV1JsY2tsdVptOU1iMmNvYzJoaFpHVnlLU2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2MyaGhaR1Z5WEc1OVhHNWNiaThxS2x4dUlDb2daMlZ1WlhKaGRHVWdWMlZpUjB3Z2NISnZaM0poYlZ4dUlDb2dRSEJoY21GdElHZHNJRmRsWWtkTUlHbHVjM1JoYm1ObFhHNGdLaUJBY0dGeVlXMGdkbVZ5ZEZOb1lXUmxjbE4wY2lCMlpYSjBaWGdnYzJoaFpHVnlJR2x1SUhOMGNtbHVaeUJtYjNKdFlYUmNiaUFxSUVCd1lYSmhiU0JtY21GblUyaGhaR1Z5VTNSeUlHWnlZV2R0Wlc1MElITm9ZV1JsY2lCcGJpQnpkSEpwYm1jZ1ptOXliV0YwWEc0Z0tpQkFjR0Z5WVcwZ1lYUjBjbWxpZFhSbGN5QmhkSFJ5YVdKMWRHVnpYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamNtVmhkR1ZRY205bmNtRnRLRnh1SUNBZ0lHZHNPaUJYWldKSFRESlNaVzVrWlhKcGJtZERiMjUwWlhoMExGeHVJQ0FnSUhabGNuUlRhR0ZrWlhKVGRISTZJSE4wY21sdVp5eGNiaUFnSUNCbWNtRm5VMmhoWkdWeVUzUnlPaUJ6ZEhKcGJtY3NYRzRnSUNBZ1lYUjBjbWxpZFhSbGN6b2dleUJ1WVcxbE9pQnpkSEpwYm1jN0lHbHVaR1Y0T2lCdWRXMWlaWElnZlZ0ZFhHNHBPaUJYWldKSFRGQnliMmR5WVcwZ2UxeHVJQ0FnSUdOdmJuTjBJSFpsY25SVGFHRmtaWElnUFNCamIyMXdhV3hsVTJoaFpHVnlLR2RzTENCMlpYSjBVMmhoWkdWeVUzUnlMQ0JuYkM1V1JWSlVSVmhmVTBoQlJFVlNLVnh1SUNBZ0lHTnZibk4wSUdaeVlXZFRhR0ZrWlhJZ1BTQmpiMjF3YVd4bFUyaGhaR1Z5S0dkc0xDQm1jbUZuVTJoaFpHVnlVM1J5TENCbmJDNUdVa0ZIVFVWT1ZGOVRTRUZFUlZJcFhHNWNiaUFnSUNCamIyNXpkQ0J3Y205bmNtRnRJRDBnWjJ3dVkzSmxZWFJsVUhKdlozSmhiU2dwWEc1Y2JpQWdJQ0JoZEhSeWFXSjFkR1Z6TG1admNrVmhZMmdvS0dGMGRISXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ1oyd3VZbWx1WkVGMGRISnBZa3h2WTJGMGFXOXVLSEJ5YjJkeVlXMHNJR0YwZEhJdWFXNWtaWGdzSUdGMGRISXVibUZ0WlNsY2JpQWdJQ0I5S1Z4dVhHNGdJQ0FnWjJ3dVlYUjBZV05vVTJoaFpHVnlLSEJ5YjJkeVlXMHNJSFpsY25SVGFHRmtaWElwWEc0Z0lDQWdaMnd1WVhSMFlXTm9VMmhoWkdWeUtIQnliMmR5WVcwc0lHWnlZV2RUYUdGa1pYSXBYRzVjYmlBZ0lDQm5iQzVzYVc1clVISnZaM0poYlNod2NtOW5jbUZ0S1Z4dUlDQWdJR2xtSUNnaFoyd3VaMlYwVUhKdlozSmhiVkJoY21GdFpYUmxjaWh3Y205bmNtRnRMQ0JuYkM1TVNVNUxYMU5VUVZSVlV5a3BJSHRjYmlBZ0lDQWdJQ0FnZEdoeWIzY2dibVYzSUVWeWNtOXlLR0JEYjNWc1pDQnViM1FnYkdsdWF5QnphR0ZrWlhKek9pQWtlMmRzTG1kbGRGQnliMmR5WVcxSmJtWnZURzluS0hCeWIyZHlZVzBwZldBcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJSEJ5YjJkeVlXMWNibjFjYmx4dUx5b3FYRzRnS2lCamNtVmhkR1VnVjJWaVIwd2dZWEp5WVhrZ1luVm1abVZ5SUdkcGRtVnVJR1JoZEdFZ1lYSnlZWGxjYmlBcUlFQndZWEpoYlNCbmJDQlhaV0pIVENCamIyNTBaWGgwWEc0Z0tpQkFjR0Z5WVcwZ1pHRjBZU0JrWVhSaElIUnZJSE4wYjNKbElHbHVJR0oxWm1abGNseHVJQ29nUUhKbGRIVnlibk1nVjJWaVIwd2dZblZtWm1WeUlITjBiM0psSUdkcGRtVnVJR1JoZEdGY2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR055WldGMFpVRnljbUY1UW5WbVptVnlLR2RzT2lCWFpXSkhUREpTWlc1a1pYSnBibWREYjI1MFpYaDBMQ0JrWVhSaE9pQkdiRzloZERNeVFYSnlZWGtwT2lCWFpXSkhURUoxWm1abGNpQjdYRzRnSUNBZ1kyOXVjM1FnWW5WbVptVnlJRDBnWjJ3dVkzSmxZWFJsUW5WbVptVnlLQ2xjYmlBZ0lDQm5iQzVpYVc1a1FuVm1abVZ5S0dkc0xrRlNVa0ZaWDBKVlJrWkZVaXdnWW5WbVptVnlLVnh1SUNBZ0lHZHNMbUoxWm1abGNrUmhkR0VvWjJ3dVFWSlNRVmxmUWxWR1JrVlNMQ0JrWVhSaExDQm5iQzVFV1U1QlRVbERYMFJTUVZjcFhHNGdJQ0FnY21WMGRYSnVJR0oxWm1abGNseHVmVnh1WEc0dktpcGNiaUFxSUdWNGRISmhZM1FnWVhSMGNtbGlkWFJsY3lCbWNtOXRJR0VnYzJoaFpHVnlJSE55YVc1blhHNGdLaUJBY0dGeVlXMGdlM04wY21sdVozMGdjMmhoWkdWeVUzUnlYRzRnS2lCQWNtVjBkWEp1Y3lCN1VtVnVaR1Z5UVhSMGNtbGlkWFJsVzExOUlHRjBkSEpwWW5WMFpYTWdZWEp5WVhsY2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR1Y0ZEhKaFkzUkJkSFJ5YVdKMWRHVnpSbkp2YlZOb1lXUmxjaWh6YUdGa1pYSlRkSEk2SUhOMGNtbHVaeWtnZTF4dUlDQWdJR052Ym5OMElHMWhkR05vYVc1bmN5QTlJSE5vWVdSbGNsTjBjaTV0WVhSamFDZ3ZhVzVjWEhNdUtqc3ZaeWxjYmlBZ0lDQnlaWFIxY200Z2JXRjBZMmhwYm1kekxtMWhjQ2dvYldGMFkyZ3NJR2x1WkdWNEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJRzVoYldVZ1BTQnRZWFJqYUM1emNHeHBkQ2duSUNjcFd6SmRMbk5zYVdObEtEQXNJQzB4S1Z4dUlDQWdJQ0FnSUNCamIyNXpkQ0IwZVhCbElEMGdiV0YwWTJndWMzQnNhWFFvSnlBbktWc3hYVnh1SUNBZ0lDQWdJQ0JzWlhRZ2MybDZaU0E5SURGY2JpQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dVdWMyeHBZMlVvTUN3Z015a2dQVDA5SUNkMlpXTW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnphWHBsSUQwZ1RuVnRZbVZ5S0hSNWNHVXVjMnhwWTJVb0xURXBLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUd4bGRDQnBjMEoxYVd4a1NXNGdQU0JtWVd4elpWeHVJQ0FnSUNBZ0lDQnBaaUFvYm1GdFpTQTlQVDBnSjJsdVZtVnlkR1Y0VUc5ekp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FYTkNkV2xzWkVsdUlEMGdkSEoxWlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbExGeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJsNlpTeGNiaUFnSUNBZ0lDQWdJQ0FnSUdsdVpHVjRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FYTkNkV2xzWkVsdVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOUtWeHVmVnh1WEc0dktpcGNiaUFxSUdWdVkyOWtaU0JoSUhKbGJtUmxjaUJwWkNCaGN5QmpiMnh2Y2lCMGJ5QndZWE56SUdsdUlIUmxlSFIxY21WY2JpQXFJRUJ3WVhKaGJTQnBaQ0J5Wlc1a1pYSWdhV1JjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHVnVZMjlrWlZKbGJtUmxja2xrS0dsa09pQnVkVzFpWlhJcE9pQkRiMnh2Y2lCN1hHNGdJQ0FnTHk4Z2MzQnNhWFFnWVNCc1lYSm5aU0J1ZFcxaVpYSWdZbmtnT0MxaWFYUTZJR2xrSUQwZ1kyOXVZMkYwS0dFc0lHSXNJR2NzSUhJcExDQmhibVFnYm05eWJXRnNhWHBsSUhSb1pXMGdhVzUwYnlBb01Dd2dNU2xjYmlBZ0lDQmpiMjV6ZENCeUlEMGdLR2xrSUNZZ01qVTFLU0F2SURJMU5TNHdYRzRnSUNBZ1kyOXVjM1FnWnlBOUlDZ29hV1FnUGo0Z09Da2dKaUF5TlRVcElDOGdNalUxTGpCY2JpQWdJQ0JqYjI1emRDQmlJRDBnS0NocFpDQStQaUF4TmlrZ0ppQXlOVFVwSUM4Z01qVTFMakJjYmlBZ0lDQmpiMjV6ZENCaElEMGdLQ2hwWkNBK1BpQXlOQ2tnSmlBeU5UVXBJQzhnTWpVMUxqQmNiaUFnSUNCeVpYUjFjbTRnZXlCeUxDQm5MQ0JpTENCaElIMWNibjFjYmx4dUx5b3FYRzRnS2lCa1pXTnZaR1VnY0dsNFpXd2dkbUZzZFdVZ2RHOGdiblZ0WW1WeVhHNGdLaUJBY0dGeVlXMGdjR2w0Wld4V1lXd2dZU0J3YVhobGJDZHpJSFpoYkhWbElHOXVJSFJsZUhSMWNtVmNiaUFxTDF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdSbFkyOWtaVkpsYm1SbGNrbGtLSEJwZUdWc1ZtRnNPaUJWYVc1ME9FRnljbUY1S1RvZ2JuVnRZbVZ5SUh0Y2JpQWdJQ0F2THlCd1lYSnpaU0J1YjNKdFlXeHBlbVZrSUhCaGNuUnpJRzltSUdsa0lHNTFiV0psY2l3Z1ltbDBJSE5vYVdaMElIUnZJRzl5YVdkcGJpQndiM05wZEdsdmJpQmhibVFnWTI5dVkyRjBYRzRnSUNBZ1kyOXVjM1FnY21WdVpHVnlTV1FnUFNCd2FYaGxiRlpoYkZzd1hTQjhJQ2h3YVhobGJGWmhiRnN4WFNBOFBDQTRLU0I4SUNod2FYaGxiRlpoYkZzeVhTQThQQ0F4TmlrZ2ZDQW9jR2w0Wld4V1lXeGJNMTBnUER3Z01qUXBYRzRnSUNBZ2NtVjBkWEp1SUhKbGJtUmxja2xrWEc1OVhHNGlMQ0l2S2lwY2JpQXFJRlJsYzNRZ2QyaGxkR2hsY2lCaElITjBjbWx1WnlCallXNGdZbVVnWVNCMllXeHBaQ0JwWkNCdlppQmhJRTV2WkdVdVhHNGdLaUJBY0dGeVlXMGdlM04wY21sdVozMGdkbUZzZFdVNklIUm9aU0J6ZEhKcGJtY2dkRzlpWlNCMFpYTjBaV1JjYmlBcUlFQnlaWFIxY201eklIdGliMjlzWldGdWZWeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYVhOV1lXeHBaRWxrS0haaGJIVmxPaUJ6ZEhKcGJtY3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RtRnNkV1VnSVQwOUlIVnVaR1ZtYVc1bFpDQW1KaUIwZVhCbGIyWWdkbUZzZFdVZ1BUMDlJQ2R6ZEhKcGJtY25JQ1ltSUhaaGJIVmxMbXhsYm1kMGFDQStJREJjYm4xY2JpSXNJaThxS2x4dUlDb2dRR0YxZEdodmNpQkthV0ZqYUdWdVp5QlFZVzRnUEdwaFkydHBaV0Z1ZUdselFHZHRZV2xzTG1OdmJUNWNiaUFxSUVCa1pYTmpjbWx3ZEdsdmJpQk5ZWEF5SUdseklHRWdUV0Z3SUdSaGRHRWdjM1J5ZFdOMGRYSmxJSGRvYVdOb0lHMWhjSE1nZEhkdklHdGxlWE1nZEc4Z2IyNWxJSFpoYkhWbExseHVJQ29nUUZWellXZGxJSE5oYldVZ2RHOGdUV0Z3SUdSaGRHRWdjM1J5ZFdOMGRYSmxJR2x1SUVWVE5pNWNiaUFxSUVCa1pYQmxibVJsYm1ObGN5Qk9iMjVsWEc0Z0tpOWNibHh1WTI5dWMzUWdTazlKVGlBOUlGTjBjbWx1Wnk1bWNtOXRRMmhoY2tOdlpHVW9OeWxjYm1OdmJuTjBJR2x6UzJWNWN5QTlJQ2hyWlhsek9pQkJjbkpoZVR4emRISnBibWMrS1NBOVBpQjdYRzRnSUNBZ2NtVjBkWEp1SUNoY2JpQWdJQ0FnSUNBZ2EyVjVjeUJwYm5OMFlXNWpaVzltSUVGeWNtRjVJQ1ltWEc0Z0lDQWdJQ0FnSUd0bGVYTXViR1Z1WjNSb0lEMDlQU0F5SUNZbVhHNGdJQ0FnSUNBZ0lHdGxlWE11WlhabGNua29LR3RsZVNrZ1BUNGdhMlY1SUNFOVBTQjFibVJsWm1sdVpXUWdKaVlnYTJWNUlDRTlQU0J1ZFd4c0tWeHVJQ0FnSUNsY2JuMWNibU5zWVhOeklFMWhjRElnZTF4dUlDQWdJSEJ5YVhaaGRHVWdiV0Z3SUQwZ2JtVjNJRTFoY0NncFhHNGdJQ0FnY0hWaWJHbGpJR052Ym5OMGNuVmpkRzl5S0dWdWRISnBaWE0vT2lCQmNuSmhlVHhCY25KaGVUeGhibmsrUGlrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWlc1MGNtbGxjeUJwYm5OMFlXNWpaVzltSUVGeWNtRjVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiblJ5YVdWekxtWnZja1ZoWTJnb0tHVnVkSEo1S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZ0clpYa3NJSFpoYkhWbFhTQTlJR1Z1ZEhKNVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6WlhRb2EyVjVMQ0IyWVd4MVpTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnY0hWaWJHbGpJR2RsZENCemFYcGxLQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRZWEF1YzJsNlpWeHVJQ0FnSUgxY2JseHVJQ0FnSUhCMVlteHBZeUJrWld4bGRHVW9hMlY1Y3pvZ1FYSnlZWGs4YzNSeWFXNW5QaWtnZTF4dUlDQWdJQ0FnSUNCcFppQW9hWE5MWlhsektHdGxlWE1wS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnJaWGtnUFNCclpYbHpMbXB2YVc0b1NrOUpUaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUd0bGVWOGdQU0JyWlhseld6RmRJQ3NnU2s5SlRpQXJJR3RsZVhOYk1GMWNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRZWEFnUFNCMGFHbHpMbTFoY0Z4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z3TG1SbGJHVjBaU2hyWlhrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhBdVpHVnNaWFJsS0d0bGVWOHBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQndkV0pzYVdNZ2MyVjBLR3RsZVhNNklFRnljbUY1UEhOMGNtbHVaejRzSUhaaGJIVmxPaUJoYm5rcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0dselMyVjVjeWhyWlhsektTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYTJWNUlEMGdhMlY1Y3k1cWIybHVLRXBQU1U0cFhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnJaWGxmSUQwZ2EyVjVjMXN4WFNBcklFcFBTVTRnS3lCclpYbHpXekJkWEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYldGd0lEMGdkR2hwY3k1dFlYQmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hiV0Z3TG1oaGN5aHJaWGxmS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjQzV6WlhRb2EyVjVMQ0IyWVd4MVpTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGd0xuTmxkQ2hyWlhsZkxDQjJZV3gxWlNsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGMxeHVJQ0FnSUgxY2JseHVJQ0FnSUhCMVlteHBZeUJuWlhRb2EyVjVjem9nUVhKeVlYazhjM1J5YVc1blBpa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2FYTkxaWGx6S0d0bGVYTXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCclpYa2dQU0JyWlhsekxtcHZhVzRvU2s5SlRpbGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR3RsZVY4Z1BTQnJaWGx6V3pGZElDc2dTazlKVGlBcklHdGxlWE5iTUYxY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xaGNDNW5aWFFvYTJWNUtTQjhmQ0IwYUdsekxtMWhjQzVuWlhRb2EyVjVYeWxjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMWJtUmxabWx1WldSY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUhCMVlteHBZeUJvWVhNb2EyVjVjem9nUVhKeVlYazhjM1J5YVc1blBpa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2FYTkxaWGx6S0d0bGVYTXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCclpYa2dQU0JyWlhsekxtcHZhVzRvU2s5SlRpbGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR3RsZVY4Z1BTQnJaWGx6V3pGZElDc2dTazlKVGlBcklHdGxlWE5iTUYxY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xaGNDNW9ZWE1vYTJWNUtTQjhmQ0IwYUdsekxtMWhjQzVvWVhNb2EyVjVYeWxjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSFZpYkdsaklHWnZja1ZoWTJnb1puVnVZem9nUm5WdVkzUnBiMjRwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV0WVhBdVptOXlSV0ZqYUNnb2RtRnNkV1VzSUd0bGVTa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd0bGVYTWdQU0JyWlhrdWMzQnNhWFFvU2s5SlRpbGNiaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTW9kbUZzZFdVc0lHdGxlWE1zSUhSb2FYTXBYRzRnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSFZpYkdsaklHVnVkSEpwWlhNb0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmJMaTR1ZEdocGN5NXRZWEF1Wlc1MGNtbGxjeWdwWFM1dFlYQW9LR1Z1ZEhKNUtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCclpYa2dQU0JsYm5SeWVWc3dYUzV6Y0d4cGRDaEtUMGxPS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RtRnNkV1VnUFNCbGJuUnllVnN4WFZ4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGdHJaWGtzSUhaaGJIVmxYVnh1SUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJSDFjYmx4dUlDQWdJSEIxWW14cFl5QnJaWGx6S0NrZ2UxeHVJQ0FnSUNBZ0lDQnNaWFFnYTJWNWN5QTlJRnN1TGk1MGFHbHpMbTFoY0M1clpYbHpLQ2xkWEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJyWlhsekxtMWhjQ2dvYTJWNUtTQTlQaUJyWlhrdWMzQnNhWFFvU2s5SlRpa3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NIVmliR2xqSUhaaGJIVmxjeWdwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZzdUxpNTBhR2x6TG0xaGNDNTJZV3gxWlhNb0tWMWNiaUFnSUNCOVhHNTlYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJRTFoY0RKY2JpSXNJaThxS2x4dUlDb2dRR0YxZEdodmNpQllhV0Z2Wkc5dVp5QmFhR0Z2SUR4NmFHRnZlR2xoYjJSdmJtZEFlbXAxTG1Wa2RTNWpiajVjYmlBcUlFQmtaWE5qY21sd2RHbHZiaUJ6YjIxbElIVjBhV3hwZEhrZ1puVnVZM1JwYjI1elhHNGdLaTljYmx4dWFXMXdiM0owSUhzZ1RtOWtaVXhwYm10RVlYUmhJSDBnWm5KdmJTQW5jM0pqTDJsdWRHVnlabUZqWlhNblhHNWNiaThxS2x4dUlDb2daMmwyWlc0Z1lTQm5jbUZ3YUNCa1lYUmhJSGRwZEdnZ2NHOXphWFJwYjI0c0lISmxkSFZ5YmlCaElHTnZjSGtnYjJZZ1ozSmhjR2dzSUhkcGRHZ2djRzl6YVhScGIyNGdkSEpoYm5ObWIzSnRaV1FnZEc4Z1kyVnVkR1Z5SUc5bUlHZHBkbVZ1SUhOcGVtVmNiaUFxSUVCd1lYSmhiU0JuY21Gd2FDQnViMlJsSUd4cGJtc2daM0poY0dnZ1pHRjBZVnh1SUNvZ1FIQmhjbUZ0SUhOcGVtVWdaM0poY0dnZ2MybDZaU0FvYldGNEtIZHBaSFJvTENCb1pXbG5hSFFwS1Z4dUlDb2dRSEJoY21GdElHTmxiblJsY2xnZ2VDQndiM01nYjJZZ1ozSmhjR2dnWTJWdWRHVnlYRzRnS2lCQWNHRnlZVzBnWTJWdWRHVnlXU0I1SUhCdmN5QnZaaUJuY21Gd2FDQmpaVzUwWlhKY2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSFJ5WVc1elptOXliVWR5WVhCb1VHOXphWFJwYjI0b1hHNGdJQ0FnWjNKaGNHZzZJRTV2WkdWTWFXNXJSR0YwWVN4Y2JpQWdJQ0J6YVhwbE9pQnVkVzFpWlhJc1hHNGdJQ0FnWTJWdWRHVnlXRG9nYm5WdFltVnlMRnh1SUNBZ0lHTmxiblJsY2xrNklHNTFiV0psY2x4dUtTQjdYRzRnSUNBZ1kyOXVjM1FnZEdGeVoyVjBSM0poY0dnNklFNXZaR1ZNYVc1clJHRjBZU0E5SUVwVFQwNHVjR0Z5YzJVb1NsTlBUaTV6ZEhKcGJtZHBabmtvWjNKaGNHZ3BLVnh1SUNBZ0lHTnZibk4wSUhoeklEMGdkR0Z5WjJWMFIzSmhjR2d1Ym05a1pYTXViV0Z3S0NodWIyUmxLU0E5UGlCdWIyUmxMbmdwWEc0Z0lDQWdZMjl1YzNRZ2VYTWdQU0IwWVhKblpYUkhjbUZ3YUM1dWIyUmxjeTV0WVhBb0tHNXZaR1VwSUQwK0lHNXZaR1V1ZVNsY2JpQWdJQ0JqYjI1emRDQjRUV2x1SUQwZ1RXRjBhQzV0YVc0b0xpNHVlSE1wWEc0Z0lDQWdZMjl1YzNRZ2VFMWhlQ0E5SUUxaGRHZ3ViV0Y0S0M0dUxuaHpLVnh1SUNBZ0lHTnZibk4wSUhsTmFXNGdQU0JOWVhSb0xtMXBiaWd1TGk1NWN5bGNiaUFnSUNCamIyNXpkQ0I1VFdGNElEMGdUV0YwYUM1dFlYZ29MaTR1ZVhNcFhHNWNiaUFnSUNCamIyNXpkQ0I0VFdsa0lEMGdLSGhOYVc0Z0t5QjRUV0Y0S1NBdklESmNiaUFnSUNCamIyNXpkQ0I1VFdsa0lEMGdLSGxOYVc0Z0t5QjVUV0Y0S1NBdklESmNibHh1SUNBZ0lIUmhjbWRsZEVkeVlYQm9MbTV2WkdWekxtWnZja1ZoWTJnb0tHNXZaR1VwSUQwK0lIdGNiaUFnSUNBZ0lDQWdibTlrWlM1NElEMGdLQ2h1YjJSbExuZ2dMU0I0VFdsa0tTQXZJQ2g0VFdGNElDMGdlRTFwYmlrcElDb2djMmw2WlNBcklHTmxiblJsY2xoY2JpQWdJQ0FnSUNBZ2JtOWtaUzU1SUQwZ0tDaHViMlJsTG5rZ0xTQjVUV2xrS1NBdklDaDVUV0Y0SUMwZ2VVMXBiaWtwSUNvZ2MybDZaU0FySUdObGJuUmxjbGxjYmlBZ0lDQjlLVnh1WEc0Z0lDQWdjbVYwZFhKdUlIUmhjbWRsZEVkeVlYQm9YRzU5WEc0aVhTd2ljMjkxY21ObFVtOXZkQ0k2SWlKOSJdLCJzb3VyY2VSb290IjoiIn0=